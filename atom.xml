<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>For life</title>
  <subtitle>Growing up is the only password.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aisee.me/"/>
  <updated>2017-07-24T11:01:06.391Z</updated>
  <id>http://aisee.me/</id>
  
  <author>
    <name>AiSee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Skyfall</title>
    <link href="http://aisee.me/2017/07/24/MyView/Music/Skyfall/"/>
    <id>http://aisee.me/2017/07/24/MyView/Music/Skyfall/</id>
    <published>2017-07-24T10:41:06.000Z</published>
    <updated>2017-07-24T11:01:06.391Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=d6e1fdf69325bc312b5d069e66e4ea8c/6f061d950a7b020880e017d968d9f2d3572cc8d9.jpg" alt=""></p>
<p>《Skyfall》是英国流行女歌手阿黛尔·阿德金斯演唱的一首歌曲，词曲由阿黛尔和英国音乐制作人保罗·艾普沃斯联手创作[1-2]  。这首歌作为电影《007：大破天幕杀机》的主题曲，于2012年10月5日发布[3]  。</p>
<p>《Skyfall》音调以C小调为主，拥有每分钟76次的音乐节奏，阿黛尔在歌曲中运用了自己的八度高音，音域位于G3和C5之间。该歌曲在内容上主要以抒发电影氛围为主，阿黛尔穿透灵魂的歌声以及略带些许神秘的音乐旋律融入其中，并不时的透出一丝西式的古典与优雅。这首歌与邦德融为一体，通过歌曲更能了解邦德，也让007系列的电影主题曲再次推向顶峰[9-13]  。</p>
<a id="more"></a>
<h2 id="获奖记录"><a href="#获奖记录" class="headerlink" title="获奖记录"></a>获奖记录</h2><p>获奖日期    颁奖机构    所获奖项    类型<br>2013年01月05日    休斯顿影评人协会奖    最佳电影歌曲[15]     获奖<br>2013年01月10日    第18届评论家选择奖    最佳电影歌曲[16]     获奖<br>2013年01月13日    美国第70届金球奖    最佳原创歌曲[17]     获奖<br>2013年01月18日    格鲁吉亚影评人协会奖    最佳原创歌曲[18]     获奖<br>2013年02月24日    第85届奥斯卡金像奖    最佳原创歌曲[19-20]     获奖<br>2014年01月26日    美国第56届格莱美奖    最佳影视歌曲[21]     获奖</p>
<h2 id="创作背景"><a href="#创作背景" class="headerlink" title="创作背景"></a>创作背景</h2><p>在会见了《007：大破天幕杀机》的摄制组后，阿黛尔便对导演萨姆·门德斯说自己其实并不是他们要找的人，因为她的作品都是个人化的。然而萨姆·门德斯回答她说只需要写一首个人化的歌曲就可以了，还告诉她可以用电影《海底城》中的主题曲《Nobody Does It Better》作为创作灵感。阿黛尔在确认为电影谱曲并演唱后，再次和制作人保罗·艾普沃斯共同创作了这首歌曲，她在阅读了《007：大破天幕杀机》的剧本后，很快就找到了创作方向。于是，她将自己坠入爱河时的情感经历与电影的部分情节融入到歌曲中。在编曲方面，蒙蒂·诺曼集合了詹姆斯·邦德主题的若干元素，歌曲历时18个月完成[1]  [5-6]  。</p>
<h2 id="歌曲歌词"><a href="#歌曲歌词" class="headerlink" title="歌曲歌词"></a>歌曲歌词</h2><h3 id="英文"><a href="#英文" class="headerlink" title="英文"></a>英文</h3><p>This is the end<br>Hold your breath and count to ten<br>Feel the earth move and then<br>Hear my heart burst again<br>For this is the end<br>I’ve drowned and dreamt this moment<br>So overdue I owe them<br>Swept away, I’m stolen<br>Let the sky fall<br>When it crumbles<br>We will stand tall<br>Face it all together<br>Let the sky fall<br>When it crumbles<br>We will stand tall<br>Face it all together<br>At skyfall<br>At skyfall<br>Skyfall is where we start<br>A thousand miles and poles apart<br>Where worlds collide and days are dark<br>You may have my number, you can take my name<br>But you’ll never have my heart<br>Let the sky fall<br>When it crumbles<br>We will stand tall<br>Face it all together<br>Let the sky fall<br>When it crumbles<br>We will stand tall<br>Face it all together<br>At skyfall<br>Where you go I go<br>What you see I see<br>I know I’d never be me<br>Without the security<br>Of your loving arms<br>Keeping me from harm<br>Put your hand in my hand<br>And we’ll stand<br>Let the sky fall<br>When it crumbles<br>We will stand tall<br>Face it all together<br>Let the sky fall<br>When it crumbles<br>We will stand tall<br>Face it all together<br>At skyfall<br>Let the sky fall<br>We will stand tall<br>At skyfall[7]</p>
<h3 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h3><p>这就是结束<br>屏住呼吸数到十<br>感觉到大地的颤抖<br>听到我的心脏再次爆裂<br>这就是结束<br>我已经梦到这一刻，已经湮灭的这一刻<br>如此亏欠我<br>冲刷我被偷走的一切<br>让天空坠落<br>当它崩碎<br>我们会站的更高<br>一起面对这一切<br>让天空坠落<br>当它崩碎<br>我们会站的更高<br>一起面对这一切<br>在天空崩碎的这一刻<br>天空坠落<br>是我们开始的地方<br>一千英里，两极分离<br>是世界碰撞暗无天日的地方<br>你可能知道我的电话号码<br>你可以拿走我的号码<br>但你永远不会拥有我的心<br>让天空坠落<br>当它崩碎<br>我们会站的更高<br>一起面对这一切<br>让天空坠落<br>当它崩碎<br>我们会站的更高<br>一起面对这一切<br>在天空下<br>(让天空坠落 当它崩碎 我们会站的更高)<br>(让天空坠落 当它崩碎 我们会站的更高)<br>我去你去的地方<br>我看你看的世界<br>我知道那永远不会是我没有危险的时刻<br>你那充满爱意的臂膀 让我远离伤害<br>两手紧紧相握<br>我们将一起面对<br>让天空坠落<br>当它崩碎<br>我们会站的更高<br>一起面对这一切<br>让天空坠落<br>当它崩碎<br>我们会站的更高<br>一起面对这一切<br>在天空下<br>让天空坠落<br>我们会站的更高<br>在天空下[8]</p>
<h2 id="阿黛尔·阿德金斯（Adele-Adkins）"><a href="#阿黛尔·阿德金斯（Adele-Adkins）" class="headerlink" title="阿黛尔·阿德金斯（Adele Adkins）"></a>阿黛尔·阿德金斯（Adele Adkins）</h2><p>1988年5月5日出生于伦敦托特纳姆，英国流行歌手。</p>
<p>2008年，阿黛尔发行了首张专辑《19》，获得当年水星音乐奖提名，并在全球取得了超过900万的销售量。其中的单曲《Chasing Pavements》助其获得格莱美最佳新人和最佳流行女歌手两座大奖。</p>
<p>2011年，阿黛尔推出第二张录音室专辑《21》，拥有三支冠军单曲。该专辑全球销量突破3200万，是21世纪全球销量最高的录音室专辑，被Billboard官网评为史上最伟大的专辑第一位[1]  。阿黛尔也在第54届格莱美颁奖典礼中凭借专辑《21》共夺得包括四项通类在内的六项大奖。</p>
<p>2013年2月，阿黛尔凭借《Skyfall》获金球奖[2]  、奥斯卡奖的最佳原创歌曲奖；12月，她获得大英帝国员佐勋章[3]  。<br>2015年12月21日发行个人第三张录音室专辑《25》[4]  ，首周分别以80万和338万张的销售量刷新英、美两国专辑首周纪录，该专辑销量已突破2000万张[5]  （截止2016年12月初）。专辑首支单曲《Hello》发行在全球100多个国家登顶，其音乐录像带首日观看量突破2300万次，成为Vevo史上首日观看量最高的音乐录影带[6]  。</p>
<p>2017年2月12日，凭借《25》获得第59届格莱美奖包括“年度制作”、“年度专辑”、“年度歌曲”在内的五项大奖[7]  。<br>2017年全英音乐奖颁奖仪式于2017年2月23日举行，获得全球艺人大奖。[8]</p>
<h2 id="人物评价"><a href="#人物评价" class="headerlink" title="人物评价"></a>人物评价</h2><p>和大多数青春期女孩一样，阿黛尔喜欢恋爱的滋味，并不可避免地遇到爱与伤害。2009年，阿黛尔的歌曲《追逐的脚步》，正是她得知交往6个月的前男友劈腿后的“伤心之作”。而在创作《21》这张唱片时，她的灵感依然源于失败的恋情。她的歌就像恋爱中的碎碎念，有时像温柔的小猫，有时又像怒吼的狮子。阿黛尔和她的《21》像一股温柔的旋风，不张扬却杀伤力十足地席卷了欧洲[10]  。（天天新报评）</p>
<p>阿黛尔身材偏胖，声音富有磁性而浑厚，舞台风格简约，走的是和同龄人Lady Gaga、蕾哈娜等截然不同的路线[25]  。（新浪网评）</p>
<p>阿黛尔为青少年树立了一个榜样，一个凭借自身的才华、信心和奋斗获得成功的榜样。她和披头士一样，给自己写歌[25]  。（《泰晤士报》评）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=d6e1fdf69325bc312b5d069e66e4ea8c/6f061d950a7b020880e017d968d9f2d3572cc8d9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;《Skyfall》是英国流行女歌手阿黛尔·阿德金斯演唱的一首歌曲，词曲由阿黛尔和英国音乐制作人保罗·艾普沃斯联手创作[1-2]  。这首歌作为电影《007：大破天幕杀机》的主题曲，于2012年10月5日发布[3]  。&lt;/p&gt;
&lt;p&gt;《Skyfall》音调以C小调为主，拥有每分钟76次的音乐节奏，阿黛尔在歌曲中运用了自己的八度高音，音域位于G3和C5之间。该歌曲在内容上主要以抒发电影氛围为主，阿黛尔穿透灵魂的歌声以及略带些许神秘的音乐旋律融入其中，并不时的透出一丝西式的古典与优雅。这首歌与邦德融为一体，通过歌曲更能了解邦德，也让007系列的电影主题曲再次推向顶峰[9-13]  。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Music" scheme="http://aisee.me/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>The philosophy of life</title>
    <link href="http://aisee.me/2017/07/24/MyView/Share/speech%20of%20Sir%20Ka-shing%20Li%20and%20moyan/"/>
    <id>http://aisee.me/2017/07/24/MyView/Share/speech of Sir Ka-shing Li and moyan/</id>
    <published>2017-07-24T10:12:06.000Z</published>
    <updated>2017-07-24T10:19:07.821Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img0.ph.126.net/8Qw6bPJ2PniMVAwVwNpIbg==/6632428961095422513.jpg" alt=""></p>
<p><strong>前言</strong>: 有的大学生因为失恋而自杀，许多人富不过三代，许多人事业无成怪自己没有一个好爸爸，有更多的人把进官一级当成人生没完没了的追求目标。社会乱象丛生，成功却是见人见智。那么李嘉诚和莫言应该是毫无疑问的成功者，他们是怎样看待人生，怎样寄予汕头大学的毕业生的呢？他们2017年6月27日在汕头大学毕业典礼的讲话，语言朴实，道出人生最基本的哲学，非常值得所有大学生和已经在社会上奋斗的人们学习。</p>
<a id="more"></a>
<p><a href="http://yaoshujiewy.blog.163.com/blog/static/2008781682017528111613288/" target="_blank" rel="external">李嘉诚和莫言汕大毕业演讲道出人生哲学</a></p>
<p>在转载他们讲话全文之前，我先把我认为最值得学习的几句话摘要如下，对那些没有时间细读全文的粉丝们提供方便。</p>
<p>李嘉诚，“愚人希望有个富爸 心态已经输在起跑线上”。</p>
<p> 李嘉诚，“<strong>自律是铁杵成针的意志功夫。每个希望成为大舞蹈家的人，每天面镜，并非顾影自怜，而是不怕疲惫、不怕痛苦，一而再，再而三，修正追求举重若轻的完美，技巧内化自我之中。走到台前，‘身与物化，意到图成</strong>’。”</p>
<p> 莫言，“马云、比尔盖茨创业之初都没什么了不起。”</p>
<p> 莫言，“三百多年来，哈佛大学走出了很多精英，也走出来——我不敢说‘很多’——庸才。而庸才，更喜欢宣称：我来自哈佛，我是摸着哈佛的左脚毕业的。”</p>
<p> 莫言，“只有那些没有什么了不起的人才会狂妄地认为自己了不起。”</p>
<p> 莫言，“六天前，马云在美国的底特律做了一个演讲，在演讲中他说他参加了三次高考，三次落榜。他落榜之后去考警察，最后参加面试的人录取了三个，唯一一个没有录取的就是马云。”</p>
<p> 莫言，“马云还说创业之初他的团队只有18个人，他说我们18个人都来自普通的家庭，不是富豪，也没有背景，我们甚至没有才华。”</p>
<p> 莫言，“同学们，你们今天就要毕业了，你们可能有一点点沾沾自喜，因为比尔盖茨都没能大学毕业。但是我想告诉同学们毕业才是真正的开始，所有的学习都是在为走向社会做准备，北方的民间有一句粗俗的比喻，是骡子是马牵出来遛遛。”</p>
<p>莫言，“同学们，我们希望大家创新，创业，立大志，考大官，做大事，发大财。但毕竟最终能当上大官，做成大事，发了大财的是极少数人，而大多数人在普通的岗位上勤勤恳恳的，踏踏实实的，一丝不苟的认真负责地工作着，这样的人是支撑这个社会宝塔的最坚实的基座。他们虽然得不到万千粉丝的追捧，虽然得不到勋章和奖牌，虽然得不到绚丽的舞台上出彩的机会，但作为一个为社会为他人也为自己辛勤劳动的人，也是值得尊敬的，平凡而伟大的，了不起的人。”</p>
<h2 id="附件：李嘉诚2017年6月27日汕头大学毕业典礼讲话"><a href="#附件：李嘉诚2017年6月27日汕头大学毕业典礼讲话" class="headerlink" title="附件：李嘉诚2017年6月27日汕头大学毕业典礼讲话"></a>附件：李嘉诚2017年6月27日汕头大学毕业典礼讲话</h2><p> 尊敬的陈云贤主席、莫言教授、各位校董、各位嘉宾、老师们、同学们：</p>
<p> 每年参加汕大的毕业典礼，我内心总是充满喜悦。在湖堤散步，在真理钟下听同学们朗读志愿，历历在目，声声入耳，处处感到急不及待要朝理想出发的活力。</p>
<p> 特别是今天，看到你们兴奋的脸，如果会堂内的正能量可以灌入瓶中，一定可让我精力再延长90年。感谢大家与我分享这快乐时刻。</p>
<p> 我明年90岁啦，一生志在千里，也知似水流年；我年轻过，历尽困难试炼，我深刻知道成长之路是非常不容易的；在高增长机遇巨浪中，愚人见石，智者见泉。</p>
<p> 因循的并发症是不思不想和无感无知，在人工智能世代中肯定过不了关；<strong>驾浪者的基本功，时时刻刻要灵敏、快知快明，要有独立思考悟力、能运用想象，把现实、数据、信息合组成新。</strong></p>
<p>愚人只知道‘为’（to do），智者有愿力，把‘为’（to do）变‘成为’（to be）。</p>
<p> ‘愿力一族’是如何修炼？如何处世？如何存在？</p>
<p> 愚人常常抱怨，变得墨守成规是被逼出来的，被制度营役、被繁文缛节捆绑、被不可承受的期望压至透不过气；他们渴望‘赢在起跑线上’，希望有个富爸加上天赋的优越组合，认为‘人能弘道’、改变尘世复杂和无可奈何的扭曲太负重，‘道能弘人’肯定更舒服。</p>
<p> 这样的心态，他们已‘输在起跑线上’。传统中国智慧告诫我们命与运是互动交织的，拥有一切，也可以一无所有。懂得‘善择’才是打造自己命运的保证。而命运大赢家的梦幻 DNA 组合，是科学心智与艺术心灵的觉醒，才可把潜能修炼为出众的人生。性格基础是意志力，自律的坚持和创意潜力相形相塑，才可达致拥有挪移心外喧哗的处世心力。</p>
<p> 自律是铁杵成针的意志功夫。每个希望成为大舞蹈家的人，每天面镜，并非顾影自怜，而是不怕疲惫、不怕痛苦，一而再，再而三，修正追求举重若轻的完美，技巧内化自我之中。走到台前，‘身与物化，意到图成’。</p>
<p> 我今天为什么选择舞蹈幻灯为背景？诗人叶慈的提问，一矢中的，‘怎样才能从舞蹈之中辨别真正的舞者？’舞蹈家个性魅力触动观众，凝住一瞬永恒，艺术映照人生，启迪感召每一个人逾越艰难超越局限，追求更高的水平，开拓无限的可能。</p>
<p> 最后，我想和大家分享，去年我和一位多年在汕头大学服务的老师的对话，当我感谢他多年孜孜不倦培育学生时， 老师引用王阳明一语：‘千圣皆过影，良知乃吾师。’良知是成就尊严和有存在意义的明灯。</p>
<p> 各位同学，道力之限，要靠愿力突破，我知道，你们一定会怀着谦恭、感恩的心，以信心和想象力追求一个开放、进步的世界，建立一个关怀的社会，成为真正的舞者，今天你以汕大为荣，明天汕大必将以你为荣。再次祝贺你们！谢谢大家。</p>
<p> 李嘉诚， 二○一七年六月廿七日</p>
<p><img src="http://img1.ph.126.net/qz50OLryIVeaq0yWrkp2bA==/6632443254746583145.jpg" alt=""></p>
<h2 id="附件：莫言在汕头大学2017年6月27日的毕业典礼讲话"><a href="#附件：莫言在汕头大学2017年6月27日的毕业典礼讲话" class="headerlink" title="附件：莫言在汕头大学2017年6月27日的毕业典礼讲话"></a>附件：莫言在汕头大学2017年6月27日的毕业典礼讲话</h2><p> 尊敬的李嘉诚先生，亲爱的老师们，同学们大家好，上午好。</p>
<p> 我非常荣幸的参加我们这个热烈的盛大的毕业典礼。我参加过很多的毕业典礼，这是最让我激动的毕业典礼。</p>
<p> 毫无疑问，汕头大学暂时还不如哈佛大学著名。我要说什么呢？我要说的是。三年前我参观了哈佛大学的校园，写了一首诗，其中一首诗是这样写的：“又有人摸着哈佛的左脚照相，青铜被摸成黄金。后面还有数十人排队等候，是那样的耐心，哈佛满面愁容，似乎脚痛。”三百多年来，这里走出了很多精英，也走出来——我不敢说“很多”——庸才。而庸才，更喜欢宣称：我来自哈佛，我是摸着哈佛的左脚毕业的。</p>
<p> 同学们，我想表达的是，从哈佛这样的名校毕业，当然很光荣。但是从汕头大学这样暂时还不太出名的大学毕业，同样很光荣。因为，哈佛毕业的并不说明，他必然就能轰轰烈烈的有益于人类的业绩。而从汕头大学毕业的，假以时日，必有人能做出万众瞩目的，利国利民的丰功伟绩。</p>
<p> 一座大学之所以著名，当然要靠优秀的教师，教师队伍里一定要有被世人公认的大师，甚至是学校的建筑，校园的风景。都是大学著名的因素。</p>
<p> 但是根本的一所大学之所以是著名大学是因为这所大学培养出了杰出的人才。所以说大学著名基本上是靠毕业后走向社会的学生。汕头大学要在不久的将来成为中国的乃至世界的著名大学，靠的是你们，朝气蓬勃的你们，如花似玉的你们，生龙活虎的你们，整装待发的你们，跃跃欲试的你们。</p>
<p> 同学们，五天前的上午，我参加了北京师范大学本科生的毕业典礼，做了一个即席的演讲，在演讲中我说，我们不可能都变成马云和比尔·盖茨，当然马云和比尔盖茨也没有什么了不起，他们也是一路走过来的。</p>
<p> 我的这个演讲，被一家媒体断章取义，取了一个标题“诺奖获得者，说马云、比尔盖茨没什么了不起”。正是因为这个原因，同学们，我昨天晚上半夜没有睡觉，写了这篇演讲稿，为的是严谨一点，不要再出漏洞。</p>
<p> 同学们，其实，最同意我在师大演讲那几句话的，我想很可能是马云、比尔·盖茨他们自己。因为他们内心认为自己没有什么了不起。而只有那些没有什么了不起的人才会狂妄地认为自己了不起。</p>
<p> 六天前，马云在美国的底特律做了一个演讲，在演讲中他说他参加了三次高考，三次落榜。他落榜之后去考警察，最后参加面试的人录取了三个，唯一一个没有录取的就是马云。</p>
<p>他还说杭州第一家五星级饭店建成以后，他和他的外甥一起去应试服务员，他的文化考试成绩远远比自己的外甥好，因为但是他的外甥被录用了，而他被淘汰了。因为他的外甥比他既高又帅。</p>
<p> 而现在，马云说，他创办了阿里巴巴，他的外甥还勤勤恳恳的在洗衣房里工作。</p>
<p> 马云还说创业之初他的团队只有18个人，他说我们18个人都来自普通的家庭，不是富豪，也没有背景，我们甚至没有才华。</p>
<p>但是马云对他的团队说，如果我们可以成功，那么全世界80%的年轻人都可以成功。</p>
<p> 至于比尔·盖茨同学们都知道他在哈佛没有毕业，他是肄业生，他上了一年就不上了。尽管过了很多年之后哈佛授予了他荣誉博士的称号，但是他在哈佛的一次演讲中也提到他在哈佛学习时的诸多不顺利，在学校里面也遇到了很多的障碍，以及创业的艰辛，事实证明像马云和比尔·盖茨这样的大神级的人物，在他们的学业之初和创业之初也真的没有什么了不起。</p>
<p> 今年毕业的，我们汕头大学的各位同学，更没有像马云那样三次高考三次落榜的悲惨经历吧？大家都顺利的毕业了，这一点比比尔盖茨还牛啊！但是这两个人毕业之后走出校门之后都有他们不同寻常的思维，坚持不懈的努力，当然还有时代赋予他们的好运气，使自己从一个没有什么了不起的人最终成为了一个了不起的人，所以马云和比尔盖茨的了不起，就在于他们曾经没有什么了不起，他们的了不起更在于他们实际上已经了不起了，但他们还自认为没什么了不起。</p>
<p> 同学们，你们今天就要毕业了，你们可能有一点点沾沾自喜，因为比尔盖茨都没能大学毕业。但是我想告诉同学们毕业才是真正的开始，所有的学习都是在为走向社会做准备，北方的民间有一句粗俗的比喻，是骡子是马牵出来遛遛。话很糙，但理不糙。你们是没有什么了不起呢，还是真正的了不起呢？都需要用在社会生活的广阔海洋里的拼搏创造实践来证明。</p>
<p> 同学们，我当过20年兵，当兵的时候耳熟能详的一句话就是，不想当将军的士兵不是好士兵。</p>
<p> 这句话据说是拿破仑说的。这句话其实是片面的，如果所有的士兵都能成为将军，谁来冲锋陷阵？一将功成万骨枯，当了将军的士兵是极少数。构成一支军队的大多数是根本不当将军的士兵，而不想当将军的士兵未必不是好士兵。后来有人告诉我拿破仑的还是原话是不想当将军的士兵，不是好士兵，而当不好士兵，永远当不好将军，士兵要有理想有抱负，但同时要立足现实，脚踏实地，干好本职工作。</p>
<p> 同学们，大学尽管也是社会的组成部分，但校园内的生活比起广阔复杂的社会还比较单纯，但年轻人就是要敢于挑战。像海燕一样，渴望着暴风雨的洗礼，无论遇到再大的困难，也不要惧怕，因为希望总是在困难中孕育，机遇也在困境中产生，社会是分阶层的，有将军也有士兵，有老板也有员工，有领导也有下属，过去是如此，现在是如此，我想未来也是如此。</p>
<p>这就要求同学们在毕业之后要踏踏实实的从最普通的最琐碎的工作干起。但如果你有一个亿万富翁的老爸在，明天就要把公司交给你，这就另当别论了。但是假如我是你们其中某一个人的有亿万资产的老爸，在把大权交给你之前，我会让你先去干最脏最累的工作。</p>
<p> 同学们，我们希望大家创新，创业，立大志，考大官，做大事，发大财。但毕竟最终能当上大官，做成大事，发了大财的是极少数人，而大多数人在普通的岗位上勤勤恳恳的，踏踏实实的，一丝不苟的认真负责地工作着，这样的人是支撑这个社会宝塔的最坚实的基座。他们虽然得不到万千粉丝的追捧，虽然得不到勋章和奖牌，虽然得不到绚丽的舞台上出彩的机会，但作为一个为社会为他人也为自己辛勤劳动的人，也是值得尊敬的，平凡而伟大的，了不起的人。</p>
<p> 马云了不起。马云的那位在饭店洗衣房里勤勤恳恳工作着的外甥也了不起。同学们，过去40年，中国社会产生了巨大的变化，创造了人类社会发展史上的奇迹，在未来的40年里，中国将发生什么样的变化，谁能想象出来，哪怕千分之一，也必将占尽先机。变化就是机遇，变化越大，机遇越多，希望同学们抓住机遇，敢想敢干，既要有鸿鹄之志，又要实事求是，只要敢于做第一个吃螃蟹的人，又要严防食物中毒。</p>
<p>最后，我祝愿同学们抖擞精神。投身到第四次工业革命的浪潮中，奋勇搏击，争取在不久的将来成为不同岗位上的状元，成为不同角度的模范。成为自己认为没啥了不起，别人认为你确实了不起的人。</p>
<p> 谢谢大家。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img0.ph.126.net/8Qw6bPJ2PniMVAwVwNpIbg==/6632428961095422513.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前言&lt;/strong&gt;: 有的大学生因为失恋而自杀，许多人富不过三代，许多人事业无成怪自己没有一个好爸爸，有更多的人把进官一级当成人生没完没了的追求目标。社会乱象丛生，成功却是见人见智。那么李嘉诚和莫言应该是毫无疑问的成功者，他们是怎样看待人生，怎样寄予汕头大学的毕业生的呢？他们2017年6月27日在汕头大学毕业典礼的讲话，语言朴实，道出人生最基本的哲学，非常值得所有大学生和已经在社会上奋斗的人们学习。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Reading" scheme="http://aisee.me/tags/Reading/"/>
    
  </entry>
  
  <entry>
    <title>To be yourself</title>
    <link href="http://aisee.me/2017/07/24/MyView/Book/to%20be%20yourself/"/>
    <id>http://aisee.me/2017/07/24/MyView/Book/to be yourself/</id>
    <published>2017-07-24T09:42:06.000Z</published>
    <updated>2017-07-24T09:46:21.314Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/lpic/s4511831.jpg" alt=""></p>
<p>全书分五辑，分类依据是作者所认为的、一个涉世不深的人在今天时代最容易迷失、因此最应该珍视的价值——<br>一、<strong>成为你自己</strong>——不受外界时尚和潮流的支配，有真实的自我；<br>二、<strong>爱使人富有</strong>——心不在社会的竞争中变得冷漠，有丰盈的爱心；<br>三、<strong>向教育争自由</strong>——能抵御现行教育的弊端，做学习的主人，有活泼的心智；<br>四、<strong>生命中不能错过什么</strong>——真性情不被物欲污染，保持本色的生命；<br>五、<strong>人的高贵在于灵魂</strong>——做人有道德，处世有理想，有高贵的灵魂。</p>
<a id="more"></a>
<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>周国平，一九四五年生于上海，一九六七年毕业于北京大学哲学系，一九七八年考入中国社会科学院研究生院，先后获硕士、博士学位，现为中国社会科学院哲学研究所研究员。主要代表作有学术专著《尼采：在世纪的转折点上》、《尼采与形而上学》，随感集《人与永恒》，诗集《忧伤的情欲》，散文集《守望的距离》、《各自的朝圣路》、《安静》，纪实作品《妞妞：一个父亲的札记》，自传《岁月与性情：我的心灵自传》等，主要译著有《尼采美学文选》、《尼采诗集》、《偶像的黄昏》等。</p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>出版缘起<br>序<br>成为你自己<br>成为你自己<br>对自己的人生负责<br>独处的充实<br>独处也是一种能力<br>做自己的忠实朋友<br>每个人都是一个宇宙<br>自己的园地<br>倾听生命自身的声音<br>养成写日记的习惯<br>爱使人富有<br>爱使人富有<br>表达你心中的爱和善意<br>生命本来没有名字<br>人人都是孤儿<br>爱的反义词<br>用什么报答母爱<br>父亲的死<br>爱与孤独<br>家<br>亲子之情<br>亲疏随缘<br>向教育争自由<br>教育的七条箴言<br>向教育争自由<br>何必名校<br>向教育提问<br>论教育<br>孩子的心智<br>父母们的眼神<br>留住那个心智觉醒的时刻<br>鼓励孩子的哲学兴趣<br>读永叵的书<br>愉快是基本标准<br>如果我是语文教师<br>与中学生谈写作<br>生命中不能错过什么<br>丰富的安静<br>成功的真谛<br>成功是优秀的副产品<br>比成功更重要的<br>可持续的快乐<br>生命中不能错过什么<br>时光村落里的往事<br>活出真性情<br>简单生活<br>消费=享受？<br>不占有<br>和命运结伴而行<br>习惯于失去<br>做一个能够承受不幸的人<br>人的高贵在于灵魂<br>第一重要的是做人<br>人的高贵在于灵魂<br>善良·丰富·高贵<br>人品和智慧<br>信仰之光<br>有所敬畏<br>精神栖身于茅屋<br>内在生命的伟大<br>理想主义<br>心灵也是一种现实<br>梦并不虚幻<br>好梦何必成真<br>追求<br>不满足的人比满足的猪幸福<br>爱国的平常心</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s4511831.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;全书分五辑，分类依据是作者所认为的、一个涉世不深的人在今天时代最容易迷失、因此最应该珍视的价值——&lt;br&gt;一、&lt;strong&gt;成为你自己&lt;/strong&gt;——不受外界时尚和潮流的支配，有真实的自我；&lt;br&gt;二、&lt;strong&gt;爱使人富有&lt;/strong&gt;——心不在社会的竞争中变得冷漠，有丰盈的爱心；&lt;br&gt;三、&lt;strong&gt;向教育争自由&lt;/strong&gt;——能抵御现行教育的弊端，做学习的主人，有活泼的心智；&lt;br&gt;四、&lt;strong&gt;生命中不能错过什么&lt;/strong&gt;——真性情不被物欲污染，保持本色的生命；&lt;br&gt;五、&lt;strong&gt;人的高贵在于灵魂&lt;/strong&gt;——做人有道德，处世有理想，有高贵的灵魂。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Reading" scheme="http://aisee.me/tags/Reading/"/>
    
  </entry>
  
  <entry>
    <title>Body Building</title>
    <link href="http://aisee.me/2017/07/24/MyView/Health/body%20building/"/>
    <id>http://aisee.me/2017/07/24/MyView/Health/body building/</id>
    <published>2017-07-24T09:14:06.000Z</published>
    <updated>2017-07-24T10:32:59.233Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://wx4.sinaimg.cn/large/006tkouagy1ff7dvvsclyj316v0qoq6l.jpg" alt=""></p>
<p>为什么去健身？<br>或许一百个人有一百种答案，<br>甚至许多人已经忘记是什么时候开始，<br>但有一点却是相同的，<br><strong>爱上健身后，就不会再有结束。</strong><br>健身！就是在<strong>重塑自我</strong></p>
<a id="more"></a>
<h2 id="新手健身的十个注意事项"><a href="#新手健身的十个注意事项" class="headerlink" title="新手健身的十个注意事项"></a><a href="http://weibo.com/ttarticle/p/show?id=2309404103084748985344" target="_blank" rel="external">新手健身的十个注意事项</a></h2><p>​​新手健身时要注意的问题很多。比如选择合适的健身教练，选择合适的健身项目。瑞百丽健身整理十个健身注意事项供大家参考。</p>
<h3 id="1-放下你的手机"><a href="#1-放下你的手机" class="headerlink" title="1.放下你的手机"></a>1.放下你的手机</h3><p>　　不要一边玩手机一边健身，健身时每组动作之间所间隔的时间不应太长，而健身时的精神亦应集中在你所锻炼的肌肉上。玩手机会令你分散注意力，同令每组动作之间的时间隔长，令训练效果减弱。</p>
<h3 id="2-先学好技巧才加重"><a href="#2-先学好技巧才加重" class="headerlink" title="2.先学好技巧才加重"></a>2.先学好技巧才加重</h3><p>　　健身最困难的地方不是要挑战自己举不起的重量，而是要确保每一组动作的<strong>姿态正确</strong>，令相关肌肉可以得到适当训练。如强行加重，除了会令你“借力”，将力斜至你不打算锻炼的肌肉外，还可能令你受伤。</p>
<h3 id="3-同一组动作不要做太多组"><a href="#3-同一组动作不要做太多组" class="headerlink" title="3.同一组动作不要做太多组"></a>3.同一组动作不要做太多组</h3><p>　　肌肉不是机械，肌肉组织在受重力训练后，亦需要时间生长，做太多会令肌肉劳损“缩肌”，得不偿失。</p>
<h3 id="4-不要只练上身，忽视下身"><a href="#4-不要只练上身，忽视下身" class="headerlink" title="4.不要只练上身，忽视下身"></a>4.不要只练上身，忽视下身</h3><p>　　锻炼下身时可以刺激睾丸素，令肌肉增长得更快，同时加速新陈代谢。同时锻炼下身的人，增肌效果会比只练上身的人更快。而如果只有上身涨大，双脚却是像牙签般幼时也不好看吧?</p>
<h3 id="5-不要只练胸，不练背"><a href="#5-不要只练胸，不练背" class="headerlink" title="5.不要只练胸，不练背"></a>5.不要只练胸，不练背</h3><p>　　背部让一个人看上去更厚实，并能“撑起胸肌”。如你长时间只练胸肌不练背肌的话，久而久之会造成驼背。</p>
<h3 id="6-要定期做带氧运动"><a href="#6-要定期做带氧运动" class="headerlink" title="6.要定期做带氧运动"></a>6.要定期做带氧运动</h3><p>　　“带氧运动”因为消耗较大的体力，这样来加强体能，改善心肺和健康，提升个人的基础新陈代谢率更为有效帮助，同时增强你健身时的耐力。</p>
<h3 id="7-一定要吃蛋白粉"><a href="#7-一定要吃蛋白粉" class="headerlink" title="7.一定要吃蛋白粉?"></a>7.一定要吃蛋白粉?</h3><p>　　不是，你可从日常饮食如肉类、牛奶等食物吸收额外蛋白质。</p>
<h3 id="8-狂食肉又有助增肌"><a href="#8-狂食肉又有助增肌" class="headerlink" title="8.狂食肉又有助增肌?"></a>8.狂食肉又有助增肌?</h3><p>　　不一定。要留意吸收量，过量吸收蛋白质，反而有机会增加骨质疏松症、肾衰竭及肥胖风险。</p>
<h3 id="9-锻炼肌肉要戒油盐糖"><a href="#9-锻炼肌肉要戒油盐糖" class="headerlink" title="9.锻炼肌肉要戒油盐糖?"></a>9.锻炼肌肉要戒油盐糖?</h3><p>　　不应全戒，但应尽量吃得清淡，保持均衡饮食，盐份也有助提供钠等营养素，减少肌肉抽筋。</p>
<h3 id="10-锻炼肌肉要节食及淀粉质等碳水化合物"><a href="#10-锻炼肌肉要节食及淀粉质等碳水化合物" class="headerlink" title="10.锻炼肌肉要节食及淀粉质等碳水化合物?"></a>10.锻炼肌肉要节食及淀粉质等碳水化合物?</h3><p>　　不是，碳水化合物是健身时身体的力量来源，有助稳定血糖之余，同时减少蛋白质分解，碳水化合物不足，可导致低血糖及影响情绪。</p>
<h2 id="健身新手应该注意什么问题"><a href="#健身新手应该注意什么问题" class="headerlink" title="健身新手应该注意什么问题"></a><a href="http://fashion.sina.com.cn/d/ft/2016-01-07/0028/doc-ifxneept3716922.shtml" target="_blank" rel="external">健身新手应该注意什么问题</a></h2><h3 id="先热身，再上跑步机。"><a href="#先热身，再上跑步机。" class="headerlink" title="先热身，再上跑步机。"></a>先热身，再上跑步机。</h3><p>　　很多初次健身的人，一进健身房二话不说先上跑步机上跑几步，其实，这种做法是不正确的。跑步前，应先做热身运动，热身运动能够提高肌肉的温度，使肌肉变得更加柔软而不容易拉伤，可以<strong>先压压腿或者做几组下蹲运动</strong>。新手第一次上跑步机，应该先慢走，再慢跑15分钟即可，此运动强度最好能保持3周之后，根据个人体质，再慢慢加量。</p>
<h3 id="练大型器械前先测平衡。"><a href="#练大型器械前先测平衡。" class="headerlink" title="练大型器械前先测平衡。"></a>练大型器械前先测平衡。</h3><p>　　美国有机构统计过，初次走入健身房的人，在45天内都会或多或少都会遇到运动伤害。美国健美冠军鲁本提醒大家，由于大型器械对身体的柔韧和平衡性要求很高，因此，<strong>练习之前一定要先进行至少一个月的平衡稳定和柔韧性的锻炼</strong>。如果你上身保持直立却无法蹲下，或者单脚着地，闭上眼睛后却无法保持平衡，那么，千万不要碰健身房里大型器械。</p>
<h3 id="力量练习从哑铃开始。"><a href="#力量练习从哑铃开始。" class="headerlink" title="力量练习从哑铃开始。"></a>力量练习从哑铃开始。</h3><p>　　很多健身新手初到健身房，恨不得把所有的器械都练一遍，像跑步机这样的有氧训练器械，如果热身到位，一般不会发生运动伤害。然而，胸推器、杠铃这样的力量训练器械，就不是很适合新手练习了。新手如果想练力量，可选择3—5磅的哑铃，双手置于胸前，做推举练习12—15个，2—3组即可。</p>
<h3 id="40分钟为最佳运动时间。"><a href="#40分钟为最佳运动时间。" class="headerlink" title="40分钟为最佳运动时间。"></a>40分钟为最佳运动时间。</h3><p>　　很多人一到健身房，就会待上好几个小时，把所有器械都连一遍，还是觉得不过瘾，这样很容易让人疲劳，导致肌肉酸疼，稍不注意就会引起运动损伤。<strong>对于健身新手来说40分钟就足够了</strong>，你可以用15—20分钟的时间慢跑，10分钟的时间练力量，再做一些柔韧性的训练即可。</p>
<h3 id="穿慢跑鞋和厚底袜去健身。"><a href="#穿慢跑鞋和厚底袜去健身。" class="headerlink" title="穿慢跑鞋和厚底袜去健身。"></a>穿慢跑鞋和厚底袜去健身。</h3><p>　　很多人健身时常常穿着平底布鞋或帆布鞋，这种鞋鞋底较薄，而新手的脚部肌肉处于松弛状态，就很容易使其抽筋或扭伤。因此，初次健身的人最好选择慢跑鞋、训练鞋或厚底袜。</p>
<h3 id="练肌肉，健身后一小时内补充食物。"><a href="#练肌肉，健身后一小时内补充食物。" class="headerlink" title="练肌肉，健身后一小时内补充食物。"></a>练肌肉，健身后一小时内补充食物。</h3><p>　　对于不同健身目的新手，饮食上也很重要，例如，练习肌肉的人在运动完的一小时内，应该吃点含碳水化合物较多的食物，米饭就是不错的选择。对于以减肥为目的人来说，运动完一小时内最好不要补充食物。</p>
<h2 id="健身房健身注意事项-注意10件事让身材更完美"><a href="#健身房健身注意事项-注意10件事让身材更完美" class="headerlink" title="健身房健身注意事项 注意10件事让身材更完美"></a><a href="http://m.39yst.com/20131113/136633.shtml" target="_blank" rel="external">健身房健身注意事项 注意10件事让身材更完美</a></h2><p>健身房健身注意事项 小心10件事毁掉健康</p>
<h3 id="1、-必要的热身活动"><a href="#1、-必要的热身活动" class="headerlink" title="1、 必要的热身活动"></a>1、 必要的热身活动</h3><p>要知道，这可不是梳一下辫子、喝杯水的时间，这是在开始运动前的必要过程。当肌肉越松弛时，它们也更窘易被驾驭和扩展，做这些运动将使你减少受伤机会，因此，花上5-10分钟的时间，让你的身体完全地活动开，有稍稍出汗的感觉是最好的。你需要明白这一步是你健身锻炼的良好开端。</p>
<h3 id="2、极为必要的伸展运动"><a href="#2、极为必要的伸展运动" class="headerlink" title="2、极为必要的伸展运动"></a>2、极为必要的伸展运动</h3><p>生活中总有一些事情做来十分容易，但是，在健身练习之后的伸展运动并不是这祥简单。当你锻炼一处肌肉的时候，它会变得紧绷而缩短，伸展运动就是帮助你放松肌肉，从而防止第二天的肌肉酸痛。需要注意的是：做这个动作的最好时间是在你完成热身运动之后，同时，持续每个动作20～30秒，这将有助于肌肉松弛，使你获得一个更有意义的伸展运动。</p>
<h3 id="3、超负荷的举重"><a href="#3、超负荷的举重" class="headerlink" title="3、超负荷的举重"></a>3、超负荷的举重</h3><p>当你看到插在生日蛋糕上的蜡烛已经逾30根时，不禁惊异岁月的飞逝，但这并不是让你冲进健身房，抓起第一眼看到的哑铃的理由，也不是你自己一时心血来潮，制定一个超越自己能力的健身计划的借口。你需要慢慢地开始，并循序渐进地增加运动量，健身教练会告诫你：<strong>慢慢来是锻炼的关键</strong>。因为你可能想象不到运动之后的24一48小时之内，将会感到怎样的痛苦，因此开始的时候需要慎重一点。</p>
<p>另外，如果你盲目地试图举起超过身体负荷的重量，就有可能导致肌肉拉伤、扭伤，甚至伤及背部。这么看来选择3一6磅的重量会比较适合，通常重复动作15～20次，如果你希望更快地获得坚实的肌肉，也可以选择稍重些的重量但只要重复8～12次就可以了。<strong>记住不要急于求成，有节制地完成你的练习，才会达到好的效果。</strong></p>
<h3 id="4、过激的运动"><a href="#4、过激的运动" class="headerlink" title="4、过激的运动"></a>4、过激的运动</h3><p><strong>既然健身的目的是为以后一直坚恃下去，那么你就不要期望一下就拿到“金牌”。因此，当你发觉自己的心跳如此之快，以至不能一囗气说完一句诂时，就意味着你的运动过激了，许多教练认为这就是大多数人半途而废的首要原因。因为一旦他们感到运动带给他们的不适时，他们就很难再坚恃下去了。</strong></p>
<p>另外，如果你认为自己的体质不佳，你可以选择一些较轻松的锻炼动作去完成。不想到健身房去的人，可以选择适宜的有氧操录像带，学习如何入门和提高动作的协调性，也是不错的方法。不管怎样，<strong>只要你不过分给自己压力，并恃之以恒，你就会从中受益。</strong></p>
<h3 id="5、水分的必要补充"><a href="#5、水分的必要补充" class="headerlink" title="5、水分的必要补充"></a>5、水分的必要补充</h3><p>切记，当你正在进行运动时，身体会因流汗而迅速丧失水分，而这些液体必须及时补充，否则的话，随时间的推移，你的身休就会出现脱水的现象，您也会感到口渴难挨。所以，在运动的从始至终过程中您都不要忘记给身体补充水分。<strong>一般来讲，人体每天需要8怀的水分，而当开始做运动时，则需要得更多。此外，充足的水分有助于减少饥饿感，可缩减你的摄食欲望(这里韦伯插播一句：补充水分最好的方式是每次少饮，分多次饮用)。</strong></p>
<h3 id="6、过分依赖登山器"><a href="#6、过分依赖登山器" class="headerlink" title="6、过分依赖登山器"></a>6、过分依赖登山器</h3><p>有时你会感到身体很疲累，你运动的效果也不像你想象的那么好了，而此时你却仍然希望通过锻炼获得再大一些的收益，于是，你就在登山器上玩命地“奔跑”，直到身体不能负担为止。你需要知道，这种“被动式”的运动——依靠登山器来强追自己完成任务，只会对你的身体产生危害，而达不到锻炼的目的。此时的登山器只是一个帮助你的关节机械地活动的工具，而不是你锻炼的帮手。</p>
<p>因此，你该清醒地为自己选择一个合理的运动强度和正确的方法，而不是什么让你的身体处于被动状态的“被动法”这一点很重要。</p>
<h3 id="7、逐步增加运动强度"><a href="#7、逐步增加运动强度" class="headerlink" title="7、逐步增加运动强度"></a>7、逐步增加运动强度</h3><p>这可是一个好主意!然而高强度的运动并不适用于健身训练之初，对于那些已持续练习6个月或更长时间的人来讲，这是值得注意的。可能会出现以下的情况：在达到某种程度后你通常进入一个停滞的状态，而大部分人可能会认为“我并没看到身体的任何变化”——于是他们会加快步伐，给自己制造更大的挑战：加大运动量，以期达到使身体有所改变的效果.然而，此时你的迫切心情却让你步入了误区。</p>
<p>健身教练的建议是：<strong>你最好逐步地提高运动的持续时间和程度。你可以从20分钟延长到30分钟，把你用的5磅重量的哑铃改换为8磅的。只是你不必一次性地同时做到，时间和强度取其中之一就好了。过一段时间之后，你最终会惊喜地发现：你的肌肉又开始充满了新的活力。</strong></p>
<h3 id="8、动作频率太急"><a href="#8、动作频率太急" class="headerlink" title="8、动作频率太急"></a>8、动作频率太急</h3><p>当你正挤出时间完成你的锻炼针划时，你可能会冒险地加快动作频率，并且不顾身体的反应而坚持练习。尤其像举重之类的锻炼，如果你做得太快，剧烈的动作会使你的肌肉超出负荷，从而容易受到伤害，因此，这里有一个简单的规则：2秒举起，4秒放下你总该保持有节奏地动作超落，你要知道，<strong>你做得越慢，你收到的效果会越好。</strong></p>
<h3 id="9、运动中不要吃喝"><a href="#9、运动中不要吃喝" class="headerlink" title="9、运动中不要吃喝"></a>9、运动中不要吃喝</h3><p>听起来很“残酷”，但是你完全可以不做任何食品补充，而坚持完成一个一般性的健身训练。事实上，任何不超过2小时的运动，都不要求必须补充体力，而你 <strong>只要在运动之前的1小时内，确保进餐就已经足够了。</strong> 你还要明白：虽然运动饮料对你没有坏处，但还有什么比纯水更有益于身体呢?另外，酒精含量高的饮食对你的运动是徒劳无功的。</p>
<h3 id="10、运动后的必要“冷却”"><a href="#10、运动后的必要“冷却”" class="headerlink" title="10、运动后的必要“冷却”"></a>10、运动后的必要“冷却”</h3><p>如同健身之前，你的身体需要时间“预热”一样，你的身体在锻炼之后，也需要时间恢复平静，让心率重归正常。你可以缓缓地放慢你的动作，直到心跳还原至每分钟120下或更少。当你感到自己的心跳趋于缓和，呼吸也逐渐平稳时，你就完成了最后的“冷却”工作。</p>
<h2 id="程序员健康指南"><a href="#程序员健康指南" class="headerlink" title="程序员健康指南"></a><a href="https://book.douban.com/subject/25981248/" target="_blank" rel="external">程序员健康指南</a></h2><p><img src="https://img3.doubanio.com/lpic/s28066372.jpg" alt=""></p>
<h3 id="内容简介-·-·-·-·-·-·"><a href="#内容简介-·-·-·-·-·-·" class="headerlink" title="内容简介  · · · · · ·"></a>内容简介  · · · · · ·</h3><p>本书是为程序员量身制作的健康指南，针对头痛、眼部疲劳、背部疼痛和手腕疼痛等常见的问题，简要介绍了其成因、测试方法，并列出了每天的行动计划，从运动、饮食等方面给出详细指导，帮助程序员在不改变工作方式的情况下轻松拥有健康。<br>本书适合程序员、长期伏案工作的其他人群以及所有关心健康的人士阅读。</p>
<h3 id="作者简介-·-·-·-·-·-·"><a href="#作者简介-·-·-·-·-·-·" class="headerlink" title="作者简介  · · · · · ·"></a>作者简介  · · · · · ·</h3><p>Joe Kutner<br>运动员和健身教练出身的资深程序员，住在美国的火箭城亨茨维尔。Joe从事软件开发十余年，专业特长有Ruby、Java以及iOS等。他曾服务于IBM等国际知名公司，也曾在创业公司打拼，现在是一位Ruby独立开发者，不仅为各种规模的公司构建Ruby和JRuby的应用，而且还向很多开源项目贡献代码，其中包括TorqueBox和Warbler。</p>
<h3 id="目录-·-·-·-·-·-·"><a href="#目录-·-·-·-·-·-·" class="headerlink" title="目录  · · · · · ·"></a>目录  · · · · · ·</h3><p>第1章　做出改变　　1<br>1.1 　对健康进行单元测试　　2<br>1.2 　身与心的联系　　3<br>1.3 　迭代式升级健康　　4<br>1.4 　习惯背后的科学　　6<br>1.5 　改编“习惯”程序　　8<br>目标1 　改掉一个习惯　　9<br>1.6 　回顾　　10</p>
<p>第2章　努力健康起来吧　　12<br>2.1 　不要犹豫，走起来　　13<br>2.2 　步向更健康的自己　　15<br>目标2 　买一个计步器　　17<br>2.3 　为健康腾出时间　　17<br>目标3 　测量静息心率　　19<br>2.4 　学会正确步行　　20<br>2.5 　到户外去　　21<br>2.6 　回顾　　23</p>
<p>第3章　永别了，椅子？　　25<br>3.1 　坐，是有害的　　26<br>3.2 　为真理挺身而站　　29<br>目标4 　测量血压　　32<br>3.3 　升级办公桌　　33<br>目标5 　升级办公桌　　38<br>3.4 　回顾　　38</p>
<p>第4章　灵活的饮食方案　　40<br>4.1 　饮食方案的迭代方法　　41<br>4.2 　均衡的营养胜于特殊的饮食　　43<br>4.3 　为了吃，要费尽心思　　45<br>4.4 　别盲目跟风，按照自身需求摄入热量　　48<br>目标6 　计算一天的摄入热量　　49<br>4.5 　调节热量摄入　　50<br>4.6 　个人喜好比预设的餐单更重要　　52<br>4.7 　回顾　　54</p>
<p>第5章　预防头痛和眼部疲劳　　57<br>5.1 　对视力进行单元测试　　58<br>目标7 　进行一次眼部检查　　60<br>5.2 　避免电脑视觉综合征　　61<br>5.3 　避免头痛诱因　　62<br>5.4 　对抗头痛症状　　66<br>5.5 　回顾　　67</p>
<p>第6章　预防背部疼痛　　69<br>6.1 　对核心肌肉群进行单元测试　　70<br>目标8 　通过K-W测试　　75<br>6.2 　认识背部解剖图　　75<br>6.3 　能量源大补给　　78<br>6.4 　根据人体工程学改良办公室　　84<br>6.5 　回顾　　87</p>
<p>第7章　预防手腕疼痛　　89<br>7.1 　对手腕进行单元测试　　90<br>目标9　　在反向屈腕测试中获得阴性结果　　93<br>7.2 　了解手腕疼痛的诱因　　93<br>7.3 　通过锻炼预防手腕疼痛　　94<br>目标10 　参加瑜伽课程　　98<br>7.4 　用亚历山大疗法舒缓身体紧张　　98<br>7.5 　用护腕限制身体动作　　101<br>7.6 　回顾　　102</p>
<p>第8章　让锻炼贴近生活　　104<br>8.1 　锻炼大脑　　104<br>8.2 　来个健康的番茄锻炼法吧　　105<br>目标11 　进行一次番茄锻炼法　　108<br>8.3 　记录锻炼日志　　108<br>8.4 　与健康进行游戏互动　　110<br>8.5 　让健身走向网络　　113<br>目标12 　在健身网站注册一个账号　　114<br>8.6 　回顾　　114</p>
<p>第9章　到户外来思考　　116<br>9.1 　摄入维生素D　　117<br>9.2 　透视维生素D的炒作　　118<br>目标13 　了解家族病史　　120<br>9.3 　增强免疫系统　　120<br>9.4 　对抗感冒　　122<br>9.5 　到树林里思考　　122<br>目标14 　安排一次户外的短途旅行　　124<br>9.6 　回顾　　125</p>
<p>第10章　重构健康　　127<br>10.1 　热身运动　　128<br>目标15 　参加攀岩课程　　129<br>10.2 　多维度认识健康　　130<br>10.3 　对健康进行单元测试　　131<br>目标16 　在成人版总统体能测试中，要让自己的表现达到平均水平　　137<br>10.4 　升级身体硬件　　138<br>10.5 　回顾　　147</p>
<p>第11章　组起队来　　149<br>11.1 　传递信息　　150<br>目标17 　主持一次午餐研讨会　　151<br>11.2 　为健康投资　　151<br>11.3 　和同伴们好好玩　　154<br>目标18 　与同事一起成立或加入一个运动小组　　157<br>11.4 　成立更棒的运动小组　　158<br>11.5 　回顾　　159</p>
<p>第12章　继续行动吧，健康的程序员　　161<br>12.1 　持续取得进步　　162<br>目标19 　不断制定新目标　　163<br>12.2 　建立群体习惯　　163<br>12.3 　保持身心健康的快乐　　165</p>
<p>附录A 　目标　　166<br>附录B 　示例　　167<br>附录C 　延伸阅读　　170<br>译后记　　174<br>图灵访谈之Joe Kutner：<br>在运动中工作　　176</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://wx4.sinaimg.cn/large/006tkouagy1ff7dvvsclyj316v0qoq6l.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;为什么去健身？&lt;br&gt;或许一百个人有一百种答案，&lt;br&gt;甚至许多人已经忘记是什么时候开始，&lt;br&gt;但有一点却是相同的，&lt;br&gt;&lt;strong&gt;爱上健身后，就不会再有结束。&lt;/strong&gt;&lt;br&gt;健身！就是在&lt;strong&gt;重塑自我&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Health" scheme="http://aisee.me/tags/Health/"/>
    
  </entry>
  
  <entry>
    <title>Love English Sentences</title>
    <link href="http://aisee.me/2017/07/19/English/love-sentences/"/>
    <id>http://aisee.me/2017/07/19/English/love-sentences/</id>
    <published>2017-07-19T14:30:05.000Z</published>
    <updated>2017-07-24T09:51:21.597Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://cdn.iciba.com/news/word/big_20170716b.jpg" alt=""><br>You’ll be amazed at how high you can fly when you leave some of the baggage behind!<br>丢下一些包袱后，你会惊讶到，自己竟能飞得那么高。</p>
<blockquote>
<p>词霸小编：我知道何时止步，何时放手，何时前行。但是，我“知道”不代表我“能够”。臣妾做不到啊，你们说怎么办？</p>
</blockquote>
<a id="more"></a>
<p><img src="http://cdn.iciba.com/news/word/big_20170702b.jpg" alt=""><br>I can accept failure,but I can’t accept not trying.<br>我可以接受失败，但我不能接受从不去尝试。——迈克尔·乔丹</p>
<blockquote>
<p>词霸小编:当你连尝试的勇气都没有，你就不配拥有幸福，也永远不会得到幸福，伤过，痛过，才知道有多深刻。——三毛</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170718b.jpg" alt=""><br>The good thing about being young is that you are not experienced enough to know you cannot possibly do the things you are doing.<br>年轻的好处在于，你还没有太多经验，并天生相信一切皆可能。</p>
<blockquote>
<p>词霸小编：因为年轻,才有的是时间;因为年轻,才更容易接受新事物;因为年轻,才有最为饱满的激情与最智慧的大脑。趁年轻,相信希望,相信梦想,为自己的梦想拼搏闯一次！！！</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170722b.jpg" alt=""><br>Life is sad at times, but it is up to you to make your own life happy.<br>生活有时是令人沮丧的，但你可以努力让自己过得开心。</p>
<blockquote>
<p>词霸小编：很多人不快乐，因为总觉得过去太美好，现在太糟糕，将来又太飘渺。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170723b.jpg" alt=""><br>It’s better to try hard to love yourself more than to wait someone to love you.<br>与其等着别人来爱你，不如自己努力爱自己。</p>
<blockquote>
<p>词霸小编：对自己好点，因为一辈子不长；对身边的人好点，因为下辈子不一定能够遇见！</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170715b.jpg" alt=""><br>May there be enough clouds in your life to make a beautiful sunset.<br>愿你生命中有够多的云翳，来造就一个美丽的黄昏。——冰心</p>
<blockquote>
<p>词霸小编：此句是个比喻句，意思是说希望你有一个丰富多彩的人生经历，唯此你才能真正体会到人生的美好。这里的“云翳”喻指丰富多彩的经历，体验。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170625b.jpg" alt=""><br>You have to believe in yourself when no one else does.<br>你必须在没有人相信你时相信自己。</p>
<blockquote>
<p>词霸小编：你要做的是相信自己，你能作茧自缚，那么你也就能破茧成蝶。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170630b.jpg" alt=""><br>The best feeling in the world is when you know your heart is smiling.<br>世间最好的感受，就是发现自己的心在微笑。</p>
<blockquote>
<p>词霸小编：想吃了不要嫌贵，想穿了不要说浪费，保持心态的平和永远是最美，天天快乐才对。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170627b.jpg" alt=""><br>No matter how hard the past is, you can always begin again. - Jack Kornfield<br>不管过去有多么困难，你都可以重新开始。– 杰克．康菲尔德</p>
<blockquote>
<p>词霸小编：没有不会谢的花，没有不会退的浪，没有不会暗的光，没有不会好的伤，没有不会停下来的绝望。那么，你在烦恼什么？</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170629b.jpg" alt=""><br>The best make-up is smile. The best jewelry is modesty. The best clothing is confidence.<br>最好的妆容是微笑，最好的饰品是谦虚，最好的衣裳是自信。</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170626b.jpg" alt=""><br>Time would heal almost all wounds. If your wounds have not been healed up, please wait for a short while.<br>时间几乎会愈合所有伤口，如果你的伤口还没有愈合，请给时间一点时间！</p>
<blockquote>
<p>词霸小编：给时间一点时间，让过去成为过去。给过去一点时间，让时间成为过去。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170619b.jpg" alt=""><br>Don’t let yourself be controlled by these three things: your past, people, and money.<br>不要让自己被这三件事所控制：过去、别人和金钱。</p>
<blockquote>
<p>词霸小编：你要学会捂上自己的耳朵，不去听那些熙熙攘攘的声音；这个世界上没有不苦逼的人，真正能治愈自己的，只有你自己。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170620b.jpg" alt=""><br>Man needs his difficulties because they are necessary to enjoy success.<br>人们需要困难，因为有困难才能享受成功。</p>
<blockquote>
<p>词霸小编：油条：不受煎熬，你就不会成熟；总受煎熬，你终究会成为老油条</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170623b.jpg" alt=""><br>Running away from your problems is a race you’ll never win.<br>逃避困难是一场永远跑不赢的比赛。</p>
<blockquote>
<p>词霸小编：六点起床很困难，背单词很困难，静下心很困难……但是总有一些人，五点可以起床，一天背六课单词，耐心读完一本书。你以为没有了路，事实上路可能就在前方一点点。那些比我们强大的人都在迎难而上，你有什么理由止步不前？</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170622b.jpg" alt=""></p>
<p>Elegance is the only beauty that never fades. - Audrey Hepburn<br>优雅是唯一不会褪色的美。——奥黛丽赫本</p>
<blockquote>
<p>词霸小编：人生的优雅并非训练或装扮出来的，而是百千阅历后的坦然，饱受沧桑后的睿智，无数沉浮后的淡泊。是把尘事看轻些，学会舍得与放下；是把人际看浅些，少些倾轧与争斗；是把得失看淡些，宠辱不惊来去无意，如此心宁静，优雅随之。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20160828b.jpg" alt=""></p>
<p>How deep I love you, the moon represents my heart.<br>你问我爱你有多深，月亮代表我的心。</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170606b.jpg" alt=""><br>It is one of the most beautiful compensations of life that no man can sincerely try to help another without helping himself.<br>任何一个人，如果真诚地试着帮助他人，必然也同时帮助了自己，这乃是人生中最优美的补偿之一。</p>
<blockquote>
<p>语法扩充】英语句子中常可见到两个表示否定意义的词连用的情况，这一现象常称为双重否定。这种句子形式上虽为否定，实则表示强烈的肯定语气。英语双重否定句常见的有如下三种句型：1.否定词 no/not等＋表示否定意义的形容词。如：Nothing is unnecessary.没有什么是不必要的。 2.否定词 no/not/never等＋without…如：They never meet without quarreling．他们每次见面必吵架。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170607b.png" alt=""><br>Yesterday is history. Tomorrow is a mystery. But today is a gift. All you can do is to grasp it.<br>昨天已成历史，明天仍是未知，但今天是上天赐予我们的礼物，你能做的就是把握今天！</p>
<blockquote>
<p>词霸小编：致高考：愿你们合上笔盖的那一刻有武士将刀收回剑鞘般的骄傲！高考加油！！！</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170608b.jpg" alt=""><br>Don’t count on others rashly, so they don’t have the chance to betray you; Don’t make rash promises either, in case you may regret.<br>诺不轻信，故人不负我；诺不轻许，故我不负人。</p>
<blockquote>
<p>词霸小编：不要做让自己后悔的事，要做，就做让别人后悔的事。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170609b.jpg" alt=""><br>Dare and the world always yields. If it beats you sometimes, dare it again and again and it will succumb.<br>你勇敢，世界就会让步。如果有时它战胜你，你要不断地勇敢再勇敢，它就会屈服。</p>
<blockquote>
<p>词霸小编：我哭，你说我不勇敢；你勇敢，为什么不敢哭？</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170611b.jpg" alt=""><br>It’s okay to have flaws, which make you real.<br>有点缺点没关系，这样才真实。</p>
<blockquote>
<p>词霸小编：我的优点是：我很帅。我的缺点是：我帅的不明显。——张伟《爱情公寓》</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170610b.jpg" alt=""><br>Life is not lack of beauty, but lack of the eyes to find beauty.<br>生活中不是没有美，而是缺少发现美的眼睛。</p>
<blockquote>
<p>词霸小编：【lack相关短语的区别】1.lack n.缺乏 (a) lack of sth（物质上的,具体的）如：a lack of money 缺乏资金；There was no lack of wolunteers.志愿者不乏其人。2.lack vt.缺乏,不足,短缺 lack sth 如：He lacks confidence.他缺乏信心.3.lacking adj. 缺乏的 be lacking in （某一方面,抽象的）如：She’s not usually lacking in confide</p>
</blockquote>
<p>  <img src="http://cdn.iciba.com/news/word/big_20170612b.jpg" alt=""><br>  No one but ourselves can degrade us.<br>没人能够贬低我们，除非是我们自己。</p>
<blockquote>
<p>词霸小编：自己选择45°仰视别人，就休怪他人135°俯视着看你。</p>
</blockquote>
<p> <img src="http://cdn.iciba.com/news/word/big_20170613b.jpg" alt=""><br> 想想你目前拥有的幸福，这每人都有很多 – 別回想以前的不幸，这每人或多或少都有一点。——查尔斯·狄更斯</p>
<blockquote>
<p>词霸小编：你的问题主要在于读书不多，而想得太多。——杨绛  </p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170614b.jpg" alt=""><br>Give everything a shot. You never know what or who is going to change your life.<br>任何事情都应该去尝试一下，因为你无法知道，什么样的事或者什么样的人将会改变你的一生。</p>
<blockquote>
<p>词霸小编：我不会逃避也不会迟疑，愿去尝试生命不同的绮丽。——《疯狂动物城》</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170530b.jpg" alt=""><br>Chinese Dragon Boat Festival is also known as Duanwu Festival, which falls on the fifth day of the fifth lunar month every year.<br>每年农历五月初五为“龙舟节”又称端午节。</p>
<blockquote>
<p>词霸小编：叶叶层叠，好运不绝；米米紧粘，幸福绵绵；线线缠绕，快乐拥抱；粽粽连结，祝福不歇！端午佳节祝你幸福安康！</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170531b.jpg" alt=""><br>To exist is to change, to change is to mature, to mature is to go on creating oneself endlessly.<br>要生存就要变化，要变化就要成长，要成长就要不断地自我创新。——亨利·柏格森</p>
<blockquote>
<p>词霸小编：个人不创新，会被公司淘汰；公司不创新，会被行业淘汰；行业不创新，会被社会淘汰；社会不创新，会被历史淘汰。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170601b.jpg" alt=""><br>All grown-ups were once children… but only few of them remember it.<br>所有大人都曾是小孩, 可惜只有少数人记得这件事。——《小王子》</p>
<blockquote>
<p>霸小编：人老心不老，热情是宝;身老容不老，青春永葆。有童心，没烦恼，六一儿童节快乐最好!</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170602b.jpg" alt=""><br>I am who I am today because of the choices I made yesterday.<br>过往的选择成就今时之日的我。</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170603b.jpg" alt=""><br>Freedom is not letting you do whatever you wanna but teaching you not to do the things you don’t wanna do. - Kant<br>自由不是让你想做什么就做什么，自由是教你不想做什么，就可以不做什么。——康德</p>
<blockquote>
<p>词霸小编：做学生的时候，身是不自由的，但心却很自由，有多远梦多远。而今，身是自由的，但心已经无法自由。有多少梦，就有多远。——七堇年</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170605b.jpg" alt=""><br>Never trouble trouble till trouble troubles you.<br>麻烦没来找你，就别去自找麻烦。</p>
<blockquote>
<p>词霸小编：不该看的不看，不该说的不说，不该听的不听，不该想的不想，该干什么干什么去。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170305b.jpg" alt=""><br>Your present circumstances don’t determine where you can go; they merely determine where you start.<br>你目前的处境并不决定你的未来，它只决定你的起点。</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170404b.jpg" alt=""><br>Smile and silence are two powerful tools. Smile is the way to solve many problems and silence is the way to avoid many problems.<br>微笑和沉默是两把利器：微笑解决很多问题，沉默避免许多问题。</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170405b.jpg" alt=""><br>Ordinary people merely think how they shall spend their time; a man of talent tries to use it.<br>普通人只想如何度过时间，有才能的人试图利用时间。</p>
<p>腾不出时间学习的人，迟早会腾出时间来伤悲；腾不出时间思考的人，迟早会腾出时间来后悔；腾不出时间运动的人，迟早会腾出时间来减肥；腾不出时间呵护亲情的人，迟早会腾出时间来流泪；腾不出时间恋爱的人，迟早会腾出时间来相亲；腾不出时间睡的人，迟早会腾出时间来生病。——刘同</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170412b.jpg" alt=""><br>Be yourself, everyone else is already taken. – Oscar Wilde<br>做你自己，其他角色都已经有人了。——奥斯卡•王尔德</p>
<blockquote>
<p>词霸小编：不要活在别人的嘴里， 也不要活在别人的眼里， 而是把命运握在自己手里。——几米</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170408b.jpg" alt=""><br><a href="http://news.iciba.com/views/dailysentence/daily.html#!/detail/title/2017-04-08" target="_blank" rel="external">I am prepared for the worst, but hope for the best.– Benjamin Disraeli </a><br>我期待最好的，但为最坏的做好准备。– 班杰明‧迪斯雷利</p>
<blockquote>
<p>词霸小编：一个人只有一个心脏，却有两个心房。一个住着快乐；一个住着悲伤。不要笑得太大声，不然会吵醒旁边的悲伤。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170409b.jpg" alt=""><br><a href="http://news.iciba.com/views/dailysentence/daily.html#!/detail/title/2017-04-09" target="_blank" rel="external">My motto is: Contented with little, yet wishing for more.– Charles Lamb </a><br>我的座右銘是：为一点点感到滿足，但希望获得更多。– 查尔斯·兰姆</p>
<blockquote>
<p>词霸小编：老子曰：“祸莫大於不知足，咎莫大於欲得，故知足之足常足矣。”所以说我们要：知足常乐，乐在其中； 知乐常足，足以开怀；知足知乐，常乐常足！</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170416b.jpg" alt=""><br>In every adversity there lies the seed of an equivalent advantage. In every defeat there is a lesson showing you how to win the victory next time.</p>
<p>每个逆境都有一粒种子，藏着对等的有利条件；每个挫败都有一个教训，教你下次如何取得胜利。</p>
<blockquote>
<p>词霸小编：此句简言之是“失败是成功他妈”，道理我都懂，剩下的就看你们了……</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170417b.jpg" alt=""><br>I don’t want the fear of failure to stop me from doing what I really care about. - Emma Watson<br>我不想失败的恐惧阻碍做我真正想做的事情。——艾玛·沃森</p>
<blockquote>
<p>词霸小编：【用法分析】1.stop…from doing sth.意思是“阻止/防止……做某事”，在主动结构中，from可以被省去。如： The heavy rain stopped us (from) arriving there on time. 大雨阻止了我们按时到达那里。2.stop to do sth. 是“停止正在做的事，为了开始做某事”。 如：I have to stop to write an important article. 我得停下手中的事，先写一篇重要的文章。</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170419b.jpg" alt=""><br>Trust is the easiest thing in the world to lose,and the hardest thing in the world to get back.<br>信任是这个世界上最容易失去的东西，也是最难挽回的东西。</p>
<blockquote>
<p>词霸小编：我不问，你不说，这就是距离； 我问了，你不说，这就是隔阂； 我问了，你说了，这就是信任； 你不说，我不问，这就是默契； 我不问，你说了，这就是依赖。</p>
</blockquote>
<p><a href="http://news.iciba.com/study/oral/1575707.shtml" target="_blank" rel="external">BBC英语教学</a></p>
<p><img src="http://cdn.iciba.com/news/2017/0210/20170210094146362.jpg" alt=""></p>
<p>英国，不同地区的人们会用和动物有关的词汇来称呼他人。这些称呼十分有爱，也很友好。有些人认为这个称呼来源于 duke 公爵。</p>
<p>Feifei<br>‘Hen’ is used in Glasgow – but only when talking to women. 在苏格兰格拉斯哥，人们会用 hen 来称呼女性。</p>
<p>Neil<br>Alright, hen? And then we have ‘pet’…</p>
<p>Feifei<br>‘Pet’ is used in the North East of England. 在英格兰纽卡斯尔，人们会互相称呼 pet。</p>
<p><img src="http://cdn.iciba.com/news/word/big_20170223b.jpg" alt=""></p>
<p>The happiness of life is made up of minute fractions – the little soon forgotten charities of a kiss, a smile, a kind look, a heartfelt compliment.</p>
<p>生活中的快乐是由一些小片断组成——很快被遗忘的亲吻、微笑、关爱的眼神、由衷的赞美等小善举。</p>
<blockquote>
<p>词霸小编: 快乐似蒲公英的种子飘落在任意角落，你需要的只是一双发现它的眼睛……【词汇扩充】heartfelt adj. 衷心的，真诚的。如 heartfelt thanks 由衷的感谢。同义词为：sincere。</p>
</blockquote>
<h3 id="美国人口语常用的10个英语形容词"><a href="#美国人口语常用的10个英语形容词" class="headerlink" title="美国人口语常用的10个英语形容词"></a><a href="http://news.iciba.com/study/bilingual/1576034.shtml" target="_blank" rel="external">美国人口语常用的10个英语形容词</a></h3><p><img src="http://cdn.iciba.com/news/2017/0417/20170417110842300.jpg" alt=""><br>美国人比较喜欢夸张，常常用这些词来表达赞叹，也可表达对人和事的赞美。如果别人问起你对某事或某人的印象，或者问起你的日子过得如何，你都可以随时脱口而出其中一个词!</p>
<ol>
<li><p>amazing: 使人十分惊奇的;令人惊讶的<br>Your English is amazing. 你的英语太让人吃惊了。</p>
</li>
<li><p>awesome: 极好的;很棒的<br>Wow! That’s totally awesome!哇!那真是太棒了!</p>
</li>
<li><p>cool: 好;妙;帅;酷;凉<br>You look cool in your new suit. 你穿这套新衣服真酷。</p>
</li>
<li><p>cute: 漂亮的;可爱的;逗人喜爱的;聪明的<br>He’s really cute. 他真可爱。</p>
</li>
<li><p>excellent: 优秀的;杰出的<br>Our teacher speaks excellent English. 我们老师的英语说得好极了。</p>
</li>
<li><p>fabulous: 极好的;绝妙的<br>A: How do you like the show? 你觉得这场表演如何?<br>B: Fabulous! 棒极了!</p>
</li>
<li><p>fantastic: 极好的;了不起的<br>You’ve got the job? Fantastic! 你得到那份工作了?太好了!</p>
</li>
<li><p>marvelous: 极好的;非凡的<br>That’s a marvelous idea! 这主意真是棒极了。</p>
</li>
<li><p>special: 特别的;不寻常的<br>You know, you are really special! 你知道吗，你真的很特别。</p>
</li>
<li><p>wonderful: 精彩的;绝妙的;令人惊奇的<br>She has a wonderful memory. 她的记忆力惊人。<br>内容来源：英语语法网<br>图片来源：高品图像</p>
</li>
</ol>
<h2 id="与老外见面的10大经典句"><a href="#与老外见面的10大经典句" class="headerlink" title="与老外见面的10大经典句"></a>与老外见面的10大经典句</h2><p><a href="http://xue.youdao.com/sw/m/1309085?keyfrom=dict2.index" target="_blank" rel="external">lavaFOX看电影学英语</a></p>
<p><img src="https://oimageb6.ydstatic.com/image?id=-2459576666684072041&amp;product=dict&amp;_w=440&amp;_h=440&amp;originWidth=440&amp;originHeight=440" alt=""></p>
<p>1.Welcome to China! Welcome to our city!</p>
<p>欢迎到中国来！欢迎到我们的城市来！</p>
<p>2.I hope you’re enjoying your stay here.</p>
<p>希望你在这里过得愉快。</p>
<p>3.How long have you been in China?</p>
<p>你在中国多长时间了？</p>
<p>4.Is this your first trip to China?</p>
<p>这是你第一次来中国吗？</p>
<p>5.Are you here on business or for pleasure?</p>
<p>你来这里是出差还是游玩？</p>
<p>6.There are many interesting places here. I’d like to show you around.</p>
<p>这儿有很多有趣的地方，我愿意带你去看一看。</p>
<p>7.Please let me know if you need any help.</p>
<p>如果需要帮助，请告诉我。</p>
<p>8.What’s your impression of China so far?</p>
<p>你对中国有印象如何？</p>
<p>9.Are you used to the life here? Does the weather agree with you?</p>
<p>你习惯这里的生活吗？你适应这里的气候吗？</p>
<p>10.How do you like Chinese food? Are you used to the food here? Does the food here agree with you?</p>
<p>你觉得中国菜如何？你习惯这里的食物吗？这里的食物合你口味吗？</p>
<h2 id="实用版家庭日常英语口语"><a href="#实用版家庭日常英语口语" class="headerlink" title="实用版家庭日常英语口语"></a><a href="http://xue.youdao.com/sw/m/1312561?keyfrom=dict2.index" target="_blank" rel="external">实用版家庭日常英语口语</a></h2><p>(1)Sleep and waking up(睡觉/起床)</p>
<p>It’s time to go sleepy-bye.(到睡觉的时间了。)</p>
<p>Sweat dreams.(做个好梦。)</p>
<p>It’s time to go to bed./Time for bed.(该上床了。)</p>
<p>It’s time to have a nap.(该午休了。)</p>
<p>Wake up!(起床。)</p>
<p>Did you sleep well?(睡好了吗？)</p>
<p>Time to get up.(该起床了。)</p>
<p>(2)Getting dressed(穿衣)</p>
<p>It’s time to get dressed(该穿衣服了。)</p>
<p>What do you want to wear today?(今天想穿什么？)</p>
<p>This shirt doesn’t go with those pants.(这件上衣和裤子不搭配。)</p>
<p>Stand still. / sit still.(站好/坐好。)</p>
<p>Now put on your sweater.(现在穿上毛衣。)</p>
<p>Take your clothes off./ Take off your clothes.(脱衣服。)</p>
<p>Pick up your socks, please.(请把袜子捡起来。)</p>
<p>Put on your trousers/shoes/coat/cap.穿上你的裤子/鞋子/外套/帽子。</p>
<p>(3)Meal time(吃饭)</p>
<p>Come sit at the table。(过来坐在桌旁。)</p>
<p>Stop playing with your food。(不要再玩食物了。)</p>
<p>Don’t talk with your mouth full。(嘴里吃着不要说话。)</p>
<p>Help Daddy do the dishes。(帮助爸爸收盘子。)</p>
<p>Help Mommy to set the table。(帮助妈妈放桌子。)</p>
<p>Help us clear off the table。(帮我们收拾桌子。)</p>
<p>(4)Safty and injuries(安全和受伤)</p>
<p>It’s bad for you!(这对你不好。)</p>
<p>I have told you many times not to do that。(我已经告诉你好几遍了不要那样做。)</p>
<p>Don’t sit too close to the TV。(不要坐的离电视太近。)</p>
<p>It’s nothing. It’s just a little cut。(不要紧，只是小伤口)</p>
<p>Don’t touch the electrical outlets。(不要碰电源插座)</p>
<p>Don’t try to plug/put anything in the outlet。(不要试图拔或放任何东西在插座里。)</p>
<p>Don’t touch anything on the stove。(不要碰炉子)</p>
<p>The oven is very hot; you could burn yourself。(炉子很烫，你会烫着自己。)</p>
<p>Those tools are too sharp; they’re only for grownups。(那些工具太锋利了，只有大人能用)</p>
<p>Don’t use others cup; you could catch his cold/germs that way。(不要用别人的杯子，那样会传染病菌)</p>
<p>Don’t play with fire; it’s dangerous。(不要玩火，危险)</p>
<p>Wait for the green light before you cross the street。(等绿灯亮了再过马路)</p>
<p>Always look both side before crossing the street. (过马路前一定看两边。)</p>
<p>(5)Playing toys/games(玩玩具/游戏)</p>
<p>Don’t leave toys on the floor where people will step on them。(不要把玩具放在地板上，别人会踩到它们)</p>
<p>I’m going to count to ten。(我将数到十)</p>
<p>Let’s pick up the toys and put them back。(咱们把玩具捡起来放回去。)</p>
<p>Want to play hide and seek?(玩捉迷藏吗？)</p>
<p>Ready or not, here I come。(准备好了吗？我来了)</p>
<p>Please put the toys/books back on the shelf。(请把玩具/书放回架子上。)</p>
<p>Want to play outside?(想出去玩吗？)</p>
<p>(6)Bathroom talk(卫生间)</p>
<p>Do you need to go potty?(你要去大/小便吗？)</p>
<p>I need to go to the bathroom. (我要上厕所)</p>
<p>Don’t unroll the toilet paper。(不要扯手纸。)</p>
<p>Don’t use too much toilet paper。(不要浪费手纸。)</p>
<p>Don’t pick your nose. / Don’t stick your fingers in your nose。(不要用手挖鼻子。)</p>
<p>Wipe your bottom。(擦擦屁股。)</p>
<p>(7)Washing up(清洁)</p>
<p>Your hands are sticky。(你的手很脏。)</p>
<p>Wash your hands immediately。(马上去洗手。)</p>
<p>Look at the mess you’ve made。(看看你弄的。)</p>
<p>You need to have a bath。(你得洗个澡了。)</p>
<p>(8)Manners(礼貌)</p>
<p>Don’t interrupt daddy/mommy。(不要打断妈/爸说话)</p>
<p>Don’t bother me while I’m on the phone。(我打电话时不要捣乱。)</p>
<p>Are you going to apologize?(你准备道歉吗？)</p>
<p>You need to share your toys with your sister。(你应该与妹妹分享玩具。)</p>
<p>He had that toy first。(他先拿到的玩具。)</p>
<p>This toy doesn’t belong to you。(这个玩具不是你的。)</p>
<p>(9)Finding out(发现问题)</p>
<p>What’s happened?(发生什么事了？)</p>
<p>What’s the matter?(怎么了？)</p>
<p>Why are you crying?(为什么哭？)</p>
<p>Don’t worry。(不要担心。)</p>
<p>Everything’s fine。(一切都会好的。)</p>
<p>There’s nothing to be scared of。(没什么可怕的。)</p>
<p>Are you feeling better now?(你现在感觉好些吗？)</p>
<p>We’re right in the next room。(我们就在旁边的屋子)</p>
<p>(10)Discipline(纪律)</p>
<p>Stop doing that。(停下)</p>
<p>We need to discuss this。(我们需要检讨一下。)</p>
<p>Good girls/boys don’t do/say things like that。(好孩子不那样做(说)。)</p>
<p>You’re part of a family, and you can’t think only about yourself。(你是家庭的一员，你不能只想到自己。)</p>
<p>Don’t argue me about this。(不要再和我争论了。)</p>
<p>I’m going to count to three, and if you don’t have the toys picked up by then …(数到三你不收玩具，我就。。。)</p>
<p>No more discussion, you’re going to bed now。(没有商量的余地，你必须现在上床。)</p>
<p>Don’t raise your voice at me!(不要对我提高嗓门！)</p>
<p>That’s a rude way to speak。(那样说话不礼貌/粗鲁。)</p>
<p>(11)Compliments, encouragement(鼓励，夸奖)</p>
<p>Great job!(太棒了！)</p>
<p>I’m so proud of you。(我真为你骄傲！)</p>
<p>Well done!(干得好！)</p>
<p>You were so brave/great/good!(你真勇敢/棒！)</p>
<p>(12)Restaurants, shopping(饭店，购物)</p>
<p>We can’t eat the food until we pay for it。(这食物在付款之前我们不能吃。)</p>
<p>Don’t run around here; we’re not at home。(不要在这乱跑，我们不是在家里。)</p>
<p>Please don’t knock down all those cans。(请不要把那些罐子碰倒。)</p>
<p>Don’t touch anything here. These things aren’t ours。(不要碰任何东西，这不是我们的。)</p>
<p>You promised me you wouldn’t ask me to buy anything。(你答应我的不买任何东西。)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://cdn.iciba.com/news/word/big_20170716b.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;You’ll be amazed at how high you can fly when you leave some of the baggage behind!&lt;br&gt;丢下一些包袱后，你会惊讶到，自己竟能飞得那么高。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;词霸小编：我知道何时止步，何时放手，何时前行。但是，我“知道”不代表我“能够”。臣妾做不到啊，你们说怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="English" scheme="http://aisee.me/categories/English/"/>
    
    
      <category term="Sentence" scheme="http://aisee.me/tags/Sentence/"/>
    
  </entry>
  
  <entry>
    <title>Wiz Khalifa - See You Again</title>
    <link href="http://aisee.me/2017/07/19/MyView/Music/Wiz%20Khalifa%20-%20See%20You%20Again/"/>
    <id>http://aisee.me/2017/07/19/MyView/Music/Wiz Khalifa - See You Again/</id>
    <published>2017-07-19T11:42:06.000Z</published>
    <updated>2017-07-19T11:40:16.567Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images.rapgenius.com/5d5f32f2491f47be2fafc36298c295de.600x600x1.jpg" alt=""></p>
<p><a href="https://www.youtube.com/watch?v=RgKAFK5djSk" target="_blank" rel="external">See You Again</a></p>
<p><a href="http://news.iciba.com/study/bilingual/1576393.shtml" target="_blank" rel="external">《See You Again》超《江南Style》破Youtube点击纪录</a></p>
<a id="more"></a>
<p><a href="https://genius.com/Wiz-khalifa-see-you-again-lyrics" target="_blank" rel="external">See You Again</a></p>
<p>[Chorus: Charlie Puth]<br>It’s been a long day without you, my friend<br>And I’ll tell you all about it when I see you again<br>We’ve come a long way from where we began<br>Oh, I’ll tell you all about it when I see you again<br>When I see you again</p>
<p>[Verse 1: Wiz Khalifa]<br>Damn, who knew?<br>All the planes we flew<br>Good things we been through<br>That I’d be standing right here talking to you<br>‘Bout another path<br>I know we loved to hit the road and laugh<br>But something told me that it wouldn’t last<br>Had to switch up<br>Look at things different, see the bigger picture<br>Those were the days<br>Hard work forever pays<br>Now I see you in a better place, uh</p>
<p>[Refrain: Wiz Khalifa]<br>How can we not talk about family<br>When family’s all that we got?<br>Everything I went through<br>You were standing there by my side<br>And now you gon’ be with me for the last ride</p>
<p>[Chorus: Charlie Puth]<br>It’s been a long day without you, my friend<br>And I’ll tell you all about it when I see you again<br>We’ve come a long way from where we began<br>Oh, I’ll tell you all about it when I see you again<br>When I see you again</p>
<p>[Post-Chorus: Charlie Puth]<br>Aah oh, aah oh<br>Wooooh-oh-oh-oh-oh-oh<br>Yeah</p>
<p>[Verse 2: Wiz Khalifa]<br>First, you both go out your way<br>And the vibe is feeling strong<br>And what’s small turned to a friendship<br>A friendship turned to a bond<br>And that bond will never be broken<br>The love will never get lost<br>And when brotherhood come first<br>Then the line will never be crossed<br>Established it on our own<br>When that line had to be drawn<br>And that line is what we reached<br>So remember me when I’m gone</p>
<p>[Refrain: Wiz Khalifa]<br>How can we not talk about family<br>When family’s all that we got?<br>Everything I went through<br>You were standing there by my side<br>And now you gon’ be with me for the last ride</p>
<p>[Bridge: Charlie Puth]<br>So let the light guide your way, yeah<br>Hold every memory as you go<br>And every road you take<br>Will always lead you home, home</p>
<p>[Chorus: Charlie Puth]<br>It’s been a long day without you, my friend<br>And I’ll tell you all about it when I see you again<br>We’ve come a long way from where we began<br>Oh, I’ll tell you all about it when I see you again<br>When I see you again</p>
<p>[Post-Chorus: Charlie Puth]<br>Aah oh, aah oh<br>Wooooh-oh-oh-oh-oh-oh<br>Yeah</p>
<p>Youtube近日公布最新榜单，电影《速度与激情7》主题曲《See you again》MV的播放量超越韩国歌手Psy(鸟叔)的《江南Style》，成为全球观看次数最多的视频。在《速度与激情》系列电影的主力演员保罗·沃克意外去世后，电影制作方希望通过制作一首歌曲以纪念和缅怀保罗，于是有了这首歌。</p>
<p>Psy’s Gangnam Style is no longer the most-watched video on YouTube.<br>韩国歌手“鸟叔”(Psy)的《江南Style》不再是YouTube上播放量最多的视频了。</p>
<p>The South Korean megahit had been the site’s most-played clip for the last five years.<br>《江南Style》曾是风靡全球的“神曲”，连续五年来稳居YouTube视频播放量榜首。</p>
<p>The surreal video became so popular that it “broke” YouTube’s play counter, exceeding the maximum possible number of views (2,147,483,647), and forcing the company to rewrite its code.<br>这首洗脑神曲曾引爆全球热潮，不仅刷新YouTube最高纪录，观看次数甚至一度超越计数器可以负荷的极限(21亿4748万3647次)，更是迫使该公司升级其计数系统。</p>
<p>But the song has now been overtaken by another music video - Wiz Khalifa and Charlie Puth’s See You Again.<br>如今这一神话终被维兹•卡利法和查理•普斯的《See You Again》打破。</p>
<p>The heart-wrenching ballad has now been streamed 2,895,373,709 times; beating Psy’s current count of 2,894,426,475 views.<br>截至目前，这首打动人心的歌曲在YouTube上的点击次数已达到28亿9537万3709次，一举击败了鸟叔的《江南Style》(点击次数28亿9442万6475次)。</p>
<p>Adding it up, that means See You Again has been streamed for a total of 21,759 years. If one person was to listen to each of those streams consecutively, they’d have to have started during the glacial peak of the last Ice Age.<br>这意味着《See You Again》在YouTube上的播放总时长累计达21759年。也就是说一个人要从末次冰河时期的冰川高峰期开始连续循环该单曲，直到现在才能播完。</p>
<p>“I joined YouTube in 2007 hoping to make a video that would reach 10,000 views,” wrote Charlie Puth on Twitter. “Just heard about See You Again… Wow.”<br>查理•普斯在推特上发文说：“我2007年开始刷YouTube，想要创作出点击量超一万的视频。但是刚刚听说了《See You Again》荣登榜首，哇哦。”</p>
<p>The song was written for the action movie Furious 7, playing over the closing credits in tribute to the actor Paul Walker, who died in a car accident before the film was completed.<br>作为动作影片《速度与激情7》的主题曲，这首旋律是为了向电影拍摄完成前在车祸中不幸离世的保罗•沃克致敬。</p>
<p>With its unabashedly sentimental lyrics (“it’s been a long day without you my friend/ And I’ll tell you all about it when I see you again”), See You Again has become one of the most frequently requested pop songs at funerals in the UK.<br>凭借令人动容的歌词(“没有老友你的陪伴，日子真是漫长/与你重逢之时，我会敞开心扉倾诉所有”)，《See You Again》已经成为英国人葬礼上被要求播放次数最多的流行歌曲之一。</p>
<p>It was the best-selling song worldwide in 2015, and received best song nominations at both the Grammys and the Oscars.<br>2015年，《See You Again》是年度全球最畅销单曲，并获得格莱美和奥斯卡的最佳歌曲提名。</p>
<p>The music video features the final scene of Furious 7, in which the two main characters Dominic Toretto (Vin Diesel) and Brian O’Conner (Cody Walker, filling in for his brother, Paul), drive side-by-side, sharing a smile for the last time before they pull onto separate roads and drive into the sunset.<br>MV的最后画面是电影《速度与激情7》中的两大主角多米尼克·托莱多(范•迪塞尔饰演)和布莱恩·奥康纳(由科迪•沃克代其兄保罗出演)并肩行驶，最后一次相视一笑，在夕阳下驶向两条不同的道路。</p>
<p>As the camera pans up into the sky, a title card reads “For Paul” and the video ends.<br>当镜头缓缓移向天空，“致保罗”的字样映入眼帘，MV才最终结束。</p>
<p>The video reached 1 billion views in six months, and hit 2 billion last September. However, its reign as YouTube’s most-watched clip may be short-lived.<br>MV发行仅半年就在YouTube上达到了10亿次的点击量，并在去年九月突破20亿次。然而《See You Again》的“宝座”可能维持不了多久。</p>
<p>Luis Fonsi’s summer smash Despacito has racked up 2.5 billion views in just six months, and it shows no signs of slowing down.<br>路易斯·冯西今年夏天大火的单曲《Despacito》发行仅半年，点击量现已急速上升到25亿次，且丝毫没有减弱的迹象。</p>
<p>The Puerto Rican song - sung in a mixture of Spanish and English - has been number one in the UK for the last eight weeks, thanks in part to a remix featuring Justin Bieber.<br>这支波多黎各单曲用西班牙语和英语演唱，贾斯汀•比伯助阵参与混音，已经连续八周夺得英国歌曲播放量排行榜的冠军宝座。</p>
<p>Whoever takes the title, though, its good news for Universal Music, which owns all of the songs.<br>而无论哪首歌荣登榜首，对环球唱片公司来说都是好消息，因为这些单曲都由该公司发行。</p>
<p>Meanwhile, 47 of the top 50 clips on YouTube are music videos, proving the importance of the streaming site to the music industry - despite the fact the two sides are locked in a battle over royalty payments.<br>同时，YouTube上点击量前50的视频中音乐视频就占了47个，这也证实了流媒体网站对音乐产业的重要性，尽管双方正在专利使用费这一问题上争得不可开交。</p>
<p>According to analysis by Midia Research, every stream on YouTube generates $0.001 for the music industry.<br>据传媒研究分析，YouTube上的每个流媒体能为音乐产业带来0.001美元的收益。</p>
<p>If accurate, that means Wiz Khalifa and Charlie Puth’s song has earned $2.9m from YouTube - roughly the same amount it has made from 665 million plays on Spotify.<br>如果该数据准确，这就意味着《See You Again》已经从YouTube的播放量中获得290万美元(约合人民币1968万元)的收益。这支MV在流媒体音乐服务平台声田上的播放量也达6.65亿，创造的收益与在YouTube上的大致相当。</p>
<p>文章来源：中国日报英语点津<br>图片来源：高品图像</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.rapgenius.com/5d5f32f2491f47be2fafc36298c295de.600x600x1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=RgKAFK5djSk&quot;&gt;See You Again&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://news.iciba.com/study/bilingual/1576393.shtml&quot;&gt;《See You Again》超《江南Style》破Youtube点击纪录&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="English" scheme="http://aisee.me/tags/English/"/>
    
      <category term="Music" scheme="http://aisee.me/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>Knowledge can&#39;t cure bad taste</title>
    <link href="http://aisee.me/2017/07/19/MyView/Share/knowledge%20cannot%20cure%20bad%20taste/"/>
    <id>http://aisee.me/2017/07/19/MyView/Share/knowledge cannot cure bad taste/</id>
    <published>2017-07-19T11:20:06.000Z</published>
    <updated>2017-07-19T11:21:32.894Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>Reading, Music, Thinking , Writing, Travelling</strong></p>
</blockquote>
<p><img src="https://www.ft.com/__origami/service/image/v2/images/raw/http%3A%2F%2Fi.ftimg.net%2Fpicture%2F3%2F000071523_piclink.jpg?source=ftchinese&amp;width=1340&amp;height=754&amp;fit=cover" alt=""><br>（文首照片为美国歌手Bob Dylan——编者注）</p>
<p>邵勃：在人人热衷知识付费、自我迭代的时代，你会发现影响思维判断、塑造你境遇的，是看似无用的审美品味。</p>
<a id="more"></a>
<p><strong>“没审美是绝症，知识也治不好。”</strong> 这话是木心说的。</p>
<p>木心没有混过职场，这句话却说得很像一个欠揍的上司。当然，并不是每一个老板都能说出这样刻毒的漂亮话，刻毒往往是才情的流露。说这话又是要冒一些风险的——你得对自己的审美有木心般的底气，还要保证这样教训下属的时候，旁边没有知晓你当年底细和品味的人。<br>让我们把语气稍微柔化一下，重说一遍：“没审美得治疗，光靠知识赢不了。”撇开语气不谈，这句话妙在它道出了一个关于艺术和人格成长的真相：<strong>在这个人人热衷“知识付费”，“自我迭代”和“终身学习”的时代，它显得格格不入又耐人寻味。</strong></p>
<p>就拿审美最普遍的三个指向：<strong>文字、图像和音乐</strong> 来说，这三件事貌似和大多数人的职业全不搭界，但是放在一起看，它们共同构成了一个人职业素养的底座。混了多年之后，你会发现影响你的思维力和判断力，塑造你的世界和境遇的，不是巴菲特的某句名言，却往往正是这一点看似无用的审美品味。</p>
<p>先说文字。想想你钦佩过的老板吧（我是说真钦佩过的），哪一位的文字功力不堪称强大？所谓强大，不需花哨，但是必须精道。一个流传很广的故事是，某个咨询公司的年轻分析员，把自己上百页的项目报告呈给老板审阅。这位很爱演的老板将这一沓报告扔向空中，待漫天飞舞的纸片落地以后，请这位年轻人，捡起其中的10张来代表他的研究成果。年轻人大哭着跑开，从此变成了一个寡言而深沉的人。故事的真实性虽然待考，但是意义很明确：Brevity is the soul of wit （“言以简为贵”《哈姆雷特》）。语言水平代表着思维的清晰程度，所以请珍视你写的每一个字。工作邮件当然不用写成《老人与海》的水准，但是阅读海明威总能找到去除赘字的冲动与豪情。乔治.奥维尔不仅写过《1984》，还有这样一本好书可供参考《政治与英语》。</p>
<p>这本书中提出的六项写作原则，也是《经济学人》杂志的写作圭臬（插播赘语一句：如果人人都能按照《经济学人》的标准写作，这个世界将不复有愚蠢、欺骗，多么美妙！）这不是哪一次培训就帮你建立起来的写作技巧，而是长期浸泡在第一流的作品里才能产生的文字本能。阅读和实践久了，也就慢慢理解了冯内古特这个级别的作家，为什么要去糟蹋可怜的分号。在他最后一本书《没有国家的人》里，冯内古特深沉的告诫年青人：</p>
<p>“不要用分号。它们是雌雄同体的异装癖。使用它们唯一的作用就是显示你上过大学。”<br>三个精神抖擞的句号。</p>
<p>再扯两句视觉艺术。人类本来就是感官动物，一图胜千言，能看图片的时候，没人愿意仔细阅读。而因为摄影的手机化，人人都可以大量产出自己的“作品”。类似的现实，早在50年前电视成为新媒体的时候，就被安迪.沃霍洞察到了。当然，他无法预见，世上将出现“朋友圈”式的怪兽，每天发布着数以亿计的图像资料。粗略观察一下，你会发现：老年人“朋友圈”里充斥着完全不顾美学要领，以记录生活为唯一目的的图片。中年人的水准良莠不齐，但沙中取砾，也偶有佳作。而年轻人发出的图片则通常较好看也较为有趣。所以亲爱的朋友们，为了假装年轻人，拍一个早餐荷包蛋的时候，也请考虑一下美学效果——况且吃完这只荷包蛋，您还需要在PPT里继续使用图片忽悠客户。时间不够的话，厚厚的一本《纽摄》教材，可以只看第八课《培养你的眼力－Developing Your Eyes》。你会发现每一张好的摄影作品，都自带一个问题。比如为什么在Maureen Lambray的镜头里，Woody Ellen站在整个边框的左侧。</p>
<p>你可以有100个答案，但是好问题只需要一个——用图片来提问是最酷的方式。</p>
<p>最后说说音乐，这个离大部分职业技能最远的艺术。音乐通常被认为是纯创造性工作，这个看法固然不错，可是它掩盖了一个事实：在学习音乐的过程中，蕴藏着令人发指的纪律性。而这种纪律性，指向和培养的正是人对于完美的追求。这就是为什么我总会建议朋友的孩子去学一门乐器，而不是绘画。因为乐器演奏有严格的对错之分，这符合“刻意练习”的基本要求。你可以指着一副儿童的涂鸦作品，言之凿凿的找出其中成人所不具备的创造性，但是你不可能把一首弹得结结巴巴的莫扎特说成是了不起的再创造。对儿童来说，他弹对了一首莫扎特，就是在一把演奏水平标尺上移动了一格，不多不少。</p>
<p>更好的消息是，在掌握了其中的纪律性以后，音乐又具有不可思议的包容性，可以成为你做事，甚至为人的风格导师（Style Guru）。在我曾经读书的华盛顿大学，有一位营销学的教授，谈到和他授课方式迥异，然而同样受欢迎的金融学的教授时，很客气又很中肯的评价道：“他上课是演奏古典音乐，我演的是爵士乐”。谁高谁下呢？他没有说，你也不打算再问了。只留下一个关于风格的印象，这很性感。<br>前两天“朋友圈”有一篇很火的文章，叫做《你在教育链上鄙视别人家孩子，它站在食物链顶端鄙视你》，主题是鼓吹人工智能必胜，人类命运岌岌可危。这本来也没什么，可是其中关于音乐教育的部分，却很难令人信服：</p>
<p>“加州大学圣克鲁兹分校的音乐学教授戴维•柯普，写了计算机程序专门模仿巴赫的编曲，虽然写程序花了7年功夫，但是这个程序一出来，短短一天内就写出了5000首巴赫风格的赞美诗。柯普挑出几首安排在一次音乐节上演出，听众还以为这就是巴赫的曲子，兴奋地讲着这些音乐如何触碰到他们内心最深处。”</p>
<p>我完全相信这个故事的真实性。可是这里有几个前提没有被说明。第一是赞美诗，甚至是巴洛克时期的大多数作品的确是有明显的音乐格式可循，计算机能够模仿不算奇怪。第二，那些很容易被音乐“触碰到内心最深处”的听众们，对上帝的热爱往往远超他们的音乐知识，急切地表达感动是这个集体的一个共性。还有第三点也许更为重要：音乐中蕴含的无限诗性，恰恰是由诗人本身，而不是音乐来定义的。人工智能也许可以创造一首Bob Dylan的《All along the watchtower》，但是当这种大规模复制成为可能时，音乐中的神性和人性都已经泯灭，音乐也就失去了意义。没有了那个叫做Bob Dylan的图腾，人们终究还会不满足。这是一个深刻的关于艺术和艺术家的悖论，留给专业人士讨论。</p>
<p>拉拉杂杂写了一堆，总结起来无非是想说；<strong>知识是山丘，而审美或者说艺术，是山丘上的那一缕灵光。如果终身爬山是个苦差事，那么朝着那一线光前进，才会更有力量</strong>。要是非逼着我，说说这一切对于职场的启示，那我想借用一下我很喜爱的报人龚晓跃激励同伴时说的一句话：</p>
<p>“<strong>尽量把事情，做得高级一点</strong>”。</p>
<p>（本文仅代表作者本人观点。责编邮箱：shirley.xue@ftchinese.com）</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Reading, Music, Thinking , Writing, Travelling&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://www.ft.com/__origami/service/image/v2/images/raw/http%3A%2F%2Fi.ftimg.net%2Fpicture%2F3%2F000071523_piclink.jpg?source=ftchinese&amp;amp;width=1340&amp;amp;height=754&amp;amp;fit=cover&quot; alt=&quot;&quot;&gt;&lt;br&gt;（文首照片为美国歌手Bob Dylan——编者注）&lt;/p&gt;
&lt;p&gt;邵勃：在人人热衷知识付费、自我迭代的时代，你会发现影响思维判断、塑造你境遇的，是看似无用的审美品味。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>智能时代</title>
    <link href="http://aisee.me/2017/07/19/AI/Business/intelligent%20era/"/>
    <id>http://aisee.me/2017/07/19/AI/Business/intelligent era/</id>
    <published>2017-07-19T10:35:06.000Z</published>
    <updated>2017-07-19T10:35:30.926Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/lpic/s29142393.jpg" alt=""></p>
<p>大数据和机器智能的出现，对我们的技术发展、商业和社会都会产生重大的影响。作者吴军在《智能时代：大数据与智能革命重新定义未来》中指出，首先，我们在过去认为非常难以解决的问题，会因为大数据和机器智能的使用而迎刃而解，比如解决癌症个性化治疗的难题。同时，大数据和机器智能还会彻底改变未来的商业模式，很多传统的行业都将采用智能技术实现升级换代，同时改变原有的商业模式。大数据和机器智能对于未来社会的影响是全方位的。</p>
<a id="more"></a>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="第一章-数据—人类建造文明的基石"><a href="#第一章-数据—人类建造文明的基石" class="headerlink" title="第一章 数据—人类建造文明的基石"></a>第一章 数据—人类建造文明的基石</h2><p>如果我们把资本和机械动能作为大航海时代以来全球近代化的推动力的话，那么数据将成为下一次技术革命和社会变革的核心动力。<br>现象、数据、信息和知识<br>数据的作用：文明的基石<br>相关性：使用数据的钥匙<br>统计学：点石成金的魔棒<br>数学模型：数据驱动方法的基础</p>
<h2 id="第二章-大数据和机器智能"><a href="#第二章-大数据和机器智能" class="headerlink" title="第二章 大数据和机器智能"></a>第二章 大数据和机器智能</h2><p>在有大数据之前，计算机并不擅长于解决需要人类智能的问题，但是今天这些问题换个思路就可以解决了，其核心就是变智能问题为数据问题。由此，全世界开始了新的一轮技术革命——智能革命。<br>什么是机器智能<br>鸟飞派：人工智能1.0<br>另辟蹊径：统计+数据<br>数据创造奇迹：量变到质变<br>大数据的特征<br>变智能问题为数据问题</p>
<h2 id="第三章-思维的革命"><a href="#第三章-思维的革命" class="headerlink" title="第三章 思维的革命"></a>第三章 思维的革命</h2><p>在无法确定因果关系时，数据为我们提供了解决问题的新方法，数据中所包含的信息可以帮助我们消除不确定性，而数据之间的相关性在某种程度上可以取代原来的因果关系，帮助我们得到我们想知道的答案，这便是大数据思维的核心。<br>思维方式决定科学成就：从欧几里得、托勒密到牛顿<br>工业革命，机械思维的结果<br>世界的不确定性<br>熵—一种新的世界观<br>大数据的本质<br>从因果关系到强相关关系<br>数据公司Google</p>
<h2 id="第四章-大数据与商业"><a href="#第四章-大数据与商业" class="headerlink" title="第四章 大数据与商业"></a>第四章 大数据与商业</h2><p>在未来我们可以看到，大数据和机器智能的工具就如同水和电这样的资源，由专门的公司提供给全社会使用。<br>从大数据中找规律<br>巨大的商业利好：相关性、时效性和个性化的重要性<br>大数据商业的共同点—尽在数据流中<br>把控每一个细节<br>重新认识穷举法—完备性带来的结果<br>从历史经验看大数据的作用<br>技术改变商业模式<br>加（+）大数据缔造新产业</p>
<h2 id="第五章-大数据和智能革命的技术挑战"><a href="#第五章-大数据和智能革命的技术挑战" class="headerlink" title="第五章 大数据和智能革命的技术挑战"></a>第五章 大数据和智能革命的技术挑战</h2><p>大数据的数据量大、维度多、数据完备等特点，使得它从收集开始，到存储和处理，再到应用，都与过去的数据方法有很大的不同。因此，使用好大数据也需要在技术和工程上采用与过去不同的方法。<br>技术的拐点<br>数据收集：看似简单的难题<br>数据存储的压力和数据表示的难题<br>并行计算和实时处理：并非增加机器那么简单<br>数据挖掘：机器智能的关键<br>数据安全的技术<br>保护隐私：靠大数据长期挣钱的必要条件</p>
<h2 id="第六章-未来智能化产业"><a href="#第六章-未来智能化产业" class="headerlink" title="第六章 未来智能化产业"></a>第六章 未来智能化产业</h2><p>现有产业+机器智能=新产业，未来的农业、制造业、体育业、医疗、律师，甚至编辑记者行业都将迎来崭新形态，新产业将取代旧产业满足人类的个性化需求，大数据将导致我们整个社会的升级和变迁。<br>未来的农业<br>未来的体育<br>未来的制造业<br>未来的医疗<br>未来的律师业<br>未来的记者和编辑</p>
<h2 id="第七章-智能革命和未来社会"><a href="#第七章-智能革命和未来社会" class="headerlink" title="第七章 智能革命和未来社会"></a>第七章 智能革命和未来社会</h2><p>在历次技术革命中，一个人、一家企业，甚至一个国家，可以选择的道路只有两条：要么加入智能浪潮，成为前2%的人，要么观望徘徊，被淘汰。<br>智能化社会<br>精细化的社会<br>无隐私的社会<br>机器抢掉人的饭碗<br>争当2%的人</p>
<p>后记<br>参考文献</p>
<h2 id="十分钟读完《智能时代》"><a href="#十分钟读完《智能时代》" class="headerlink" title="十分钟读完《智能时代》"></a>十分钟读完《智能时代》</h2><p>  new  2016-08-06 21:54:35<br>这篇书评可能有关键情节透露</p>
<p>推荐语：一个空前的大时代，未来，真的来了，这将是一个让我们振奋的时代，也是一个给我们带来空前挑战的时代。</p>
<p>未来的社会，属于那些具有创意的人，包括计算机科学家，而不属于掌握某种技能做重复性工作的人。</p>
<p>阿法狗战胜李世石——智能时代到来。</p>
<p>思维的革命</p>
<p><strong>机械思维</strong>——17世纪以来一直指导我们日常做事行为的思维方式。过去三个多世纪人类总结出的最重要的思维方式，</p>
<p>现代文明的基础。源于古希腊的思辨思想和逻辑推理。</p>
<p>欧几里得最大的成就是在几何学和数学知识基础上创立了“公理化体系”的几何学（《几何原本》——对世界影响力最大的一本书）。这对西方的整个思维方法有极大影响。</p>
<p>托勒密是最伟大的天文学家，没有之一。欧几里得后约5个世纪，托勒密将欧几里得的方法应用到天文学上，建立地心说。其善于总结方法论，至今仍在用。</p>
<p>核心思想：<br>首先，有一个简单元模型，这个模型可能是假设出来的，然后在用这个元模型构建复杂的模型。其次，整个模型要和历史数据吻合。<br>缺陷：一，模型过于复杂，依靠手工计算难以准确。二，确定性假设。</p>
<p>古希腊罗马后，人类对自然的认识变缓，西方进入中世纪。东方在工程和技术上不断进步，但没形成科学体系，没形成方法论。（东方文明长期在技术上领先西方，但在科学体系上远落后于西方，关键就输在方法论上。）最终，发展成科学方法论的任务留给了笛卡尔和牛顿。</p>
<p>笛卡尔的贡献在于提出了科学方法论，即“大胆假设，小心求证”。这在今天仍在使用。</p>
<p>牛顿对近代社会思想贡献最大，直接的贡献在于“用简单而优美的数学公式破解了自然之谜”。指出任何正确的理论从形式上都是简单的，同时又有非常好用的通用性（大道至简）。</p>
<p>人们将牛顿的方法论概括为机械思维。核心思想是：一，世界变化的规律是确定的。二，规律不仅可以被认识，而且可以用简单的公式或语言描述。三，这些规律放之四海皆准。</p>
<p>瓦特第一个应用牛顿力学原理作出重大发明。瓦特掌握了新的方法论——<strong>机械思维</strong>，“改进”了蒸汽机。其后，机械思维普及欧洲，英国史蒂芬森发明火车；查尔斯瑟伯发明转轮打字机（结束几千年来人类书写记录文明的方式）。美国伊莱惠特尼发明轧棉机（间接导致南北战争）。罗伯特富尔顿发明蒸汽船（为全球自由贸易时代到来做好了准备）。</p>
<p>机械思维导致工业革命。人类财富增加，寿命大大延长。</p>
<p>爱因斯坦，现代物理学集大成者，其思维方式和牛顿是一致的，都是建立在“确定性”基础之上。</p>
<p>机械思维的局限性：否认不确定性和不可知性。信息时代，这种局限性逐渐显现。不确定性是这个世界的重要特征，<strong>很多事情难以用确定的公式或规则表示，但并非无规律可循，可用概率论来描述。</strong></p>
<p>香农在概率论基础上建立了信息论。把信息和世界的不确定性（无序状态）联系到一起。<br>克劳修斯提出“熵”的概念，即一个系统完全达到恒温时，就无法做功，此时熵最大。<br>香农把熵和信息量联系了起来：要想消除系统的不确定性，就要引入信息。</p>
<p><strong>信息论是一种全新的方法论，与机械思维建立在确定性基础上截然不同，是建立在不确定性基础上。</strong></p>
<p><strong>信息时代的方法论：谁掌握了信息，谁就能够获取财富，如同工业时代谁掌握了资本谁就能获取财富。</strong></p>
<p>互信息：信息的相关性。</p>
<p>香农第一定律（信源编码定律）：对信源发出的所有信息设计一种编码，那么编码的平均长度一定大于该信源的信息熵，同时一定存在一种编码方式，使得编码的平均长度无限接近于它的信息熵。</p>
<p>香农第二定律：信息的传播速率不可能超过信道的容量。描述了通信领域最跟的规律，是自然界本身的固有规律，能解释很多商业行为。如人脉是人与人交往的带宽，人脉不够，发出的信息和获得的信息都有限，生意很难做大。</p>
<p>最大熵原理：当我们对未知的事件寻找概率模型时，这个模型应当满足我们所有已经看到的数据，但是对未知的情况不要做任何主观假设。</p>
<p><strong>智能问题从根本上讲是消除不确定性的问题。</strong></p>
<p>交叉熵：库尔贝克等人提出。它可以反映两个信息源之间的一致性或两种概率模型之间的一致性。两个数据源完全一致，交叉熵为零，相差很大，交叉熵也很大。</p>
<p><strong>大数据的科学基础是信息论，其本质是利用信息消除不确定性。</strong></p>
<p>现有产业+大数据（机器智能）=新产业</p>
<p>并非每一家公司都要从事新技术产品本身的制造，更多时候它们是利用新技术改造原有产业。</p>
<p>智能革命和未来社会<br>正面：<br>    大数据和机器智能使我们生活的环境更加安全。可以让我们整体的社会环境乃至文明程度有质的飞跃。<br>    工业革命前，人类使用的产品和服务有细微差别（个性化），但效率低；工业革命后，人类使用的产品和服务无差别（标准化），个性化消失；智能时代，机器智能足以提供各种个性化服务，同时成本和标准化服务相当（个性化又回来了）。</p>
<p>负面：<br>    人们将生活在一个没有隐私的环境。将来可能很麻烦，不仅仅是在淘宝上总被送假货，买机票总比别人贵20%那么简单，可能涉及我们的健康和医疗，可能没有医院会接收我们住院；<br>    人们会被一些超级权利在无形中控制；<br>    很多人因为没有掌握未来生存技能而失业；<br>    财富更加集中在少数人手里。</p>
<p>智能革命将比过去历次技术革命来得更深刻，对社会带来的冲击可能是空前的。<br>历史上有影响力可以和正在进行的智能革命相比的，只有<br>19世纪末始于英国的工业革命、<br>20世纪末始于美国和德国的第二次工业革命、<br>“二战”后以摩尔定律为标准的信息革命。</p>
<p>从工业革命到黄金时代：<br>工业革命带来三个结果：人类过得好了，人类活得长了，人类有自信和尊严了。</p>
<p>工业革命之前的几千年时间里，劳动力的数量和能提供给生产所使用的动力是不足的，商品是供不应求的。工业革命后，情况大不同。马克思说“资产阶级在它不到100年的阶级统治中所创造的生产力，比过去一切时代创造的全部生产力还要多，还要大。”<br>1800年-2000年间，南欧、西欧、北欧人均GDP水平增长了近20倍（从1000美元增加到20000美元）。中国在1979年-2014年间，人均GDP考虑购买力涨不止10倍，不考虑购买力涨40倍。<br><strong>中国用35年时间走完了欧洲200多年走完的路，从农耕时代到早期工业时代、大工业时代和后工业时代（信息时代），并与世界同步进入后信息时代。</strong></p>
<p>新技术在出现的初期，受益者是非常少的，他们通常只是那些掌握新技术或者使用新技术、从事新行业的人。18世纪末到19世纪上半叶是英国贫富分化严重、社会矛盾重重的半个多世纪。也正是那个年代，英国出现了空前绝后的工人运动，催生出马克思主义。</p>
<p>英国人花了大约两代人的时间消化工业革命带来的负面影响。如何解决工业革命的副作用？资本输出→开拓全球殖民地→推行自由贸易。</p>
<p>工业革命对社会的影响分三个阶段：<br>一，发明家和工厂主受益，普通民众不受益；<br>二，全体英国民众受益，世界范围内大家不受益，两个阶段差半个多世纪；<br>三，整个世界受益。<br>第二次工业革命，此模式重复出现。</p>
<p>从第二次工业革命到镀金时代<br>第二次工业革命的核心是电的使用。刚开始一段时间美国贫富分化程度达到北美殖民以来最高点，且比今天严重的多。发生了美国历史上不多见的工人激进运动，南方传统经济被北方大工业彻底碾碎，直到今天，南部经济依然落后北方。</p>
<p>美国已没有那么多殖民地待开发，好在有天然的地理优势，有广袤的中西部处女地待开发。从1870年到19世纪20年代（镀金时代，柯立芝繁荣），经过半个世纪的努力，美国才基本实现全面繁荣。德国为了输出产能，不得不发动第一次世界大战，战败后问题没有得到解决，导致民粹主义泛滥，最终劳工阶层把纳粹推上台。</p>
<p>“在人类历史上最富有的75人中，有1/5出生在1830-1840年的美国，包括钢铁大王卡内基、石油大王洛克菲勒等。”——《异类》马尔科姆.格拉德维尔</p>
<p>依然没消化完的信息革命<br>过去30年里，美国和中国两个国家贡献了全球超过一半的GDP增长，除去这两个国家，世界大部分地区情况并不美妙。它们自有的旧的经济结构落伍，新的经济结构虽能享受信息革命的产品，确享受不到经济增长。</p>
<p>全世界范围看，消化掉信息革命的冲击波或许还需更长时间，然而现在大数据和机器智能革命已经来敲门。</p>
<p>从目前发展来看，智能革命对社会的冲击有可能超过过去几次技术革命。<br>首先，信息革命本身带来的影响还没有消化完。<br>其次，今天的世界和200年前已经不同，消化掉技术革命的影响要比工业革命时难得多。<br>最后，智能革命所要替代的是人类最值得自豪的部分——大脑。</p>
<p>当全社会各行各业的从业人数都因机器智能而减少时，全世界几十亿劳动力怎么办？是否能有良好的解决办法？坦率地讲，谁也没有。</p>
<p>即便没有好的方法，我们也要在观念上接受这样的事实，即越来越多的事情，人类将做不过机器。我们今后的决定，应该根据这个前提来做，只有面对现实，才能最终建设一个让所有积极向上的人都具有成就感和幸福感的社会。</p>
<p>虽然我们不知道如何在短期内创造出能消化几十亿劳动力的产业，但是我们很清楚如何让自己在智能革命中受益，而不是被抛弃。答案很简单，争当2%的人，而不是自豪地宣称自己是98%的人。</p>
<p>Google的AlphaGo，其实并不知道自己在下棋。但是，制造智能机器的人就不同了，他们可能只占人口的不到2%甚至更少，却在某种程度上控制着世界。</p>
<p>在销售商品的时代，我们认为越便宜越合算；到了提供服务的时代，我们发现忽然有了很多免费的服务，我们为此欢呼，但不久我们发现，看似免费的东西才是最贵的，因为我们在获得这些服务的同时交出了自己的自由。而只有当我们在失去自由，利益受损时，才会体会到自由的可贵。</p>
<p>在智能革命到来之际，作为人和企业无疑应该拥抱它，让自己成为那2%的受益者；作为国家，则需要未雨绸缪，争取不要像过去那样每一次重大的技术革命都伴随半个多世纪的动荡。</p>
<p>这将是一个让我们振奋的时代，也是一个给我们带来空前挑战的时代。</p>
<h2 id="5分钟看懂《智能时代》关键问题解答。"><a href="#5分钟看懂《智能时代》关键问题解答。" class="headerlink" title="5分钟看懂《智能时代》关键问题解答。"></a>5分钟看懂《智能时代》关键问题解答。</h2><p>小悟空  2016-08-08 17:50:14</p>
<p>纵观全书，作者对几个智能时代关键问题做出的解答。</p>
<p>Q1:为什么说数据是人类建造文明的基石？<br>Answer：“观天象，辩农时”“千里之外，运筹帷幄”自古以来，人类观察现象，获取数据，发现规律，指导决策行为。人类认识自然，推动经济、社会发展的行为不出乎此。</p>
<p>Q2：为什么智能革命在今天爆发？<br>Answer：移动物联网时代的到来，每个人每天产生大量数据呈爆发式的增长，奠定了数据量的基础。通过大数据挖掘出的强相关关系取代工业时代根据公式定理确定的因果关系，大大提高了决策正确度和速度。同时促使世界一流公司计算机运算速度、数据存储技术与数据挖掘技术的突破性进展。</p>
<p>Q3：以大数据为基础的智能时代的商业模式是什么？<br>Answer：以史为鉴，大数据资源将像水和电一样，由专门的公司提供给全社会使用，而如何使用将成为关键。同时全社会将会经历现有产业+机器智能=新产业的大变革。事实上现在已经在大规模的发生。未来的农业：传统农业+滴灌机器人，喷水机器人。未来的体育：位于硅谷的NBA球队勇士队，根据大数据算法制定最优策略，几年时间从倒数变为冠军球队。未来制造业：特斯拉汽车工厂，全部由机器人操作。未来的医疗：个性化医疗，癌症治疗有望取得突破。未来的律师，记者，编辑等行业职位将被自然语言处理技术和大数据信息检索技术冲击。</p>
<p>Q4：智能时代对个人会产生什么影响？<br>Answer：每一次巨大的历史变革都是巨大进步，但也伴随着强烈阵痛。大批被新技术取代的工作岗位需要靠时间去消弥，一大部分人被历史抛弃，只有少部分人成为时代的宠儿，正如工业革命时代的大量手工工匠被机械工厂取代而难以谋生，互联网时代线下商业被电子商务冲击，这一次，吴军老师估计，这一次，只有2%的人能鲤鱼跃龙门，成为时代的宠儿。</p>
<p>我的思考：究竟哪些人不会被时代淘汰？<br>遵循原则——做机器不能做的事，同时要学会与机器合作。<br>1.复杂模式判断者：需要强大的思维逻辑和判断能力（高级工程师，科学家，警察）<br>2.创意工作者：为追求趣味，发掘人类爱好而创作（艺术家，作家，演员，跨领域知识牛人）<br>3.人际连接者：追求人与人之间联系的服务型工作（高端服务业，高端手工业，厨师，心理咨询师等)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s29142393.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;大数据和机器智能的出现，对我们的技术发展、商业和社会都会产生重大的影响。作者吴军在《智能时代：大数据与智能革命重新定义未来》中指出，首先，我们在过去认为非常难以解决的问题，会因为大数据和机器智能的使用而迎刃而解，比如解决癌症个性化治疗的难题。同时，大数据和机器智能还会彻底改变未来的商业模式，很多传统的行业都将采用智能技术实现升级换代，同时改变原有的商业模式。大数据和机器智能对于未来社会的影响是全方位的。&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="Big Data" scheme="http://aisee.me/tags/Big-Data/"/>
    
  </entry>
  
  <entry>
    <title>Munna Bhai M.B.B.S(2003)</title>
    <link href="http://aisee.me/2017/07/19/MyView/Movie/Munna%20Bhai%20M.B.B.S/"/>
    <id>http://aisee.me/2017/07/19/MyView/Movie/Munna Bhai M.B.B.S/</id>
    <published>2017-07-19T10:10:06.000Z</published>
    <updated>2017-07-19T10:35:52.027Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>Comedy</strong></p>
</blockquote>
<p><img src="https://img1.doubanio.com/view/movie_poster_cover/lpst/public/p2376388809.webp" alt=""></p>
<p>A gangster sets out to fulfill his father’s dream of becoming a doctor.</p>
<a id="more"></a>
<h1 id="Lage-Raho-Munna-Bhai-2006"><a href="#Lage-Raho-Munna-Bhai-2006" class="headerlink" title="Lage Raho Munna Bhai (2006)"></a>Lage Raho Munna Bhai (2006)</h1><p>Munna Bhai embarks on a journey with Mahatma Gandhi in order to fight against a corrupt property dealer.</p>
<p><img src="https://img1.doubanio.com/view/movie_poster_cover/lpst/public/p1726702357.webp" alt=""></p>
<p>甘地热潮正席卷印度全国，其中一个原因可以说是拜本片所赐。本片讲述黑道人物姆纳为了追求一名电台女DJ，讹称自己是大学教授，不惜恶补甘地生平，以便参加电台问答比赛。当他日刨夜刨时，甘地的鬼魂就在他眼前出现，教导他如何以非暴力手段应付人生逆境。在这出黑道人物追女仔的电影中，圣雄甘地的角色几乎由头演到尾，甘地的哲学和精神也贯彻了全片。本片在首都新德里开画一星期后，市政府以该片宣扬甘地追求真理和非暴力抗争，宣布该片可以豁免缴交娱乐税。同样地，印度中部切蒂斯格尔邦也因本片表扬甘地的价值观，具有教育意义，宣扬正面讯息，也给予该片免税的地位。</p>
<h2 id="如果一辈子只看一部电影"><a href="#如果一辈子只看一部电影" class="headerlink" title="如果一辈子只看一部电影"></a>如果一辈子只看一部电影</h2><p>  Daneestone  2011-05-22 05:53:35</p>
<p>如果人一辈子只能看一部电影，但是可以反复倒带看多遍的话，那我一定推荐《肖申克的救赎》。原因以后解释。</p>
<p>但是如果说人一辈子只有一次去电影院的机会，而且只有一部电影可选的话，那最保险，就是看印度电影，虽然不一定是要这一部。<br>－－－－－－－－－－－－－－－－－－<br>现如今，中国同胞很难理解印度电影。</p>
<p>印度没盗版盘卖，真的没有，我当年转遍了孟买所有角落都没找到。对贫苦的印度人民，看部电影就是种无比奢侈的享受，所以，一定要物有所值。你能想像么？从家里步行四个小时，来到装饰豪华的电影院，然后在短短三个小时里，一切汇萃于斯，看尽人间所有悲喜。</p>
<p>劳动人民的感情，就是平凡、简单、质朴，如果觉得印度感情戏很假，其实那只是因为自己很假。如果你的观众一生只得看一部电影，谁还敢故弄玄虚？追求内涵、玩深沉的话，去冰封雪覆的俄国看电影吧。来看印度电影，就得放下所有面具和包袱，投入地过把瘾，把自己长久以来郁积的所有不痛快，都稀释到这浓缩了全部人生的三个小时里去。</p>
<p>歌舞元素当然必不可少，音乐一起，戏院里黑丫丫的人头一起齐刷刷跟着节奏左右摆动，绝没一个观众摆错方向。一般只有在这种时候，你才会真正知道电影这种东西有多美妙，电影这东西为什么要在电影院里看。心底，暖洋洋的东西会缓缓流动。</p>
<p>香港制片专家蔡澜先生说“印度出品，必属佳片”。不过这几年宝莱坞受到金潮银浪的冲击，泥沙俱下，沉滓泛起，烂片也出了不少。只不过总体来说还是不错，这和中国电影工业正好相反。</p>
<p>我评价电影，受夏衍先生的影响：<strong>１.情节、２.表演、３.音乐、４.摄影</strong>，各给一星，如果有关乎心灵或是超越电影本身的东西，再加一星。</p>
<p>这部Munnabhai就是我吐血力荐给所有中国同胞的一部五星电影。不管社会有什么问题，人都应该极力克制和消除内心的愤怒与仇恨，代之以同情和公正。</p>
<p>人人心中充满恨的社会，是注定没希望的社会。恨永远是瓦解社会的毒药。别把责任推到别人或社会身上。生活中遇到挫折或者不公，那可能不是你的责任，但若心中充满恨，解决的责任就在你自己。</p>
<p>当然，甘地说了，别人打了你左脸，就不妨把右脸迎上去让他打。但如果右脸又被打了，那应该怎么办？这部片子给出的答案得很幽默很明白。</p>
<p>－－－－－－－－－－－－<br>林清玄说他最崇拜的三个人：茶神陆羽，六祖慧能，玄奘大师，这三个一流人物都是从人生最最底层出发，连基本的家庭都不完整，却最终影响了整个世界，并完成了普通人难以到达的境界。</p>
<p>他们共同的特色，就是拥有五种属于穷人的宝藏：每一餐都吃得下、每一晚都睡得着、随时笑得出来、处处无家处处家、不害怕生命的转弯。</p>
<p>于是我想起，这三个人都与印度文明渊源之深，三个人都有在佛院长大的经历。</p>
<p>我一直相信：中国人若能平视日本和印度，特别是虚心学习印度，多数国与民所面对的“中国问题”都可得解。</p>
<p>中国的文明自古以来就有吸收印度文明母乳的优良传统。印度大芒果，饱满多汁，营养丰富，为不可多得的物质精神食粮，认她作娘真不吃亏。美国就是一大杂种国家，喝百家奶长大的，所以壮。</p>
<p>到此打住，再扯下去了就没正经了，呵呵。<br>————————————————————————END</p>
<h2 id="甘地精神能解决问题吗？"><a href="#甘地精神能解决问题吗？" class="headerlink" title="甘地精神能解决问题吗？"></a>甘地精神能解决问题吗？</h2><p>  北京小秾  2011-03-25 08:01:30<br>这篇影评可能有剧透</p>
<p>转帖自wznm的博客<br><a href="http://blog.sina.com.cn/oolongwu" target="_blank" rel="external">http://blog.sina.com.cn/oolongwu</a></p>
<p>很久没正式看电影了，都是断断续续的，还好幸亏机顶盒有几个固定的电影频道，所以能在有限的休闲时间里面离电影不是很远。</p>
<p>昨晚换台的时候看到CHC家庭影院中播放的《黑帮大佬和平梦》，印度宝莱坞拍的，后来在网上查了一下，关于此片介绍的不多，更多的应该是此前中央六套播放过的《黑帮大佬医生梦》，估计此次和平梦应该算作是续集，不管怎么样，我觉得这两部已黑帮老大为主角的喜剧片仍然是值得推荐的，因为在笑过之后，有很多值得深思的回味，而这种回味虽然不是人性最深处，但却在你我的身上、身边、身后发生着，进行着。阿三的片子看过的数量扳起指头都数的过来，《阿育王》，《神猴》等等，没什么太多的印象，载歌载舞的内容很多，加上成龙在《神话》中引入的印度美女——玛利亚，大概也就这些了。</p>
<p>言归正传，和平梦讲的是一个专门搞拆迁暴力发家的进城务工者穆纳，迷恋上了孟买当地广播电台的女主播简娜，为了追求信仰甘地主义的女主播，将自己打扮成历史教授，恶补甘地的知识，去接近女主播及其收留的多位孤寡老人。由于看甘地的书太过痴迷，穆纳在自己的脑海中形成了甘地的形象，并以为甘地显灵在指导他帮助他，其实这都是他大脑中虚拟出来的形象而已，但却让跟随他的小弟——电圈搞得莫名其妙，尽管精神病医生指出了这个问题。但藉此精神支持，穆纳混进了广播电台成为与女主播的搭档，并用甘地主义开导不同的民众，得到更多声望。但穆纳昔日的兄弟大傻为了将女儿嫁入豪门，听从了豪门聘请的算命大师的意见，预将女主播简娜和老人们居住的小楼作为风水宝地收过来献给未来的夫家，以至于两个人闹翻并在后来的争斗中搞出不少笑话。最后，大傻的女儿在甘地精神的帮助下，承认了自己撒过的谎，并最终得到未婚夫的谅解，而大傻也幡然悔悟，将房子还给了简娜他们，并成就了穆纳和简娜眷属之合。</p>
<p>这部片主题诙谐幽默，轻松活泼，加上其中载歌载舞的段落和颇为养眼的印度美女，让观众觉得能很放松，尤其是穆纳和小弟电圈的对话颇为搞笑，虽然不及我们习惯的周星驰的无厘头，但颇具印度特色，简简单单的话语却让你不由自主的捧腹，加上中文配音员短促的发音和婉转的音调，着实是笑点百出，摘几段如下，</p>
<p>1、大傻问精神病医生：（穆纳）他到底是疯子还是流氓？医生答道：疯了的流氓。</p>
<p>2、穆纳和电圈因殴打大傻的保安后要向被害人道歉时被关进了监狱，电圈抓着铁栏杆说：我拆了115套房子，打断了206根骨头，都没有事，现在为了向一个人道歉，居然被抓到这里来了（颇有点警察与赞美诗似的黑色幽默）；穆纳跟电圈说，甘地被抓了很多次，抓多了声望就提高了，城市以甘地命名，给甘地塑像，头像印在钱币上，我们这才抓进来一次，自然没什么机会，以后要多进来几次，进来多了，我们的声望就提高了，以后就可以以我们的名字命名城市，给我们塑像，把我们的头像印在纸钞上，你看，叫穆纳城、电圈城（。。。实在很无语的逻辑）。</p>
<p>当然这部电影反映的不仅是恶作剧和搞笑，其实也反映出灰常多的社会现象，而这些现象实际与我们国家的一些情况灰常类似：</p>
<p>1、空巢老人。老人之家是简娜收留无家可归以及子女不愿赡养的老人的地方，其中一个老人的感慨，我觉得很震撼，我以前在一间屋子里拉扯大四个孩子，现在四个子女有了四间屋子，却没有我的地方了。。自然，我国城市、农村的空巢老人现象同样普遍。</p>
<p>2、农民工。穆勒和电圈是进孟买寻梦的农民工，在两人失意准备返家的途中，穆勒还问电圈，你现在还会种地吗？电圈说我不会，但我们可以去给他们讲甘地。</p>
<p>3、封建迷信。大富人家的亲事要看生辰八字，大傻的女儿就是因为被算命大师认为是克夫命而差点被拒之门外，即便是想傍大款，光是外貌是不够的。当然，穆勒和电圈戏弄并痛殴算命大师也算是导演对这一封建传统的痛击。</p>
<p>4、亲情。其实这跟前面一个差不多，没有什么能比亲情更重要。电影中的年轻人瞒着父亲去炒股，将准备买房的70万卢比赔光了准备去卧轨自杀，后来打电话向电台告别的时候被劝阻，得到了父亲的谅解并找到了自己生存下去的途径。</p>
<p>5、拆迁。为了将老人之家那块风水宝地据为己有献给未来的夫家，大傻带着一帮人前去抢房子，采用暴力拆迁的手段。。。此处省去200字</p>
<p>6、贪污腐败。为了解决一个退休教师被长期拖欠的养老金，穆纳告诉这个老人，在开放的办公室将自己身上所有的东西都奉献给那位贪赃枉法的公务员，并逐一报出自己哪些衣服、眼镜的价值，告诉这名贪官我为了贿赂你给你的物品的价值，这一举措立竿见影，让那名贪官不得不把养老金还给老教师。</p>
<p>7、主流道德标准和价值观的削弱。这部电影围绕的是对甘地主义的宣传，提倡在浮躁的社会中，静心平气的协商问题，虽然不知道国父在印度社会的地位有多高，但也能明确其在很长一段时间主导了印度的主流价值观，但现在似乎这样的支柱找不到了，取而代之的是追名逐利和无处不在的社会暴力。影片借助一个黑帮老大的转变，其实也是在呼吁一种传统价值观念的回归，诚然社会的快速发展难免出现很多不良现象和矛盾，在这些现象的出现后，如何去进行疏导，印度人还希望能够通过找到甘地来唤醒民众，尽管甘地的图书馆依然门可罗雀。那么回想我们自己，实际又比印度能强多少呢？</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Comedy&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/view/movie_poster_cover/lpst/public/p2376388809.webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;A gangster sets out to fulfill his father’s dream of becoming a doctor.&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>如何变得有思想</title>
    <link href="http://aisee.me/2017/07/06/MyView/Book/how-to-become-a-man-of-wisedom/"/>
    <id>http://aisee.me/2017/07/06/MyView/Book/how-to-become-a-man-of-wisedom/</id>
    <published>2017-07-06T14:12:18.000Z</published>
    <updated>2017-07-06T14:16:24.225Z</updated>
    
    <content type="html"><![CDATA[<p><strong>“美好的事物值得付出、等待和分享”</strong></p>
<p><a href="https://book.douban.com/subject/27023900/" target="_blank" rel="external">如何变得有思想</a><br>        副标题:阮一峰博客文集<br>作者：<a href="https://book.douban.com/search/%E9%98%AE%E4%B8%80%E5%B3%B0" target="_blank" rel="external">阮一峰  </a><br>豆瓣评分：7.6</p>
<p><div align="center"><br><img src="https://img3.doubanio.com/lpic/s27969691.jpg" width="398" height="512" alt="personal photo"><br></div></p>
<blockquote>
<p>阮一峰<br>生于1976年，在上海长大。经济学博士，当过老师。在校期间自学网页制作，直至成为专业的开发者。自由软件和开源运动的坚定支持者。平时喜欢读书，上网，看电影和散步。出版有译著《黑客与画家》、《软件随想录》，专著《ECMAScript 6入门》。。</p>
</blockquote>
<a id="more"></a>
<p>目录  · · · · · ·<br>| 第一辑 | 观　　点　　1<br>如何变得有思想　　2<br>人生只有900个月　　5<br>生命中那些虚无的期待　　6<br>为什么给坏人辩护　　8<br>为什么要容忍错误言论　　9<br>现代人为什么焦虑　　11<br>暴力的根源　　13<br>不正义的法律，不服从的公民　　14<br>这鸡蛋真难吃　　17<br>波许教授的《最后一课》　　18<br>技术类专业和思想类专业　　23<br>硕士学位的贬值　　24<br>学术著作与可读性　　28<br>决定，还是作决定　　29<br>詹宏志谈教育、阅读和出版　　32<br>石油和未来的世界经济　　37<br>内华达州如何发展经济　　40<br>富爸爸，穷爸爸　　44<br>自我与自由　　47<br>体制与个性　　48<br>进步与贫困　　50<br>政府为什么会膨胀　　53<br>利率和职业　　54<br>限制房租对谁有利　　56<br>世界上最稀缺的资源　　58<br>谁来养活中国　　59<br>米兰多拉《论人的尊严》　　64<br>人生真相　　65<br>活着的三个理由　　67<br>卡耐基人际关系指南　　68<br>人类的心理行为模式：《影响力》笔记　　71</p>
<p>| 第二辑 | 文　　学　　77<br>骆一禾《世界的血》　　78<br>屈原《渔父》　　80<br>A Lonely Drifter Off to See the World　　82<br>春天，想起海子　　84<br>卡尔维诺《树上的男爵》　　90<br>爱好读书的强盗　　93<br>卡尔维诺《看不见的城市》　　95<br>托马斯?林奇《殡葬人手记》　　96<br>江声浩荡　　99<br>两封信　　101<br>阿特伍德《盲刺客》　　105<br>贝克特《等待戈多》　　107<br>王尔德　　109<br>济慈的《夜莺颂》　　111</p>
<p>| 第三辑 | 历　　史　　117<br>《英国简史》的序言　　118<br>胡适的三个主义　　119<br>胡适的改行　　124<br>弱与力　　127<br>土豆和清朝农民起义　　128<br>李鸿章百年祭　　131<br>孙中山的三种革命　　135<br>鲁迅是乐观主义者吗　　137<br>十年书剑皆抛却，一寸丹心半似灰　　140<br>失败的总和：读《黄河青山：黄仁宇回忆录》　　141<br>马悦然回忆录　　148<br>曾国藩家书　　149<br>什么是边际　　150<br>奥威尔：在神化和真实之间　　152<br>作者希特勒　　157<br>爱因斯坦的私生活　　164<br>美国建国的宗旨　　177<br>一个美国政治家的理想　　179<br>埃德蒙?伯克　　181<br>梵高的星星为什么如此明亮　　188</p>
<p>| 第四辑 | 科　　技　　189<br>比尔?盖茨和理查德?斯托曼　　190<br>论文的版权属于谁　　193<br>林纳斯?托瓦兹自传　　198<br>丹尼斯?里奇　　206<br>迈克尔?S. 哈特　　209<br>痛苦造就性格　　211<br>大教堂和集市　　217<br>互联网和改造社会　　220<br>《黑客英雄》书摘　　223<br>乔布斯的告别　　227<br>苹果公司与分工原理　　231<br>奈斯比特《大趋势》　　236<br>熵的社会学意义　　241<br>一切皆有可能　　247<br>冬天有没有蟋蟀　　251<br>电椅的故事　　252<br>美丽新世界　　254<br>禅与摩托车维修艺术　　258</p>
<p>| 第五辑 | 影　　视　　269<br>美国电视剧《英雄》　　270<br>复仇者V　　272<br>月圆之夜　　274<br>罗马假日　　275<br>一个寻找作者的读者　　278<br>美丽心灵的永恒阳光　　284<br>黑客帝国　　294<br>| 代后记 | 为什么写博客　　295<br>另附独立诗集《路过天堂》</p>
<p><a href="https://book.douban.com/review/7622660/" target="_blank" rel="external">读阮一峰的博客集有感</a><br>在朋友的推荐下看了阮一峰的博客，一个70后的经济学博士，自己创建了一个博客，十年来写了一千多篇博文，内容涵盖的范围非常广，文学、历史、科技、影视等等都有。一开始只是写给自己看，后来看的人越来越多，最近博客集汇总出了一本书叫《如何变得有思想》。（他还翻译过一些书，比较有名的是《黑客与画家》）</p>
<p>我把其中的大部分都看了，感觉还是挺触动。不是因为他写的东西有多出彩，恰恰因为他的文笔很普通。我有一个朋友是中大中文系的硕士，她最近自己开了一个微信公众号，不时原创些文章分享，非常惊叹她能比较轻松地写出如此出色的文字表达。在我身边还有很多文字表达能力很强的人，然而忙碌的生活让大家都极少使用这种记录、沟通方式。阮一峰的很多博文都只是从一本书、一部电影或者一段经历的感受和思考，同样让我触动的并不是其分享有多深度，而恰恰却是大部分都只是广泛浅显的涉猎。但从这些广泛的分享和记录中，能感觉到他是一个对生活有着好奇心、努力独立思考的人。一个普普通通的人，没有你觉得遥不可及的天赋，但以这样的探索、求知、向善的方式生活着，我觉得已经比许许多多的人的生活方式有趣得多。这便是最让我触动的。十年下来，他这些点滴平凡的分享，给了遥远的素未谋面的人，比如我，一些乐趣与共鸣，这样的奇妙力量总是让我感觉敬畏。</p>
<p>《如何变得有思想》显然不会成为流芳千古的卓越作品，它对一个人的意义最大，那就是阮一峰自己。“这本书涵盖了我的过去十年。十年前，我是学生；十年后，先是老师，后来又变成专业的互联网开发者，真是恍然如梦。这个blog从只谈文学，变成了只谈技术。时代的变迁，就这样投射在我的人生上。记得交稿的那一天，有点失落。这本300多页的书，为我前面的人生画上了句号，以后不会再这样写文章了。”</p>
<p>我对记录的理解和以前不大一样，有几年我也长期写日记，累积也有近千篇（很多是流水账般的记录）。那时候对记录的理解更像是一种自我概念、形象的强化，存在感的索求，希望有证据确定自己真实地活过。现在却越来越觉得唯有当下才是有意义的，唯有当下的这个自己才是真实的，而对过去的记忆是为了更好地倾听、了解此时此刻的自己，那个内心充斥恐惧、喧闹、焦虑、胆怯的自己。奥普拉回忆童年时光说：“我有书、有家里缝的洋娃娃、有家务活，我还会常常给农场里的动物起名字，跟它们说话。我坚信，所有那些独处的时光对决定我后来成为什么样的人极为关键。”“我坚信，弥合过往的创伤是人生最艰巨也是最值得的挑战。知道你是何时及怎样被塑造成现在的你，然后你才能改变那些影响。这么做是你自己的职责所在，不关他人的事”。</p>
<p>现实中，阮一峰只是一个普通的博士、老师、员工，他既不是马云、李开复等一路开拓的典型商业成功者，也不是像《哈利波特》的作者罗琳那样非典型的，有着超乎常人的天赋，默默地坚持，最后在某个领域取得了巨大的成就。我们听了好多这些典型或非典型的成功人士的故事、演讲、分享，知道好多奋斗梦想的道理。但客观的现实是，我们绝大部分人，最后并不会成为像他们中的任何一个，而是一辈子都只会是普通平凡的人。我们如何在一个属于普通人的，平淡繁琐、有时觉得重复枯燥的生活里过得更有意思一些？如果你从社交媒体里的吃喝玩乐的分享去寻求答案，恐怕会让你失望。</p>
<p>新精英生涯创始人古典将兴趣分为三层，一层是感官兴趣：通过直观的感官刺激产生的快乐，我觉得身边很多人总是难以自控地就煲剧、胡乱上网一整天、还有过度沉溺于美食、购物，过后却有某种空虚失落感，都属于这类。第二层是认知行为参与的兴趣，也就是有学习加入其中的乐趣。例如有的人在制定自由行的旅行过程中学到了很多东西，因为喜欢喝葡萄酒学到了更多品酒的知识等等。这样的兴趣更加持久稳定，学得越多–得到的乐趣越大–又有更大的动力去继续学得更多更深，形成一种良性循环。第三层则是志趣，与自己的价值观相符合的乐趣，例如爱迪生认为“我的人生哲学是工作，我要揭示大自然的奥秘，并以此为人类造福。在我们短暂的人生中，我不知道还有什么比这种服务更好的了”，这样的价值观给了他持久的毅力投身于发明的艰苦中，并且乐在其中。</p>
<p>　　生活在社交媒体盛行的时代，我们享受着它巨大的积极意义，但习惯了从无穷无尽、频率切换、一个接一个的的碎片化的新信息感受瞬间的满足感后，似乎会让我们渐渐失去深入思考、创造性思考的能力。古典说“当你的大脑吃惯街边麻辣烫，就再也永远无法感受到食物细致的原味了。当你习惯一分钟的烟花，你再感受不到整夜的宁静星空。”</p>
<p>大部分人的大部分时间都流逝在第一层的快乐中，暂且不说追求第三层的快乐，仅仅只要将大部分的时间用在，第二层次“有学习参与进来的兴趣”，我想我们就能得到更有深度、持久、稳定的喜悦感。《如何变得有思想》展示的就是这样一种生活方式，坚持学习、独立思考、怀着好奇去探索。</p>
<p>我很谢谢这本博文集的记录与分享，所以将以上分享予你们。如果你有一点好奇也有一点空闲，可以搜其博客看看。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;“美好的事物值得付出、等待和分享”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/27023900/&quot;&gt;如何变得有思想&lt;/a&gt;&lt;br&gt;        副标题:阮一峰博客文集&lt;br&gt;作者：&lt;a href=&quot;https://book.douban.com/search/%E9%98%AE%E4%B8%80%E5%B3%B0&quot;&gt;阮一峰  &lt;/a&gt;&lt;br&gt;豆瓣评分：7.6&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s27969691.jpg&quot; width = &quot;398&quot; height = &quot;512&quot; alt=&quot;personal photo&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;阮一峰&lt;br&gt;生于1976年，在上海长大。经济学博士，当过老师。在校期间自学网页制作，直至成为专业的开发者。自由软件和开源运动的坚定支持者。平时喜欢读书，上网，看电影和散步。出版有译著《黑客与画家》、《软件随想录》，专著《ECMAScript 6入门》。。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Dangal</title>
    <link href="http://aisee.me/2017/07/06/MyView/Movie/Dangal/"/>
    <id>http://aisee.me/2017/07/06/MyView/Movie/Dangal/</id>
    <published>2017-07-06T14:00:18.000Z</published>
    <updated>2017-07-06T14:19:19.428Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>Dream、Education、Persistence</strong></p>
</blockquote>
<p><img src="https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ4MzQzMzM2Nl5BMl5BanBnXkFtZTgwMTQ1NzU3MDI@._V1_UY268_CR4,0,182,268_AL_.jpg" alt=""></p>
<p>Former wrestler Mahavir Singh Phogat and his two wrestler daughters struggle towards glory at the Commonwealth Games in the face of societal oppression.</p>
<p>Director: Nitesh Tiwari<br>Writers: Piyush Gupta, Shreyas Jain | 2 more credits »<br>Stars: Aamir Khan, Sakshi Tanwar, Fatima Sana Shaikh | See full cast &amp; crew »</p>
<a id="more"></a>
<p><a href="https://movie.douban.com/review/8289388/" target="_blank" rel="external">国家金牌意识的觉醒和真实的印度妇女地位</a></p>
<p>版权归作者所有，任何形式转载请联系作者。<br>作者：Microuniverse （来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8289388/" target="_blank" rel="external">https://movie.douban.com/review/8289388/</a></p>
<p>2016 年里约奥运会，joseph schooling 击败菲尔普斯，拿下了新加坡建国以来的首个金牌。在我们眼里，奥运金牌早已不是什么稀罕物，而在只有五百万人口的弹丸新加坡，Schooling就是国家英雄一般。</p>
<p>回国后，新加坡给他安排一场庆祝胜利的游行。Schooling站在敞篷双层巴士的最上层，巴士载着他缓缓开过新加坡的一条条主干道。街道两旁站满了翘首期盼的民众，巴士开过的时候，很多人还一直追着巴士跑。这种国宝级别的待遇和关注度，我在新加坡只看过一次，那就是2015年李光耀去世。李光耀的灵柩同样缓缓地经过了一条条的主干道，街边一样满满的人群注目着。只不过上次是目送一个英雄的离开。这次是迎接一个英雄的到来。</p>
<p>Schooling的夺金究竟对这个国家产生了多大的影响？首先，它让新加坡人民跟过节一样欢欣了好久。其次，据说每个游泳馆的少年游泳班爆满，尤其是蝶泳。因为Schooling拿下的是100米蝶泳的冠军。论偶像的力量！最重要的，一个声音，一种意识悄然地在新加坡民众之间萌发出来，那就是：新加坡人也可以拿奥运冠军！突然间，大家就觉得金牌并不是那么遥不可及了。但是“”我（们）也可以“”这个声音，这个意识让新加坡人足足等了51年。</p>
<p>新加坡这么富足的一个国家，运动方面的投资从来都是不差钱。为了激励运动员夺奖牌，心甘情愿地拿钱去砸运动员们。2016年里约奥运会，中国奥运金牌据说只有20万人民币的奖金。而2008年奥运会，依靠转新加坡国籍的中国乒乓球运动员，新加坡拿下了银牌，当时就给运动员接近四百万人民币的奖金。当然，这个奖金要跟教练分点。但就算是在这样砸重金的激励制度下，新加坡在2016年之前都没出现过真正由新加坡人夺牌的成绩。</p>
<p>奥运种子选手都是万里挑一，想想新加坡的人口基数，跟中国比起来，能挑的范围也不大。但挑出来的也不会体育素质差。奥运会28项比赛。要是不擅长田径，可以玩器械；不擅长陆地的，可以玩水里的。总能找到契合自家国情和人种特点的运动进行一搏。新加坡运动史上也不乏表现出色的运动员。但对于国际比赛夺冠，关键还是大家的自信没有出来。这种长久以往的“我不可以”魔咒一直打不破，直到Schooling的出现。</p>
<p>设想一下，连新加坡这种万事具备的国家，要培养出“我（们）也可以”的意识都需要50年，更别说条件更复杂和落后的印度。</p>
<p>根据维基百科，印度在奥运会上并不是无金，只是很少。过去十年，只有在2008年拿过一枚男子射击金牌。为什么？印度人总体看上去并不羸弱。印度种姓里面还有一支是专门的武士阶层，自古以来，保家卫国，骁勇善战。特别是他们的锡克族，男人高大魁梧，雄壮有力。拉去扔个铁饼什么的，妥妥的。但印度就是没有金牌。</p>
<p>当然印度的当今体育状况跟政府的不作为大有关系 （电影里也有一个场景讽刺这个）。但还有另外两个绕不开原因。一个是板球运动在印度的盛行；另一个就是女性地位问题。</p>
<p>板球在印度不仅是国球，还是国体。体格强健的男孩子们，早早地就投入了板球的参与和训练中。在印度，板球运动员就像宝莱坞明星一样。成为顶级运动员还可以坐收无尽的财富和名望。在赛场上，没有人论你的出身，只看你的表现。这于是成为了很多男孩子想要摆脱穷困生活的动力。而其他一些体育项目，因为相较板球运动而言，缺乏政府支持，媒体追捧，观众关注，投身的运动员越发地不多。</p>
<p>在男人们都前仆后继地奔向板球时，印度的女性运动员们正悄悄地崛起。2016年里约奥运会，印度只斩获两枚奖牌，一铜一银，羽毛球和摔跤，但都归功于女性运动员的杰出表现。而且，越来越多的印度女性正投身到职业体育中来。在这里，一定要谈一下印度的女性地位问题。</p>
<p>其实我们中国人对印度所知甚少，也经常以固有思维去偏见地理解印度。印象里都是时常在网上看的什么这儿，那儿又发生强奸案了；女方天价嫁妆，一旦嫁人就只能在家伺候夫家人，还要被夫家人家暴之类的，在我们看来简直要落后到一世纪前去了。</p>
<p>首先，以上的这些都是还会发生在印度的事实。但是它不代表印度的全部。我们看印度就像很多年，西方世界看中国一样。那个时候西方媒体跑到中国，挖掘到了一个农村在买妻买儿的新闻，就跑回去大肆宣传，搞得西方世界以为中国落后得跟什么似的。但其实，现在中国农村有些地方还是在买妻买儿。</p>
<p>印度的历史文化境况跟中国完全不同。中国的统一性和一致性比印度高得多。 自古以来，印度次大陆上存在多个独立的王国，每个王国因为地缘差异，发展出了各自的语言和文化，它们在历史的进程中演变成了如今的印度各邦。然后因为历史原因，印度国内的差异性因南北而定，因邦而定，因宗教而定，因文化而定（由古代种姓演变而来），等等。非常的复杂。这就是为什么印度是世界上最具有多样性的国家。也就是说，以偏概全的方法在印度最不适用。基于这个多样性的认识，才可以进一步了解印度女性到底地位怎么样。简单来说，南部比北部好，城市比农村好。</p>
<p>印度莫卧儿王朝，是中亚后裔，自阿富汗南下入侵印度在16世纪至19世纪建立的帝国 （维基百科）。莫卧儿帝国的统治者信奉伊斯兰教，建都在印度北部，德里就是其中之一。所以新德里边上的泰姬陵就是极具伊斯兰教建筑特色的皇陵。虽然全盛时期，莫卧儿王朝也占领了多是印度土著的南部，但天高皇帝远，南部并没有受其文化政治过多的影响。而如今，南部相较北部，思想也是更为现代开明。反而是，北部，本土的印度教文化被伊斯兰教慢慢地影响，其中就包括伊斯兰教中男尊女卑的教义。早在古印度吠陀时代，印度的两性地位非常平等，但后来与其他文明一样，随着男女社会分工的变化，妇女在社会经济生活中处于从属地位，妇女地位慢慢有降低，伊斯兰教的入浸，加剧了妇女地位的下滑。后来英殖民地时期，本身两性地位也不平等的英国也没有在女性地位这个问题有过什么作为。印度女性就这么水深火热地生活了几百年直到新世纪的到来。</p>
<p>印度的经济在过去几十年有突飞猛进的发展，但现代化大都市还是屈指可数。印度都市女性，普遍受教育的程度都不错，其中高知女性占相当的比例。社会地位基本上于男性旗鼓相当。印度不仅迎来第一位女总理英迪拉·甘地，还有差点也称为总理的索尼娅·甘地 （他们都来自尼赫鲁甘地家族），还有大批的女性高层活跃在印度商界和工业界，美国美林银行印度－主席Kaku Nakhate，埃森哲咨询印度－主席Rekha Menon，印度国家银行主席－Arundhati Bhattacharya 等等（<a href="http://www.businesstoday.in/powerful-businesswomen）。" target="_blank" rel="external">http://www.businesstoday.in/powerful-businesswomen）。</a></p>
<p>但是，情况一到经济条件比较落后的区域就不那么乐观了。特别是北部农村，缺乏教育，因循守旧。有些地方儿童婚姻至今还存在。Dangalz里面的摔跤家庭就来自靠近新德里的一个城邦的农村。况且电影里父亲对女儿的摔跤启蒙还是差不多二十几年前。可想而知，那个时候他要顶住多大的舆论压力对女儿进行摔跤训练，而一个农村女孩子从事职业体育是一件多么惊世骇俗的事情。这就是为什么父亲在决赛前夕要对女儿说那番话，赢得金牌就能告诉那些想要改变自己命运的女孩们：“我（们）”也可以。</p>
<p>2016年里约奥运会后，印度国内对自己的体育表现开始进行深深的反省，毕竟作为一个人口大国，只拿回了两枚奖牌还是件很丢脸的事实，而且与自己在国际树立起的崛起经济体形象不符。而阿米尔汗的Dangal恰时地上线正契合了印度人民迫切想要在体育赛事上重新证明自己的愿望，想必全国上下都被这部电影给激励到了。论名人的社会责任感！</p>
<p>关于演员，想必大家已经知道了，这位51岁的大叔为了扮演电影里的父亲，亲自上阵，增肉甩肉的励志故事。不仅是他，扮演他的女儿们的四个姑娘也是相当出彩。最喜欢里面扮演二女儿的那个小演员。圆嘟嘟的脸配一副总是懵圈的表情，萌萌哒。当时看完电影，第一件事就是去查这些姑娘是业余摔跤选手还是专业演员。因为，里面的比赛场景太逼真！太高难度了！就跟看真正的摔跤比赛一样惊险。结果，没想到，这四个姑娘都是演员而已。为了演好摔跤的镜头， 进行了为期9个月，每周6天，奥运选手级别的训练。我只想说，大写的服！顺便鄙视一下国内那些靠抠图，替身圈钱的明星们。</p>
<p><a href="https://movie.douban.com/review/8282890/" target="_blank" rel="external">一枚改变历史的金牌与现实数据</a></p>
<p>版权归作者所有，任何形式转载请联系作者。<br>作者：Amberose（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8282890/" target="_blank" rel="external">https://movie.douban.com/review/8282890/</a></p>
<p>电影散场后，我急匆匆走出放映厅，打开手机查询电影中人物的真实故事<br>Geeta Phogat：第一位赢得英联邦运动会的印度摔跤选手（2010, 55公斤级），也是第一位取得夏季奥林匹克运动会参赛资格的女性摔跤选手（2012）<br>Babita Kumari：在2014格拉斯哥英联邦运动会55公斤级女子自由式摔跤获得金牌，两次获得英联邦摔跤锦标赛金牌（2009 51公斤级 &amp; 2011 48公斤级）<br>Vinesh Phogat （Geeta 和Babita的堂妹）：在2014格拉斯哥英联邦运动会48公斤级女子自由式摔跤获得金牌<br>Ritu Phogat （Geeta 和Babita的三妹）：在2016新加坡英联邦运动会48公斤级女子自由式摔跤获得金牌</p>
<p>可以说Phogat家族改变了印度女子摔跤项目的历史，而这一切都离不开父亲Mahavir Singh Phogat的严格训练与关爱</p>
<p>父亲做为教练的时候是非常无情的：每天早上5点钟起床训练；让平时穿长袍的小姑娘穿上男孩子式的短裤；无视女儿们的苦苦哀求剪去她们的长发……<br>父亲作为父亲的时候是极其温柔的：因为素食主义的母亲不愿意触碰任何荤腥，从来不知如何烹饪的父亲按着烹调书制作鸡肉；因为小村里的训练场不允许女性进入，于是便在自家农田里亲手开辟出一块训练场；为女儿们在辞掉工作，专心陪Geeta参加全国比赛；在Geeta受到学校教练不公平待遇的时候，长途跋涉来到学校附近租房子，以合适Geeta的方式训练她，并为她烹饪营养丰富的食物。</p>
<p>摔跤运动员的训练辛苦么？当然辛苦，没有一项运动能够轻易地获得金牌，人们大多数只能看到运动员站在领奖台上的风光时刻，而很少有人会了解他们背后的辛酸。更何况Phogat家族来自印度偏僻小村庄，那里迷信各种生男孩的偏方，并且女性充满偏见。</p>
<p>当Geeta和Babita为了要参加小伙伴的婚礼而逃掉训练的时候，父亲生气了，这也是他唯一一次对女儿们发火。<br>几个小姑娘在婚礼后坐在一起，默默地流眼泪，Geeta和Babita抱怨父亲太过严厉，不让自己过轻松的生活，只因逃掉一次训练就大发雷霆，根本不想要这样的父亲。<br>一直面无表情，婚礼自始至终没有说过一句话的小新娘开口了：“我倒是希望能有这样的父亲，能为我的未来着想，而不是从小就只让我做家务和烧饭，当我一满14岁就匆匆将我嫁给从未见过面的男人，仿佛我从来没有存在过一样，接下来我就要过一辈子与扫帚与炉灶相依为命的生活。”<br>小新娘的话令Geeta和Babita顿悟了，从此之后，姐妹俩再也不抱怨训练的辛苦，而是主动为了自己的未来而拼搏。</p>
<p>此处补充一段数据：<br>印度的童婚比例高达47%，全世界每年有1500万女孩被父母用来换取聘金，印度政府1929年通过禁止童婚法 ，1978年印度政府把男女婚龄提高到21和18岁 ，均未奏效。根据联合国统计，妊娠和分娩并发症是发展中国家15至19岁少女死亡的主要原因。</p>
<p>在这种大环境之下，Geeta在2010年德里英联邦运动会上获得的那枚金牌，就成为了历史上的非常重要的里程碑，千千万万的女孩的命运将会因此而改变。虽然说摔跤的训练艰辛而漫长，但是这是一项能够养活自己的技能，这是一个受人尊敬的行业，这是能够让那些女孩儿们逃离死神的解药。</p>
<p>顺便说一下，以下几个国家会在电影院上映这部电影：印度、美国、英国、科威特、荷兰、挪威、巴基斯坦、俄罗斯、新加坡、中国</p>
<p>最后再补充一段后续：<br>2016年11月20日，28岁的Geeta与23岁的Pawan Kumar结为连理，她的丈夫也是一位摔跤运动员，这场婚礼有超过2000人出席，Aamir Khan本人也出席了。</p>
<p>电影中母亲问：“女儿们这样训练，以后没有男人愿意娶她们怎么办？”<br>父亲乐呵呵地回答：“等她们变得强壮了，好男儿随她们挑。”</p>
<p>看来父亲说得没错。</p>
<p><a href="https://movie.douban.com/subject/26387939/" target="_blank" rel="external">驳——某位论《摔跤吧！爸爸》是一部令人恶心的作品</a></p>
<p>版权归作者所有，任何形式转载请联系作者。<br>作者：奋斗的burning（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8293417/" target="_blank" rel="external">https://movie.douban.com/review/8293417/</a></p>
<p>你说这是一部带剧毒的电影，很高兴，我看了还能头脑清醒的站在这儿和你好好说道说道。</p>
<p>不知道你有没有认真看完这部电影，哦，是“如坐针毡”呢，我想是没有仔仔细细看过吧。大概才看了十来分钟就兴奋得不知所以吧，哇，又发现一个好的论点，跟发现了一座金矿似的。</p>
<p>在你沉浸如何将这一观点继续延伸下去的兴奋当中时，可曾注意到电影中的“父亲”和妻子早就有了协议，你那所谓的“精神阉割”是以一年为期的，而这一年既是对于“父亲”金牌梦的延伸，也是这对姐妹做命运改变的尝试。</p>
<p>之后，不知你可曾注意到当这对姐妹在训练期间偷懒去参加了一个好朋友的婚礼时，哪位即将嫁为人妇的新娘说得那番话：从此相夫教子，一辈子和瓶瓶罐罐打交道。并不是说这样的工作、这样的生活就很低贱，而是因为这不是大多数印度女性自主选择的命运，是在大众认知下被迫选择的，其中就包括很多印度女性的自我意识，这才是最可怕的（你的自由价值观怎么没注意到这点呢，相比父亲的个人意愿，这种全体性的沉眠才是最可怕的吧）。</p>
<p>好，接着唠。</p>
<p>从好朋友婚礼回来以后，你可曾看到，这对姐妹有多大的心理触动，自此以后他们不仅仅意识到自己的命运应该不应该被改变，还知道自己有这样的机会，那就是他们爸爸强迫她们训练的摔跤。所以第二天，这对姐妹主动起床训练。请问还是你口中的父亲意愿的强加吗？</p>
<p>你可看到在姐姐第一次参加摔跤失败之后那种强烈的求胜之心，之后当她一次次夺得冠军之后那发自内心的欢喜和乡里的拥戴，这份荣誉感是那个所谓梦想自由就能抹除的？<br>如果这也算，那我无话可说，但恕我自言，要是没有这份强迫，这对姐妹只会成为她们母亲的翻版。那是什么样的女性呢？当父亲要给女儿炒鸡肉补充营养时，不准他进厨房，还怎么说的？甚至不准父亲在外面炒鸡肉用的那口锅进她的厨房，呵呵~</p>
<p>“作为一个重要的“精神阉割”隐喻，电影里拉米尔汗的女儿们是影片中唯一的短发女性，当大女儿青春萌动开始尝试逛街、化妆、留长发之后，她的运动事业就遭遇到了严重挫折，甚至丧失了妹妹的尊重。”这是你的原话，我姑且就认为这是你在电影中看到的东西。说实话，这我有点不敢苟同。我看到的是姐姐在进了国家体育馆之后，自我的放纵。</p>
<p>以前的她在父亲的督促下每天五点起来训练，所接触的训练是父亲在参加国际比赛之后总结的实战性技巧，进了国家体育馆之后呢，在新体育教练的要求下降低了训练难度，每天七点才开始训练，也格外注重技巧了，甚至在一起参加训练的朋友唆使下，渐渐地沉沦到逛街、化妆、留长发等等与摔跤训练不相干的事情上，分散了太多时间和精力。对了，在这期间，还和父亲发生了一次关于这样训练状态谁对谁错的冲突。决定胜负很简单，来一场摔跤就好了。最后，出乎意料，父亲居然败了，所以这说明了什么，父亲已经没有资格管她了。而妹妹既看到姐姐的自我松懈，也看到父亲其实是败在年老体弱上面（这有很多片外的故事，待会说），所以觉得此时的姐姐有些陌生，因此和姐姐在观念上有些矛盾，至于像你说的丧失了妹妹的尊重么？</p>
<p>如果说姐姐不喜欢摔跤，不看重比赛胜负，那我自没啥说的。但事实上姐姐在国际比赛场上落败，很失落。这说明姐姐很有胜负荣辱感，很喜欢摔跤的胜利带给自己的荣誉。但上天是公平的的，有什么的因就有什么样的果，精神自我松懈，训练的自我放纵，参加国际比赛，在强敌面前，也败得理所当然。</p>
<p>在妹妹的鼓励下，姐姐才哭着给爸爸打了电话，反思了自己，更承认了错误。最后结局也可以预见了，爸爸并没有怪姐姐，而是让姐妹重新恢复到以前的训练难度。最终在爸爸的鼓励和指导下，姐姐如愿以偿，取得了世界冠军，拿到了金牌。</p>
<p>这才是片中应有的逻辑，至于什么青春萌动尝试逛街、化妆之后，运动事业就遭遇到了严重挫折是什么玩意儿。既然你想拿世界冠军，那就请加倍付出和努力，否则还玩什么。这么简单的逻辑关系都没有搞清楚就出来误导大家~~哦，你可能还沉侵在兴奋当中，看见能支持自己观点的东西自然会断章截取下来，然后七拼八凑就行了。</p>
<p>文中还有其他的一些东西我就不一一辩驳了，连片中别国运动员颜值如何都可以延伸出一大篇来，我也只能五体投地！</p>
<p>说实话，这篇影评很有误导性，不管是文字还是图片，都是经过断截过的，都是为了拼凑出支持作者那几个论点的论据而已，相比影片中想要表达的东西，十不合一。</p>
<p>最后，我想说，《摔跤吧，爸爸》这部电影在各大评分网站的评分都非常高，本身就证明了这部电影的优秀。记住一句，能经得住大众考验的，十有八九必属精品。希望大家一定去看看这部电影，好与坏，都得亲自去体验体验不是~~相信我，不会失望的。</p>
<p>PS：这又是一部电影阿米尔汗主演的作品，相信大家对于《三傻大闹宝莱坞》不陌生吧，那就是米叔的经典代表作，而这次《摔跤吧，爸爸》轻轻松松刷掉了他以往影片的各项纪录。</p>
<p>说起米叔，作为一个演员，那就是论演员自我修养的最好诠释，一年只出一部电影，但凡米叔出品，必属精品。</p>
<p>简单说个，当初拍《摔跤吧，爸爸》时，米叔先把19岁的戏拍完了，然后从130多斤迅速增肥到近200斤，拍老年的戏，最后又在五个月内瘦身到140多斤拍壮年的戏。在各种硅胶等化妆道具大行其道的现在，这样的演员可以说是打着灯笼都找不到几个吧！其实这样橡皮人似的变化，艰苦就不用说了，还很伤身体，而米叔的解释是：用化妆道具很难找到肥胖的感觉，作为演员，我觉得那样不好。对了，可能大家还奇怪为何不按照少年，壮年，老年的顺序拍呢，米叔的解释是：那样的话，自己就没动力减肥了。哈~要知道米叔已经51岁了，膜拜</p>
<p><img src="https://img3.doubanio.com/view/thing_review/large/public/p458171.jpg" alt=""></p>
<p><a href="https://movie.douban.com/review/8555642/" target="_blank" rel="external">印度为什么会歧视女性？</a></p>
<p><img src="https://img3.doubanio.com/view/thing_review/large/public/p677363.jpg" alt=""></p>
<p>版权归作者所有，任何形式转载请联系作者。<br>作者：乌鸦火堂（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8555642/" target="_blank" rel="external">https://movie.douban.com/review/8555642/</a></p>
<p>由于参与了内部看片，所以这部电影很早就看过了，当时一直在各个平台上给小伙伴推荐这部电影，但没多少人搭理我这茬，也是郁闷。不过电影公映之后，电影火爆成这样，我个人是没有料到的。最初感觉这片内地破亿就很成功，没想到如今这片已经搞下了7亿，直接逆袭《银河护卫队2》 ，时至今日，电影排片还稳定在30%左右，对于一部公映3周的电影来说，绝对是长线生命力，整个5月的新片都成了炮灰上哪说理去？</p>
<p>照这样的势头，端午节这片都能有不错的排片，破10亿都有可能。还是那句话，不仅我没料到，引进方也没料到，王思聪也没料到（因为万达最初不给这片排片，最后打脸了）。</p>
<p>《摔跤吧！爸爸》这种表现绝对算得上是现象级。至于为什么火爆成这样，小弟这里不再赘述，因为已经不新鲜了，如今随便点开一则相关新闻或业内分析之类的，基本都在讨论。归根结底一句话，《摔跤吧！爸爸》的现象级表现，证明了内地观众对优质商业电影的渴望程度。</p>
<p>俺这里要说的，并不是推荐这片，我相信诸位早已经历了各种推荐，我就不再补充了。还没看的，赶紧去看吧，我刷了两遍，一次内部观影，一次院线买票，而电影院那场结尾之时观众自发鼓掌，我多少年没碰到这种现象了。</p>
<p>所以，这里要说的是，主要是一些题外话，那就是，这部电影的立意，在竞技与家庭，热血与温情之余，最大的主题，就是对女性的地位争取，而且是在印度这个特殊的国家之中。</p>
<p>曾经看过一些不太友好的观点，说这部电影是“男权思维”，“父权”凌驾于主题之上，父亲强迫两位女儿学习摔跤，将自己的梦想强压于下一代身上，跟我们的父母包办婚姻没什么区别。当然这种观点很少，而且一出来就被人喷了回去。</p>
<p>其实这种观点，是要具体问题具体分析了。这个故事如果发生在美国或者西方，这种观点其实可以一说，毕竟现在都追求解放思想，讲究个性张扬。但在印度，可就没那么简单了。</p>
<p>那么回到问题的本源，因为在印度，女性的地位不高？</p>
<p>什么是种姓制度</p>
<p>大概是在2年前，网上热炒了一阵关于印度强奸案的问题，相信小伙伴们还有印象，一时间各个网站都转载并评论这样的现象，当然后来也就不了了之。但并不是没有了，而是我们不关注了而已。强奸事件，在印度屡见不鲜，是女性地位低下的直接表现。</p>
<p>作为南亚大国，马上就是世界上人口最多国家的印度，凡是都要有个前因后果，在印度女性地位不高，是与民族文化和历史传统直接挂钩的。比如我国，我们经历了新中国的建立，经历了改革开放，一切与国际接轨，但历史文化传统依然继承了下来，这其中有精髓也有一定的糟粕，包括生孩子重男轻女，一定程度上也有。</p>
<p>与我国一样，印度有也有着几千年的历史，而且是一个宗教国家，继承下来的也有一部分封建残余，虽然大部分象征落后的传统已经被废除或者禁止，但几千年来根深蒂固的传统可不是一朝一夕就能清除的，这其中的代表，就是种姓制度。</p>
<p>大家都知道，佛教起因于印度（确切的说，是印度北部包括尼泊尔在内），但现在佛教在印度几乎找不到了，取而代之的是，印度教、伊斯兰教、以及锡克教（我们常见的那些把用头巾把头包成卷子状、留大胡子的形象就是锡克教，见下图）。这是由于古印度在历史上经历过两次入侵。</p>
<p>如今的印度，跟“四大文明古国”中的古印度几乎没有任何关系，这是个文化上比较“悲催”的区域，长期在印度占据统治地位的基本都是外来入侵者，早期的雅利安人，中期有陆续在中亚南下的穆斯林，近代有英国人。当外来侵略者征服国民的时候，对于印度这样的宗教国家，首先就是从教义上入手，印度教其实就是在此基础上诞生的，“种姓制度”就是印度教的观点。</p>
<p>简单而言，就是人种等级。</p>
<p>★婆罗门，第一等级，主要是僧侣贵族，垄断宗教特权。</p>
<p>★刹帝利，第二等级，是军事贵族和行政贵族，古代时垄断政治特权；</p>
<p>★吠舍，第三等级，是雅利安人自由平民阶层，主要经商和务农以及打猎。种姓制度发展到后期，大量穷困破产的吠舍沦为首陀罗。</p>
<p>★首陀罗，第四等级，绝大多数是被征服的土著居民，属于非雅利安人。一开始是作为前三个等级的战俘、奴仆存在的。</p>
<p>★贱民，除四大种姓外，还有一种被排除在种姓外的人，即所谓“不可接受的贱民”，又称“达利特”。他们社会地位最低，最受歧视。</p>
<p>种姓制度，并不是上级大于下级这样的层层压迫，而是前三个等级压迫后两个等级。因为前三个等级都是雅利安人，后两个都是本土居民，可参考中国历史上的元朝对待汉人的态度。</p>
<p>而且最可怕的在于，种姓制度是世袭制，没有佛教的轮回这一说，但有打破轮回这一说。意思就是你这辈子是个小屌丝，就是因为你上辈子是个傻逼，下辈子还是一个德行。要：打破这种轮回，你就要虔诚，要信仰、崇拜我们的神，奉献你的一切，反抗是没有用的。</p>
<p>如今种姓制度已经被废除了，但这种根深蒂固的思想，如今在印度依旧相对普遍，尤其是农村。</p>
<p>当然，种姓制度只是印度教，毕竟伊斯兰教和锡克教都反对种姓制度，尤其是伊斯兰教，曾经征服全印度建立了莫卧儿王朝，但人数众多的印度教徒和秩序稳固的种姓制度，穆斯林统治者也无力改变。</p>
<p>《摔跤吧！爸爸》的主演阿米尔·汗，就是穆斯林。在他主持的《真相访谈》节目中，就一直以来关注这种现象，尤其是妇女平等方面，敢于站出来反抗这些陈旧落后的教义。</p>
<p>而宝莱坞另一位巨星，《我的名字叫可汗》《宝莱坞生死恋》的主演沙鲁克·汗，他也是穆斯林，但妻子是印度教，就因为这个，沙鲁克·汗的黑粉极多，一直以来被喷，直接令他拍了一部打脸黑粉的电影，叫做《脑残粉》。</p>
<p>以上，看似跟《摔跤吧！爸爸》没有任何关系，但只是在强调印度教在印度的无上统治力和话语权。而且印度教中，对女性的歧视是直接的，因为在女性在印度教中的地位，并不在四大种姓之中，而是出于第五等——贱民之列，怕不怕？！</p>
<p>歧视妇女，是写进法律的</p>
<p>印度94%的人口信奉印度教与伊斯兰教，而这两种宗教都或多或少的歧视女性，印度教首当其中。</p>
<p>印度教的教义，其中有着强烈的纵欲主义，比如湿婆神，印度神话故事中，恒河可是湿婆的精液汇成的哦，才孕育出印度文明滴。湿婆神的丁丁叫做“林伽”，被太多人供奉，电影《巴霍巴利王》的海报，主角扛着的那玩意，就是湿婆神的丁丁！黑格尔在他《美学》中谈及此事时曾说，“我们的羞耻感简直都要被搅乱了”。</p>
<p>知道印度现在为什么这么多人口了吧，纵欲、享受性带来的体验，是人家的教义哦。“印度神油”为什么这么出名，就是这个原因啊。这种纵欲体验，直接导致女性地位低下，甚至男性成为泄欲的工具，导致这么多强奸案发生。</p>
<p>在这种环境之下， 印度一些庙宇中，不但长期且公开圈养性奴，甚至主流社会也是风气可怕！中央调查局局长兰吉特·辛哈也曾发表言论称：“如果你无法阻止强奸的发生，不妨去享受它。”在印度，性骚扰被称为“夏娃的挑逗”（Eve-teasing），通常是可以被主流社会所接受。</p>
<p>如今对女性而言，印度是全球危险程度第四高的国家，比索马里还要糟。而且“买妻”、“租妻”、“换妻”的现象在印度一些地区极其普遍。</p>
<p>而作为印度教最著名的的法典——《摩奴法典》，更是以宗教的名义及用法律的形式，确定了妇女屈从、低下的地位，“女子必须幼年从父、成年从夫、夫死从子，女子不得享有自主地位。”歧视妇女都写进法律了，上哪说理去。</p>
<p>还有早期印度教的经典《爱达罗氏梵书》中就说“儿子对父亲来说是一条救生船，在他身上有着无暇的天堂的世界，女儿是悲伤的源泉。”</p>
<p>当然了，这些都是古印度的糟粕，到了现在早已被废除，印度包括新德里、孟买这些大都市区域，思想还是比较开放的。但还是那句话，这种传统根深蒂固，绝不会一朝一夕消亡，尤其是对于印度这样人口基数大，贫富差距明显的地方。</p>
<p>这其中代表是印度农村，也就是《摔跤吧！爸爸》发生的地方。</p>
<p>电影的故事发生在印度北部的农村，印度北方，是当年伊斯兰教统治的地方，比印度教稍强一些，但伊斯兰教依然有着男尊女卑的现象。而伊斯兰教+印度教这样双重的教义之下，直接导致印度北方的传统继承，要比南方严重的多。</p>
<p>当电影中，两位女儿，穿着短裤短袖，晨跑的时候，看看周围那些村民的眼光吧。是多么不可思议。因为这样的行为，直接违反了两个宗教的教义。其中包括印度教中女性地位的卑微，以及伊斯兰教对女性着装的要求。</p>
<p>在印度这样的宗教国家里，虽然如今开明了很多，年轻女性不比把自己像粽子一样一层层裹起来（电影中，她们的母亲依然是这种打扮），可以穿短袖，但不能露大腿。电影中，女儿们第一次穿着短裤亮相，使劲儿把衣服下拉遮住腿部，就是这种体验。</p>
<p>在这样传统习俗思想蔓延的农村，连对着装都有严格的要求，就更不要说有着肢体接触的摔跤了。</p>
<p>所以，在电影中，女儿们第一次在公众视野中摔跤时，吃瓜群众的表现就是证明，他们并没有说“男孩不能跟女孩有这样身体接触啊、男孩不能欺负女孩啊”之类的话语，而是“她们穿成这样的比赛吗，要是裤子掉下来就好了”。完全是一幅很享受的样子，不仅仅是在看热闹，更是一直从骨子里面对女性的毫不尊重。</p>
<p>婚礼上发生了什么</p>
<p>从英国殖民统治时期开始，印度就开始推行种种法律，制止印度社会的陋习，先后颁布法令禁止寡妇殉葬、童婚和一夫多妻，并认定跨越种族界限的婚姻为合法婚姻等等，奈何积重难返。</p>
<p>比如印度总理尼赫鲁通过的《反嫁妆法》（1961年），在印度高种姓女子为了找到与其地位相配的男人不得不陪以厚嫁；低种姓女子为了攀结高种姓也需要送上丰厚嫁妆以博取夫家的欢心。</p>
<p>嫁妆，可不是简单的随礼，几乎对一个家庭有毁灭性的打击。之前看过一篇文章，说印度现在的嫁妆到成什么程度？比如孟买现在流行的，笔记本电脑、液晶电视、汽车，甚至提供到欧洲或者美国的蜜月旅行。看清楚，是女方给男方哦！</p>
<p>《摔跤吧！爸爸》中这位四个女儿，能想象得出，阿米尔·汗那绝望的眼神了吧，不仅仅是对寄希望于后代梦想的破灭，更多的还是“以后日子咋过？”。这跟我们的观点是相反地，你要生四个儿子试试，愁死你！</p>
<p>虽然有着《反嫁妆法》，但“嫁妆”这个古老的习俗依然无法改变，主要是一些偏远落后的地方，屡禁不止，甚至愈演愈烈，每年约有9000名印度妇女由于嫁妆达不到婆家要求，导致自杀或者被活活烧死。</p>
<p>《摔跤吧！爸爸》中的父亲，是反对这种习俗的。所以片中有这样类似的对白，母亲说，女儿练摔跤，有谁会娶我们家女儿呢？父亲回答，我们女儿很优秀，他们没资格挑选我们，而是我们挑选他们。</p>
<p>所以，当《摔跤吧！爸爸》中，女儿们参加别人的婚礼，父亲知道后是有多么生气。不仅仅是由于她们延误训练，更是她们再一次的，进入到这种落后的传统之中。</p>
<p>而且在这场婚礼上，所有人载歌载舞，只有新娘子全程愁眉苦脸，因为等待她的，是未知的命运。在与女儿们那番交谈就是代表。</p>
<p>“愿你生个女儿”</p>
<p>在印度，骂人最狠的话是“愿你生个女儿”。</p>
<p>综上所述，在印度种种古代法典和教义之下，女孩子生下来就被看做是一种负债，几乎没有任何地位。印度女性无异家中的奴仆，不许在外抛头露面，很少机会受教育，也难以独立谋生。</p>
<p>在这样的大环境之下，还会有人说，《摔跤吧！爸爸》是父权电影嘛？开什么玩笑，这明明是女权电影。</p>
<p>中国都在说“子承父业”也有这方面习俗，虽然孩子们都期望自己能有自己的梦想和事业，有时候并不希望延续父母的事业，比如动画片《小王子》，这部电影就是代表了女儿反抗母亲而追求自己梦想的主题。但是在在印度，别说解放思想、追求个性，你能继承梦想本身是一种特权，女性在那个环境之下，通常是没有做梦权利的。</p>
<p>电影中，女儿也有过反抗父亲的时候，也是分阶段的。</p>
<p>★第一次是小孩，最早被剃头、到被强迫训练，到消极怠工，是女儿不愿意去摔跤，不仅仅是不愿意继承父亲的梦想，也有不愿意改变自身定位的原因，直到那场婚礼之后，这种思想才有了改观。因为，首先你要自己看得起自己。</p>
<p>★第二次反抗，是进入摔跤队之后，对父亲的反抗，实际上也就是太过于独立，摔跤练习中赢了父亲，俗话说“翅膀硬了”。当然到了最后还是遵循了父亲，这是对父亲的一种回报体现。电影故事这样编排，是非常精彩的。</p>
<p>仔细琢磨女儿们的两次反抗，第一次代表了对自身定位的认知，第二次是独立之后，对于家庭层面，情感方面的认知。父亲在这个阶段中扮演的角色，完成了从“强势→弱势→融洽”三个阶段的转变。</p>
<p>因此，《摔跤吧！爸爸》中父亲与女儿的关系，并非强势和父权，而是代表了引导，他引导女儿走向独立，最终女儿用“继承梦想”来回报。</p>
<p>最重要的一个情节，最后的决赛中，父亲是不在现场的，女儿依旧赢得了比赛。这是这部电影中，对于女性身份的建立，对于平等、独立女性的体现。</p>
<p>说了这么多，其实就是描述《摔跤吧！爸爸》这个故事，在印度大环境下的特殊性。当然，我们看这部电影的时候，也许并不会体会到电影关于女性平等在印度的伟大意义。但这部电影好看就是好看，虽然印度是运动小国，但并不妨碍人家拍出一部运动题材的电影，这其中不仅仅是如上所述，更重要的还是对观众情绪的掌控，对热血与温情两大元素的展现，大量很有生活化的细节，非常细腻深刻。</p>
<p>举个例子，片中女儿吃油炸圈那段，当她们得知，成为摔跤手之后，这成了“最后的晚餐”，两位小姑娘那份狼吞虎咽。这样细节，很多电影就拍不出来。</p>
<p>还有我们的第一人称，那位侄子的存在，这个甘草角色就是印度广大男性的缩影。在他身上，不但是全程故事的见证者，更衬托出父亲的伟大，与女儿打破桎梏的不凡之处。</p>
<p>而且电影中，在印度女性不平等的环境下，父亲的角色再严厉，再魔鬼范，但他一次也没有打过女儿，反而打得都是侄子，这位小哥前半段一直在挨揍（替女儿们挨揍）。街坊打架二话不说就被打，在婚礼上明明是女儿犯错，但打得也是他，摔跤训练中侄子是陪练一直被摔，甚至母亲没事都给他几巴掌。</p>
<p>看了这些细节，还有人说本片男权吗？</p>
<p>最后，膜拜一下阿米尔·汗，一位伟大的演员，单单是他增肥、减肥、再健身的拍摄经历，就足以让人让人不得不致敬</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Dream、Education、Persistence&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ4MzQzMzM2Nl5BMl5BanBnXkFtZTgwMTQ1NzU3MDI@._V1_UY268_CR4,0,182,268_AL_.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Former wrestler Mahavir Singh Phogat and his two wrestler daughters struggle towards glory at the Commonwealth Games in the face of societal oppression.&lt;/p&gt;
&lt;p&gt;Director: Nitesh Tiwari&lt;br&gt;Writers: Piyush Gupta, Shreyas Jain | 2 more credits »&lt;br&gt;Stars: Aamir Khan, Sakshi Tanwar, Fatima Sana Shaikh | See full cast &amp;amp; crew »&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="English" scheme="http://aisee.me/tags/English/"/>
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码设计模式解析与实战</title>
    <link href="http://aisee.me/2017/06/23/Program/Android/android-design-pattern/"/>
    <id>http://aisee.me/2017/06/23/Program/Android/android-design-pattern/</id>
    <published>2017-06-23T12:11:06.000Z</published>
    <updated>2017-06-24T04:12:32.577Z</updated>
    
    <content type="html"><![CDATA[<p>作者：<a href="https://book.douban.com/search/%E5%85%B3%E7%88%B1%E6%B0%91" target="_blank" rel="external">何红辉 / 关爱民  </a><br>豆瓣评分：8.4</p>
<p><div align="center"><br><img src="https://img3.doubanio.com/lpic/s28320163.jpg" width="398" height="512" alt="personal photo"><br></div></p>
<blockquote>
<p>本书专门介绍Android源代码的设计模式，共26章，主要讲解面向对象的六大原则、主流的设计模式以及MVC和MVP模式。主要内容为：优化代码的首步、开闭原则、里氏替换原则、依赖倒置原则、接口隔离原则、迪米特原则、单例模式、Builder模式、原型模式、工厂方法模式、抽象工厂模式、策略模式、状态模式、责任链模式、解释器模式、命令模式、观察者模式、备忘录模式、迭代器模式、模板方法模式、访问者模式、中介者模式、代理模式、组合模式、适配器模式、装饰模式、享元模式、外观模式、桥接模式，以及MVC的介绍与实战和MVP应用架构模式。</p>
</blockquote>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="第1章-走向灵活软件之路——面向对象的六大原则-1"><a href="#第1章-走向灵活软件之路——面向对象的六大原则-1" class="headerlink" title="第1章 走向灵活软件之路——面向对象的六大原则 1"></a>第1章 走向灵活软件之路——面向对象的六大原则 1</h3><p>1.1 优化代码的第一步——单一职责原则 1<br>1.2 让程序更稳定、更灵活——开闭原则 5<br>1.3 构建扩展性更好的系统——里氏替换原则 12<br>1.4 让项目拥有变化的能力——依赖倒置原则 13<br>1.5 系统有更高的灵活性——接口隔离原则 16<br>1.6 更好的可扩展性——迪米特原则 18<br>1.7 总结 22</p>
<h3 id="第2章-应用最广的模式——单例模式-23"><a href="#第2章-应用最广的模式——单例模式-23" class="headerlink" title="第2章 应用最广的模式——单例模式 23"></a>第2章 应用最广的模式——单例模式 23</h3><p>2.1 单例模式介绍 23<br>2.2 单例模式的定义 23<br>2.3 单例模式的使用场景 23<br>2.4 单例模式UML类图 23<br>2.5 单例模式的简单示例 24<br>2.6 单例模式的其他实现方式 26<br>2.6.1 懒汉模式 26<br>2.6.2 Double CheckLock ( DCL )<br>实现单例 26<br>2.6.3 静态内部类单例模式 27<br>2.6.4 枚举单例 28<br>2.6.5 使用容器实现单例模式 28<br>2.7 Android源码中的单例模式 29<br>2.8 无名英雄——深入理解LayoutInflater 33<br>2.9 运用单例模式 40<br>2.10 总结 42</p>
<h3 id="第3章-自由扩展你的项目——Builder模式-43"><a href="#第3章-自由扩展你的项目——Builder模式-43" class="headerlink" title="第3章 自由扩展你的项目——Builder模式 43"></a>第3章 自由扩展你的项目——Builder模式 43</h3><p>3.1 Builder模式介绍 43<br>3.2 Builder模式的定义 43<br>3.3 Builder模式的使用场景 43<br>3.4 Builder模式的UML类图 43<br>3.5 Builder模式的简单实现 44<br>3.6 Android源码中的Builder模式实现 46<br>3.7 深入了解WindowManager 52<br>3.8 Builder模式实战 59<br>3.9 总结 64</p>
<h3 id="第4章-使程序运行更高效——原型模式-66"><a href="#第4章-使程序运行更高效——原型模式-66" class="headerlink" title="第4章 使程序运行更高效——原型模式 66"></a>第4章 使程序运行更高效——原型模式 66</h3><p>4.1 原型模式介绍 66<br>4.2 原型模式的定义 66<br>4.3 原型模式的使用场景 66<br>4.4 原型模式的UML类图 66<br>4.5 原型模式的简单实现 67<br>4.6 浅拷贝和深拷贝 69<br>4.7 Android源码中的原型模式实现 72<br>4.8 Intent的查找与匹配 74<br>4.8.1 App信息表的构建 74<br>4.8.2 精确匹配 80<br>4.9 原型模式实战 83<br>4.10 总结 85</p>
<h3 id="第5章-应用最广泛的模式——工厂方法模式-87"><a href="#第5章-应用最广泛的模式——工厂方法模式-87" class="headerlink" title="第5章 应用最广泛的模式——工厂方法模式 87"></a>第5章 应用最广泛的模式——工厂方法模式 87</h3><p>5.1 工厂方法模式介绍 87<br>5.2 工厂方法模式的定义 87<br>5.3 工厂方法模式的使用场景 87<br>5.4 工厂方法模式的UML类图 87<br>5.5 模式的简单实现 90<br>5.6 Android源码中的工厂方法模式实现 93<br>5.7 关于onCreate方法 95<br>5.8 工厂方法模式实战 102<br>5.9 总结 105</p>
<h3 id="第6章-创建型设计模式——抽象工厂模式-106"><a href="#第6章-创建型设计模式——抽象工厂模式-106" class="headerlink" title="第6章 创建型设计模式——抽象工厂模式 106"></a>第6章 创建型设计模式——抽象工厂模式 106</h3><p>6.1 抽象工厂模式介绍 106<br>6.2 抽象工厂模式的定义 106<br>6.3 抽象工厂模式的使用场景 106<br>6.4 抽象工厂模式的UML类图 106<br>6.5 抽象工厂方法模式的简单实现 109<br>6.6 Android源码中的抽象工厂方法模式实现 112<br>6.7 总结 116</p>
<h3 id="第7章-时势造英雄——策略模式-117"><a href="#第7章-时势造英雄——策略模式-117" class="headerlink" title="第7章 时势造英雄——策略模式 117"></a>第7章 时势造英雄——策略模式 117</h3><p>7.1 策略模式介绍 117<br>7.2 策略模式的定义 117<br>7.3 策略模式的使用场景 117<br>7.4 策略模式的UML类图 118<br>7.5 策略模式的简单实现 118<br>7.6 Android源码中的策略模式实现 123<br>7.6.1 时间插值器 123<br>7.6.2 动画中的时间插值器 124<br>7.7 深入属性动画 128<br>7.7.1 属性动画体系的总体设计 128<br>7.7.2 属性动画的核心类介绍 128<br>7.7.3 基本使用 129<br>7.7.4 流程图 130<br>7.7.5 详细设计 131<br>7.7.6 核心原理分析 131<br>7.8 策略模式实战应用 142<br>7.9 总结 144</p>
<h3 id="第8章-随遇而安——状态模式-145"><a href="#第8章-随遇而安——状态模式-145" class="headerlink" title="第8章 随遇而安——状态模式 145"></a>第8章 随遇而安——状态模式 145</h3><p>8.1 状态模式介绍 145<br>8.2 状态模式的定义 145<br>8.3 状态模式的使用场景 145<br>8.4 状态模式的UML类图 145<br>8.5 状态模式的简单示例 146<br>8.6 Wi-Fi管理中的状态模式 150<br>8.7 状态模式实战 159<br>8.8 总结 164</p>
<h3 id="第9章-使编程更有灵活性——责任链模式-165"><a href="#第9章-使编程更有灵活性——责任链模式-165" class="headerlink" title="第9章 使编程更有灵活性——责任链模式 165"></a>第9章 使编程更有灵活性——责任链模式 165</h3><p>9.1 责任链模式介绍 165<br>9.2 责任链模式的定义 165<br>9.3 责任链模式的使用场景 165<br>9.4 责任链模式的UML类图 165<br>9.5 责任链模式的简单实现 170<br>9.6 Android源码中的责任链模式实现 173<br>9.7 责任链模式实战 178<br>9.8 总结 181</p>
<h3 id="第10章-化繁为简的翻译机——解释器模式-182"><a href="#第10章-化繁为简的翻译机——解释器模式-182" class="headerlink" title="第10章 化繁为简的翻译机——解释器模式 182"></a>第10章 化繁为简的翻译机——解释器模式 182</h3><p>10.1 解释器模式介绍 182<br>10.2 解释器模式的定义 182<br>10.3 解释器模式的使用场景 183<br>10.4 解释器模式的UML类图 184<br>10.5 解释器模式的简单实现 185<br>10.6 Android源码中的解释器模式实现 189<br>10.7 关于PackageManagerService 195<br>10.8 总结 203</p>
<h3 id="第11章-让程序畅通执行——命令模式-204"><a href="#第11章-让程序畅通执行——命令模式-204" class="headerlink" title="第11章 让程序畅通执行——命令模式 204"></a>第11章 让程序畅通执行——命令模式 204</h3><p>11.1 命令模式介绍 204<br>11.2 命令模式的定义 204<br>11.3 命令模式的使用场景 204<br>11.4 命令模式的UML类图 204<br>11.5 命令模式的简单实现 207<br>11.6 Android源码中的命令模式实现 211<br>11.7 Android事件输入系统介绍 214<br>11.8 命令模式实战 216<br>11.9 总结 223</p>
<h3 id="第12章-解决、解耦的钥匙——观察者模式-224"><a href="#第12章-解决、解耦的钥匙——观察者模式-224" class="headerlink" title="第12章 解决、解耦的钥匙——观察者模式 224"></a>第12章 解决、解耦的钥匙——观察者模式 224</h3><p>12.1 观察者模式介绍 224<br>12.2 观察者模式的定义 224<br>12.3 观察者模式的使用场景 224<br>12.4 观察者模式的UML类图 224<br>12.5 观察者模式的简单实现 225<br>12.6 Android源码分析 227<br>12.7 观察者模式的深入拓展 230<br>12.8 实战 238<br>12.9 总结 245</p>
<h3 id="第13章-编程中的“后悔药”——备忘录模式-247"><a href="#第13章-编程中的“后悔药”——备忘录模式-247" class="headerlink" title="第13章 编程中的“后悔药”——备忘录模式 247"></a>第13章 编程中的“后悔药”——备忘录模式 247</h3><p>13.1 备忘录模式介绍 247<br>13.2 备忘录模式的定义 247<br>13.3 备忘录模式的使用场景 247<br>13.4 备忘录模式的UML类图 247<br>13.5 备忘录模式的简单示例 248<br>13.6 Android源码中的备忘录模式 250<br>13.7 深度拓展 257<br>13.7.1 onSaveInstanceState调用的时机 257<br>13.7.2 使用V4包存储状态的bug 257<br>13.8 实战 260<br>13.9 总结 267</p>
<h3 id="第14章-解决问题的“第三者”——迭代器模式-268"><a href="#第14章-解决问题的“第三者”——迭代器模式-268" class="headerlink" title="第14章 解决问题的“第三者”——迭代器模式 268"></a>第14章 解决问题的“第三者”——迭代器模式 268</h3><p>14.1 迭代器模式介绍 268<br>14.2 迭代器模式的定义 268<br>14.3 迭代器模式的使用场景 268<br>14.4 迭代器模式的UML类图 268<br>14.5 模式的简单实现 271<br>14.6 Android源码中的模式实现 275<br>14.7 总结 277</p>
<h3 id="第15章-抓住问题核心——模板方法模式-278"><a href="#第15章-抓住问题核心——模板方法模式-278" class="headerlink" title="第15章 抓住问题核心——模板方法模式 278"></a>第15章 抓住问题核心——模板方法模式 278</h3><p>15.1 模板方法模式介绍 278<br>15.2 模板方法模式的定义 278<br>15.3 模板方法模式的使用场景 278<br>15.4 模板方法模式的UML类图 278<br>15.5 模板方法模式的简单示例 279<br>15.6 Android源码中的模板方法模式 281<br>15.7 深度拓展 283<br>15.8 模板方法实战 296<br>15.9 总结 299</p>
<h3 id="第16章-访问者模式-301"><a href="#第16章-访问者模式-301" class="headerlink" title="第16章 访问者模式 301"></a>第16章 访问者模式 301</h3><p>16.1 访问者模式介绍 301<br>16.2 访问者模式的定义 301<br>16.3 访问者模式的使用场景 301<br>16.4 访问者模式的UML类图 301<br>16.5 访问者模式的简单示例 302<br>16.6 Android源码中的模式 306<br>16.7 访问者模式实战 309<br>16.8 总结 316</p>
<h3 id="第17章-“和事佬”——中介者模式-317"><a href="#第17章-“和事佬”——中介者模式-317" class="headerlink" title="第17章 “和事佬”——中介者模式 317"></a>第17章 “和事佬”——中介者模式 317</h3><p>17.1 中介者模式介绍 317<br>17.2 中介者模式的定义 318<br>17.3 中介者模式的使用场景 318<br>17.4 中介者模式的UML类图 318<br>17.5 中介者模式的简单实现 320<br>17.6 Android源码中的中介者模式实现 324<br>17.7 中介者模式实战 326<br>17.8 总结 329</p>
<h3 id="第18章-编程好帮手——代理模式-330"><a href="#第18章-编程好帮手——代理模式-330" class="headerlink" title="第18章 编程好帮手——代理模式 330"></a>第18章 编程好帮手——代理模式 330</h3><p>18.1 代理模式介绍 330<br>18.2 代理模式的定义 330<br>18.3 代理模式的使用场景 330<br>18.4 代理模式的UML类图 330<br>18.5 代理模式的简单实现 332<br>18.6 Android源码中的代理模式实现 336<br>18.7 Android中的Binder跨进程通信机制与AIDL 340<br>18.8 代理模式实战 351<br>18.9 总结 355</p>
<h3 id="第19章-物以类聚——组合模式-356"><a href="#第19章-物以类聚——组合模式-356" class="headerlink" title="第19章 物以类聚——组合模式 356"></a>第19章 物以类聚——组合模式 356</h3><p>19.1 组合模式介绍 356<br>19.2 组合模式的定义 357<br>19.3 组合模式的使用场景 357<br>19.4 组合模式的UML类图 357<br>19.5 组合模式的简单实现 363<br>19.6 Android源码中的模式实现 367<br>19.7 为什么ViewGroup有容器的功能 368<br>19.8 总结 370</p>
<h3 id="第20章-得心应手的“粘合剂”——适配器模式-371"><a href="#第20章-得心应手的“粘合剂”——适配器模式-371" class="headerlink" title="第20章 得心应手的“粘合剂”——适配器模式 371"></a>第20章 得心应手的“粘合剂”——适配器模式 371</h3><p>20.1 适配器模式介绍 371<br>20.2 适配器模式的定义 371<br>20.3 适配器模式的使用场景 371<br>20.4 适配器模式的UML类图 371<br>20.5 适配器模式应用的简单示例 372<br>20.5.1 类适配器模式 372<br>20.5.2 对象适配器模式 373<br>20.6 Android源码中的适配器模式 375<br>20.7 深度拓展 380<br>20.8 实战演示 393<br>20.9 总结 402</p>
<h3 id="第21章-装饰模式-403"><a href="#第21章-装饰模式-403" class="headerlink" title="第21章 装饰模式 403"></a>第21章 装饰模式 403</h3><p>21.1 装饰模式介绍 403<br>21.2 装饰模式的定义 403<br>21.3 装饰模式的使用场景 403<br>21.4 装饰模式的UML类图 403<br>21.5 模式的简单实现 406<br>21.6 Android源码中的模式实现 408<br>21.7 Context与ContextImpl 410<br>21.8 模式实战 419<br>21.9 总结 419</p>
<h3 id="第22章-对象共享，避免创建多对象——享元模式-420"><a href="#第22章-对象共享，避免创建多对象——享元模式-420" class="headerlink" title="第22章 对象共享，避免创建多对象——享元模式 420"></a>第22章 对象共享，避免创建多对象——享元模式 420</h3><p>22.1 享元模式介绍 420<br>22.2 享元模式定义 420<br>22.3 享元模式的使用场景 420<br>22.4 享元模式的UML类图 420<br>22.5 享元模式的简单示例 421<br>22.6 Android源码中的享元模式 424<br>22.7 深度拓展 429<br>22.7.1 深入了解Android的消息机制 429<br>22.7.2 子线程中创建Handler为何会抛出异常 438<br>22.8 总结 439</p>
<h3 id="第23章-统一编程接口——外观模式-440"><a href="#第23章-统一编程接口——外观模式-440" class="headerlink" title="第23章 统一编程接口——外观模式 440"></a>第23章 统一编程接口——外观模式 440</h3><p>23.1 外观模式介绍 440<br>23.2 外观模式定义 440<br>23.3 外观模式的使用场景 440<br>23.4 外观模式的UML类图 440<br>23.5 外观模式的简单示例 441<br>23.6 Android源码中的外观模式 443<br>23.7 深度拓展 448<br>23.7.1 Android资源的加载与匹配 448<br>23.7.2 动态加载框架的实现 455<br>23.8 外观模式实战 461<br>23.9 总结 464</p>
<h3 id="第24章-连接两地的交通枢钮——桥接模式-465"><a href="#第24章-连接两地的交通枢钮——桥接模式-465" class="headerlink" title="第24章 连接两地的交通枢钮——桥接模式 465"></a>第24章 连接两地的交通枢钮——桥接模式 465</h3><p>24.1 桥接模式介绍 465<br>24.2 桥接模式的定义 465<br>24.3 桥接模式的使用场景 465<br>24.4 桥接模式的UML类图 465<br>24.5 桥接模式的简单实现 467<br>24.6 Android源码中的桥接模式实现 470<br>24.7 关于WindowManagerService 471<br>24.8 桥接模式实战 479<br>24.9 总结 482</p>
<h3 id="第25章-MVC的介绍与实战-483"><a href="#第25章-MVC的介绍与实战-483" class="headerlink" title="第25章 MVC的介绍与实战 483"></a>第25章 MVC的介绍与实战 483</h3><p>25.1 MVC的起源与历史 483<br>25.2 MVC在Android中的实现 484<br>25.3 总结 486</p>
<h3 id="第26章-MVP应用架构模式-487"><a href="#第26章-MVP应用架构模式-487" class="headerlink" title="第26章 MVP应用架构模式 487"></a>第26章 MVP应用架构模式 487</h3><p>26.1 MVP模式介绍 487<br>26.2 MVP模式的三个角色 488<br>26.3 与MVC、MVVM的区别 488<br>26.4 MVP的实现 489<br>26.5 MVP与Activity、Fragment的生命周期 493</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://book.douban.com/search/%E5%85%B3%E7%88%B1%E6%B0%91&quot;&gt;何红辉 / 关爱民  &lt;/a&gt;&lt;br&gt;豆瓣评分：8.4&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s28320163.jpg&quot; width = &quot;398&quot; height = &quot;512&quot; alt=&quot;personal photo&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本书专门介绍Android源代码的设计模式，共26章，主要讲解面向对象的六大原则、主流的设计模式以及MVC和MVP模式。主要内容为：优化代码的首步、开闭原则、里氏替换原则、依赖倒置原则、接口隔离原则、迪米特原则、单例模式、Builder模式、原型模式、工厂方法模式、抽象工厂模式、策略模式、状态模式、责任链模式、解释器模式、命令模式、观察者模式、备忘录模式、迭代器模式、模板方法模式、访问者模式、中介者模式、代理模式、组合模式、适配器模式、装饰模式、享元模式、外观模式、桥接模式，以及MVC的介绍与实战和MVP应用架构模式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="Android" scheme="http://aisee.me/tags/Android/"/>
    
      <category term="Design Pattern" scheme="http://aisee.me/tags/Design-Pattern/"/>
    
  </entry>
  
  <entry>
    <title>Code-The Hidden Language of Computer Hardware and Software</title>
    <link href="http://aisee.me/2017/06/23/Program/Java/Code-The%20Hidden%20Language%20of%20Computer%20Hardware%20and%20Software/"/>
    <id>http://aisee.me/2017/06/23/Program/Java/Code-The Hidden Language of Computer Hardware and Software/</id>
    <published>2017-06-23T11:31:06.000Z</published>
    <updated>2017-06-24T04:12:30.182Z</updated>
    
    <content type="html"><![CDATA[<p>作者：<a href="https://book.douban.com/search/Charles%20Petzold" target="_blank" rel="external">[美] Charles Petzold </a><br>豆瓣评分：9.2</p>
<p><div align="center"><br><img src="https://img3.doubanio.com/lpic/s4379914.jpg" width="398" height="512" alt="personal photo"><br></div></p>
<blockquote>
<p>本书讲述的是计算机工作原理。作者用丰富的想象和清晰的笔墨将看似繁杂的理论阐述得通俗易懂，你丝毫不会感到枯燥和生硬。更重要的是，你会因此而获得对计算机工作原理较深刻的理解。这种理解不是抽象层面上的，而是具有一定深度的。</p>
</blockquote>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>第1章 至亲密友<br>第2章 编码与组合<br>第3章 布莱叶盲文与二进制码<br>第4章 手电筒的剖析<br>第5章 绕过拐角的通信<br>第6章 电报机与继电器<br>第7章 我们的十个数字<br>第8章 十的替代品<br>第9章 二进制数<br>第10章 逻辑与开关<br>第11章 门<br>第12章 二进制加法器<br>第13章 如何实现减法<br>第14章 反馈与触发器<br>第15章 字节与十六进制<br>第16章 存储器组织<br>第17章 自动操作<br>第18章 从算盘到芯片<br>第19章 两种典型的微处理器<br>第20章 ASCII码和字符转换<br>第21章 总线<br>第22章 操作系统<br>第23章 定点数和浮点数<br>第24章 高级语言与低级语言<br>第25章 图形化革命</p>
<p><a href="https://www.douban.com/people/canco/" target="_blank" rel="external"> canco </a></p>
<p>你是否想知道计算机如何工作和运行的？你是否想了解计算机是如何一步一步创造出来的？你是否想了解计算机知识的来龙去脉？你是否想了解计算机的历史？你是否想制造出一台自己的计算机？你是否想知道硬件与软件的区别？你是否想知道电报机、电的原理？你是否想创造自己的编程语言？你是否想知道你买的电脑中说明书上说的主频、内存、显示器象素、显存的概念和意义？你是否想知道我们常用的十进制的由来？你是否一直迷惑于二进制的理解？你是否想知道那些赫赫有名的IT公司的历史和发展？你是否想探询那些天才是如何思考和发明的？你是否想象科学家一样思考？本书将一一为你揭开谜底。本书的内容涉及数理逻辑、布尔代数、组合数学、集合、物理、化学和电子学等等知识。作者用简单、通俗易懂、流畅的词汇清楚地解释了如此多而且深奥的知识！在作者的笔下，原来学问是可以这么迷人的。</p>
<pre><code>一年前曾在书店翻过本书，看到本书写手电筒的原理和逻辑电路，就不以为意，谁知现在才知道犯了大错。最近总找到一本讲述计算机基本理论的书，于是在网上看了本书的前三章，没想到，一看就着迷了，立马买了一本。本书解决了困惑我多年的一些难题，以前迷惑、一知半解的理论一下子迎刃而解，读书的过程中，不时惊叹，“原来如此”，念念有词，坐立不安，强忍要仰天长啸的冲动，真是感觉漫卷诗书喜欲狂，实在是痛快淋漓，如同武侠小说中武林高手打通任督二脉似的。这是我看过的最好的计算机书籍，这是我多年以来梦寐以求的书。

本书使我开始真正了解计算机的运行原理，理解软件和硬件的区别。通过本书，我终于可以把原来学习的计算机知识用一根主线串联起来，那些知识一一浮现在我以前。以前硬啃《设计模式》，学习《C++程序设计语言》，远没有本书带给我的知识的提高和智力的乐趣。如果说，《设计模式》是近十年来最重要的设计领域的书籍，那么我认为，本书是未来二十年最重要的计算机入门和揭密书。

本书从最基本的问题出发，深入浅出地解释了各种原理，在解释完一个问题后，又提出下一个问题，引导读者思考，然后给出详细和清楚的解答，如此循环，读者很轻松地进入作者的思路，跟着作者一起探询计算机的奥秘。这种思考方式也许比单个知识点更加重要，它能培养人的科学思维方式、科学方法论。著名经济学家张五常在加大读硕士期间，从不缺课的习惯就是为了要学老师的思考方法。所有要考的试过了，就转旁听老师的课。有一次，赫舒拉发在课后问张五常：“你旁听了我六个学期，难道我所知的经济学你还未学全吗？”张五常回答说：“你的经济学我早从你的著作中学会了，我听你的课与经济学无关――我要学的是你思考的方法。”终于他发现自己也能象老师一样思考问题，认识到什么是重要的问题，什么是不重要的问题，怎样才能提出一个好问题。一般人没有这样的机遇能碰上那样好的老师，但通过读好书，跟着作者的思路思考，可以弥补这一点。另外，书中还有很多简明清晰的图解，能很好的帮助读者理解那些深奥的理论。

本书还介绍了如贝尔实验室、施乐实验室等鼎鼎有名的实验室，以及如IBM、Microsoft、Apple等公司的起源和发展。这些公司和实验室可不是计划或规划出来的，而是自发演化（这里非要借用一下哈耶克的理论不可）而来，正如书中所写的“幸运的是，它的要求非常含糊，可以包含所有的事，聪明的人可以在此做他感兴趣的任何事”。在如此宽松的环境下，几十个天才的头脑在碰撞，异想天开的思想在交流，终于产生如此多不可思议的发明。可想而知，如果这些天才需要用论文来评职称，那些创造和发明是否会产生。

作者Charles Petzold可是鼎鼎大名，从事计算机编程方面的写作长达15年之久，是Windows编程领域的圣经《Programming Windows》的作者，该书影响了一代编程人员，只要你在Windows平台上开发，该书都是必读之书。

读完本书，我觉得自己也可以给别人讲解计算机的原理和应用，以前自己一知半解，模摸糊糊，所以在给别人讲时总解释不清楚，现在就清晰多了。女友是文科出身，对计算机原理一窍不通，我试着给她解释，她很快就能理解那些简单的理论。

对于网上争论众多的如“语言之争”、“数学在编程中是否重要之争”、“通用CPU”、“自己的操作系统”、“软件产业的未来”等等，读完本书后，将会有自己的更好的理解和认识，而不致于迷失期间，我们从自己出发，努力提高自己，中国的信息产业自然会发展。

另外，本书的翻译非常通畅，我在阅读时完全没有感觉到硬译的痕迹。作者的书如同房龙的书一样，有着梦幻般的气质，干燥无味的科学常识和原理，经作者的描述，将文学家的手法，拿来用以讲述科学，使读他书的人，都觉得娓娓忘倦了。

向作者致敬，感谢译者辛勤的翻译，感谢出版社引进如此好的书籍。我希望成为本书的吹鼓手，向所有计算机从业者推荐此书，向所有的理科学生、所有对计算机感兴趣的人强烈推荐本书。将来我将向我的子女推荐本书，引导他们进入迷人的信息技术领域。

如果你是一个非计算机专业的IT人员，那么本书最最适合你。因为本书就是专为非计算机专业人员所写，里面有你梦寐以求的知识。如果你是一个计算机专业人员，那么本书将给你锦上添花，使你对计算机知识有通盘的理解。只要你想了解计算机的知识，本书将是你决不后悔的选择。

今天，我怀有一个梦想。我梦想有一天，大家能够根据本书的制造出自己的计算机；我梦想有一天，本书不仅成为计算机专业的教科书，也成为其他专业的参考书；我梦想有一天，根据本书能出版一套配套的实验书，指导读者实践，自己动手组装计算机；我梦想有一天，中学老师能够用本书给学生讲述计算机的奥秘；我梦想有一天，政府官员能够阅读本书，了解信息技术的常识和基本原理；我梦想有一天，记者能够阅读本书，写出更专业性的报道；我梦想有一天，中国的科技实力能够屹立于世界之林。

朝闻道，夕死无憾。我终于明白了。

请原谅我用了如此多带有强烈感情色彩的词语，那是因为我太喜欢这本书了。
</code></pre><p>后记：最近读了《深入理解计算机系统》，然后又重读了《编码的奥秘》一遍，感觉又有很大的收获。个人觉得，两书结合起来看，将更有裨益。</p>
<p><a href="https://www.douban.com/people/28275446/" target="_blank" rel="external">一夜孤城</a></p>
<p>大二的数电模电对我来说是不堪回首的记忆，虽然考试也拿到了85，但是转过身几乎没有任何痕迹。印象里仅有死记硬背电路图后一遍遍在老师的严厉注视下，战战兢兢的连电路，我不知道为什么这么连，即使得到结果，也毫无编程时的兴奋之感，只有长出一口气的解脱。</p>
<p>啃了一半算法导论，愉快的读了几本算法和数据机构的书，也读了大半c++ primer当时的我来说，我不觉得我的计算机智商有任何的问题，但是我完全无法理解什么D触发器,什么R-t,什么反馈。。。。。。我当时只能绝望的觉得大概我的硬件智商不行吧，只要不是软件实在无书可读的时候，看见硬件的书便退避三舍。指导前天开始看这本书，用了两个下午6个小时左右，看到第十五章，我觉得触发器，加法器，连加器，什么边沿触发再也不是记忆中的死记硬背的痛苦，而是充满了跳跃和生动。</p>
<p>我不关心这个东西的输出是正五还是负五，还是什么五亿伏，我只想知道为什么，哪怕只是一个简单的灯泡的亮暗，至少请讲清楚为什么这个情况下要打开开关才亮，那个情况下要打开开关关灭。 充斥书本的是ms专业的各种电路图，然后便是计算，有什么意义呢。</p>
<p>为什么非要从二极管开始呢，从继电器不是更清楚吗。</p>
<p>你们不需要讲到多高深的知识，请把最基本的讲清楚就可以了。</p>
<p>像我这样二十多岁的人觉得写别人看不懂自己的文章很nb还可以理解的话，编教材的那个年龄的就不适合干这种事情了。</p>
<p>真的，你们不需要试图讲到现代科技，把布尔和莫尔斯的东西讲清楚了，理解现代的东西很轻松的，因为数学基础决定了这些。</p>
<p>PS：这本书真的不可以错过，尤其看了一遍又一遍书还是模模糊糊死记硬背的同学，那不是你的责任</p>
<p>我总觉得和计算机有关的学习都是轻松愉快，它既有着数学的逻辑，又不试图做到纯数学那样的完美和苛刻；另外还有着数学没有的丰富的实践。如果一本书让人觉得痛苦无比而没有任何思考的快感的时候，还是扔了它吧。</p>
<p><img src="https://img3.doubanio.com/view/page_note/large/public/p16720365-1.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：&lt;a href=&quot;https://book.douban.com/search/Charles%20Petzold&quot;&gt;[美] Charles Petzold &lt;/a&gt;&lt;br&gt;豆瓣评分：9.2&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s4379914.jpg&quot; width = &quot;398&quot; height = &quot;512&quot; alt=&quot;personal photo&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本书讲述的是计算机工作原理。作者用丰富的想象和清晰的笔墨将看似繁杂的理论阐述得通俗易懂，你丝毫不会感到枯燥和生硬。更重要的是，你会因此而获得对计算机工作原理较深刻的理解。这种理解不是抽象层面上的，而是具有一定深度的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
  </entry>
  
  <entry>
    <title>Thinking, Fast and Slow</title>
    <link href="http://aisee.me/2017/06/23/MyView/Book/Thinking,%20Fast%20and%20Slow/"/>
    <id>http://aisee.me/2017/06/23/MyView/Book/Thinking, Fast and Slow/</id>
    <published>2017-06-23T11:07:18.000Z</published>
    <updated>2017-06-23T11:25:38.011Z</updated>
    
    <content type="html"><![CDATA[<p><strong>“美好的事物值得付出、等待和分享”</strong></p>
<p><a href="https://book.douban.com/subject/10785583/" target="_blank" rel="external">思考，快与慢</a></p>
<p>作者：<a href="https://book.douban.com/search/%E4%B8%B9%E5%B0%BC%E5%B0%94%C2%B7%E5%8D%A1%E5%B0%BC%E6%9B%BC" target="_blank" rel="external">[美] 丹尼尔·卡尼曼   </a><br>豆瓣评分：8.2</p>
<p><div align="center"><br><img src="https://img1.doubanio.com/lpic/s10345719.jpg" width="398" height="512" alt="personal photo"><br></div></p>
<blockquote>
<p>人类究竟有多理性？——思考，快与慢，我们的大脑有快与慢两种作决定的方式。常用的无意识的“系统1”依赖情感、记忆和经验迅速作出判断，它见闻广博，使我们能够迅速对眼前的情况作出反应。但系统1也很容易上当，它固守“眼见即为事实”的原则，任由损失厌恶和乐观偏见之类的错觉引导我们作出错误的选择。有意识的“系统2”通过调动注意力来分析和解决问题，并作出决定，它比较慢，不容易出错，但它很懒惰，经常走捷径，直接采纳系统1的直觉型判断结果。</p>
</blockquote>
<a id="more"></a>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>本书所获赞誉 // XI<br>序言 // XIII</p>
<h3 id="第一部分-系统1，系统2-001"><a href="#第一部分-系统1，系统2-001" class="headerlink" title="第一部分 系统1，系统2 // 001"></a>第一部分 系统1，系统2 // 001</h3><p>第1章 一张愤怒的脸和一道乘法题 // 003<br>行为与注意力 // 004<br>系统1遇到麻烦，系统2会出面解决 // 008<br>冲突与自我控制 // 009<br>看上去不等长实际上等长的两条线 // 011<br>两个虚拟出来的角色 // 013</p>
<p>第2章 电影的主角与配角 // 015<br>瞳孔是人类思维活动的灵敏指示器 // 015<br>为什么我们看不见那只大猩猩？ // 020</p>
<p>第3章 惰性思维与延迟满足的矛盾 // 023<br>又累又饿的保释官司更可能否定保释申请 // 025<br>脱口而出的错误答案 // 028<br>今天得到1 000美元，1年后得到1万美元，你选哪个？ // 030</p>
<p>第4章 联想的神奇力量 // 034<br>启动效应：让人不知不觉微笑的铅笔 // 036<br>你会自觉投到盒子里多少钱？ // 038</p>
<p>第5章 你的直觉有可能只是错觉 // 043<br>由记忆造成的错觉 // 044<br>什么样的信息更容易让人信服？ // 046<br>股票代码上口，回报率也相对较高 // 048<br>创新是发生在能让人联想无限的环境中的 // 051</p>
<p>第6章 意料之外与情理之中 // 055<br>从第一次的惊喜到第二次的习以为常 // 055<br>简的钱包是怎么丢的呢？ // 058</p>
<p>第7章 字母“B”与数字“13” // 063<br>是什么让你相信了那些荒谬之词？ // 064<br>光环效应与群体的智慧 // 066<br>眼见为实的想法往往让我们仓促作出决定 // 069</p>
<p>第8章 我们究竟是如何作出判断的？ // 073<br>看照片预测竞选胜出者，为何其准确率可以高达70%？ // 074<br>平均长度与总长度是完全不同的数量概念 // 076<br>与强度等级匹配的描述 // 077<br>思维的发散性让我们作出直觉性判断 // 078</p>
<p>第9章 目标问题与启发性问题形影不离 // 081<br>找个相对简单的问题来作答 // 081<br>立体启发法：远处的物体看上去更高大 // 083<br>情感启发式：因为喜欢，所以认同 // 086</p>
<h3 id="第二部分-启发法与偏见-089"><a href="#第二部分-启发法与偏见-089" class="headerlink" title="第二部分 启发法与偏见 // 089"></a>第二部分 启发法与偏见 // 089</h3><p>第10章 大数法则与小数定律 // 091<br>小样本的出错风险可能高达50% // 094<br>信任多于质疑的普遍性偏见 // 095<br>对随机事件作出因果解释必然是错的 // 097</p>
<p>第11章 锚定效应在生活中随处可见 // 101<br>对锚定值的调整常常是不足的 // 102<br>暗示就是一种锚定效应 // 104<br>作为这幢房子的主人，你能接受的最低售价是多少？ // 105<br>锚定效应何时适用，何时不适用？ // 107</p>
<p>第12章 科学地利用可得性启发法 // 111<br>意识到自己的偏见有利于团队关系融洽 // 112<br>偏见会影响我们对自己或他人的看法 // 114</p>
<p>第13章 焦虑情绪与风险政策的设计 // 119<br>被闪电击中与食物中毒，哪种意外致死率更高？ // 120<br>如何避免小概率的风险事件演变成公共危机？ // 122</p>
<p>第14章 猜一下，汤姆的专业是什么？ // 127<br>依据典型性作出预测是下意识的行为 // 130<br>典型性启发的两宗罪 // 132<br>用贝叶斯定理来约束直觉 // 134</p>
<p>第15章 琳达问题的社会效应 // 136<br>琳达不可能只是一名普通的银行出纳吧？ // 137<br>少即是多的逻辑悖论 // 140</p>
<p>第16章 因果关系胜过统计信息 // 147<br>因果关系基础比率与思维定式 // 148<br>我们并没有自己想的那样乐于助人 // 151</p>
<p>第17章 所有表现都会回归平均值 // 156<br>第二次的表现与第一次并无因果联系 // 157<br>回归现象的意义不亚于发现万有引力 // 160</p>
<p>第18章 如何让直觉性预测更恰当有效？ // 166<br>偏离预测方向的直觉 // 167<br>对直觉性预测的偏见进行修正 // 170<br>两位教授候选人，应该选择哪一位？ // 172</p>
<h3 id="第三部分-过度自信与决策错误-177"><a href="#第三部分-过度自信与决策错误-177" class="headerlink" title="第三部分 过度自信与决策错误 // 177"></a>第三部分 过度自信与决策错误 // 177</h3><p>第19章 “知道”的错觉 // 179<br>后见之明的社会成本 // 182<br>真的存在能让企业基业长青的秘诀吗？ // 184</p>
<p>第20章 未来是不可预测的 // 189<br>士兵测评的有效性错觉 // 189<br>投资股票的技能错觉 // 192<br>主观自信与专业文化认知错觉的提供了生存的土壤 // 196<br>专家预测的准确度比不上扔飞镖的猴子 // 197</p>
<p>第21章 直觉判断与公式运算，熟优熟劣？ // 201<br>专家预测比不上简单运算准确 // 202<br>让许多业内人士烦恼的运算法 // 206<br>“闭上眼睛”的直觉判断比主观判断更可取 // 208</p>
<p>第22章 什么时候可以相信专家的直觉？ // 211<br>直觉就在眨眼之间 // 212<br>专家型直觉的习得 // 214<br>环境有规律可循，直觉才可相信 // 216<br>直觉的对错评估 // 219</p>
<p>第23章 努力养成采纳外部意见的决策习惯 // 221<br>比起外部意见，我们更偏向内部意见 // 223<br>规划谬误：过于乐观的计划随处可见 // 225<br>减少决策错误的有效方法 // 226</p>
<p>第24章 乐观主义是一柄双刃剑 // 230<br>乐观主义者过度自信的代价 // 230<br>竞争忽视：为何大片会扎堆上映？ // 234<br>是你太糟糕而不是我太笨拙 // 236<br>事前验尸：部分克服乐观偏差的方法 // 238</p>
<h3 id="第四部分-选择与风险-241"><a href="#第四部分-选择与风险-241" class="headerlink" title="第四部分 选择与风险 // 241"></a>第四部分 选择与风险 // 241</h3><p>第25章 事关风险与财富的抉择 // 243<br>面对风险，我们不是理性的经济人 // 244<br>伯努利的财富效用理论错在哪里？ // 246</p>
<p>第26章 更人性化的前景理论 // 252<br>面对财富，你会选择规避风险还是冒险一搏？ // 253<br>损失厌恶：对方损的反应比对盈余的反应大得多 // 257<br>前景理论无法应对令人失望的事 // 260</p>
<p>第27章 禀赋效应与市场交易 // 263<br>人们为什么不愿意割舍自己已拥有的东西？ // 266<br>像商人那样思考和交易 // 271</p>
<p>第28章 经济交易的参照点——公平性 // 274<br>目标就是参照点 // 276<br>我们为什么不愿意改变现状？ // 278<br>商人提价或降低员工工资的行为公平吗？ // 279</p>
<p>第29章 对结果可能性的权衡 // 283<br>可能性效应与确定性效应 // 283<br>著名经济学家也难逃阿莱斯悖论的陷阱 // 285<br>决策权重的大小取决于人们的担忧程度 // 287<br>四重模式：可能性与决策权重的关系模型 // 289<br>可能性效应影响下的风险决策 // 292</p>
<p>第30章 被过分关注的罕见事件 // 295<br>你认为一支三流球队获得NBA总冠军的可能性有多大？ // 296<br>画面感越强，决策权重越大 // 298<br>对风险的表述方式不同，所做决策可能截然相反 // 301<br>罕见事件又为何会被忽视？ // 303</p>
<p>第31章 能带来长远收益的风险政策 // 307<br>宽框架还是窄框架？ // 308<br>聪明的投资者不会每天都看股票行情表 // 309<br>风险政策可能抵消风险厌恶的偏见 // 312</p>
<p>第32章 心理账户是如何影响我们的选择的？ // 314<br>你会卖掉盈利的股票还是亏损的股票？ // 314<br>哪种选择会让你更后悔？ // 318<br>因为害怕将来后悔而作出不理性的选择 // 321</p>
<p>第33章 评估结果的逆转 // 325<br>开启经济学与心理学的跨界交流 // 326<br>综合评估引发偏好逆转 // 328<br>同类案件判罚的力度为何不一样？ // 331</p>
<p>第34章 善用框架效应，让生活更美好 // 334<br>情感的框架效应很难抵档 // 335<br>用框架性政策助推人们作出更好的选择 // 338</p>
<h3 id="第五部分-两个自我-345"><a href="#第五部分-两个自我-345" class="headerlink" title="第五部分 两个自我 // 345"></a>第五部分 两个自我 // 345</h3><p>第35章 体验效用与决策效用的不一致 // 347<br>如何测量体验效用？ // 348<br>记忆自我夸大了痛苦体验 // 351<br>记忆没那么可靠 // 353</p>
<p>第36章 人生如戏 // 355<br>比起整个人生，我们更在意人生的结局 // 355<br>关于上一次旅行，你还能记起多少？ // 357</p>
<p>第37章 你有多幸福？ // 360<br>测量经验自我的幸福感 // 361<br>幸福的方法 // 364</p>
<p>第38章 思考生活 // 367<br>生活满意度：一个很难回答的问题 // 368<br>被放大了的幸福错觉 // 371<br>千万不要忽略时间的作用 // 375<br>结语 // 377<br>附录A 不确定性下的判断：启发法和偏见 // 387<br>附录B 选择、价值以及框架 // 405<br>致谢</p>
<h2 id="豆瓣笔记"><a href="#豆瓣笔记" class="headerlink" title="豆瓣笔记"></a>豆瓣笔记</h2><p>版权归作者所有，任何形式转载请联系作者。<br>作者：锡兵（来自豆瓣）<br>来源：<a href="https://book.douban.com/review/5978072/" target="_blank" rel="external">https://book.douban.com/review/5978072/</a></p>
<p>认知放松：在放松、愉悦的状态下，系统2更不愿意工作，人也因此更容易相信系统1给出的判断。因此清晰美观的字体、简洁明确的描述，甚至是一个朗朗上口的名字，都有助于让人信服。</p>
<p>典型性偏好：人们习惯从事物中发觉和选取典型性样本，不习惯进行汇总和统计。因此，估计一堆线段的平均长度比估计一堆线段的总长度要容易得多。</p>
<p>因果性解释：人们习惯于用因果关系解释自己观察到的现象，因此故事比统计概率更能说服我们。</p>
<p>随机性误解：在一个随机数序列中，8888888和8243296出现的概率是一样，但未经过统计学训练的人很难相信这一点。他们会倾向于用虚假的因果关系去解释他们认为不随机的事件。</p>
<p>回归现象：如果学生在日常练习中的成绩是围绕某个平均值波动的，那么一次特别突出的成绩后成绩多半下降，一次特别糟糕的成绩后成绩多半上升。但用因果关系去解释这一现象就会引发错误，比如得到结论说：批评比表扬更容易使人进步。</p>
<p>光环效应：我们对事件的判断受到与结论无关而与事件有联系的其他事物干扰。</p>
<p>锚定效应：人们在回答某些问题时会从一个初始值（锚定值）出发，在数值调整到自己认为正确的范围后停止。（比如估算珠峰上水的沸点时，会从100度向下调整。）但这种调整往往是不充分的。因此，当你可以给出锚定值时，你就可以影响人们的评估结果。在一个实际例子里，超市以9折促销汤罐头，有一半时间摆了“每人限购12罐”的牌子，这期间买了汤罐头的人平均购买7罐；另一半时间没有这个牌子，平均每人仅购买了3罐。</p>
<p>框架效应：同一事物的不同表述方式会让人产生不同的感受，比如“手术后3个月内的存活率是90%”和“手术后3个月内会有10%的病人死亡”，虽然两个表述的意思完全一致，但前者更容易引起受众的积极感受，哪怕受众都是医生（专业人士）。</p>
<p>启发式判断：处理自身不了解的问题时，人们倾向于找到一个简单或熟悉的问题，并用该问题的答案替代真正的答案。</p>
<p>可得性偏见：评估事件时，我们会给予自己有直观感受的部分更高的权重，即忽略或低估自己不了解的部分。比如，高估自己在团队工作中的贡献程度；高估经常被媒体报道的灾难或疾病的危险程度。</p>
<p>自信不可靠：比较可靠的专家知识来自于有规律可循的领域，并应通过长期训练积累而来，比如消防队员、护士，等等。在规律尚未被人类掌握的领域，自信的专家不会比猴子做得更好（作者所举的例子包括股票投资和社会政治）。</p>
<p>量化公式可靠：量化公式可以帮助修订主观判断的偏差。比如，有评分表帮助的面试官会比单靠主观判断的面试官做出更准确的面试判断。</p>
<p>前景理论：人们规避损失的愿望强于获得收益的愿望，即从损失100元得到的痛苦大于获得100元得到的快乐。从演化角度看，这是因为风险厌恶型的人更有可能生存下来。</p>
<p>前景理论推论：人们倾向于在获得收益时偏爱确定性，在遭受损失时甘冒风险。比如在100%获得900元和90%获得1000元之间选择前者，在100%损失900元和90%损失1000元之间选择后者。</p>
<p>禀赋效应：为另外一个重要的行为经济学家理查德 泰勒提出，人们会高估已经获得的物品的价值（因为厌恶损失），除非这个物品的主要属性就是交易（比如钱）。</p>
<p>峰终效应：在作者所举的实验中，被试的手被分两次放到冷水中，第一次60秒；第二次60秒+30秒，后面的30秒水逐渐升温，到最后就不那么刺骨了。让被试挑选一种方式再来一次时，多数人选择了90秒的那种！总的来说，人们对某段体验的记忆约等于体验的峰值强度和体验结束时强度的平均值。换言之，比起过程或过程长度，结局更为重要。</p>
<p>版权归作者所有，任何形式转载请联系作者。<br>作者：伊卡洛斯（来自豆瓣）<br>来源：<a href="https://book.douban.com/review/5718966/" target="_blank" rel="external">https://book.douban.com/review/5718966/</a></p>
<p> 快慢：<br>     快思考包括直觉思维的不同形式，例如专家式和启发式，也包括感觉和记忆等所有无意识的大脑活动。而慢思考是一种更慢、更严谨，需要投入更多脑力的思考形式。前者的直觉性往往比当事人感觉到的还要大，而且它也是做出的决策和判断的幕后主使。虽然快思考是我们许多错误的原因，但也是我们许多正确做法的原因，而且我们也常做正确的事。我们的想法和行动通常由快思考，是当机立断的。快思考的一个优点就是储存在我们联想记忆中丰富而详细的世界：在这个世界里，人们能在不到一秒的时间内，从普通事件中区分出令人惊奇的事件；理解对自己所期望的事生成想法，并对令人惊奇之事和正在发生的事自动搜寻有因果关系的解释。换言之，快思考的构建意义在于让我们以为我们这个世界比现实更整洁、简单、可预知、富有逻辑， 我们可以预知并控制未来。</p>
<pre><code>但是，我们的大脑有说不清楚的局限：我们对自己认为熟知的事物确信不疑，我们无法了解自己的无知程度，无法确切了解自己所生活的这个世界的不确定性。我们总是高估自己对世界的了解，却低估了事件中存在的偶然性。当我们回顾以往时，由于后见之明，对有些事会产生虚幻的确定感，因此我们变得过于自信。
因为这一点，我们如果不能通过对慢思考和快思考的训练，会导致我们在产生各种各样的错误行为：
1）损失厌恶：所有人都想有所得，但会更努力地避免有所失。损失厌恶偏爱机构或个人对当前生活的细小改变，这种保守主义的做法让我们更希望保持一个稳定的状态，是引力作用让我们的生命无限靠近参照点。于是，人们在只有没有理想的选择时，才会愿意碰运气。为收益愿冒风险，为损失保持谨慎。这也告诉了我们为什么机构要比个人更容易犯规避错误，因为机构的人多，自然就会思考得很慢，也更有能力按规则行事。
2）决策体验：出乎大部分人意料的是，体验价值和决策价值，往往是不一致和不匹配的。而我们在现实里面，往往把经济行为与公平性自以为是地调和起来（经济行为是受自身利益驱使的，而与是否公平无关。关于公平性，有一条基本原则是：不可利用市场的力量将损失强加给他人。）；我们对经历的记忆，也影响着我们对过往的评价（记忆的消除会大大降低体验的价值）；我们对一个人的理性程度的判断也是基于他的信念或者偏见的合理性（而不是去看它们是否一致）。

快思考的特点：
1）生成印象、感觉和倾向；当慢思考支持这些行为时，它们就会成为信仰、态度和意图；
2）自主且快速运行，只需付出较少努力，甚至不用付出努力，没有自主控制的感觉；
3）当发现（搜寻）特殊形式时，能接受慢思考编控来调动注意力；
4）在接受了一定的训练后，能够做出熟练的回应，产生直觉；
5）为联想记忆激发出来的各种想法创造连贯形式；
6）将认知放松感和真理错觉、愉快的感觉以及放松的警惕感联系起来；
7）区分常态中令人惊奇之事；
8）推断原因和意图；
9）忽略歧义，按捺心中的疑问；
10）夸大情感的一致性（光环效应）；
11）将注意力集中在当前的证据上，忽略不存在的证据（眼见即为真实）；
12）做一些基本估测；
13）通过常态和原型来表现集合，但不要将两者看成一个整体；
14）通过测量确定不同程度对应的匹配物（比如音量的大小）；
15）真正去空想，而不是计算（思维的发散性）；
16）有时用简单点的问题替代难题（启发法）；
17）对变化的感知比对形态的感知更敏锐（前进理论）；
18）对可能性做出过高估计；
19）对数量越来越不敏感（心理物理学）；
20）对损失的反应比获得更强烈（损失厌恶）；
21）严密设计决策问题，分别进行讨论；


谬误：
启发法所产生的偏见：
1）代表性：对结果的先验概率不敏感，对样本大小的不敏感，误解机会（如赌徒谬误），对可预测性的不敏感，效度错觉，误解回归性；
2）可得性：例子的可提取性，搜索集合的有效性，不同任务会引发不同的搜索集合，想象力偏见，相关性错觉；
3）锚定：不充分的判断，评估连续事件（高估）与非连续事件（低估）的偏差，评估主观概率分布时的锚定；

其他盲区：
0）厌恶损失：这一方面导致人们对失败总是难以接受，所以失败的一方常会保持战斗力，即使在知道对方胜利只是时间问题的情况下，输的这一方还是会做无畏的挣扎。另一方面，也导致时刻关注每日的经济波动是种亏本的对策，因为频繁的低额损失带来的痛苦比同样频率的低额收益带来的快乐程度更为强烈。
1）记性不好：人很容易忘记自己正在做什么，更不要说自己做过的事情。同时，我们会忽视显而易见的事，也会忽视自己屏蔽了这些事的事实。、
2）叙事谬误/后见之明：为过去的憾事编造牵强的解释，并信以为真，以此来蒙蔽自己。从而影响我们的世界观和我们队未来的预期。好像当初的每一个决定都至关重要。
3）关注特例：实际上，相关度和回归度是同一个概念，只要两个数值之间的相关度不高，就会出现回归平均值的情况。
4）归因谬误：对于大多数人来说，错误的原因最重要。
5）规划谬误：不切实际地接近理想状况的计划和预测，以及自以为可通过参考类似案例的数据而得到提高。
6）理论诱导：一旦你接受了某个理论并将其作为一个思考工具，就很难注意到其错误。如果你碰到一个似乎和这个模式不相符的例子，就会认为肯定有一个非常合理的解释，只是不知为什么你没有发现这个解释。你认为这个理论无可指摘，而且很信任认同这个理论的那群专家。
7）预期原理：通过可能性来判定决策，然而这是一种不可取的心理，因为在实际中，人们对结果的重视程度和对结果可能性的重视程度不同。可能性效应会重视不大可能的结果，而几乎肯定的结果相对于确定的结果来说，受到的重视程度要小。
8）莫比定律：反常规事件会吸引人的注意力，还会使人们认为在相同情况下这些事件也应该是正常的。当你脑海中闪现关于某个事件生动的画面时，这个事件不发生的可能性所带来的影响同样也很生动，因此就被过度权衡。主要注意力和显著性会导致人们过高评估罕见事件的发生概率，也会过高权衡低概率的结果。
9）眼见即真：我们有限的大脑很难达到逻辑一致性的理想状态，因为我们易受眼见即为事实的影响，不愿动脑筋。


训练：
训练自己的决策能力，从点菜开始，利用两种思维方式，最大限度地规避风险 —— 代价最小，效果最好。     
首先，训练自己的快思考能力，需要两个基本条件，第一是一个可预测的、有规律可循的环境；另外一个是拥有通过长期训练来联系这些规律的机会。不但如此，在这两种条件都具备的情况下，也需要至少一万小时的训练才可以使自己的快思考能力在某个特定的领域有所水平。这也说明了，只有环境有规律可循，直觉才可信。

谬误克服：
0）厌恶损失：学会商人的思考方式。商人通常都会问自己“与可以得到的其他东西相比，我手里的东西真的是我特别想得到的么？”而穷人只能在不同的损失之间做出选择，这是因为他们对获得和放弃之间的区别很在意。
1）乐观主义：事前验尸，即考察自己能否承担这次决策失败的风险？
2）统计谬误：采用计算方法来确定样本规模，而不是依靠直觉印象做决定（依据统计学观点，我们不应关注当前事件的成因，而应当关注其未来走向）。
3）锚定效应：有意地“为对方着想”，因为这样能否定产生这些效应的带有偏见的想法。
4）规划谬误：尽力划分出预测问题的类别，这样才能从分利用所有能够获取的分部信息。
5）预期原理：要提升预测的准确度，最终的结果应由（简单直接的）公式给出，在低效的情况下尤其如此（例如，婚姻稳定性 = 做爱频率 - 争吵频率）。

习惯养成：
1）依靠统计结果来使整体风险降低。
2）采纳外部意见来进行决策：要时刻注意到，不同的表述使人们做出不同的决策，使他们对该怎么做生成不同的意见。
3）通过改变参照点来重新架构问题。
4）降低查看自己投资结果的频率，并在获得广泛思考带来的情感收益的同时节约时间、减轻痛苦。
5）掌握更为丰富的语言：这对于建设性批评来说是必不可少的技能，而为了想清楚未来，我们需要清楚自己过去曾经用来表明信念的语言。
6）用贝叶斯定理来约束直觉：以相对合理的基础比率对结果的可能性做出判断；质疑我对证据的分析（它们通常都会被夸大）。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;“美好的事物值得付出、等待和分享”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/10785583/&quot;&gt;思考，快与慢&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;a href=&quot;https://book.douban.com/search/%E4%B8%B9%E5%B0%BC%E5%B0%94%C2%B7%E5%8D%A1%E5%B0%BC%E6%9B%BC&quot;&gt;[美] 丹尼尔·卡尼曼   &lt;/a&gt;&lt;br&gt;豆瓣评分：8.2&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img1.doubanio.com/lpic/s10345719.jpg&quot; width = &quot;398&quot; height = &quot;512&quot; alt=&quot;personal photo&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;人类究竟有多理性？——思考，快与慢，我们的大脑有快与慢两种作决定的方式。常用的无意识的“系统1”依赖情感、记忆和经验迅速作出判断，它见闻广博，使我们能够迅速对眼前的情况作出反应。但系统1也很容易上当，它固守“眼见即为事实”的原则，任由损失厌恶和乐观偏见之类的错觉引导我们作出错误的选择。有意识的“系统2”通过调动注意力来分析和解决问题，并作出决定，它比较慢，不容易出错，但它很懒惰，经常走捷径，直接采纳系统1的直觉型判断结果。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Thinking in Systems-A Primer</title>
    <link href="http://aisee.me/2017/06/23/MyView/Book/Thinking%20in%20Systems-%20a%20Primer/"/>
    <id>http://aisee.me/2017/06/23/MyView/Book/Thinking in Systems- a Primer/</id>
    <published>2017-06-23T10:53:18.000Z</published>
    <updated>2017-06-23T11:08:37.252Z</updated>
    
    <content type="html"><![CDATA[<p><strong>“美好的事物值得付出、等待和分享”</strong></p>
<p><a href="https://book.douban.com/subject/11528220/" target="_blank" rel="external">系统之美</a><br>        副标题:决策者的系统思考<br>作者：<a href="https://book.douban.com/search/%E5%BE%B7%E5%86%85%E6%8B%89%E2%80%A2%E6%A2%85%E5%A4%9A%E6%96%AF" target="_blank" rel="external"> [美] 德内拉•梅多斯   </a><br>豆瓣评分：8.1</p>
<p><div align="center"><br><img src="https://img3.doubanio.com/lpic/s11430191.jpg" width="398" height="512" alt="personal photo"><br></div></p>
<blockquote>
<p>讲解了系统动力学的基本概念、列举了常见的系统结构，还详细陈述了复杂系统的3大特征、8大陷阱与对策、12大变革方式以及15大生存法则。作者把系统思考从计算机和方程式的世界中解脱出来，以各种真实的案例，阐述了系统思考如何应用于各种现实问题，向读者展示了如何提升和应用系统思考技能——这一项普遍被认为是21世纪全球领导力的核心技能。</p>
</blockquote>
<a id="more"></a>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="前言-001"><a href="#前言-001" class="headerlink" title="前言 //001"></a>前言 //001</h3><p>引言 系统多棱镜 //005<br>第一部分 系统的结构和行为</p>
<h3 id="第1章-系统之基础-017"><a href="#第1章-系统之基础-017" class="headerlink" title="第1章 系统之基础 //017"></a>第1章 系统之基础 //017</h3><p>总体大于部分之和 //018<br>从关注要素到透视游戏规则 //020<br>理解系统行为的动态性 //027<br>反馈：系统是如何运作的 //037<br>自动洄游的鱼：调节回路 //040<br>脱缰的野马：增强回路 //045</p>
<h3 id="第2章-系统大观园-051"><a href="#第2章-系统大观园-051" class="headerlink" title="第2章 系统大观园 //051"></a>第2章 系统大观园 //051</h3><p>单存量系统 //053<br>双存量系统 //083<br>第二部分 系统思考与我们</p>
<h3 id="第3章-系统之美-103"><a href="#第3章-系统之美-103" class="headerlink" title="第3章 系统之美 //103"></a>第3章 系统之美 //103</h3><p>适应力 //105<br>自组织 //109<br>层次性 //113</p>
<h3 id="第4章-系统之奇-119"><a href="#第4章-系统之奇-119" class="headerlink" title="第4章 系统之奇 //119"></a>第4章 系统之奇 //119</h3><p>别被表象所迷惑 //122<br>在非线性的世界里，不要用线性的思维模式 //127<br>恰当地划定边界 //132<br>看清各种限制因素 //139<br>无所不在的时间延迟 //144<br>有限理性 //147</p>
<h3 id="第5章-系统之危与机-155"><a href="#第5章-系统之危与机-155" class="headerlink" title="第5章 系统之危与机 //155"></a>第5章 系统之危与机 //155</h3><p>政策阻力：治标不治本 //157<br>公地悲剧 //163<br>目标侵蚀 //170<br>竞争升级 //173<br>富者愈富：竞争排斥 //177<br>转嫁负担：上瘾 //183<br>规避规则 //190<br>目标错位 //193<br>第三部分 改变系统</p>
<h3 id="第6章-系统之杠杆点-201"><a href="#第6章-系统之杠杆点-201" class="headerlink" title="第6章 系统之杠杆点 //201"></a>第6章 系统之杠杆点 //201</h3><ol>
<li>数字：包括各种常数和参 数 //205</li>
<li>缓冲器：比流量力量更大、更稳定的存 量 //208</li>
<li>存量–流量结构：实体系统及其交叉节 点 //209</li>
<li>时间延迟：系统对变化做出反应的速度 //211</li>
<li>调节回路：试图修正外界影响的反馈力量 //213</li>
<li>增强回路：驱动收益增长的反馈力量 //216</li>
<li>信息流：谁能获得信息的结构 //218</li>
<li>系统规则：激励、惩罚和限制条件 //220</li>
<li>自组织：系统结构增加、变化或进化的力量 //221</li>
<li>目标：系统的目的或功能 //225</li>
<li>社会范式：决定系统之所以为系统的心智模式 //227</li>
<li>超越范式 //230<h3 id="第7章-与系统共舞-233"><a href="#第7章-与系统共舞-233" class="headerlink" title="第7章 与系统共舞 //233"></a>第7章 与系统共舞 //233</h3>跟上系统的节拍 //239<br>把你的心智模式展现在阳光下 //241<br>相信、尊重并分享信息 //243<br>谨慎地使用语言，并用系统的概念去丰富语言 //244<br>关注重要的，而不只是容易衡量的 //246<br>为反馈系统制定带有反馈功能的政策 //248<br>追求整体利益 //250<br>聆听系统的智慧 //250<br>界定系统的职责 //251<br>保持谦逊，做一名学习者 //253<br>庆祝复杂性 //255<br>扩展时间的范围 //256<br>打破各种清规戒律 //257<br>扩大关切的范围 //258<br>不要降低“善”的标准 //259<h3 id="附-录-261"><a href="#附-录-261" class="headerlink" title="附 录 //261"></a>附 录 //261</h3>系统术语表 //263<br>系统原理概要 //265<br>常见的系统陷阱 //239<br>采取干预措施的杠杆点 //273<br>系统世界r 生存法则 //274<br>模型公式 //275<br>译者后记 //291</li>
</ol>
<h2 id="豆瓣笔记"><a href="#豆瓣笔记" class="headerlink" title="豆瓣笔记"></a>豆瓣笔记</h2><p>任何一个系统都包括三种构成要件：要素、连接、功能或目标</p>
<p>系统的3大特征<br>1.适应力，系统内部因存在很多互相影响的反馈回路，当系统受扰动时，仍旧可以以多种不同的方式使系统恢复至原有的状态。<br>2.自组织，系统所具备的使其自身结构更为复杂化的能力。<br>3.层次性，系统和子系统的包含和生成关系。</p>
<p><a href="https://www.douban.com/people/95832822/" target="_blank" rel="external"> 燃情岁月</a></p>
<p>这本书最难得的地方是它在最后的一部分勇敢的承认系统思考的不足，指出系统思考也只是我们认识世界的一种方法和观点，各种模型只是对客观世界的一种近似，永远无法取代真实而丰富的现实，我们要做的就是通过系统思考提供的方法去更好地理解我们的世界，把握它的特性和趋势，顺势而为，而不是妄图控制系统。</p>
<h3 id="一、系统及组成"><a href="#一、系统及组成" class="headerlink" title="一、系统及组成"></a>一、系统及组成</h3><p>【什么是系统？】</p>
<p>我发现越是按照事物本身的特征去认识和感知事物的方法越是有效。简单的例子就是学习知识的时候，因为知识本身就是相互联系的，所以当你以联系的观点去打通各种知识的时候，你的学习效果就是最佳的。而系统思考的观念也符合这个道理，因为我们现实的世界本身就是相互联系的，但是为了科学研究的方便，我们将研究对象拆分开来，这种拆分在一定程度上降低了我们的研究难度，但同时这种拆分有时也会破坏各个系统间的连接，而系统的特性往往和部分间的连接密切相关。系统思考的由来便是从整体上去研究事物，核心就是研究系统各个部分间的联系，以及各种联系对系统特性的影响，而这种观点更加符合现实世界的特征。<br>为了研究系统思考，我们必须先认识什么是系统？系统指的是指具有一定的功能或者为实现目标由不同的部分相互联系总成的具有一定结构的整体。有定义可知，系统由三大部分组成：<strong>功能或目标、要素或部分、联系</strong>，接下来我们分别谈谈这三个部分。</p>
<p>系统要素<br>    部件<br>与系统对应的就是部件或部分，它是系统的组成部分，这个很好理解，比如将一颗树看成一个系统，它的根、树干、树叶便是他的各个组成部分。</p>
<p>    目标或功能<br>任何一个系统都是有一定功能或目标的。比如一只由若干球员组成的球队就是一个系统，这个系统的目标就是要赢得比赛。一辆汽车也是一个系统，它具有的一个典型功能就是代步。</p>
<p>    连接<br>这可以说是系统的核心。我们以前就听说过，系统功能大于部分的总和，直觉告诉我们的确是这样。但是系统怎么实现其功能大于总和的一直是个问题。其实核心便在于连接。通过连接，各个部分可以有效的结合起来，从而实现特定的功能。</p>
<p>涉及到连接，本书重点谈到了连接的形式和功能，但连接同时还涉及到媒介。就我的理解，媒介通常可以分为三类：物质、能量、信息。</p>
<p>我们讲到血缘关系，其实就表达了物质作为媒介的连接，我们称其为物质流。能量连接的一个代表就是我们骑自行车的时候，人和车就组成了一个系统，当你掌控方向，同时给踏板施加力量的时候就是将人的生物能传递给自行车，通过这种能量流就建立了人和车间的联系。信息流就更不用说了，可以说它在我们现在的社会无处不在，互联网就是一个典型的代表，通过网络中的信息的快速流动，可以形成各种系统，比如各种社群，“罗辑思维社群”就是一个典型的代表。</p>
<p>    结构<br>同样的部分，同样的物质连接物质，为什么效果或特性会完全不同呢。一想到这里，你会想到哪个例子？我想到最典型的就是石墨和金刚石。现实中有很多这样的例子，同样的球员，当采取不用的战术或反应策略，结果可能完全不同。而这种不同的战术就体现出了结构的作用。</p>
<p>【二、系统特征】</p>
<p>前面我们谈到了系统的概念和组成，懂得了系统就是为了实现某种功能和目标，由各个部分通过一定的方式连接起来，从而形成的具有一定结构的整体。而里面的核心是连接，我们介绍了连接的介质，但是没有介绍连接将会产生的效果。下面将重点介绍连接产生的效果以及系统的一些特性。</p>
<p>    两种回路——调节回路和增强回路</p>
<p>系统各个部分间的联系导致的最典型的结果就是回路，或者叫反馈。什么是反馈呢？简单的将就是系统中某个部分变化的结果反过来会影响该部分的变化趋势。比如在一个草原中，当羊群中羊的数目增加时，可能会导致它的天敌——狼的数目的增加，而狼的增加又会反过来限制羊群中养的增加，从而使羊保持在一个稳定的量，这种回路我们称之为调节回路。与之相对应的是另一种回路，就是增强回路，顾名思义，就是变化的结果会导致变化本身的加剧，比如在学校里，某个学生一门课程学得很好，那么他这门课的成绩就会比较高，老师肯能就比较喜欢他，从而导致他更喜欢这门课，学习更加投入，从而使成绩更好，从而形成一个上升的螺旋结构。再比如在机械振动中存在的自激振动，某个问题振动的结果会导致振动的进一步加剧。但是，一般这种加剧不会无限制的，因为在一方面系统中会存在各种回路，会有回路调节它的增加，从而使其增加渐渐变成一个稳定的状态，而这就会导致我们常见的非线性，在后面会谈到这个概念。</p>
<p>    两种量——存量和流量</p>
<p>前面提到了两种回路，这里介绍另一个重要的概念对——流量和存量，一方面进一步理解回路，另一方面为我们后面的解释做铺垫。存量指的是系统中元素的量，比如羊的数量，流量（流入量和流出量）表示流入或流出系统的元素的量，比如出生和失去的羊数。再比如一个人在拥有的存款可以理解为存量，收入和资产可以理解为流量。很容易理解，在其他条件不变的情况下，收入的增加会导致存款的增加，而存款增加反过来导致利息收入的增加，从而形成一个增强回。</p>
<p>而支出一般会导致存款的减少，但如果支出中包含了投资，那么投资的收益会导致存款的增加，即在流出中，它可以同时包含两种回路。</p>
<p>三大特征<br>以上重点介绍了系统的连接，其中包括连接的媒介——“三流“（信息流、能量流、物质流），也介绍了连接后常见的效果——回路。下面将介绍各种连接综合起来后赋予系统的一些特性。</p>
<p>    总体大于部分<br>这个不做过多描述，大家都好理解，只需指出，系统大于部分总和的根源在于部件间的连接。</p>
<p>    动态<br>系统是动态变化的，这个也比较好理解，在振动中指的就是一个系统的时变特性。</p>
<p>    开放性<br>这里的开放性指的是系统和周围系统或者外界环境间的联系和流动。</p>
<p>    适应性<br>如果形容一个物体，适应性可以指它在受力后恢复原状的能力。<br>如果形容一个人，适应性指的是快速恢复的能力，比如体力、精神状态等。<br>而对于一个系统而言，适应性指的是系统在多变的环境中保持自身的存在和运作的能力，而这就是之前看到的另一部很有意思的书——《反脆弱》中的核心观点，而与之对应的是脆弱性或刚性。</p>
<p>    自组织<br>还记得我曾经写过的另一个日子——《黑客帝国的可能性-混沌和进化》，里面专门提到了自组织这个概念。这里强化一下：系统通过学习和进化使其使其结构更为复杂的能力称为自组织。比如生物的进化过程就是一个自组织的体现。这里特别指出，导致系统自身复杂话的底层代码往往并不复杂，它的组成元素类别可能很少，元素间的连接规则也可能很简单，但是通过这些简单的元素和规则可以形成复杂的事物，最后甚至导致不可预测的混沌现象。<br>比如科赫雪花，它的原则就是在一个等边三角形的边上再起一个等边三角形。</p>
<p>    层次性<br>层次性用来表达系统中包含系统这个概念。就像一部汽车，整个来看，它是一个系统，分解来说，它又可以分为动力系统、转向系统、制动系统等。而每个系统由可以再分解，直至各个零件。很多系统都具有这样的特征，比如一个公司里面会有部门、部门下会有科室，科室下面还会有项目组，项目组下面就是个人了。这种层级结构会产生很复杂的系统结构，过多的层级有的时候反而不利于整个系统的运行，典型的表现就是反应慢。比如在一个层级过多的公司中，市场有变化的时候，有的时候一线的人员要通过层层结构才能将信息反馈上去，而要采取行动又要层层审批，这些过程导致周期长，而市场可能又发生了另外的变化。这也是罗胖一直强调的大组织的弊端，而互联网下的个人直接连接也会使系统复杂，但这种复杂是因为连接的多样性导致的，它反而有利于系统内部的三流，从而更好地发挥效果。</p>
<p>六大误区<br>其实这六大误区中的一些其实也是系统的一些特征，只是人们在思考的时候，有时容易走入误区，所以将其放到误区中。这里我们用六个词汇对信息进行压缩，便于记忆。</p>
<p>    表里<br>透过现象看到本质，这个不用多讲，大家都清楚。我们不要被表面的现象误解，要多去思考内在的结构和深层次的原因，多问几个为什么。</p>
<p>    曲直</p>
<p>这里的曲直想说明是系统中的线性和非线性问题。典型的线性关系，比如你在超市购物，你买一斤肉是20元，那么你买10斤就是200，依次类推（排除量多价低的情况）。但是现实中还有很多的现象不是非线性的，比如商业中的复利效应。此外，这种曲直还包括看待问题不能直线思考，即单一性思考，常见的是单一的因果论。而在机械振动中也存在线性振动和非线性振动之说，前者中一个有效的原理就是叠加原理，但是在非线性系统中就不能这样。</p>
<p>    边界<br>我们研究系统的时候通常都是研究在一定边界下的系统，因为一个系统通常不会孤立的存在，它总是和周围的环境，周围的系统之间存在着“三流“。所以，我们在划分系统的时候，要考虑到边界的范围。而很多时候，边界上的情况也是很复杂的。比如工程中的流固耦合问题，你怎么去处理流体和固体的边界，怎么实现边界上力、温度等量的流通和反馈。</p>
<p>    延时<br>你采取一个行动，很多时候不会立马产生效果，这就是延时。比如你想减肥，你今天节食和运动，但是你不会今天一下就瘦下来，身体这个系统需要一定的反应时间。对于机械系统，一个激励源通常不会立即就有相应，而是会存在一个滞后，这是由于系统的惯性和阻尼造成的。在系统中，前面的存量会导致滞后，或者说是一个缓存作用，比如一个人失业了，如果它有足够的存款，那么短期内它的生活不会受到太大的影响。而延时效应也告诉我们做事需要耐心，因为整个系统的响应需要时间，我们要学会推迟满足感也是因为这个道理。这就类似于中医中的调理的道理，短期不一定有效，但是对于长远效果是有利的。在后面的系统基模中还会重点谈到延时效果。</p>
<p>    有理<br>这里的“有理”不是“有道理”，而是指“有限理性“。亚当斯密提出了”市场无形的手“概念，每个人只需要追求自身利益的最大化，”无形的手“会引导市场增加集体的福利。这在一定的程度上是有道理的，但同时世界银行经济学家赫尔曼.戴利也提出了”看不见的脚“，或者诺贝尔经济学奖得主赫伯特西蒙所说的”有限理性“，因为人们通常只会根据个人掌握的信息进行决策，而每个人掌握的信息不应是全的，甚至是错的，而每个人的决策最后导致的不一定是系统的最优。而且，亚当斯密的理论有个前提”经济人“——每个主体都是基于完备的信息和理性做决定的人。</p>
<p>    有限<br>有限表示现实世界的系统一般都是多输入多输出，系统的发展会受到很多的因素的影响，特别是当系统发展到一定的阶段。比如一个公司发展迅速，为了增加销量，雇佣了很多的销售人员，于是订单增多，导致产能跟不上订单数，产品质量下降，导致一部分的客户流失，于是又考虑建立新的工厂，雇佣了大量的新人，对新人要进行培训，但是新人的技能提升速度跟不上设备的筹建速度，导致质量又下降，客户流失，经过一定的时间，人员素质提高了，质量又上去了，于是订单又增多，当订单数再次超过产能就出现类似的现象。这个例子也说明，当解除了系统的一种主要的限制因素，系统会得到发展，同时它也会调整系统中的限制因素的强弱关系，从而导致其它限制因素强弱关系的对比。</p>
<p>【三、系统基模】</p>
<p>系统的基模是作者综合前面的理论和知识，在观察显示世界的现象中总结出来的基础模型，在《第五项修炼》中彼得圣吉给出了九种基本模型，再次我只简单的谈论其中的几个典型的代表。</p>
<p>饮鸩止渴</p>
<p>这个模型说明的是，当一个问题出现的时候，通常会有不同的解决办法，当根本的解决办法比较困难，人们倾向于寻找“捷径”，但是往往这种捷径在缓解症状后，在一定的时间延迟后会反过来使症状恶化。比如一个人精神不好，网上喜欢熬夜，于是为了提升就喝大量的咖啡，在短期内精神的确变好，但会导致睡眠不佳，进而使得第二天的精神更差，于是又通过增加咖啡的量来改善，形成恶性的循环。我认为这跟人的心里有关，就像《自控制》里面提到的，人们对眼前的诱惑更难抵挡，人们总是渴望立竿见影的解决办法，所以这类的东西往往具有很多的诱惑力，但是这种创口贴式的解决办法，没有从根本上解决问题，就像前面提到的，如果要精神状态好，最根本的解决办法就是养成良好的生活习惯，虽然这类措施很多不是立马可以见到效果，但却是从根本上解决问题。</p>
<p>饮鸩止渴基模</p>
<p>军备竞赛<br>这个模型说的是相互恶性竞争导致的结果。比如冷战时的美俄两国，一方为了在军事上压过对方，就生产比对方多的核武器，当对方得知这个消息后，也采取相应的措施，如此循环，直到有解决的方案出现。</p>
<p>目标侵蚀<br>这是我很喜欢的一个模型，其实它和《第五项修炼》中提到的自我超越以及幸福课中讲到的幸福提升的方法有很强的联系。前者提出的一个重要的概念是“创造性张力”，即现实和目标的距离会导致两种结果：要么提升现实到目标，要么降低目标到现实，这两者都体现了反馈的调节作用。而在幸福课中，Tal给出的理由是，人们不喜欢“不一致性”，就是头脑的东西和现实不一致。他也指出了传统的提升人们幸福感的方法是告诉人们减低标准和期望，比如你以前的目标是90分，到只考了85分， 心情不愉快，为了使自己高兴，就告诉自己没必要要求那么高，于是将标准降为80分，这样就可以使自己的情绪变好。这也是现实中我们常见的情形，就是安慰别人不要期望太高，免得失望越大。但是你会发现习惯性的妥协，不断的减低目标，表面上满足了心理需求，但是它却在侵蚀自己，使的标准越来越差。而幸福课中强调，我们要设定一个目标后，在评估这个目标合理后，就不要轻易的改变，而是要敢于面对问题，克服困难，提升现状。《少有人走的路》也是这样的一个思路，在克服困难中提升心智，虽然这个过程会有难免的痛苦，但有时这是成长必须的，就像锻炼肌肉，一些酸痛是必要的。在《系统之美》中，作者还指出，人们倾向于接受坏消息（人类进化的结果），更容易相信坏消息是真实的，而忽略和过滤掉好的，这样主题的感知到的状态要比实际的糟糕，而目标会受到这个状态的影响。所以，当我们设定目标后，要保持一定的乐观态度，允许自己犯错，将其当做垫，从错误中学习，做一个乐观的现实主义者。两点措施：定的目标不要轻易变化；回想自己打到的最好的状态，以此为目标。</p>
<p>马太效应<br>不多讲，增强回路导致的强者愈强，富者愈富，除非到一定程度受到限制或者外在的干预措施，比如政府。<br>四、系统应用<br>前面介绍了系统的基模，本书难能可贵的是作者不经给出了解释，而且对每一种模型都给出了解决的方案和措施，也就是落脚到了方法论了，这也是我读书的意义，为了更好的实践，而接下来我们就重点谈谈在系统思考的基础上，我们怎么去更好地实践，这也是我们学思行的落脚点。</p>
<p>与系统共舞<br>书中作者指出她之前也陷入了一个严重的误区，认为通过系统分析，可以认清系统中的相互联系和复杂纠葛，那么是不是可以借助计算机强大的力量，最后找到系统预测和控制的钥匙呢？不幸的是这是一个错误，而且来源于根深蒂固的工业思想。其中的一个原因就是系统的反馈、自组织、非线性等本质上是不可控的，我们只能以最一般的方式去理解它们。</p>
<p>我们不能让风起云涌，变化万千的世界变得四平八稳，毫无意外，一切尽在掌握，但我们可以从各种意外中学习，从中收益，而这也是《反脆弱》的一个重要思想——从不确定性中获益。我们不能把我们的意志强加于系统，但是我们可以聆听系统的声音，听她们告诉我们什么，并顺应系统的特征，使我们的价值观更好地与之匹配，从而创造出更好的事情来，而这些都是无法只靠意志力来实现的。我们无法控制系统，或者将其彻底搞清楚，但是我们可以与之共舞。</p>
<p>系统中的杠杆点<br>在与系统共舞的同时，作者还给出了与系统共舞的一些技巧和方法，那就是杠杆点，就类似于<strong>武术中的命门，也像中医中的针灸，也好比减振降噪中的模态调整。</strong></p>
<p>作者更具系统的特征，将调节方式归结为12大变革方式，我们只给出其中她认为效果的几个：</p>
<p>    信息流<br>信息作为一种连接媒介，也是重要的系统杠杆点，因为它可以形成反馈，而且成本较低，效果显著，这也是古人讲求三省吾身的意义，就是通过不断的信息反馈来调整自己的姿态和行为。</p>
<p>    目标或功能<br>在不改变系统结构，元素，甚至连接的时候，只是调整一下系统的目标，就会使得系统的表现完全不一样。典型的代表就是里根总统设定的登月计划。这是让我们深思的一个方面。</p>
<p>    超越范式<br>这个部分和中国的无为思想和切合。这是最高的层次，就是放弃任何范式的控制，保持灵活性，意识到没有范式才是真实的。每个人在认识世界方面都有巨大的局限性，这个世界太大，太复杂，远远超出了我们的理解力和认知范围。即使那些不断调整自己世界观的人也无法对这个世界有完整的认识。</p>
<p>总体而言，我们了解了系统的一部分的特征，这些观点也是一种范式，甚至可能是错误的，我们最好的方式就是学会顺应系统的特征，聆听它的声音，顺势而为。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;“美好的事物值得付出、等待和分享”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/11528220/&quot;&gt;系统之美&lt;/a&gt;&lt;br&gt;        副标题:决策者的系统思考&lt;br&gt;作者：&lt;a href=&quot;https://book.douban.com/search/%E5%BE%B7%E5%86%85%E6%8B%89%E2%80%A2%E6%A2%85%E5%A4%9A%E6%96%AF&quot;&gt; [美] 德内拉•梅多斯   &lt;/a&gt;&lt;br&gt;豆瓣评分：8.1&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img3.doubanio.com/lpic/s11430191.jpg&quot; width = &quot;398&quot; height = &quot;512&quot; alt=&quot;personal photo&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;讲解了系统动力学的基本概念、列举了常见的系统结构，还详细陈述了复杂系统的3大特征、8大陷阱与对策、12大变革方式以及15大生存法则。作者把系统思考从计算机和方程式的世界中解脱出来，以各种真实的案例，阐述了系统思考如何应用于各种现实问题，向读者展示了如何提升和应用系统思考技能——这一项普遍被认为是21世纪全球领导力的核心技能。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>SLEEP-Redefine Your Rest,for Success in Work,Sport and Life</title>
    <link href="http://aisee.me/2017/06/23/MyView/Book/SLEEP-Redefine%20Your%20Rest,%20for%20Success%20in%20Work,Sport%20and%20Life/"/>
    <id>http://aisee.me/2017/06/23/MyView/Book/SLEEP-Redefine Your Rest, for Success in Work,Sport and Life/</id>
    <published>2017-06-23T10:38:18.000Z</published>
    <updated>2017-06-23T11:06:57.671Z</updated>
    
    <content type="html"><![CDATA[<p><strong>“美好的事物值得付出、等待和分享”</strong></p>
<p><a href="https://book.douban.com/subject/27023900/" target="_blank" rel="external">睡眠革命</a><br>        副标题:如何让你的睡眠更高效<br>作者：<a href="https://book.douban.com/search/%E5%B0%BC%E5%85%8B%C2%B7%E5%88%A9%E7%89%B9%E5%B0%94%E9%BB%91%E5%B0%94%E6%96%AF" target="_blank" rel="external"> [英] 尼克·利特尔黑尔斯  </a><br>豆瓣评分：8.3</p>
<p><div align="center"><br><img src="https://img1.doubanio.com/view/thing_review/large/public/p658788.jpg" width="398" height="512" alt="personal photo"><br></div></p>
<blockquote>
<p>睡得多≠睡得好，高质量的睡眠是让生活效率更高、让精神状态更好的关键。</p>
</blockquote>
<a id="more"></a>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>引言 不要浪费宝贵的时间睡觉</p>
<h3 id="第一部分-睡眠修复的关键指标"><a href="#第一部分-睡眠修复的关键指标" class="headerlink" title="第一部分 睡眠修复的关键指标"></a>第一部分 睡眠修复的关键指标</h3><p>1 时钟在嘀嗒<br>昼夜节律<br>2 走慢与走快<br>睡眠类型<br>3 90分钟睡眠法<br>睡眠周期<br>4 热身与舒缓<br>睡眠前后的例行程序<br>5 暂停片刻，该休息了！<br>日间小睡<br>6 改造你的床铺<br>寝具套装<br>7 修复室<br>睡眠环境</p>
<h3 id="第二部分-R90在行动"><a href="#第二部分-R90在行动" class="headerlink" title="第二部分 R90在行动"></a>第二部分 R90在行动</h3><p>8 把握先机<br>利用R90修复方案<br>9 与敌同眠<br>各种睡眠问题<br>10 主队<br>性，伴侣和现代家庭<br>你个人的最佳状态<br>参考文献<br>致谢</p>
<p><a href="https://book.douban.com/review/8550400/" target="_blank" rel="external">初晓</a></p>
<p>“90分钟是一个人经历各个睡眠阶段所需要的时间，这些睡眠阶段组成了一个睡眠周期。”一个睡眠周期又包含了4-5个不同的睡眠阶段，分别为：非眼动睡眠（打瞌睡）、非眼动睡眠（浅睡眠）、眼动睡眠（深睡眠）、快速眼动睡眠，其中眼动睡眠包含了第3-4阶段。</p>
<p>别咖啡成瘾，每天的咖啡因摄入不要超过400毫克。</p>
<p>最好的睡眠姿势是胎儿姿势，躺向非主要身体一侧。就是惯用左手的向右侧睡，惯用右手的向左侧睡。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;“美好的事物值得付出、等待和分享”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/27023900/&quot;&gt;睡眠革命&lt;/a&gt;&lt;br&gt;        副标题:如何让你的睡眠更高效&lt;br&gt;作者：&lt;a href=&quot;https://book.douban.com/search/%E5%B0%BC%E5%85%8B%C2%B7%E5%88%A9%E7%89%B9%E5%B0%94%E9%BB%91%E5%B0%94%E6%96%AF&quot;&gt; [英] 尼克·利特尔黑尔斯  &lt;/a&gt;&lt;br&gt;豆瓣评分：8.3&lt;/p&gt;
&lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://img1.doubanio.com/view/thing_review/large/public/p658788.jpg&quot; width = &quot;398&quot; height = &quot;512&quot; alt=&quot;personal photo&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;睡得多≠睡得好，高质量的睡眠是让生活效率更高、让精神状态更好的关键。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Beautiful Views</title>
    <link href="http://aisee.me/2017/06/05/MyView/Journey/view-of-journey/"/>
    <id>http://aisee.me/2017/06/05/MyView/Journey/view-of-journey/</id>
    <published>2017-06-05T12:28:06.000Z</published>
    <updated>2017-06-05T12:30:23.583Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Beautiful things are worthwhile to expend, wait and share</strong></p>
<blockquote>
<ul>
<li>不受诱惑，心无旁骛，专注是一种品格，它是通往成功与辉煌的真正捷径；</li>
<li>创新是主旋律；</li>
<li>生活中不缺少美，而是缺少发现。</li>
</ul>
<ul>
<li>Not tempted,Heartless,Focus is a character,It is a real shortcut to success and glory;</li>
<li>Innovation is the main theme;</li>
<li>Life is not the lack of beauty, but the lack of discovery.</li>
</ul>
</blockquote>
<p><img src="http://omj173lhw.bkt.clouddn.com/20170322_165410.jpg" alt=""></p>
<a id="more"></a>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_135452.jpg?imageMogr2/thumbnail/!75p" alt="20170508_135452.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170509_102146.jpg?imageMogr2/thumbnail/!75p" alt="20170509_102146.jpg"></p>
<p><a href="">Book City</a></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170509_121432.jpg?imageMogr2/thumbnail/!75p" alt="20170509_121432.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_105847.jpg?imageMogr2/thumbnail/!75p" alt="20170508_105847.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_114120.jpg?imageMogr2/thumbnail/!75p" alt="20170508_114120.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_114202.jpg?imageMogr2/thumbnail/!75p" alt="20170508_114202.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_122425.jpg?imageMogr2/thumbnail/!75p" alt="20170508_122425.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_135516.jpg?imageMogr2/thumbnail/!75p" alt="20170508_135516.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170509_142754.jpg?imageMogr2/thumbnail/!75p" alt="20170509_142754.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170509_143019.jpg?imageMogr2/thumbnail/!75p" alt="20170509_143019.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170509_151413.jpg?imageMogr2/thumbnail/!75p" alt="20170509_151413.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170510_134152.jpg?imageMogr2/thumbnail/!75p" alt="20170510_134152.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170510_134825.jpg?imageMogr2/thumbnail/!75p" alt="20170510_134825.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170527_104843.jpg?imageMogr2/thumbnail/!75p" alt="20170527_104843.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170529_115131.jpg?imageMogr2/thumbnail/!75p" alt="20170529_115131.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170529_115159.jpg?imageMogr2/thumbnail/!75p" alt="20170529_115159.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170508_113941.jpg?imageMogr2/thumbnail/!75p" alt="20170508_113941.jpg"></p>
<p><a href="">HongKong</a><br><img src="http://om280wrd3.bkt.clouddn.com/20170404_143314.jpg" alt=""></p>
<p><a href="">Big Sand River Parker</a><br><img src="http://om280wrd3.bkt.clouddn.com/20170409_120747.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170409_113116.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170409_112751.jpg" alt=""></p>
<p><img src="http://omj173lhw.bkt.clouddn.com/20170322_170225.jpg" alt=""></p>
<p><a href="http://baike.baidu.com/item/%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6" target="_blank" rel="external">中南大学</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/Dfx09" target="_blank" rel="external">岳麓区麓山南路932号</a><br>特色：知行合一 经世致用 敬业、勤奋、求实、创新<br>推荐指数：★★★★</p>
</blockquote>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170318_104202.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170318_104423.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170318_104651.jpg" alt=""></p>
<p><a href="http://baike.baidu.com/item/%E5%B2%B3%E9%BA%93%E4%B9%A6%E9%99%A2/206944?sefr=cr" target="_blank" rel="external">岳麓书院</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/OuAVk" target="_blank" rel="external">岳麓区麓山路273号</a><br>特色：千年古校<br>推荐指数：★★★★</p>
</blockquote>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170317_120617.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170317_100711.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170317_101547.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170317_100135.jpg" alt=""></p>
<p><a href="http://baike.baidu.com/item/%E6%A9%98%E5%AD%90%E6%B4%B2%E5%A4%B4" target="_blank" rel="external">橘子洲头</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/-EPPk" target="_blank" rel="external">橘子洲大桥</a><br>特色：毛泽东、月季花、沿江道<br>推荐指数：★★★★★</p>
</blockquote>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170316_104447.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170316_104237.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170316_120117.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170316_114841.jpg" alt=""></p>
<blockquote>
<p>【沁园春·长沙】（一九二五年）<br>      独立寒秋，<br>　　湘江北去，<br>　　橘子洲头。<br>　　看万山红遍，<br>　　层林尽染；<br>　　漫江碧透，<br>　　百舸争流。<br>　　鹰击长空，<br>　　鱼翔浅底，<br>　　万类霜天竞自由。<br>　　怅寥廓，<br>　　问苍茫大地，<br>　　谁主沉浮<br>       携来百侣曾游，<br>　　忆往昔，<br>　　峥嵘岁月稠。<br>　　恰同学少年，<br>　　风华正茂；<br>　　书生意气，<br>　　挥斥方遒。<br>　　指点江山，<br>　　激扬文字，<br>　　粪土当年万户侯。<br>　　曾记否，<br>　　到中流击水，<br>　　浪遏飞舟。</p>
</blockquote>
<p><a href="http://baike.baidu.com/link?url=4VzseT6I5S5KEuc8EmwxvmqYotlhnc6d-e2_rk9CouhEspOwUwcowbrCaZ1bNLhA84SXRGM_ITJj-N5e3287U1BOj0BjTn-LCZRuXzIc_uJ-DI1ZgjHXXb0elo2Le3nVVcu5n7l74igGqgzSvKgHWa" target="_blank" rel="external">锦绣中华民俗村</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/tZcBz" target="_blank" rel="external">南山区深南大道中段西端华侨城</a><br>特色：古建筑、山水名胜、民居民俗<br>推荐指数：★★★★★</p>
</blockquote>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170312_130814.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170312_135059.jpg" alt=""></p>
<p><img src="http://om280wrd3.bkt.clouddn.com/20170312_122935.jpg" alt=""></p>
<p><a href="http://jingyan.baidu.com/article/425e69e695ddf5be14fc1645.html" target="_blank" rel="external">儿童乐园</a></p>
<blockquote>
<p>地点：<a href="http://map.baidu.com/?shareurl=1&amp;poiShareUid=c2442c7db98a1c7cc51b75f3" target="_blank" rel="external">侨香路以南，广深高速以北，农林路以西</a><br>特色：儿童、游乐场、免费<br>推荐指数：★★★★★</p>
</blockquote>
<p> <img src="http://okkntqe2h.bkt.clouddn.com/20170217_133433.jpg" alt=""></p>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20170217_133024.jpg" alt=""></p>
<p>  <a href="http://baike.baidu.com/link?url=g5N6inQzetaZNNinKTWr_x-sfg_TDVPB26aHdp6uOTD_CSt5mYHxg_Sa0mJ8CjY1ykZGQ8ncTXqqiQF_emulF6Z018i1OvLg1Zv-VZ2Sltkpq_ncQ0w7QFkKHZkSaZaC" target="_blank" rel="external">欢乐海岸</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/9zLrM" target="_blank" rel="external">南山区白石路8号与海园二路交界</a><br>  特色：彩灯、喷泉、酒吧<br>  推荐指数：★★★★★</p>
</blockquote>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20170207_191817.jpg" alt=""></p>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20170207_190609.jpg" alt=""></p>
<p> <a href="http://baike.baidu.com/link?url=RQtJ4fiAPylBMSRGQ8qx_HM-6U6fB-gGRU427Q4lHJ_xTesdtLQsHGWBKxmhbDRf-h5L_NPUdQ9XHasE5PQMf8OK_lohGwubr3UXvnlG1U2CinO3Uw-S_0AgBzsLfU2k44eIityPX3MBdEyDrRFQI_iQoZGzhAbKxIDXprNHstu" target="_blank" rel="external">大沙河公园</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/yVUQo" target="_blank" rel="external">北环大道与沙河东路交叉口附近</a><br>特色：广场、草地、运动<br>推荐指数：★★★★★</p>
</blockquote>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20161229_122901.jpg" alt=""></p>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20161229_122923.jpg" alt=""></p>
<p><a href="http://baike.baidu.com/link?url=ccPvU0-zjmjSHdJQJsvoHonmUMw1C7AF-zOU1A7VHBRE_eHU-s4SMmt9D680ZIk0Kdr-EWfNFD_JlXzJXVZuGZrIdAfh-5k2XX6W9r33pt7JBZO_G7x0qtG0SqQj7aKUu-cnphGdokXZTVfWipyBFa" target="_blank" rel="external">仙湖植物园简介</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/AJQ6F" target="_blank" rel="external">罗湖区莲塘仙湖路</a><br>特色：弘法寺、植物<br>推荐指数：★★★★★</p>
</blockquote>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20170202_141051.jpg" alt=""></p>
<p><a href="http://blog.sina.com.cn/s/blog_bc9f8f830102v7wb.html" target="_blank" rel="external">月亮湾公园简介</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/WjOxj" target="_blank" rel="external">南山青青世界下边</a><br>特色：百年荔枝古树、廉政主题<br>推荐指数：★★★☆☆</p>
</blockquote>
<p><img src="http://okkntqe2h.bkt.clouddn.com/moonpark.jpg" alt=""></p>
<p> <a href="http://baike.baidu.com/link?url=YpJIrF8gmEpUpPcJHSJuGOrcqouOXc0G82ofqrXuBKAPgLZvX_nT7wqjnzdxPSuh7Tfw0Xzz3gxnsDl4p99jIpQLSMluLZItPeDyh1DXVybOnfimIMOwrxNCUVrWIHdLVv9CnKsnL06g_Fjybr0BKq" target="_blank" rel="external">巽寮湾（xùn liáo wān）简介</a></p>
<blockquote>
<p>地点：<a href="http://j.map.baidu.com/UIOxj" target="_blank" rel="external">惠州市惠东县的大亚湾畔</a><br> 特色：石奇美、水奇清、沙奇白<br> 推荐指数：★★★★★</p>
</blockquote>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20170201_155605.jpg" alt=""></p>
<p><img src="http://okkntqe2h.bkt.clouddn.com/20170201_173907.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Beautiful things are worthwhile to expend, wait and share&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不受诱惑，心无旁骛，专注是一种品格，它是通往成功与辉煌的真正捷径；&lt;/li&gt;
&lt;li&gt;创新是主旋律；&lt;/li&gt;
&lt;li&gt;生活中不缺少美，而是缺少发现。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Not tempted,Heartless,Focus is a character,It is a real shortcut to success and glory;&lt;/li&gt;
&lt;li&gt;Innovation is the main theme;&lt;/li&gt;
&lt;li&gt;Life is not the lack of beauty, but the lack of discovery.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://omj173lhw.bkt.clouddn.com/20170322_165410.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Beautiful Models</title>
    <link href="http://aisee.me/2017/06/05/MyView/Journey/views-of-beauty/"/>
    <id>http://aisee.me/2017/06/05/MyView/Journey/views-of-beauty/</id>
    <published>2017-06-05T11:28:06.000Z</published>
    <updated>2017-06-05T13:53:49.213Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>car exhibition, appreciation of the beauty</strong></p>
</blockquote>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_150655.jpg?imageMogr2/thumbnail/!75p" alt="20170605_150655.jpg"></p>
<a id="more"></a>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_135308.jpg?imageMogr2/thumbnail/!75p" alt="20170605_135308.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_110712.jpg?imageMogr2/thumbnail/!75p" alt="20170605_110712.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_111815.jpg?imageMogr2/thumbnail/!75p" alt="20170605_111815.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_113254.jpg?imageMogr2/thumbnail/!75p" alt="20170605_113254.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_113300.jpg?imageMogr2/thumbnail/!75p" alt="20170605_113300.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_133407.jpg?imageMogr2/thumbnail/!75p" alt="20170605_133407.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_133815.jpg?imageMogr2/thumbnail/!75p" alt="20170605_133815.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_151503.jpg?imageMogr2/thumbnail/!75p" alt="20170605_151503.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_151308.jpg?imageMogr2/thumbnail/!75p" alt="20170605_151308.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_151718.jpg?imageMogr2/thumbnail/!75p" alt="20170605_151718.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/20170605_154748.jpg?imageMogr2/thumbnail/!75p" alt="20170605_154748.jpg"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_1049.JPG?imageMogr2/thumbnail/!75p" alt="IMG_1049.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0804.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0804.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0823.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0823.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0828.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0828.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0838.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0838.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0839.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0839.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0846.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0846.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0849.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0849.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_0977.JPG?imageMogr2/thumbnail/!75p" alt="IMG_0977.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_1038.JPG?imageMogr2/thumbnail/!75p" alt="IMG_1038.JPG"></p>
<p><img src="http://opb37u589.bkt.clouddn.com/IMG_1045.JPG?imageMogr2/thumbnail/!75p" alt="IMG_1045.JPG"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;car exhibition, appreciation of the beauty&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://opb37u589.bkt.clouddn.com/20170605_150655.jpg?imageMogr2/thumbnail/!75p&quot; alt=&quot;20170605_150655.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>The Great Wall</title>
    <link href="http://aisee.me/2017/06/05/MyView/Movie/the-great-wall./"/>
    <id>http://aisee.me/2017/06/05/MyView/Movie/the-great-wall./</id>
    <published>2017-06-05T10:42:06.000Z</published>
    <updated>2017-06-05T10:47:16.760Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>Scene</strong></p>
</blockquote>
<p><img src="https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p2394573821.webp" alt=""></p>
<p>European mercenaries searching for black powder become embroiled in the defense of the Great Wall of China against a horde of monstrous creatures.</p>
<p>Director: Yimou Zhang<br>Writers: Carlo Bernard (screenplay), Doug Miro (screenplay) | 4 more credits »<br>Stars: Matt Damon, Tian Jing, Willem Dafoe | See full cast &amp; crew »</p>
  <a id="more"></a>
<p>  <a href="https://movie.douban.com/review/8238136/" target="_blank" rel="external">但使龙城飞将在，不教胡马度阴山</a></p>
<p>  作者：为人帅表（来自豆瓣）<br>  来源：<a href="https://movie.douban.com/review/8238136/" target="_blank" rel="external">https://movie.douban.com/review/8238136/</a></p>
<pre><code>不是影评，是时评。。。

中国导演张艺谋的新作《长城》于12月16日公映。17日，该片出品方乐视影业除了宣告影片票房突破两亿外，更是令人意外地针对负面影评向影评人“亵渎电影”发出警告律师函。

周六那天，刚好去电影院观看了这部电影。关于这部电影，我个人的看法是，这是一部烂片。当然，个人口味各有不同，这种事见仁见智，去不去捧场，您自己看着办。而关于新闻里的这场所谓的“官司”，我倒也是全程关注了。起初是影评人“亵渎电影”发了一条微博，写道：张艺谋已死。后面还放了三个蜡烛的表情。这下子出品方不干了，乐视影业的CEO张昭转发了这篇微博，并且怒斥说：“躲在阴沟里诅咒中国电影的你已经腐烂！电影劳作者永生！”接下来，影评人亵渎电影发了一篇长文章，解释说不是诅咒张艺谋，而是说张艺谋的作品已经完蛋了。再接下来，出品方不依不饶，发出来警告函，要求影评人删除微博和文章，否则诉诸法律，告影评人侵犯张艺谋名誉权。

情况就是这么个情况，那么该怎么看这件事呢？首先我反正是站在了影评人这一边，当然不是因为影评人是弱势群体，而是因为影评人对这部电影的评价没有问题。你拍了一部烂片，难道还不允许别人骂吗？而且你们把骂《长城》这部电影上升到诅咒中国电影是什么意思？你们能代表中国电影吗？这个锅中国电影不背。据说这部电影还肩负着输出价值观的使命，输出什么价值观？黑火药、孔明灯还是大型团体操？隔壁的《血战钢锯岭》还没下线呢，哪儿来的这份自信？

而我选择站在影评人一边更重要的一点，是因为影评人的存在是有意义的。影评人存在的意义是什么？就是帮助观众排雷，牺牲自己，照亮别人。一部烂片，上映前吹得天花乱坠，如果没有一个冷静、客观、中立的声音加以澄清，那观众们岂不是都花了冤枉钱？电影这个产品和其他产品不一样的地方就是，花了钱就没法退货了。

那有人要问，如果影评人不公正呢？如果影评人被电影出品方或是他们的对手收买了呢？那很简单啊，影评人的价值就在于公信力，如果一个影评人一而再再而三的当枪手写软文，那他就会失去公信力，影评这碗饭也就吃到头了。这就是影评人的行业，以公信力作为吃饭的本钱，不过话说回来，又有哪个行业不是以公信力作为吃饭的本钱呢？

如果说影评人“亵渎电影”在这件事上有什么毛病的话，那可能就是“张艺谋已死”这样的表述方式不太合适，尽管谁都知道，这话得放到具体语境里去理解，影评人说的是张艺谋的艺术生命已死，但你架不住出品方就按照字面的意思解读啊，这就被抓住了把柄。出品方真告你侵犯名誉权，还未必告不下来。所以这也是个教训，告诫我们在追求极致表达的时候，也别忘了对事不对人。

关于电影《长城》，有件事挺有意思，就是影评人口诛笔伐的对象，除了张艺谋，还有景甜。景甜看上去有点无辜，也有朋友说，导演烂不要怪演员。其实我们想想，张艺谋拍的烂片也不是一部两部了，之前也没见哪个演员跟着背锅，怎么独独就景甜躺枪了呢？ 因为景甜不是一个演员，她是个符号，或者干脆说，景甜就是资本的代名词。她的出现本身就意味着资本对于电影创作的干涉。可以说，如果没有景甜，电影拍砸了的责任全是张艺谋的，但有了景甜，张艺谋起码卸了一半的责任，因为他有了身不由己的借口。**影评人戴桃僵说：“景甜本身构成了中国电影的一个悖论：没有景甜，电影就没钱投入拍摄；有了景甜，拍出来的电影不仅赚不到钱，口碑更是不用奢望。”**

然而口碑恰恰是投资方最想要的东西，因为这就是电影作品的公信力，没有公信力，这生意就做不下去了。这就是为什么出品方这么急吼吼地想要堵住影评人的嘴，因为他们害怕啊。这部电影投资巨大，背后的各种资本运作就更不用说了，万一搞砸了损失惨重，所以他们恨不得消灭所有负面声音。然而问题就在这，你们的资本运作成功与否都是要靠电影本身的质量说话的，电影质量不行，建立在那上面的所有东西就都是泡沫。

而投资方解决内心恐惧的办法是吓唬，拳头大的律师函见过没有？这要真被他吓唬住了，那中国的文艺圈可就真成了资本的乐园，咱们也甭追求艺术了。然而在这个人人都是影评人的互联网时代，谁都无法左右一部电影的口碑，只有电影自己才行。看看今年低迷的电影票房市场，观众们已经不傻了，再想靠个烂片就圈钱，做梦呢吧？ 最后，请允许我把《长城》里的一句歌词送给坚持己见的影评人们：但使龙城飞将在，不教胡马度阴山。
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Scene&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p2394573821.webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;European mercenaries searching for black powder become embroiled in the defense of the Great Wall of China against a horde of monstrous creatures.&lt;/p&gt;
&lt;p&gt;Director: Yimou Zhang&lt;br&gt;Writers: Carlo Bernard (screenplay), Doug Miro (screenplay) | 4 more credits »&lt;br&gt;Stars: Matt Damon, Tian Jing, Willem Dafoe | See full cast &amp;amp; crew »&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="English" scheme="http://aisee.me/tags/English/"/>
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>xXx——Return of Xander Cage</title>
    <link href="http://aisee.me/2017/05/15/MyView/Movie/xXx-Return-of-Xander-Cage/"/>
    <id>http://aisee.me/2017/05/15/MyView/Movie/xXx-Return-of-Xander-Cage/</id>
    <published>2017-05-15T14:23:06.000Z</published>
    <updated>2017-05-15T14:49:15.447Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>Action, Girls, Cool</strong></p>
</blockquote>
<p><img src="https://images-na.ssl-images-amazon.com/images/M/MV5BMzcwMjkxMzQ3NV5BMl5BanBnXkFtZTgwMzgyNDA5MDI@._V1_UX182_CR0,0,182,268_AL_.jpg" alt=""></p>
<p>Xander Cage is left for dead after an incident, though he secretly returns to action for a new, tough assignment with his handler Augustus Gibbons.</p>
<p>Director: D.J. Caruso<br>Writers: Rich Wilkes (based on characters created by), F. Scott Frazier<br>Stars: Vin Diesel, Donnie Yen, Deepika Padukone | See full cast &amp; crew »</p>
  <a id="more"></a>
<p><img src="http://www.returnofxandercage.com/home-ent/images/billing.png" alt=""><br><a href="http://www.returnofxandercage.com/" target="_blank" rel="external">http://www.returnofxandercage.com/</a></p>
<p> Vin Diesel returns in the most x-treme, x-plosive and x-hilarating xXx yet! When a group of lethal mercenaries steal a hi-tech weapon that poses a global threat, the world needs superspy Xander Cage. Recruited back into action, Xander leads a team of death-defying adrenaline junkies on a mission to kick some ass, save the day, and look dope while doing it. Prepare for the high-octane thrill ride critics are calling “a crazy stunt-filled action spectacular” (Scott Mendelson, Forbes).</p>
<p><a href="https://movie.douban.com/subject/3230115/" target="_blank" rel="external">剧情简介 · · · · · ·</a></p>
<p> 故事聚焦在由范·迪塞尔带头的的特工小队和以甄子丹为首的反派组织之间的对决。在这部作品中，迪塞尔饰演的特工凯奇不再是孤胆英雄，他将与一群出色的伙伴共同作战：塞缪尔·杰克逊饰演的国安局特工，印度女星迪皮卡·帕度柯妮饰演的与凯奇颇有渊源的女猎人，凭借《吸血鬼日记》走红的妮娜·杜波夫扮演的技术专家，《女子监狱》女星露比·罗丝饰演的狙击手,中国当红偶像演员吴亦凡饰演的特工Nicks。</p>
<h2 id="如果我是DJ你会爱我吗？"><a href="#如果我是DJ你会爱我吗？" class="headerlink" title="如果我是DJ你会爱我吗？"></a>如果我是DJ你会爱我吗？</h2><p> 版权归作者所有，任何形式转载请联系作者。<br>作者：凌睿（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8349411/" target="_blank" rel="external">https://movie.douban.com/review/8349411/</a></p>
<p>—————剧情简介—————</p>
<p>故事发生在一个餐厅里，极限特工项目的创始人吉本斯（塞缪尔·杰克逊饰）正打算把内马尔拉入伙。而内马尔并没有听说过“极限特工”，他以为这是复仇者联盟在招募成员，因为吉本斯看起来很眼熟，似乎在《复仇者联盟》中见到过。不得不说“吉本斯”这个名字取得很不吉利，毕竟和“基本死”谐音。果然，就在他刚吃完早餐准备离开的时候，一个卫星掉下来把它砸死了。这个故事告诉我们：吃霸王餐是会遭报应的。希望下辈子他父母能给他取一个吉利一点的名字，比如吉本布斯。</p>
<p>有关部门立即展开调查，发现罪魁祸首是月光宝盒，它能控制卫星坠落。就在负责人白发魔女拿着月光宝盒召集高层开会的时候，“神奇四侠”破窗而入，他们分别是宇宙最强的叶问侠、皮肤黝黑并且胸部还没有叶问大的印度黑侠、长期剧烈运动导致营养不良头发都白了的泰国白侠，以及不愿意透露姓名的麻辣小龙侠。叶问一改以往“我要打十个”的作风，而是欢快地跳起了脱衣舞，于是部门高层愉快地对着他打手枪。叶问也反过来对他们打手枪，射得到处都是，然后趁乱夺走了月光宝盒。</p>
<p>（这段不是我瞎编的，甄子丹的确是破窗而入之后就开始脱衣服。）</p>
<p><img src="https://img1.doubanio.com/view/thing_review/large/public/p499248.jpg" alt=""><br>范·迪塞尔一脸不屑：胸还没我大！</p>
<p>为了抓捕神奇四侠，白发魔女赶赴遥远的多米尼加共和国寻找高人相助。不得不说这位高人确实很高，几乎接近两米。他就是曾经的极限特工，名叫宇宙通缉犯·树人格鲁特·巫师猎人·唐老大·我不叫尼古拉斯·凯奇。而此时他正为了抢夺机顶盒玩起了森林滑雪、滑板等极限运动，幸好有一个极具奉献精神的妹纸通过和他睡觉从而及时制止了他，否则的话他再玩下去估计就要改玩轮椅了。</p>
<p>吉本斯也没有白死，他临死前送了一架飞机给凯奇。凯奇不愧是精英中的精英，当我们还在打飞机的时候，他就在开飞机了，神还原了《战争之王》的剧情。在飞机上他认识了程序猿贝姬，此人口活十分精湛，并声称要保护他的生命安全。凯奇对此作出的回应是：我的字典中没有“安全”这两个字，除了安全套。</p>
<p><img src="https://img3.doubanio.com/view/thing_review/large/public/p499245.jpg" alt=""><br>口活精湛的程序猿</p>
<p>凯奇乘坐飞机来到了伦敦，在一群女性朋友的帮助下查到了神奇四侠的位置，随后这群“吃硬不吃软”的女性朋友和凯奇玩起了一种可以让人“忽软忽硬”的游戏。（本来我想写“由于她们吃硬不吃软，所以硬的时候吃进去，软的时候吐出来”，因为电影台词很有可能就是这个含义。但又觉得不太符合豆瓣“文艺”的风格，所以还是决定不写了。虽然最后我还是写出来了，大家就假装没看到吧。）凯奇愉快地唱起歌来：“一人我饮酒醉，七八个姑娘陪我睡”。早就听说这部电影里面有炮王，一定就是他了。广电，你快说你删了多少床戏？你还我床戏！</p>
<p>不得不说凯奇的身体素质确实过硬，普通人这样一晚上下来早就站都站不稳了，他还泰然自若，还去招募了新的团队。其中阿黛尔（鲁比·罗斯饰）长期打手枪、以及帮助他人打手枪，从而练就了灵活的双手（有趣的是，她在即将上映的《生化危机6》中饰演的也是一个双手灵活、擅长打手枪的女侠）；坦纳森是一位老司机，喜欢开着汽车撞奥特曼（ATM）；最厉害的还是夜店DJ尼克斯（吴亦凡饰），毕竟隔壁影厅《西游伏妖篇》中他还是秃头，转眼间就长出了乌黑浓密的秀发。范·迪塞尔演了两集《极限特工》、三集《星际传奇》和七集《速度与激情》都没有实现的梦想轻而易举地就被他完成了。至于尼克斯吹牛说他曾同时睡了Lady Gaga和Taylor Swift的事情听听就行了，不必当真，毕竟他再厉害也不可能长两个JB吧？（但是他有十根手指。）</p>
<p><img src="https://img1.doubanio.com/view/thing_review/large/public/p499247.jpg" alt=""><br>双手灵活的阿黛尔</p>
<p>凯奇率领他们来到菲律宾的一座荒岛上，在这里见到了神奇四侠。随后，凯奇骑着摩托车追赶叶问，秒变恶灵骑士，不愧是凯奇。没想到真正的凯奇没有演成的《恶灵骑士3》，被这个假的凯奇抢先演了。他们骑着骑着就骑到了海里，耍帅的同时还不忘娱乐观众，给大家带来了“轻功水上漂”的表演。你们接着演，放心地演，牛顿的棺材我帮你们按住了。</p>
<p><img src="https://img3.doubanio.com/view/thing_review/large/public/p499246.jpg" alt=""><br>请欣赏两位带来的“轻功水上漂”的表演</p>
<p>凯奇好不容易抢到了月光宝盒，却发现这只是一个副本，真正的月光宝盒还在大BOSS手上。于是，凯奇需要和叶问齐心协力，共同对抗敌人。他们在马路上你追我赶，最后都被汽车撞倒在地。汽车司机纷纷表示：原来是在跑酷啊，吓死我了，我还以为是碰瓷呢。</p>
<p>拥有主角光环的两人原地复活，然后爬到大厦顶部找到了大BOSS。堂堂大BOSS竟然只有一个保镖，你没钱你就说出来啊，豆瓣网友那么多，大家每人出几毛钱众筹一下帮你多请几个保镖也是可以商量的嘛。而大BOSS依然发挥稳定，再次死于话多。</p>
<p>就在凯奇和叶问上了飞机准备凯旋而归的时候，白发魔女接到上级命令抹杀极限特工。两人和士兵打了起来，不料误杀飞行员，导致飞机从天而降，制造了零重力环境。这简直就是便秘患者的福音，因为他们可以理直气壮地说：“我真的没有便秘，的确是因为没有引力啊！”</p>
<p>（考虑到可能会有网友误以为我是在歧视便秘患者，所以在此我想解释一下其实我就身患此病，因此当我看到零重力环境的时候才会如此敏感。）</p>
<p>然而无人驾驶的飞机掉了半个小时都没掉下来。不好，牛顿的棺材我按不住了！由于飞机坠落的速度过于缓慢，为凯奇争取了大量的时间用于逃生。至于叶问是如何生还的便不得而知，对此我特意采访了编剧，结果他说他也不知道，可能是忘记写进去了吧。</p>
<p>说不定这是一个隐藏彩蛋，为拍前传或者外传埋下伏笔。那是一个月黑风高的晚上，叶问喝了太多的酒，不幸坠落山崖，却因祸得福拾得一本残旧的武林秘籍，定睛一看，竟是失传多年的《乾坤大挪移》，后面省略五万字……</p>
<p>就在我们被眼花缭乱的动作戏所吸引的时候，凯奇还抽出3分钟时间和印度女侠谈起了恋爱，简直是人生赢家。《速度与激情》系列中他曾前后三次将布莱恩、霍布斯、肖策反入伙，这次又抢了叶问的女人，我看你还是别做特工了，做传销可能更适合你。</p>
<p>他们的相爱绝对不是强行加入的剧情，这无疑是神来之笔，具有画龙点睛的作用。这场恋爱不仅使这部动作片升级成了爱情动作片，也让本片的片名变得更加贴切。（“极限特工”的英文名是“XXX”，而“XXX”也有色情片的含义。）</p>
<p>最后，凯奇出席了吉本斯的葬礼，也得知吉本斯只是假死的真相。世界这么大，卫星偏偏掉在他头上，而且还没有把他砸死，我觉得事后他可以考虑买几注双色球试试。</p>
<p>———–短评————</p>
<p>1.必须要去电影院支持本片啊，毕竟电影里有凯奇。（范•迪塞尔 饰 凯奇）</p>
<p>2.导演一定是吴亦凡的真爱粉，因为导演的名字叫DJ，他又让吴亦凡在本片中演DJ。</p>
<p>3.吴亦凡：如果我是DJ你会爱我吗？</p>
<p>4.叶问：还是打地球人有意思！</p>
<p>（第一集打鬼子、第二集打洋人的叶问，在《侠盗一号》中终于如愿以偿打了外星人，从此别无所求、了无牵挂。蓦然回首，他觉得还是打地球人有意思。）</p>
<p>（实际上树人格鲁特还不能算是地球人，甚至都不能算是“人”。）</p>
<p>5.甄子丹：师父，这么巧啊，你也在？</p>
<p>吴亦凡：臭猴子，还不快快束手就擒，别逼我用如来神掌！</p>
<p>（甄子丹在《西游记之大闹天宫》中饰演孙悟空，吴亦凡在《西游伏妖篇》中饰演唐僧。）</p>
<p>6.吴亦凡在隔壁影厅播放的《西游伏妖篇》中还是秃头，转眼间就长出了乌黑浓密的秀发。演了两集《极限特工》、三集《星际传奇》和七集《速度与激情》都没有长出头发的范•迪塞尔已经派人去打听吴亦凡用的什么牌子的洗发水。</p>
<ol>
<li>《拳霸》中，托尼·贾居住的村子的佛首被偷了，导致他一怒之下杀了一群人；《冬荫功》中他的大象被偷了，他一怒之下又杀了一群人；《冬荫功2》中他的大象再次被偷，忍无可忍的他终于堕入了原力的黑暗面，选择做一个反派。</li>
</ol>
<p>8.范•迪塞尔和甄子丹曾分别在《星际传奇》和《侠盗一号》中演宇宙通缉犯。为什么范•迪塞尔饰演的角色视力良好，但是戴了一副墨镜；而甄子丹饰演的是盲人，却没有戴墨镜？这让我百思不得其解。直到今天看到《极限特工3》中范•迪塞尔和甄子丹你追我赶，我才恍然大悟，一定是当年范•迪塞尔抢了甄子丹的墨镜！</p>
<p>9.甄子丹在《侠盗一号》中还是瞎子，而在本片中已经恢复了视力。甄子丹：感谢导演治好了我被春节档辣瞎的眼睛！</p>
<p>10.树人格鲁特的面子太大了，毕竟星爵都还没见过的神盾局局长，被他先见到了。</p>
<p>11.以后不能再用“XXX”代替“某某某”了。比如发条朋友圈说“XXX竟然不自量力和我单挑，我分分钟就把他打得跪地求饶叫爸爸”，搞不好好友会以为你和极限特工打了一架。</p>
<p>12.表面上这是一部动作片，实际上这是一部人类和平宣传片。包含黄种人、白种人、黑种人、棕种人四种肤色的美国、中国、印度、泰国、英国、保加利亚、澳大利亚等多国公民在这部电影中悉数亮相，瞬间将普普通通的爆米花电影上升到世界种族大团结的高度。即使奥斯卡不欠它一个小金人，诺贝尔也欠它一个和平奖。</p>
<p>————-长评————</p>
<p>注：下文篇幅较长，我已对重点内容进行了加粗处理，其它内容大家可以选择性跳过。</p>
<p>很多朋友都知道原本范·迪塞尔饰演的角色已经死亡，在本片当中复活，这给人一种“强行复活，继续圈钱”的感觉。实际上看过本片之后，我觉得复活的设定并不牵强。而且《极限特工2》中极限特工项目的创始人吉本斯只是口头上说极限特工死了，需要找一个新人接班。</p>
<p>而本片吉本斯的假死到复活也是对该系列主角假死到复活的调侃。吉本斯最后对凯奇说：“怎么样，成功骗了你吧？”仿佛也是在对观众说：“怎么样，凯奇的假死成功骗了你吧？”</p>
<p>值得一提的是，电影最后持榴弹发射器的黑人小哥（艾斯·库珀饰）就是《极限特工2》中的主演，本片对他的介绍是“从2005年开始，一直在等待人们按9号键”。而之前范·迪塞尔饰演的凯奇多次说道，如果要找他的话就按“9号键”，这个细节让艾斯·库珀的加入变得更加圆润，显得并不突兀。而艾斯·库珀的出现才让这部续集真正有了意义，这无疑是《极限特工》系列影迷最开心的一件事。他的加入将毫不相关的前两部作品连接起来，也给《极限特工4》的拍摄提供了可能性，也让粉丝真正有了期待。</p>
<p><img src="https://img1.doubanio.com/view/thing_review/large/public/p503948.jpg" alt=""><br>艾斯·库珀</p>
<p>除了承上启下之外，本片还有一个至关重要的作用，那就是狠狠地打了那些总说“只要是外国电影在豆瓣上就会得高分”的网友的脸，事实证明外国电影也不一定会得高分。（手动滑稽）</p>
<p>《极限特工3》包含大量特效，这是优点，也是缺点。正方觉得爆米花电影最重要的当然就是视觉冲击力，反方觉得这太假了，违背物理常识。这两种意见都有道理，没有绝对的对与错。在我看来，我更倾向于正方。与其让我看连特效都没有的动作片，我不如把这两个小时用来看四集《新闻联播》，还可以加强对社会主义核心价值观的理解。</p>
<p>2015年上映的《极盗者》是极限运动电影的代表作之一，全片无电脑特技，均为实景拍摄，历时三年。该片中的极限冲浪、攀岩、极限滑雪、翼装飞行等均由真人特技演员完成。虽然这种电影值得称赞，但我觉得这种拍摄方式并不值得效仿。因为剧组极力追求实拍，导致前后三名幕后工作人员不幸罹难。就为了让电影更加真实，死那么多人值得吗？</p>
<p>为了拍戏，吴京八岁脑袋开瓢，九岁断胳膊，十四岁差点瘫痪，全身缝了一百多针；成龙拍《警察故事》差点瘫痪，拍《新警察故事》飞坠27层楼，职业生涯受伤无数……这种敬业精神确实值得称赞，但如果用特效就能实现的工作，何必要让演员受伤呢？</p>
<p>本片剧情也并没有太差，和前两部水平相近，况且无与伦比的动作场面已经弥补了剧情的不足。实际上这种类型的电影普遍剧情一般，所谓的“剧情”无非就是主角需要找到一个打架的理由。不管是主角发了朋友圈没人给他点赞，或者是在群里抢红包只抢到了一分钱，还是反派发布合照只PS了他自己……总之他需要一个打架的理由。剧情就不多说了，毕竟说动作片“剧情差”本身就有装逼的嫌疑。</p>
<p>前几年我对范·迪塞尔并不太感冒，单纯只是觉得《极限特工》、以及《速度与激情》系列前四部并不好看，给人一种“想装逼但装得并不专业”的感觉，但这几年他的表现逐渐受到了大家的认可。而甄子丹我是一直都很喜欢，即便有那么几年感觉所有网友都在黑他我都义无反顾地支持他。</p>
<p>甄子丹最近出演了两部好莱坞大片，其实早在2002年，他就曾进军好莱坞，出演了《刀锋战士2》。我对这部电影印象非常深刻，因为我清晰地记得我是在上高中的时候花了三个晚上看完这个系列。当时是夏天，晚自习下课后我在宿舍里躺在床上用平板电脑看《刀锋战士》。明明天气很热，室友非要到我床上和我一起看，由于他觉得太难看所以过了一会儿就回去了。现在回想起来，我还真要感谢《刀锋战士》系列拍得难看，要不然的话说不定那天室友就要在我床上过夜了，搞不好第二天我就只能站着上课了。</p>
<p>就目前而言《极限特工3》的口碑、票房和一线大片还有很大差距，但就票房成绩已基本达到普通好莱坞大片的水准；《侠盗一号》全球票房突破十亿美元，位列2016年度第四，和《星球大战7》相比口碑保持一致、甚至更好的水平，而甄子丹出演的盲僧一角被外媒评价为最精彩的角色之一。所以甄子丹最近出演的两部好莱坞大片，和十多年前出演《刀锋战士2》具有完全不同的意义，是他事业的另一个高峰。</p>
<p>曾经有一段时间甄子丹背负了无数的骂名与不理解，不仅仅是拍了几部烂片，更重要的是有不少网友跟风黑、为了黑而黑。面对人们的批评和指责，甄子丹矢志不渝、逆风飞翔，从而取得更高的成就，让自己的身影出现在全世界的电影银幕之中，需要多么强大的内心！我相信未来几年他会迎来人生第二春，在退休前多拍几部代表作，让全宇宙都知道他的确是“宇宙最强”。</p>
<p>实际上我们何尝没有被网友谩骂的经历？不管是发表了过激的言论，还是抨击了一部电影，抑或是在生活中、工作中做了人们所不理解的事情，从而招致无数骂声。其中的确有一部分人是试图和我们讨论，但绝大多数人都是靠伤害他人来宣泄心中苦闷，况且真正愿意理智讨论的网友会因为意见不同就来骂你吗？哪怕我们的确是说了不正确的话，那我们就理所应当被无数网友谩骂吗？而此时此刻，我们是选择为了避免挨骂而闭上嘴巴，还是不忘初心继续前行？</p>
<p>另外，我想反驳一下豆友说“本片有五个景甜”的短评。娘子军”无疑是本片一大特色，除了饰演国安局特工的托妮·柯莱特年龄较大之外，另三位女演员都十分养眼。饰演程序猿的妮娜·杜波夫和印度女星迪皮卡·帕度柯妮乖巧可爱，而且并不做作。而饰演狙击手的鲁比·罗斯帅气潇洒，几乎抢了男性演员的风头。</p>
<p>没有范·迪塞尔出演的《极限特工2》口碑、票房双双失利，因此电影公司决定请他回归这个系列。这几年正是范·迪塞尔的事业上升期，不仅手握《速度与激情》和漫威两大IP，而且档期已经排到了2021年。有不少网友觉得范·迪塞尔只是运气好。诚然他运气确实不错，但不可否认的是他同样拥有强大的实力。</p>
<p>我们用《速度与激情》系列举例，该系列的第4、5、6、7部的全球票房分别是3.6亿、5.1亿、7亿和15亿美元，而范·迪塞尔未参加出演的第2、3部只有2.3亿、1.5亿美元（第三部虽然有范·迪塞尔，但只是打了个酱油）。</p>
<p>当然，《速度与激情》系列的成功，最重要的还是导演，以及已经离世的主演保罗·沃克，其次才是范·迪塞尔。但是有绝大多数的观众根本不认识导演，只关心谁是主演。再加上保罗·沃克已经去世，范·迪塞尔就当之无愧地成为了这个系列中最重要的演员，对于该系列的复活他也有至关重要的功劳，况且他还是该系列的制片人之一。</p>
<p>而越拍越平庸的《极限特工》系列在范·迪塞尔回归之后是否会浴火重生，成为第二个《速度与激情》系列呢，我们拭目以待。</p>
<p>《终结者》和《谍影重重》系列也曾换主演导致票房、口碑双双失利，迫不得已重新请原主演回归。虽然换主演并不是口碑、票房双双失利的全部原因，但也可以说是重要原因之一。我觉得这件事情告诉我们，实际上我们都远远比自己想象中更加强大，更加有价值。</p>
<p>所以说，假如你的女友（男友）说Ta没有你也能过得很好，你表面上可以哄哄Ta，但一定要相信自己是独一无二的；假如你的上司批评你，说这个公司即使没有你也能正常运作，你表面上可以不反驳，但在内心中一定要相信自己：“去你妈的，老子就是不可代替的！”</p>
<hr>
<p>说个题外话，由于范·迪塞尔饰演的角色叫凯奇，估计会有网友误以为尼古拉斯·凯奇是本片的主演。前不久金酸莓奖公布了2016年最差男配角的提名名单，其中出演《斯诺登》的尼古拉斯·凯奇榜上有名。实际上《斯诺登》口碑还算不错，并且尼古拉斯·凯奇就只是打了酱油，去年那么多部电影中比尼古拉斯·凯奇差的配角没有一百个也有八十个，所以金酸梅奖完全是拿名人开刷。</p>
<p>最可笑的是尼古拉斯·凯奇在去年主演了好几部电影，其中不乏口碑差劲之作。说不定他也早就预料到自己会提名金酸莓奖，却万万没想到主演的几部烂片都侥幸逃过一劫，却在一部佳片中跑龙套的时候翻了车，极具讽刺意味。虽然尼古拉斯·凯奇并没有说什么，但我估计他的内心戏应该是：这部电影我都没演几分钟也能提名“最差男配角”，你说你是不是针对我？</p>
<p>当然，也许是因为《蝙蝠侠大战超人》一部电影中的两位演员就占了金酸莓奖六个最差男主角提名名单的三分之一的名额，因此尼古拉斯·凯奇还排不上号。（顺便说一下，我并不认为《蝙蝠侠大战超人》是烂片。）</p>
<p>假如《极限特工3》中饰演凯奇的范·迪塞尔不幸提名下一届“金酸莓奖”最差男主角，我估计会有网友以为是尼古拉斯·凯奇上榜了。这时候尼古拉斯·凯奇就可以说：这部电影我特么演都没演也能上榜？是不是跟我有仇啊？</p>
<hr>
<p>《金刚：骷髅岛》影评：<a href="https://movie.douban.com/review/8413701/" target="_blank" rel="external">https://movie.douban.com/review/8413701/</a></p>
<h2 id="外国人少是有原因的"><a href="#外国人少是有原因的" class="headerlink" title="外国人少是有原因的"></a>外国人少是有原因的</h2><p>  完全用不带脑子的爆米花，只看打也不知道故事在说什么，只是节奏快，火爆炫酷，全程聒噪的舞曲音乐和不要命的扮酷达人，动作精彩，甄子丹很抢戏，女性角色比男的更拉风，艾斯库巴结尾亮相高潮，凡凡蜜汁存在，妮娜眼镜娘赞，碟5小妹依旧惊艳，三星半<br>“打打架、泡泡妞，别忘了耍帅”</p>
<p>这句话不是我说，而是片子里塞缪尔·杰克逊说得，基本定义了这部电影的全部内容。</p>
<p><img src="https://img1.doubanio.com/view/thing_review/large/public/p499928.jpg" alt=""><br>极限运动+特工动作，这两个看似八竿子打不着的元素，组合在一起，代表动作电影，这种老式类型片在新世纪之后的新玩法。</p>
<p>没想到你是这样的特工</p>
<p>时钟拨回到到本世纪初，动作电影已到江河日下之际，原因很简单。动作片最大的卖点就是提供大银幕效果的视觉奇观，可到了当时，超级英雄电影、科幻片、灾难片的崛起，让动作片电影这类老套的模式化产物已经变得不太新鲜。上世纪90年代，动作片为了追求更加刺激的视听效果，以《真实的谎言》《勇闯夺命岛》为代表的作品连核弹、毁灭城市的噱头都整出来了，还要怎样，依然没有阻挡动作电影的颓势。<br><img src="https://img1.doubanio.com/view/thing_review/large/public/p499929.jpg" alt=""></p>
<p>返回头再来说《极限特工》系列，创始人、也就是编剧里奇·威尔克斯（本片片头字幕还特意标出了其“创始人”的名号，尽管他不是第三集的编剧），是特工间谍片的影迷，在法国波拉波拉岛度蜜月的时候，威尔克斯突发奇想，构思出《极限特工》的故事，他的创作宗旨是打造出一部适合新世纪年轻观众观看的间谍片。</p>
<p>要么所谓与时俱进，就是要与传统特工片不同，也要打破动作电影老套的模式，哪怕故事结构换汤不换药，但紧抓动作电影“视听奇观”这个梗，就是一次方向性正确的“旧瓶装新酒”，这就是《极限特工》诞生的始末，将极限运动与特工电影进行了一次脑洞结合。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499931.jpg" alt=""></p>
<p>我们印象中的特工电影是什么？无论是老调的007，还是后来追求故事上和风格上“技术性KO”的《谍影重重》系列，核心魅力多是“特工”的神格化和人格化，</p>
<p>要么就高高在上，几乎不食人间烟火，西装革履一丝不苟，泡妞打架面面俱到，比如邦德同志；</p>
<p>要么就是毫不起眼，时刻隐藏在老百姓中，但打起架来凌厉凶猛，杀人从不废话，比如伯恩同学。</p>
<p>但要论范·迪塞尔这个极限特工凯奇，用句俗话就是“暴发户”的配置，街头混混出身、秃头纹身，身披毛料大衣，身边总是不乏形形色色的美女，狐朋狗友一堆，一看就不是好人。</p>
<p>特长不是打架，而是不要命，极限运动达人喜欢各种“外国人少系列”，辅助以特工电影中常见的道具和技术支持，让这位不要命先生如鱼得水。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499934.jpg" alt=""></p>
<p>比如第一集，和很多好莱坞间谍片一样，本片也取景于捷克的布拉格，是上世纪间谍片的大爱。但是内容嘛，有够离谱，重金属电子乐，地下俱乐部泡妞，街头飞车，节奏动感，充满了潮流味道，与布拉格凝重、森严、宏伟的东欧风格完全相反，这种反差效果才是《极限特工》系列所追求的。</p>
<p>竞技+动作：“外国人少”系列</p>
<p>说道范·迪塞尔，其赖以成名的两套作品，《速度与激情》与《极限特工》，都有点一脉相承的感觉。当年都是大黑马，内容都是非主流竞技+动作。一个是地下飙车，一个是极限运动。电影指向的是一种“亚文化”特色，从街头飙车和边缘极限运动，穿着五颜六色的卫道士，香车美女，纹身壮汉，夜晚大闹城市，能够深受青年观众的喜爱。再套上一个特工电影的马甲，乍一看不合时宜，但主流模式下，整体故事和情节全部为亚文化元素服务。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499936.jpg" alt=""></p>
<p>将竞技与动作片结合的好处，就是能够极大的展示极限运动的荷尔蒙属性，同时脱离了竞技的束缚也让暴力动作变得更加肆无忌惮，说穿了也就是开篇那句“打架、泡妞+耍帅”。</p>
<p>比如开场甄子丹的单打大戏，功夫元素+蹦极，落入会场中面对群敌，还有功夫在桌子上来一招360度托马斯全旋开枪，为的就是耍帅。</p>
<p>能正面命中敌人的，一定要来一招“苏秦背剑”才叫杀敌，</p>
<p>能瞬间秒杀的，必须要“张飞骈马”命中才够爽快；</p>
<p>能破门而入的，必须要开车撞墙进去；</p>
<p>能跳伞的，必须要把降落伞扔出去然后在跳飞机去追，</p>
<p>跟人家谈判，还得玩几个手榴弹，否则都不好意思在圈子里混。<br><img src="https://img1.doubanio.com/view/thing_review/large/public/p499938.jpg" alt=""></p>
<p>极限嘛，就是这个道理，丛林滑雪、水上骑单车、陆地行舟、跳飞机跳悬崖，必须不走寻常路，外国人少不是没有原因。</p>
<p>退一步来说，都有主角光环，人家007或者伯恩好歹还躲躲子弹，可极限特工们可好，不但看见子弹不躲，还要迎着子弹上去，来一招360回旋射击，命中敌人后自己不忘摆个POSE。动作电影嘛，“打打架，耍耍帅”，这种行为如果在现实中早已死八遍了。<br><img src="https://img1.doubanio.com/view/thing_review/large/public/p499939.jpg" alt=""></p>
<p>就像《极限特工2》中艾斯·库珀调侃的那句“现在拯救地球都需要一帮小混混来完成了？”没错，在美国连个钻井工人都能救世界（《绝世天劫》）、小兵扛大旗的理念下，身份和出身不是问题，敢“作死”就行。</p>
<p>同时到了《极限特工：终极回归》，也开始了攒局的路子，两伙极限特工对打，从《速激》的family，一直到《极限特工》中的brotherhood，在如今超级英雄都组队的同时，团队协作这样的群戏在好莱坞最吃香了。而且片中五湖四海不同肤色的成员一并出境，在观众看来，“极限”除了主角们在飞驰赛道上的大胆壮举之外，情义也尤为重要。而不同阵营“化敌为友，惺惺相惜”则是情义的最好体现。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499940.jpg" alt=""></p>
<p>高热量爆米花的焦糖</p>
<p>而对于动作片的模式而言，就是一个“旧瓶装新酒”，主要看得是打斗，故事反倒是其次。而且在如此众多的角色出现情况下，故事情节被极度压缩。</p>
<p>本片的导演，D·J·卡卢索，个人认为他是好莱坞一个被忽视的动作片导演。</p>
<p>这位作品不多，但所有作品都有个特点，就是这些电影的故事属于扔到大街上都没人要的烂剧本，从《后窗惊魂》、《鹰眼》到《关键四号》，但问题是每部作品都能拿的出手，都能看得下去，甚至有时还挺high。连同这部《极限特工》也是一样，但他能给你调控到纯火爆米花的级别。就像《关键四号》那么稀烂俗套的主题，能够调制到能看下去，而且部分场面还比较吸引人，说明什么呢？这个人深知观众想看什么，在该“有料”的地方绝不吝啬，在该一笔带过之处也决不会浪费口舌，代表了好莱坞娱乐产业最纯度的那一部分。<br><img src="https://img1.doubanio.com/view/thing_review/large/public/p499947.jpg" alt=""></p>
<p>从巴西到菲律宾、再到底特律，典型的闯关打怪模式，电影压缩了剧情空间和角色，换来的是连场的打斗和追逐，几乎是从头打到尾，目不暇接。D·J·卡卢索能够充分利用电影元素调动观众情绪，范·迪塞尔连场打斗和极限运动展示，老范“中场休息”时，立马安排了其与角色马上入替，要么甄子丹要么大美女出镜，即刻开启下一轮的打斗。打完之后，几个荤段子过后，又是一轮喧闹的轰趴，随后就飙车，接下来再一轮打斗。</p>
<p>电影就是在这样的喧闹过程中结束，演完之后，问问电影讲了什么故事？对不起，想不起来，只记得老司机们一言不合就开车来着。这就是最典型的好莱坞商业电影，没什么野心，单纯的将动作电影的“视听猎奇”发挥到极致。如此作品，举个例子，一帮哥们姐们聚会或者大学宿舍爷们扎堆，喝着啤酒吃着高热量食品，热闹之余看部电影解闷吧，这类电影最适合这类条件。</p>
<p><img src="https://img3.doubanio.com/view/thing_review/large/public/p499946.jpg" alt=""><br>热闹、快节奏、荷尔蒙、没别的。</p>
<p>彩蛋：</p>
<p>1、音乐</p>
<p>范·迪塞尔在生活中一定是个喜欢party的人，直接反映到电影的风格上，比如音乐。《速度与激情》系列就是饶舌+电子乐，《极限特工》比这个更夸张，直接把夜店蹦迪的音乐全搬了过来，从第一集战车乐队那彪悍的重金属《Feuer Frei 》，直到本片 Madsonik和吉他鬼才Tom Morello 的夜店名曲《Divebomb》，怎么喧闹怎么来。这种聒噪的风格可能不太适合太多人，但跟《速激》那种把汽车马达轰鸣和金属刮擦无限放大的音效类似，绝对是让喧闹high刻意放大的感觉。</p>
<p>试听↓</p>
<p><a href="http://www.xiami.com/song/8GgStt17f18?spm=a1z1s.3521865.23309997.2.Ixzaec" target="_blank" rel="external">Feuer Frei!</a></p>
<p>另外，与《速激》的配乐类似，本片也是好莱坞著名的爆米花配乐高手布莱恩·泰勒，电子加管乐，单独把BGM拿出来，都可以当跑步音乐来用。</p>
<p>试听↓</p>
<p><a href="http://www.xiami.com/song/U7sBVs2d076?spm=a1z1s.3521865.23309997.41.IyQOCY" target="_blank" rel="external">xXx: Return Of Xander Cage</a></p>
<p>2、毛料大衣</p>
<p>电影中老范取大衣的梗，也许很多人看不懂，这是第一集的遗留产物，来自于老范首次执行任务，在布拉格，与当地警察接头，嘲笑对方穿衣品味差（原话是“你要想杀人，先把卖你这件衣服的人杀了吧”），在厚重的东欧，这位转眼来了一件毛料大衣，典型的暴发户配置，他靠这件衣服打入敌人内部，跑路打架双飞，这件衣服随身携带。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499950.jpg" alt=""></p>
<p>3、辣妹</p>
<p>这部电影，男性角色各个粗壮大条，不是光头就是毛茸茸的，荷尔蒙过剩，长相说实在都不敢恭维（所以找来了凡凡，让男性颜值提升了一些，“带给人快乐嘛”）。</p>
<p>但女性角色就不一样了，一个比一个靓。从《新年行动》的印度女星迪皮卡·帕度柯妮（这位跟夏奇拉是一个老师，全球肚皮舞跳得最好的两位，有兴趣的可以找找《新年行动》，唱歌跳舞很high），到保加利亚裔美女妮娜·杜波夫的眼镜萌娘（个人超爱这个角色），还有鲁比·罗丝，虽然走的是中性路线，但也非常有味道。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499951.jpg" alt=""></p>
<p>其实最值得一提的是老范取衣服时碰见的那位，赫敏·科菲尔德 。提起她或许没太多人知道，但说起《碟中谍5》，开场不久后与阿汤哥接头，在音像店被人干掉的那位惊艳美女，就是她。本片虽然同属酱油党，但安排了不少福利，比较满足。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499952.jpg" alt=""></p>
<p>4“托尼，你完蛋了”</p>
<p>甄子丹终于当上了托尼贾的大哥，这么多年了，也不知道当年的心气放下了没有，开个玩笑<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p499953.jpg" alt=""></p>
<p>“托尼，你完蛋了”这个梗来自于电影《导火线》，片中邹兆龙叫tony，用的就是泰拳，被甄子丹一顿胖揍。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p500030.jpg" alt=""></p>
<p>据小道消息，当年托尼贾的《拳霸》风靡全球，这边甄子丹就各种不服，总想跟人家比划一下，甚至还在《导火线》里设计了这个台词。</p>
<p>但实际情况呢，两人一直在寻求合作，早在2010年就达成合作意向，开拍一部《急先锋》，演员都定了，除了两位打星之外，还有《越狱》的米勒和宋慧乔，但最后不知怎么着项目也黄了。如今终于合作，但没有出现期待中的对打，打一场多好啊。</p>
<h2 id="打坏蛋，泡美女，尽量显得酷"><a href="#打坏蛋，泡美女，尽量显得酷" class="headerlink" title="打坏蛋，泡美女，尽量显得酷"></a>打坏蛋，泡美女，尽量显得酷</h2><p>版权归作者所有，任何形式转载请联系作者。<br>作者：张佳玮（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8359088/" target="_blank" rel="external">https://movie.douban.com/review/8359088/</a></p>
<p>大多数商业片，与三级片有类似的特质，或者换个角度，三级片是最纯正的商业片。比如吧，若干年前，我和我那几个小兄弟一起看《金瓶梅》时，并不是为了叹嘘悲剧宿命，感悟因果循环。我们主要是为了看杨思敏和单立文那几幕抵死缠绵、摸爬滚打，其他的流程、角色与因果，就像大菜之间的小菜，让你不寂寞，让口味不那么单一。同理，许多商业片都是这个意思：导演主要给我们展示好看的演员肉体、华丽偏僻的风景、几句恰到好处的酷台词、叮光五四一通打。然后我们自己猜一猜，除了主角之外哪个人物会死掉。连缀起这几个大场面的，就是各色小菜了。</p>
<p>商业片嘛，就这意思：目的清晰，定位明确，按照定位找人找元素噼里啪啦的凑。情节俗都俗得很专业。故事甚至无需多美妙，到最后能勉强自圆其说，也就好了。</p>
<p>本片就是这么一部……说三级片不合适，但其实很三级片的电影。只是：普通三级片是男女主角集中来点火爆场面；穿插点其他情节；本片是范-迪赛尔和甄子丹基情哦不对激情流溢，又是打飞机又是撞卫星；中间穿插各色休闲小菜。</p>
<p>——萨缪尔-杰克逊每次唠唠叨叨讲道理时，哪怕再胡扯，我还是乐意听下去。这算是《低俗小说》给我洗脑二十年的结果？即便他突然死掉，我都不太担心。大概是习惯神盾局局长那种假死法了。当然也是他的魅力所致：杰克逊的一举一动，已经到了这个境界：“我也知道自己演的这角色你不新鲜了，我夸张的肢体语言你也不当回事，所以微微一笑就好”，这种微妙的自嘲劲儿和他一歪头的架势，像个真正的老爹，让人心情放松。</p>
<p>——露比-罗丝梳了个蓝头发，角色名字叫阿黛尔。看过《阿黛尔的生活》的都会笑起来吧。以及：她端着枪瞄准时邪恶的微笑，总让我觉得像在打游戏。</p>
<p>——内马尔。真内马尔。笑得一脸二憨的内马尔。这是拉拢巴萨和巴西球迷呢吧。</p>
<p>——吴亦凡和甄子丹起的是亚洲版内马尔的作用。</p>
<p>——哦对了，甄子丹很适合这种“不羁的，笑得有点邪恶的，开场看起来是坏人，实际上又没那么简单”的家伙。</p>
<p>——妮娜-杜波夫戴眼镜很美。她给所有人套装备那段很暧昧，是那种“姑娘你为什么贴我这么近？你一个不小心滑到我怀里可怎么办呢”的姑娘。</p>
<p>——赫敏-科菲尔德也很美。那个从游泳池里起身的全身拍很到位了。只是她对主角这种许看不许摸、凑耳朵边答应了又大喘气的作风，多少让人心痒又不爽……哦对，这种感觉就像《富春山居图》里的林志玲。</p>
<p>——哥伦比亚年度小姐安德里雅娜-古铁雷斯就很大方。具体怎么大方就没法多说了。</p>
<p>——帕度柯妮很美。是那种看过了她，会觉得全片其他姑娘都长得差不多，只有她的轮廓很明晰的美。</p>
<p>——以上这些人，无论男女，都被范-迪赛尔的雄性荷尔蒙熏染了。怎么说呢？看着他们凑近了说话，我总有种“下一秒范-迪赛尔就要拉对面这个人上床去”的错觉。</p>
<p>但世界多少在进步。十五年前范-迪赛尔打的是东欧人，泡的是意大利姑娘，翻来覆去都是欧美那点事。多亏了全球化，2017年，范-迪赛尔身边是印度美人帕度柯妮、保加利亚眼镜娘杜波夫、澳大利亚妹子露比-罗丝、英国姑娘科菲尔德，姑娘们都豪爽干练反客为主，投怀送抱得也姿态万千，还有好哥们甄子丹。全球化真好，气死川普。</p>
<p>说回范-迪赛尔。</p>
<p>片名正式译法，叫做《凯奇归来》。自从当年阿拉贡《王者归来》后，现在的三部曲都喜欢归来。一般的剧情也都如此：老家伙想退隐，但退隐不了，终究还是要出来拯救世界。</p>
<p>《极限特工》系列，可以看做范-迪赛尔个人秀的《第一滴血》。他和老史泰龙的兰博有以下类似之处：肌肉男，荷尔蒙爆棚，都是耍枪弄棒拯救世界的家伙，又都是干私活的——兰博在丛林游击队打雇佣兵，范-迪赛尔干特工。以及，他们都随时想着退隐江湖，但又做不到。</p>
<p>区别是，范-迪赛尔身上，有种被世界遗弃的荷尔蒙气，或者换个说法，他身上有点姜文和黄秋生的气息。都经历过了，浑不吝，偶尔话痨，不咸不淡，嘴角带着勾自嘲或嘲讽他人的笑，一激动起来就干，女人或对手都直接硬上。</p>
<p>所以在看这部电影时，偶尔我会一晃神，觉得范-迪赛尔和他演的这个家伙，这个凯奇，融合到了一起。世界变得很快，对吧哥们？范-迪赛尔自己快50岁了。十五年前是跟欧美坏人打打杀杀，现在则在全球化中速度与激情，满世界奔走干特工。他和萨缪尔-杰克逊那两段谈及退休的对白，我稍微咂摸出一点苍凉感。</p>
<p>好在，没那么悲。</p>
<p>萨缪尔-杰克逊说，人生嘛，就是打坏蛋、搞美女，尽量显得酷。前面两句是废话，最后这个，是本片真正的精华。本片时时刻刻流动着昔日光荣与今时今日的穿插，试图挑动已经倦怠的灵魂。传奇已经是过去的事，范-迪赛尔也有点老了；时间流逝，万物不留。怎么办呢？打打杀杀，以及，尽量显得酷吧。</p>
<p>倒数第二个场景，迪赛尔屁股靠在破汽车上，抬头看天空，说，“我会想到新方式的。”太中二了。但这其实就是超级英雄们的中年危机。</p>
<p>人生所谓的勇敢（与中二），也就是在面对中年危机，明明一切琐屑到无意义，茫然到不知所措时，选择往前走一步，然后，尽量显得酷吧？</p>
<h2 id="对不起，我差点就睡着了。"><a href="#对不起，我差点就睡着了。" class="headerlink" title="对不起，我差点就睡着了。"></a>对不起，我差点就睡着了。</h2><p>和2个发小去看了这部电影。从小看电影从来没写过影评，这次心血来潮，各位且看。<br>怀着对十几年前极限特工1的眷恋，满怀期待的走进了影院。其实在去之前，大概就知道，这无非又是一部英雄拯救世界的故事。可看了之后才发现，原来我错了。<br>刚一开场，那个在极限2中假死过一次的老哥，被一颗卫星炸死了，是的，他又死了……<br>然后，范迪塞尔开始了一段个人表演。各种耍帅，各种牛逼。从滑雪板到滑板，6到飞起。可是我就没看懂，在热带雨林也可以如滑雪一般穿着滑雪板速降么……好吧，有些人会说我吹毛求疵。行，咱就不提这个了。因为跟后边一系列槽点比较，这还真不算啥。<br>接下来，一场在CIA开展的高层会议，在会议过程中，甄子丹从天而降破窗而入，将一众高层大佬一顿海扁，顺带抢走了开场炸死老哥那颗卫星的控制装置。在逃跑的过程中，一共只遇到一个CIA特工，还没等叶问叔叔动手，就被他的同伙—一个彪形大汉给一顿海扁。对了，在这场会议开始之前，画面中一位与会高层进入了CIA大楼，通过了包括指纹，眼纹等等一系列高科技的防护措施才进入到会场。在这个过程中，甄子丹的另一个同伙，也就是本片女主角就悄然跟在这位高层身后，还玩了个极尽展现柔韧性的一字马。结果，在甄子丹得手后，展现这位女主角的地方居然是在CIA一楼大门口，用电焊开门……这一段剧情，本是本片引出故事的主要剧情，……我已经不想吐槽了，各位看官自己都能看出问题有多少…… CIA，那个玻璃我觉得不是防弹也应该是加厚吧？甄子丹同学从对面大楼纵身一跃，凭借着惯性就破窗而入……整个CIA难道当天只有一个特工值班……逃出来后甄子丹另外一个同伙黄毛同学那一串近距离躲避手枪还来了个空中转体几百度把对方机车男一脚踹下去，然后正好自己还落在机车上……我突然间就联想到了手撕鬼子那一类画面……<br>好吧，看到这个时候，我以为甄子丹演的，是一个反派。<br>然后，范迪塞尔被主持CIA会议那个女高层找到，让他出山去找被甄子丹夺走的装置。老范纠集了一帮兄弟来帮助自己完成任务。这其中有枪法高超的女狙击手，热衷撞车的驾驶高手，和天国小鲜肉吴亦凡演的暖场小子——整部电影你会发现，吴亦凡同学饰演的角色没有任何拿的出手的绝活，他唯一的用处就是在接下来他们去找甄子丹的那个菲律宾无名岛轰趴上的“嗨翻全场“……就这人能去执行一系列要死要活的任务……<br>这时候画面一转，来到了甄子丹这边。女主角让甄子丹把那个装置毁了，可甄子丹不依，说有用处。然后交代了一下其实他们也是极限特工的成员。看到这里，我以为又是好莱坞此类英雄片的惯用手法，窝里横。可是我又错了。<br>范迪塞尔们来到了这个岛，中间一系列交流和变故后，范迪塞尔和甄子丹骑着机车抢夺那个装置。不得不感慨下，那机车居然还带有水上滑行功能……从陆地追到海里，俩人还骑着机车来了一次冲浪。双双坠海后，范迪塞尔取得了装置。刚上岸就被女主角一枪把装置给结果了。甄子丹不知所踪，反正在当时影片没有交代，只有老范上岸了。<br>当然，这么轻松这个装置就被毁了，影片难以为继。这个时候他们就收到了消息，那个装置只是控制炸死老哥那一颗卫星的。真正的装置在那位穿越了重重高科技系统进场开会的那位大佬手里。说干就干去找大佬。甄子丹一伙也去找大佬了。在去的路上遇到了堵车，老范和甄子丹在马路上随风奔跑自由是方向……期间各种打斗。老范这一伙负责通信的小妹，不断在提醒时间紧迫那个大佬要操控另外一颗卫星坠落爆炸…终于，老范和甄子丹都进入到了那座大楼。剧情也从这个时候毫无征兆的反转了——-老范和甄子丹突然就结成了联盟，各种配合一直持续到影片结束。搞定这个大佬后CIA那个女上司拿到装置后跳黑，最终被搞定后故事大团圆结局。当然，那老哥必须是没死……<br>整个故事大概就是这么个情节。可是我看完之后有很多疑问。<br>第一，CIA大楼的安保系数估计还没有我家小区的安保系数高。<br>第二，甄子丹冒着巨大风险抢夺装置的目的是什么？一点交代都没有。况且他还对女主角说有用。有什么用？<br>第三，吴亦凡这个人设是为了什么？枪法也很烂，在影片后期的枪战中，吴师兄打了很多枪，可是都恰好没有击中敌人。<br>第四，甄子丹一直是以反面示人，结果到中后期突然就变成了正义的使者。影片也没有任何交代。<br>第五，影片在后期老范和甄子丹在飞机上与CIA周旋。其他人在地面被围攻，关键时刻德瑞斯·斯通，也就是小D—-极限特工2里那位男主出现救了大家，榴弹枪三五枪炸死了下边一片人—–你确定你用的不是榴弹炮……<br>第六……<br>第七……</p>
<p>我实在是不想写了，因为我发现我来写这个影评真的都属于耽误时间。看了半天，原来看的都是情怀。可这个情怀卖的也是毫无亮点。整部电影我两次差点睡着。<br>总之，烂片一部。不值得去影院购票。</p>
<h2 id="极限特工3：碟中谍之速度与激情与磨皮洗剪吹"><a href="#极限特工3：碟中谍之速度与激情与磨皮洗剪吹" class="headerlink" title="极限特工3：碟中谍之速度与激情与磨皮洗剪吹"></a>极限特工3：碟中谍之速度与激情与磨皮洗剪吹</h2><p> 版权归作者所有，任何形式转载请联系作者。<br>作者：CydenyLau（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8316059/" target="_blank" rel="external">https://movie.douban.com/review/8316059/</a></p>
<p>无脑的视效，乏味的表演，卡通化的故事——每年春季档的Shitstorm都特别多：而近年来范柴油的吴克表演法，狮门/顶峰的黄金屎，简直是春晚一样的必备消遣。<br>15年的《最后的女巫猎人》，16年的《神战：权利之眼》，纷纷在2017年迎来了根正苗红的继承者们：在《超凡战队》下界肆虐之前，首先迎来的是一部十余年后的鸡血续集，《极限特工：终极回归》。<br>诞生于2002年的“xXx”这一IP显然不是什么成功的作品，否则3年后的第二部就不会换上艾斯·古巴了————但如果说有一点做的好的话，那就是在那个娱乐大片完全可以不用带大脑的年代里，奉上了最无厘头的银幕特工形象之一。而在15年后的今天，范柴油以返老还童般的灵魂附体，啊不，鬼上身一样的银幕表现，真是没有辜负我们的全部期望。<br>《极限特工2》之所以没有在漫长的时间里出现续集，其原因大概和《星际传奇》没有在漫长的时间里出现续集的原因类似：传统动作电影的收窄，新派泛动作电影还没有成型，导致空有一身魔鬼筋肉的魔鬼筋肉人直到2009年的《速度与激情4》才成功翻身。考虑到林诣彬在重启《速度与激情》系列中累积的丰富经验，很自然地，担任制片的范·迪塞尔同志就想在自己的其它IP上复制粘贴，反正都是动作系列，怎么耍都不会大错特错嘛。<br>于是我们就看到了《星际传奇3》和《极限特工3》。同样的组队打怪模式，同样的前代角色cameo，再加上范柴油出神入化的表演，简直让人分不出这究竟是老司机唐老大公然出轨，还是雷迪克或xXx飙车飙上天。但这两部续集都忘掉了一个重要事情：唐老大只是《速度与激情》成功的原因之一，多样化且功能各异的角色之间，能否产生合理且足够的情感联系（即林诣彬为《速度与激情》定下的“family”调子），才是这一系列获得持久生命力的关键泉源。纵使上天入地，纵使狂轰滥炸，人和人的感情，始终要比穿着皮草把妹，光着膀子搞基要更有看头。<br>《极限特工3》显然还没有考虑到这个问题。在这样一部范·迪塞尔领衔的组团反恐动作大片里，除了完美继承15年前的荒谬情节，我们很少能够看到属于它自己的东西，更多的是天南海北的拿来主义。要知道，原版的xXx没有故作严肃的主题，简简单单地花里胡哨，就像是一场电脑CGI大力赞助的极限运动show。这在当时的环境下是可以过关的，但在一个漫威统治世界，脑洞也要烧起来的时代里，就显而易见地过时和落伍了。为什么这个世界需要一部关于Xander和他愚蠢至极、极不搭调的队员们阻止“潘多拉魔盒”落入坏人手里的电影呢？为什么一名年近50的吴克肌肉男要跟小年轻一样滑滑板飚摩托，沉溺于肾上腺素和比基尼呢？<br>可话又说回来，为什么不行呢？这部无厘头的特工电影续集能为观众奉出的最大价值，恐怕就在于这种荒谬的蜜汁自信和自我膨胀。所谓阳春白雪下里巴人，再低廉的价值也总是价值，也总是会有人埋单。之间的差别，不过是有的人总会尽量避免低劣消费，而有的人总是一次又一次心甘情愿为低劣消费埋单。如是而已。<br>恐怕这是1905，上影和华桦传媒在大咧咧地投资派拉蒙的电影项目之时，压根没有想过的事情。<br>因为如果以上诸君真的想过的话，那诸君就不只是可怜，而是可恨了。<br> <img src="https://img3.doubanio.com/view/thing_review/large/public/p473370.jpg" alt=""></p>
<p>自2002年的首部“xXx”电影以来，（美国）公众与美国国家安全局的关系已经发生了翻天覆地的变化，然而编剧斯科特·弗雷泽写的相当凌乱，完全不知该如何批判国安局毫无节制的权力滥用，而落到了导演水准平庸的D·J·卡卢索手里，并没有能实现提高层次和价值的目的。不过对于这样一部再典型不过的“无脑爽片”来说，剧情不是主要卖点，画面才是。当然，并不是每一部“无脑爽片”都能有《王牌特工》的水准，但起码要有足够的亮点——<br>比如《A计划》式的起飞脚抢自（摩）行（托）车，比如《红番区》式的屋顶跳对面大楼，比如《我是谁》式的徒手爬棕榈树……<br>没错，《极限特工3》在动作设计上到处都能见到成龙电影的影子，只不过执行人换成了甄子丹（和露比·罗丝），同时一镜到底变成威亚+快速剪辑。虽然拾起了李连杰初入好莱坞的角色定位，甄子丹在本片中的任务显得格外轻松：只要把人晃晕，躺在地上滑来滑去就好了。但无论如何，贵为男二号的待遇就是要比托尼·贾高许多。后者这名新千年以来最为人期待的亚洲动作明星，整部电影中除了起飞脚抢摩托，以及一脚高空倒踢电缆有点技术难度之外，竟然只是跑来跑去而已。<br>当年浑身是血比肩成龙的高难度搏命演出，如今换来了一个三场戏的⑨号配角，life is such a bitch.<br>出于显而易见的原因，《极限特工3》免不了要和前些年里的《速度与激情》系列拿来比较。范柴油在两套片子中扮演了同类型的角色，但在性格上有些许不同。Xander要更加玩世不恭和浮夸，带领的整个团队也由此显得玩世不恭和浮夸，同时缺乏凝聚力。这种随意感会导致观众难以关注角色（但一定会，一定会关注演员），而仅仅钟情于动作场景当中——而如果没有值得关心的角色，何必要来看电影，去马路上看别人群殴好了。<br>而此时肯定又会有人说，我就喜欢看俊男靓女兄贵御姐互相撕逼，就喜欢看盗版《惊爆点》砰砰砰啪啪啪，就喜欢看五颜六色花枝招展的漂亮画面。爽了就完了，故事是狗屁，人物是狗屁，逻辑是狗屁，统统是狗屁。<br>那么恭喜你，这部垃圾食品一样的狗屁电影就是为你量身定做的。何必追究为什么通天大盗绝密的丛林藏身处有着一大批泳装美女扭动身体；何必追究龙傲天一样的角色设定，随随便便就是世界第一枪，随随便便就是世界第一汽车安全检验员，随随便便就多了个演员表排名第四，实则一点功能都没有的DJMIN克里斯·吴，在片中的唯二用处就是鬼哭狼嚎和装逼——<br>最后这一点可不是我说的，而是正儿八经写在角色的出场介绍上的：<br>Special Skill: fun to be around.<br>这就是这部电影的最大卖点，也是目标观众们对一部电影的唯一要求。嘿，愿买愿卖，其乐融融，哪里容得下第三者插足和插嘴和插别的什么玩意儿。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p473371.jpg" alt=""></p>
<p>毫不奇怪地，主人公Xander的冒险故事并没有在这一部狗尾续狗的续集中得到任何深层挖掘，也从来无意挖掘。情节浅薄，试图添加悬念却早早在预告片中就自我抹杀，缺乏强有力反派，过家家一样无视逻辑和物理定律，拿着特工的装备耍着混混的把戏。如果你喜欢第一部的情报收集，对不起，没有；如果你喜欢《速度与激情》的亲密友情，对不起，没有；如果你喜欢任何一部谍战电影和大片标配的特技效果，对不起，没有——连一个简单的全员亮相都要用抠像再用CG做个背景上去。<br>但是呢，它仍然有能力让某些观众感到兴奋。某些观众。<br>《极限特工3》就是这样一部构思和执行上完全无视物理定律或简单的常识逻辑，头脑高度单细胞，角色戏份不平衡，廉价肾上腺素一样的动作电影，如果你能，并且愿意欣赏，啊不，看到荒谬的特技镜头，老掉牙的笑话，口条不顺的英文对白，肤白貌美的磨皮洗剪吹，以及温存一夜之后依然干干净净地穿着比基尼横陈一地的美好肉体的话，自然是没有问题。<br>毕竟，这就是范柴油和他的一身腱子肉的一场春梦而已。而对有的人来说，共享别人的春梦，是生活中必不可少的乐趣。<br>可惜有的人不是。<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p473372.jpg" alt=""></p>
<p>附：本片在Metacritic网站充满X国异域特色的刷分刷评价（01/23/2017,12:00pm）<br><img src="https://img3.doubanio.com/view/thing_review/large/public/p473373.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Action, Girls, Cool&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://images-na.ssl-images-amazon.com/images/M/MV5BMzcwMjkxMzQ3NV5BMl5BanBnXkFtZTgwMzgyNDA5MDI@._V1_UX182_CR0,0,182,268_AL_.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Xander Cage is left for dead after an incident, though he secretly returns to action for a new, tough assignment with his handler Augustus Gibbons.&lt;/p&gt;
&lt;p&gt;Director: D.J. Caruso&lt;br&gt;Writers: Rich Wilkes (based on characters created by), F. Scott Frazier&lt;br&gt;Stars: Vin Diesel, Donnie Yen, Deepika Padukone | See full cast &amp;amp; crew »&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="English" scheme="http://aisee.me/tags/English/"/>
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>Meta Skill——Core</title>
    <link href="http://aisee.me/2017/05/13/Meta%20Skill/meta-skill-core/"/>
    <id>http://aisee.me/2017/05/13/Meta Skill/meta-skill-core/</id>
    <published>2017-05-13T14:47:06.000Z</published>
    <updated>2017-05-14T23:50:48.392Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opb37u589.bkt.clouddn.com/4d0243b_corelogo_hires_1.png" alt=""></p>
<blockquote>
<p>Basic Concepts–&gt;Framework–&gt;Practice–&gt;Skills–&gt;Habits–&gt;Destiny</p>
</blockquote>
<a id="more"></a>
<h2 id="Deep-Thinking"><a href="#Deep-Thinking" class="headerlink" title="Deep Thinking"></a>Deep Thinking</h2><ul>
<li>Control your Brain</li>
<li>Keep your Health</li>
<li>Placate your Soul</li>
<li>Consolidate your Base</li>
<li>Master your Rhythm</li>
<li>Live your Life</li>
<li>Fight for your Dream</li>
</ul>
<p>Do according to your ability<br>Do everything in your power</p>
<h2 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h2><blockquote>
<p>Turn abstraction into concrete<br>Break up the whole into parts<br>Master the basic Concepts<br>Lay a solid foundation<br>Enrich one’s arsenal of weapons</p>
</blockquote>
<p>Hardware: CPU\Memory\IO\Modem\Network<br>Software: binary, instruction, data,<br>Program:<br>                data structure<br>                algorithm<br>                language: c,java,python<br>                os: windows, linux<br>                platform: arena, android<br>                basic data type: bit,byte,char,short,int,long,float, double…<br>                typedef structure, object …<br>                operator: arithmetic, logic, shift<br>                function, new,static…<br>                sequence, cycle, branch<br>                design pattern: architecture</p>
<pre><code>text: charset, font, string...
image: svg,png, jpeg, webp, gif...
file:io,nio
multithread/process...
database:sql, noSql
network:client/server,http,tcp/ip
multimedia, color
</code></pre><p>View: CPU,Memory,Compiler,Programmer,User</p>
<h3 id="设计模式之六大原则"><a href="#设计模式之六大原则" class="headerlink" title="设计模式之六大原则"></a><a href="http://www.cnblogs.com/dolphin0520/p/3919839.html" target="_blank" rel="external">设计模式之六大原则</a></h3><p>一.单一职责原则<br>单一职责原则(Single Responsibility Principle, SRP)：一个类只负责一个功能领域中的相应职责，或者可以定义为：就一个类而言，应该只有一个引起它变化的原因。</p>
<p>二.开闭原则<br>开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。</p>
<p>三.里氏替换原则<br>里氏代换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能透明地使用其子类的对象。</p>
<p>四.依赖倒置原则<br>依赖倒转原则(Dependency Inversion  Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。</p>
<p>五.接口隔离原则<br>接口隔离原则(Interface  Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。</p>
<p>六.迪米特法则<br>迪米特法则(Law of  Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。</p>
<h3 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a><a href="http://www.jianshu.com/p/0555b8c1d26a" target="_blank" rel="external">SVG</a></h3><p>可缩放矢量图形（英语：Scalable Vector Graphics，SVG）是一种基于可扩展标记语言（XML），用于描述二维矢量图形的图形格式。SVG由W3C制定，是一个开放标准。</p>
<p>.svg格式相对于.jpg、.png甚至.webp具有较多优势，我认为核心有两点：</p>
<ul>
<li>省时间。图像与分辨率无关，收放自如，适配安卓机坑爹的分辨率真是一劳永逸；</li>
<li>省空间。体积小，一般复杂图像也能在数KB搞定，图标更不在话下。</li>
</ul>
<p>矢量图的优点一大把，但也不是万能的。矢量图特别适合icon图标的应用场景，但是不能用于比如加载相册时，设置的placeholder或者error这类需要频繁切换回收的应用场景，否则会造成非常明显的卡顿，因为矢量图是不被硬件加速支持的。</p>
<h3 id="Font"><a href="#Font" class="headerlink" title="Font"></a>Font</h3><p>字体风格、大小、格式相同而字形不同的字符的集合。电子计算机应用中，将字符转换为数字信号，存储在电子计算机或相关的存储器中，称为字库。</p>
<h3 id="Java-IO-NIO"><a href="#Java-IO-NIO" class="headerlink" title="Java IO/NIO"></a>Java IO/NIO</h3><p>学Java的都会接触到IO，传统的IO是基于字节流和字符流的，数据只能单向传输，JDK1.5引入了NIO，主要包含三个核心概念，Selector,Buffer和Channel。NIO中数据都是通过缓冲区来操作，缓冲区中数据可以移动，可以通过buffer.flip()来改变读写模式，比如调用channel.read(buffer)从文件中写入数据到buffer,之后调用buffer.flip(),再调用Buffer.get()就可以读取buffer里的数据。<br>NIO另一个非常重要的特点就是支持非阻塞操作，传统的IO的read和write只能阻塞执行，线程在读写IO期间不能干其他事情，比如调用socket.read()时，如果服务器一直没有数据传输过来，线程就一直阻塞，NIO中可以配置socket为非阻塞模式</p>
<p><a href="http://www.cnblogs.com/dolphin0520/p/3916526.html" target="_blank" rel="external">Java NIO：浅析I/O模型</a><br><a href="http://www.cnblogs.com/dolphin0520/p/3919162.html" target="_blank" rel="external">Java NIO：NIO概述</a><br><a href="http://www.ezlippi.com/blog/2016/06/java-nio-concept.html" target="_blank" rel="external">Java NIO 基本概念</a></p>
<h2 id="IQ-amp-EQ"><a href="#IQ-amp-EQ" class="headerlink" title="IQ &amp; EQ"></a>IQ &amp; EQ</h2><ul>
<li>EQ base on IQ</li>
<li>Basic Concepts are the base of IQ</li>
<li>Experience improves IQ</li>
<li>Deep Thinking sharpens IQ</li>
<li>…</li>
</ul>
<h2 id="Basis"><a href="#Basis" class="headerlink" title="Basis"></a>Basis</h2><ul>
<li>Computer</li>
<li>Program</li>
<li>Health</li>
<li>Family</li>
<li>Life</li>
<li>…</li>
</ul>
<h2 id="Basic-Concepts-Top10"><a href="#Basic-Concepts-Top10" class="headerlink" title="Basic Concepts Top10"></a>Basic Concepts Top10</h2><p>一个人是否聪明，可以从两个层面入手：</p>
<ol>
<li>看他脑子里有多少清晰、准确、必要的概念</li>
<li>看他脑子里那些清晰、准确、必要的概念之间，有多少清晰、准确、必要的关联…</li>
</ol>
<h3 id="1-财富自由"><a href="#1-财富自由" class="headerlink" title="1. 财富自由"></a>1. 财富自由</h3><p>我们要的是自由，最根本不是财富，财富只是工具，我们要的自由，本质是时间的自主权。</p>
<blockquote>
<p>所谓的财富自由，指的是某个人再也不用为了满足生活必需而出售自己的时间了。</p>
</blockquote>
<p>不管你获得了怎样的成功，你依然需要成长，财富自由不是终点，那只是通往终点过程中的一个里程碑而已。</p>
<h3 id="2-注意力"><a href="#2-注意力" class="headerlink" title="2. 注意力"></a>2. 注意力</h3><p>三个大坑：</p>
<ul>
<li>莫名其妙地凑热闹</li>
<li>心急火燎地随大流</li>
<li>操碎了别人的心肝</li>
</ul>
<p>注意力是每个人都拥有的、最重要的、却被人忽视了的宝贵财富。<br>钱不是最重要的，因为它可以再生；时间也不是最重要的，因为它本质上不属于你，你只能试着与它做朋友，让它为你所用。</p>
<p>所以你必须把最宝贵的注意力全部放在你自己身上。</p>
<h3 id="3-元认知"><a href="#3-元认知" class="headerlink" title="3. 元认知"></a>3. 元认知</h3><p>元认知能力是对自己的思考过程的认知与理解。<br>元认知能力的强弱，决定一个人每个方面的强弱，甚至可以一点都不夸张地讲：一个人的财富创造能力最终也只与元认知能力有关——其他的都是附属因素。<br>从最底层的来看，元认知能力起作用的方式事实上极其简单：</p>
<blockquote>
<p>哦，我原来（正在）是这么想的……<br>嗯？我这么想难道是不对的吗？<br>啊！我应该这么想才对……</p>
</blockquote>
<p>看起来太简单了吧？——早晚你会明白的，看起来这么简单的思考，竟然是绝大多数人穷尽一生都没学会的技能，甚至居然都没有想过应该习得、锻炼这种技能。</p>
<h3 id="4-资本"><a href="#4-资本" class="headerlink" title="4. 资本"></a>4. 资本</h3><p>资本确实主要由钱构成，但，仅仅一堆钱放在哪里肯定算不上是资本。<br>钱本身顶多可以算作资金，而它想要成为有效的资本，还有需要至少另外三个要素：</p>
<ul>
<li>资金的金额大小</li>
<li>资金的使用时限</li>
<li>资金背后的智慧</li>
</ul>
<p>习得的资本背后的运作方法要从各个维度（金额、时限、智慧）逐步循坏突破：</p>
<ul>
<li>盈亏比例（相对值），而不是本金大小，盈亏金额（绝对值）。其实，投资的重点并不在于盈亏绝对值大小，而是在于盈亏比例大小。</li>
<li>能不能给自己的投资款“判上个无期徒刑”……不能够心平气和地判上个无期徒刑的资金，就别假装资本混迹江湖了……</li>
</ul>
<h3 id="5-坚持"><a href="#5-坚持" class="headerlink" title="5. 坚持"></a>5. 坚持</h3><p>若是某件事儿你觉得需要努力、需要坚持才行，那这事儿基本上从一开始就注定做不成了……<br>需要努力、需要坚持，说明你骨子里不愿意做啊！</p>
<p>无论做什么事情，在开始之前，都要想尽一切办法为这个事情赋予重大的意义，甚至多重重大的意义。</p>
<p>一旦决定做什么事情，是用不着坚持的，用不着努力的，一念一世界，这不是那种苦哈哈的坚持，臭哄哄的努力，这是干脆停不下来啊！<br>多有意思的事儿啊？谁敢拦着我我就跟谁急！</p>
<h3 id="6-万能钥匙"><a href="#6-万能钥匙" class="headerlink" title="6. 万能钥匙"></a>6. 万能钥匙</h3><p>当你遇到一扇被锁着的门，你应该去哪里找钥匙？显然不应该是只盯着锁头看。<br>若是锁孔里插着一把钥匙，那锁头等于是开着的，不是吗？之所以打不开那扇门，就是因为它是被锁上的，而开那个锁所需要的钥匙，一定在别的什么地方啊！<br>当我们遇到任何问题的时候，也是一样的道理，既然那是个需要被解决的问题，它就好像是个被锁上的锁头，而解决方案就像是钥匙一样，一定不在锁孔里插着，一定是在别的什么地方呢！</p>
<p>所以，当我们尝试解决任何问题的时候，只盯着问题看，盯着问题想，盯着问题找解决方案，通常只能是以无奈告终的啊！</p>
<h3 id="7-长期"><a href="#7-长期" class="headerlink" title="7. 长期"></a>7. 长期</h3><p>长期很可能对不同的人来说长度是很不一样的，你越弱，你的长期越长…换句话说，你可以通过提高能力缩短长期的长度！<br>对越有能力的人来说，长期的时限越短，于是，他们在长期过去之后，相对于别人有着更长的自由时限…何止长寿啊！这分明是：<br>学习使人拥有更高质量的长寿…</p>
<p>你越年轻，就越觉得长期越长…</p>
<p>年轻的时候有太多（事后可能会觉得不必要的）花钱的欲望和需求，这使得那长期感觉上更为难熬——可问题在于，那只是感觉，而不是事实，除非你自己选择把那感觉活成事实。</p>
<h3 id="8-安全感"><a href="#8-安全感" class="headerlink" title="8. 安全感"></a>8. 安全感</h3><p>你会发现绝大多数人是追求百分之百的安全感的，他们时时刻刻被身边所发生的一切吸引（或者，其实应该称作“分神”），他们不可能在任何事情上深入长期观察、深入长期思考，这样肯定会把自己困在永恒的当下。</p>
<p>我们必须放弃一部分安全感，才能深入长期地观察、思考。</p>
<p>又从另外一个层面上来看，那些放弃了部分安全感的人，有更多的深入长期的思考，他们怎么可能没办法补全主动放弃的那一小部分安全感呢？他们当然有办法，他们不孤立的行动，他们选择与他人合作——或者称之为有效社交。</p>
<h3 id="9-刚需"><a href="#9-刚需" class="headerlink" title="9. 刚需"></a>9. 刚需</h3><p>成功只不过是某一时刻的状态；成长才更重要，成长才是真正的刚需。</p>
<p>刚需可以主动选择的，而不一定是天然的，一成不变的；更进一步，刚需这东西常常就不应该被动接受。</p>
<p>我们甚至可以不扩张地讲，一切的进步与成长，都是重新选择刚需的过程。</p>
<p>你从来都知道自己最终还是有选择的自由；<br>你知道要靠耐心活在未来；<br>你知道现状是积累，你知道对现状不满是无意义的，所有的解脱，最终都只能靠积累。<br>…</p>
<h3 id="10-多维竞争力"><a href="#10-多维竞争力" class="headerlink" title="10. 多维竞争力"></a>10. 多维竞争力</h3><p>所谓的成长，从另外一个角度来看，就是不断把别人比下去的过程。</p>
<p>在某个技能上（或者说某个维度上）死磕，确实是一个策略，也不一定是不好的策略。但，为什么不想想也许有什么别的策略呢？</p>
<p>借用几何术语的话，其实很容易理解：</p>
<ul>
<li>单个维度上，大家比的是长度；</li>
<li>两个维度上，大家比的是面积；</li>
<li>三个维度上，大家比的是体积…</li>
</ul>
<p>而实际上生活有很多个维度，每个人都是立体的，不是平面的，更不是一根线。</p>
<p>每次跨界，都是给自己拓展一个新的维度。有跨界的机会绝对要一把抓住。</p>
<p>处处平庸肯定是不行的，不求处处突出，但起码要在一个甚至多个维度上处于 一个相当优异的位置，这样的时候，<br>多维度的意义就开始几何级数增长。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opb37u589.bkt.clouddn.com/4d0243b_corelogo_hires_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Basic Concepts–&amp;gt;Framework–&amp;gt;Practice–&amp;gt;Skills–&amp;gt;Habits–&amp;gt;Destiny&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Meta Skill" scheme="http://aisee.me/tags/Meta-Skill/"/>
    
  </entry>
  
  <entry>
    <title>Technology Entrepreneurship Summary</title>
    <link href="http://aisee.me/2017/05/13/MyView/Share/technology-entrepreneurship-summary/"/>
    <id>http://aisee.me/2017/05/13/MyView/Share/technology-entrepreneurship-summary/</id>
    <published>2017-05-13T00:37:06.000Z</published>
    <updated>2017-05-13T00:41:49.033Z</updated>
    
    <content type="html"><![CDATA[<h2 id="作为技术人创业，哪些过来人是如何总结的？"><a href="#作为技术人创业，哪些过来人是如何总结的？" class="headerlink" title="作为技术人创业，哪些过来人是如何总结的？"></a>作为技术人创业，哪些过来人是如何总结的？</h2><p><a href="https://juejin.im/entry/591522f1570c3500692e15d6" target="_blank" rel="external">Source</a></p>
<p>昨天，罗永浩在深圳开了坚果Pro发布会，我喜欢那句：我不是为了输赢，我就是认真的工匠精神。技术人创业，是很多年限稍深的程序猿，一个追求内心想法的事。今天主要是王威（威哥）看《技术人创业攻略》读后之感，威哥善于读技术以外的书籍，带动自己的思考，是个实在的极客， 威哥，在知乎上有一个专栏，叫《Let’s Book》由于，我的这本书还在路上，等我看完再接合我看到的感想，再写一篇。以下很多点，我也是相当引起共鸣的。如个人影响力对程序员来说很重要，技术要全面，眼界很重要，我通常理解为格局。创业一定从小的地方切入。这点，我之前文章就有类似，学习技术也是从小地方入手，再铺开。还有多看英文资料，等等。一起来看下提炼的内容。</p>
<p><img src="https://user-gold-cdn.xitu.io/2017/5/12/27c620fcfc6d7e123ed84ccf8e1aff98" alt=""></p>
 <a id="more"></a>
<h3 id="个人影响力对程序员来说很重要"><a href="#个人影响力对程序员来说很重要" class="headerlink" title="个人影响力对程序员来说很重要"></a>个人影响力对程序员来说很重要</h3><p>个人影响力对程序猿的发展非常重要，但很多人没有意识到这一点。国内的互联网公司里，阿里非常强调技术人员在社区的影响力，并在评级的时候把这个因素考虑进去，这是第一家把影响力作为评级标准的大公司。<strong>当你有了一定的影响力之后，有可能推动一项技术的发展，或者改变大家对某个技术观念的看法，不仅可以推动公司的项目，甚至还有可能改变整个技术生态的走向。</strong></p>
<h3 id="相信技术难题都是可以解决的"><a href="#相信技术难题都是可以解决的" class="headerlink" title="相信技术难题都是可以解决的"></a>相信技术难题都是可以解决的</h3><p>国内知名云计算创业公司青云的CEO曾说：“我们花了大量心血解决分布式存储技术这个难题，前期做了6个方案都没有成功，删代码的时候非常心痛，到第7个方案的时候终于成功了。网络也一样，经历了非常痛苦的开发过程，做到最后都快放弃了，不停地试验，都块放弃了，终于成功了”。这种面对技术难题的态度恰恰是我们搞技术的人缺少的东西！</p>
<h3 id="技术要全面"><a href="#技术要全面" class="headerlink" title="技术要全面"></a>技术要全面</h3><p>七牛的许式伟、从阿里出来的左耳朵耗子、编程界大牛Martin Fowler都是技术全面的例子，靠一门语言走天下的时代已经过去了，现在你应该根据业务的场景去选择使用最合适的技术而不是你会的技术。如果你一直处在微软的圈子里，就很有可能觉得自己很牛，但是你到开源世界去看看，才发现不会的东西很多。你认为微软平台的垃圾回收机制设计地很好，但开源世界里，比这套机制强的设计有的是。<strong>在微软技术这个小饭馆里，你吃到了一个鱼香肉丝，觉得很美味，但别忽略了外面还有很多饭馆，还有更好吃的东西。</strong> 以现在的互联网企业发展速度，如果想做技术Leader，必然要求你的技术全面， 所以多学技术是好事，坏的是学了你不用！</p>
<h3 id="多看英文资料"><a href="#多看英文资料" class="headerlink" title="多看英文资料"></a>多看英文资料</h3><p>尤其搞技术的，如果你想比别人走的更远，那么就应该多看英文原版书籍（国内人写的技术烂书太多），多去查英文网站，多看Paper！</p>
<h3 id="如何与人交往？"><a href="#如何与人交往？" class="headerlink" title="如何与人交往？"></a>如何与人交往？</h3><p>SegmentFault的CEO高阳曾说：“ 我能在一分钟之内要到陌生人的手机号，方法就是把我自己的信息告诉别人。和人交往，坦诚是非常重要的一个原则。我还喜欢看别人的优点，甚至有时候会把这个优点放大好几倍，让我自己相信他。因为我自己就是从很没有自信的阶段走过来的，所以更愿意尊重和包容他人，不管他们处在哪个阶段、在做什么”！所以说 <strong>跟人交往归根结底就是一个态度问题！</strong></p>
<h3 id="周边的工作环境很重要"><a href="#周边的工作环境很重要" class="headerlink" title="周边的工作环境很重要"></a>周边的工作环境很重要</h3><p>去什么样的公司，做什么样的工作，结交什么样的朋友真的很重要，因为这个很多时候决定了你格局的大小。所以如果有可能还是去大公司或者是极个别靠谱的创业公司，一个好的工作环境很有可能决定了你以后的高度！</p>
<h3 id="All-In"><a href="#All-In" class="headerlink" title="All In"></a>All In</h3><p>如果确定想做些事情，就要All In，不留遗憾</p>
<h3 id="让合适的人做合适的事情"><a href="#让合适的人做合适的事情" class="headerlink" title="让合适的人做合适的事情"></a>让合适的人做合适的事情</h3><p>以前听过有句话说很多平庸的人都是因为被放错了位置而已！这样的后果就是做不好，也做不开心，诗仙小李诗写的好好的，皇帝非让他做官结果弄的小李郁郁寡欢的。所以发掘团队每个人的特点让他们去做自己擅长的事情，最终才有可能做出好东西！国内的很多技术团队的Leader，动不动就在背地里说谁谁谁不行，结果那些人去了别的公司却成了大牛，还不是因为没有发现团队成员的特点，正所谓尺有所长寸有所短！如果不能把人放在合适的位置上，这样的后果就是不停地招人，不停地走人，永远说自己招不到合适的人，陷入一个恶性循环！</p>
<h3 id="真理往往在两个极端中间"><a href="#真理往往在两个极端中间" class="headerlink" title="真理往往在两个极端中间"></a>真理往往在两个极端中间</h3><p>程序猿做久了，眼里只有0和1，非黑即白，非常固执，爱吵架显摆，深陷谬论却浑然不知，但是真理永远在两个极端中间，<strong>在创业的过程中，千万别认死理，要学会与人合作和分享！</strong></p>
<h3 id="最终的成功靠的是平常心"><a href="#最终的成功靠的是平常心" class="headerlink" title="最终的成功靠的是平常心"></a>最终的成功靠的是平常心</h3><p><strong>人生中很多重要的事情最终能够做成，99%靠的是坚持，最后决定成功的却是那1%的平常心，坚持有时候狠狠心还能做到，但是这1%的平常心却不容易做到，这更多的是一种境界吧。对于大多数人而言，先做好那99%，再去修炼那1%也不迟！</strong></p>
<h3 id="创业成功是小概率事件"><a href="#创业成功是小概率事件" class="headerlink" title="创业成功是小概率事件"></a>创业成功是小概率事件</h3><p>硅谷每天都有很多公司创建和倒闭，<strong>成功的概率和出车祸的概率差不多。</strong> 你相信自己会出车祸吗？大部分人选择不相信，那你又凭什么相信自己会成功呢？尽管当下是万众创业的年代，但还是要保持冷静的头脑，你唯一能做的就是不断降低这种失败率，<strong>失败时能够坦然面对，从整个人生体验的角度来看失败反倒是一笔财富！要知道认清自己的能力是一件很难的事情！</strong></p>
<h3 id="眼界很重要"><a href="#眼界很重要" class="headerlink" title="眼界很重要"></a>眼界很重要</h3><p>只要不是太差的人，天分和努力都不会差太多。人和人的差别，更多还是在眼界上。我们创业的过程中曾觉得没有机会的事情，别人在同样的情况下，把它当成机会去做了，并且做成了。这和创业者对市场的理解、所处的圈子都息息相关。<strong>去找一些方式拓宽自己的眼界，增加自己的筹码</strong>，这才是最关键的。</p>
<h3 id="创业时要从一个小的点切入"><a href="#创业时要从一个小的点切入" class="headerlink" title="创业时要从一个小的点切入"></a>创业时要从一个小的点切入</h3><p>很多创业公司一开始就要做平台，或者想做超级App，不是说不好，而是时机不对。踏踏实实从一个小的点切入并做好，当使用的人数足够多时再做平台不迟，不要一开始就摊大饼，因为细分领域还是蓝海，那些所谓的平台必定是红海，自然是从小处着手更容易成功。</p>
<h3 id="失败的项目多半是因为管理的问题"><a href="#失败的项目多半是因为管理的问题" class="headerlink" title="失败的项目多半是因为管理的问题"></a>失败的项目多半是因为管理的问题</h3><p>其实技术是一个简单的事儿，很多项目失败，十有八九不是因为技术问题，而是因为管理的问题。技术问题不管多难，它能办，管理问题看着简单，但办不了。<strong>技术问题是看得见、摸得着的，管理的问题好像是看不见、摸不着，不容易察觉但又实实在在存在的，所以说它难。</strong></p>
<h3 id="如何做好产品？"><a href="#如何做好产品？" class="headerlink" title="如何做好产品？"></a>如何做好产品？</h3><p>1、产品敏捷很重要</p>
<p>书中有个案例就是说有个App创业团队，一开始没有采取开源的解决方案，自己造轮子，导致开发周期过长，最终导致产品失去市场先机，所以说技术敏捷很重要，技术敏捷是产品敏捷的有效保证！</p>
<p>2、好产品是进化来的</p>
<p>虽然《从0到1》说要颠覆式创新，但这又谈何容易？当年乔帮主做出iPhone，不过是对传统手机做了改良带来了全新的体验而已！既然生物有进化论，那么产品也类似。不是从头创造一个全新的产品，而是通过技术和设计，把已有的东西做出更好的体验！</p>
<p>3、<strong>好的产品一定要切实有用，其次才是用户体验</strong></p>
<p>4、好产品不应该是妥协的结果，而应该有其性格</p>
<p>好产品不应该是一群人妥协的结果，因为妥协会带来平庸，这类产品只能靠雄厚的资金做运营和推广，绝对无法靠本身的魅力吸引用户。</p>
<p>5、技术人员做东西总认为开发要用一流的技术，但是以技术为导向不容易出好东西，应该以想法为导向</p>
<p>全书目录：<br>高 阳 90 后理想主义 CEO 的进击 / 002<br>王博龙 三体摇滚青年在地球 / 014<br>水羽哲 我不是程序员！ Just coding for fun / 020<br>董 锋 游走于开发与设计之间的黑客画家 / 030<br>陈 鑫 30 岁前的冒险时光 / 037<br>李雨来 逆袭！从技术编辑到云计算架构师 / 049<br>石 川 海归技术人的“降级论”实践 / 054<br>邓宇光 关于幸福的创业课 / 062<br>陈理捷 招聘是一门关乎梦想的生意 / 069<br>领军行业，静水流深<br>许式伟 11 年逆流顺流，首席架构师到 CEO / 086<br>罗 未 开放制造的机器之心 / 099<br>王雄辉 用进化论玩转智能家居 / 109<br>刘睿民 数据库战国时代，我不跟你们玩政治 / 120<br>王行舟 低薪程序员 / 132<br>黄允松 工具理性主义者 / 137<br>Dave Thomas 生命不息，编程不止 / 147<br>杨 轩 天使投资人的江湖情怀 / 154<br>田爱娜 女神哪有天生，坚守就是一切 / 161<br>李会军 我的产品灵感来自民国 / 170<br>黄 冬 何妨吟啸且徐行 / 178</p>
<p>技术极客养成手册<br>吴峰光 平行世界守护者 / 192<br>蒋程宇 关于发现的涅槃之旅 / 205<br>陆丹峰 当数学家遇上大数据 / 212<br>祁 宁 技术社区的英雄传说 / 222<br>唐 巧 iOS 大 V 养成记 / 230<br>马 鉴 玩 Flash 15 年，养出一只“神经猫” / 243<br>徐文凯 智能家居行业挑战者 / 251<br>张天雷 征途路上，星辰大海 / 259<br>郭红俊 CSDN 社区技术大总管的 10 年 / 268<br>邵海杨 运维人的野蛮生长 / 273<br>工程师文化与管理<br>程显峰 IT 病得有多重？技术圈交际花谈研发管理怪现状 / 282<br>孙 军 新晋技术经理的管理难题 / 292<br>董 轶 技术是件简单的事——资深项目总监的管理经 / 296<br>清 风 豆瓣神组小组长，日系萌神程序员 / 308<br>郭 皓 勇者无惧，行者无疆 / 317<br>某华为人 狼性文化下的螺丝钉 / 324<br>张 矩 那些 Google 教会我的事 / 330</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;作为技术人创业，哪些过来人是如何总结的？&quot;&gt;&lt;a href=&quot;#作为技术人创业，哪些过来人是如何总结的？&quot; class=&quot;headerlink&quot; title=&quot;作为技术人创业，哪些过来人是如何总结的？&quot;&gt;&lt;/a&gt;作为技术人创业，哪些过来人是如何总结的？&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://juejin.im/entry/591522f1570c3500692e15d6&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;昨天，罗永浩在深圳开了坚果Pro发布会，我喜欢那句：我不是为了输赢，我就是认真的工匠精神。技术人创业，是很多年限稍深的程序猿，一个追求内心想法的事。今天主要是王威（威哥）看《技术人创业攻略》读后之感，威哥善于读技术以外的书籍，带动自己的思考，是个实在的极客， 威哥，在知乎上有一个专栏，叫《Let’s Book》由于，我的这本书还在路上，等我看完再接合我看到的感想，再写一篇。以下很多点，我也是相当引起共鸣的。如个人影响力对程序员来说很重要，技术要全面，眼界很重要，我通常理解为格局。创业一定从小的地方切入。这点，我之前文章就有类似，学习技术也是从小地方入手，再铺开。还有多看英文资料，等等。一起来看下提炼的内容。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2017/5/12/27c620fcfc6d7e123ed84ccf8e1aff98&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>12 Angry Men</title>
    <link href="http://aisee.me/2017/05/12/MyView/Movie/12-angry-men/"/>
    <id>http://aisee.me/2017/05/12/MyView/Movie/12-angry-men/</id>
    <published>2017-05-12T11:55:06.000Z</published>
    <updated>2017-05-12T14:39:21.102Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>Reasonable Probability</strong></p>
</blockquote>
<p><img src="https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p2173577632.webp" alt=""></p>
<p>A jury holdout attempts to prevent a miscarriage of justice by forcing his colleagues to reconsider the evidence.</p>
<p>Director: Sidney Lumet<br>Writers: Reginald Rose (story), Reginald Rose (screenplay)<br>Stars: Henry Fonda, Lee J. Cobb, Martin Balsam | See full cast &amp; crew »</p>
  <a id="more"></a>
<h2 id="剧情简介"><a href="#剧情简介" class="headerlink" title="剧情简介"></a><a href="https://movie.douban.com/subject/1293182/" target="_blank" rel="external">剧情简介</a></h2><p>一个在贫民窟长大的18岁少年因为涉嫌杀害自己的父亲被告上法庭，证人言之凿凿，各方面的证据都对他极为不利。十二个不同职业的人组成了这个案件的陪审团，他们要在休息室达成一致的意见，裁定少年是否有罪，如果罪名成立，少年将会被判处死刑。</p>
<p>十二个陪审团成员各有不同，除了8号陪审员（H enry Fonda 饰）之外，其他人对这个犯罪事实如此清晰的案子不屑一顾，还没有开始讨论就认定了少年有罪。8号陪审员提出了自己的“合理疑点”，耐心地说服其他的陪审员，在这个过程中，他们每个人不同的人生观也在冲突和较量…… ©豆瓣</p>
<h2 id="美国之所以强大的原因"><a href="#美国之所以强大的原因" class="headerlink" title="美国之所以强大的原因"></a>美国之所以强大的原因</h2><p>今天家里买了一台47寸的液晶电视，悬挂在墙壁上。<br>就顺便看了好几部电影，一部是马丁 西科塞斯的《金钱本色》，<br>一部是吕美特的《十二怒汉》。</p>
<p>《金钱本色》可以算成“优秀”，但是《十二怒汉》是“伟大”。<br>我当然知道《十二怒汉》是了不起的电影，但是我没有想到居然是这么了不起的电影。</p>
<p>黑白，沉闷，所有的场景就集中在狭窄的陪审团休息室内，<br>我原本以为我顶多能容忍半个小时，但是却越来越激动的看完了全部！</p>
<p>有的电影使你轻轻感动，有的电影让你含泪微笑，<br>有的电影击打进了你的心，而有的电影让你震撼，因为有一种东西剧烈的撼动了你的心。</p>
<p>那种东西叫做正义，叫做良知。</p>
<p>如果有一句话来概括电影的剧情，应该是这样：<br>陪审团十一个人判定一个小孩杀父有罪，但是有一个人持“合理怀疑”的态度，在两个小时之内，他说服了其他的十一个人。<br>我是一个技艺平庸的编剧，我看这部电影，几乎是目瞪口呆。<br>在电影开始的十分钟，我已经明白编剧试图在做一个“不可能的任务”：</p>
<p>他必须在一部电影的长度里，把十二个人的性格，出身，脾性，态度，立场……所有信息有效的传达给观众，并且，要写出每一个人改变的过程，以及内心的理由。<br>编剧不但做到了，而且做得非常漂亮。</p>
<p>连一场废戏也没有（题外话：因为场景完全没变过，时间也是顺接，电影其实应该只有一场戏吧？），一句多余的台词也没有。<br>在每次表决之后，或者当人们的情绪爆发之后，立刻会有一个短暂的间歇，<br>让整个电影的节奏和人物的情绪，自然的平缓下来。<br>电影笼罩到紧张碰撞的气氛中，却张弛有度，极其自然。</p>
<p>但是，我几乎无法用编剧的眼睛在看这部电影。<br>我只是像每一个观众一样，急切的想知道结局，那个只有一个镜头的小孩的命运，让我如此揪心。<br>相信看完电影的每个人都会对美国司法制度的“合理怀疑”十分的清晰，<br>电影不断的告诉我们：我们不是要证明这个孩子没有杀人，我们只是无法确切的证明这个孩子杀了人。<br>一个又一个看似确凿的证据被推翻，一个又一个笃定的人产生了怀疑，</p>
<p>每个人开始对自己的偏见怀疑和动摇，<br>但是每个人的心里，对良知，对一条未知的生命，对自己的责任，越来越明确坚定。<br>作者通过剧中人说：“这是美国司法制度中最神圣的一条，也是我们的国家如此强大的原因。”<br>我最喜欢电影的结尾，并没有出现法庭上陪审团声张正义的激动场面，</p>
<p>电影的结尾，就是雨过天晴，绕过那象征着美国司法制度的法院巨大石柱，<br>男主人公和睿智的老者碰了头，彼此淡淡的问了姓名，散开，融入人群。<br>他们本就是最普通的美国公民，不是什么了不起的英雄。</p>
<p>这是57年的电影。<br>看这种电影的时候，看这种好莱坞电影的时候，会对美国这个国家，以及这个国家信仰的理想肃然起敬。<br>他们的电影，让我们强烈感知到人性中最重要的，最温暖的，最有希望的种种。<br>我想，这才是美国之所以强大的原因吧。</p>
<h2 id="老而弥坚，相见恨晚"><a href="#老而弥坚，相见恨晚" class="headerlink" title="老而弥坚，相见恨晚"></a>老而弥坚，相见恨晚</h2><p>老电影能好看到哪里去？</p>
<p>面对这个问题，我以前的答案是顶多好看到西湖去。号称生猛的《罗生门》、号称华丽的《乱世佳人》、号称经典的《北非谍影》，都没让我打喷嚏。只要是老片，再才华横溢，如今都是老头；再沉鱼落雁，如今都是老太。</p>
<p>但是《十二怒汉》深深教育了我，不，是深深教训了我，老片也能老而弥坚，而且达到“惊艳”级别。以后再问老电影能强悍到哪里去，我会直指月球。</p>
<p>《十二怒汉》是晚上看的。全片一个半小时，看完后激动不已，遂又再看一遍。第二遍不是跳着看的，而是完整的、连续的第二遍。第二遍看完已是凌晨两点，仍无法平息心中燃烧的火焰，久久睡不着。<strong>好电影愉悦人，伟大电影改造人。</strong>《十二怒汉》某种程度上改造了我，让我真正切身领悟到电影吸引观众的手段是那么丰富！现在经过几天冷静的思考，初步想通了这一部上世纪五十年代的黑白老片为何能如此让人欲罢不能，所以就写下来，希望能为《12怒汉》拉来更多粉丝。</p>
<p>《十二怒汉》通篇就是一个场景（头和尾的法院景可忽略不计，完全是装饰性的，删掉都不会有大影响）：十二个陪审团成员在一间休息室内讨论决定一桩谋杀案是否成立。谋杀案的被告是一个18岁的孩子，死者是他的父亲。12位陪审团成员必须讨论出一致意见：孩子的谋杀罪名成不成立。如果成立，孩子将被送上电椅执行死刑。如果不成立，那么不成立的理由必须基于对整个审判的推理、问询、证据、证言或程序产生的“合理怀疑”。由于人证、物证齐全，一开始十二个人中有十一个人斩钉截铁地认定孩子有罪，只有亨利·方达扮演的建筑师觉得此案有蹊跷之处。而电影的结局是，十二个人全部判定孩子无罪。</p>
<p>一头一尾，反差极大，这种看似“不可能的任务”往往最考验剧本的能耐。这就像一道命题作文，扯得水到渠成那就叫本事，扯得东倒西歪那就叫无极。与国内大片绝不同，《十二怒汉》成为了这种充满戏剧冲突的电影的典范——我只是后悔为什么这么晚才看到它。</p>
<p>让我们从头开始，先自己面对一下这道命题作文，看看能有什么回答，再看看《十二怒汉》怎么回答。题目有这样几大难点：一，电影只发生在一间会议室里，这就意味着几乎没有令视觉愉悦的大变幻；二，电影是讲十二个人，十二个人说多不多，说少不少，说不多是因为没有变化，说不少是因为我们必须把每个人物都介绍到位，包括职业、性格、智商、背景、政治取向、心路历程，这些全都要通过对话和动作体现出来，并让人过目不忘，想想都是无比浩大的叙事工程；三，这是关于一桩谋杀案的审判，谋杀案有很多的证人、证据、证词，还包括时间、地点、人物，还有心理学的分析，这些信息是海量的，如何让海量的信息合情合理、有规划、有步骤地安排在各人对话中，且完全照顾到广大观众接受水平，不需要做笔记，不需要查资料，这又是难上加难的事情；四，这故事用一句话概括就是“奇迹般的大逆转”，即一人逐步说服剩余的十一人，这是本片最大的难点，因为这么充满戏剧化的情节，只要安排得夸张一点就会有刻意的嫌疑，而安排得含蓄一点又让观众觉得没有可信性，而且十二个人以什么样的节奏逐一被说服，更是门深厚的学问——稍有不慎，观众就会觉得是安排出来的，假大空的帽子一旦被扣上，就别再想翻身了，这是最难一点。</p>
<p>那么《十二怒汉》是怎么完成的呢</p>
<p>突然间想到，在说《十二怒汉》之前，不妨先说说去年网上很火爆、在院线却很无名的另一部电影——《这个男人来自地球》。关于这部电影，我以前写过，不重复说过的观点了。从叙事的技巧上来说，在同样是封闭空间靠对话推进情节发展的前提下，《这个男人来自地球》比起《十二怒汉》来，不仅没有突破（黑白改为彩色都显得无力了），而且退步明显。无论是动作场景、音乐编排，还是演员表演、台词设计，感染力都差了不是一层楼，是专业与业余的差别。这倒是一个怪现象，现在推崇《这》的人对《这》的褒奖之词，《十二怒汉》倒是很受用的。如果这些话被贴在公共网上，很可能会有很多《这》迷用恶毒语言攻击我是SB，但是我相信看了我的分析，这些人都会闭嘴，因为显然《十二怒汉》编导的诸多天才之处，《这》要么没做到，要么大打折扣。好了，偏题了，不再提《这》了。</p>
<p>虽然追随天才的步伐是自不量力，但是我仍将尝试分析一下《十二怒汉》的技巧。</p>
<p>一，怎么一下子记住十二个人？</p>
<p>十二个陪审团成员，十二个主角。人多最怕的是什么？乱。</p>
<p>因为只有亨利方达这一个大明星（其实对于我们这些年轻人来说这张脸也绝对不认识），让观众能在半小时内就记住每个人，然后再期待他们在接下来的一个小时内轮番登台唱戏，那得花多大一番工夫！我至今都不敢想象，那需要多少才情，才能构筑如此宏伟的叙事大厦。</p>
<p>首先问一下各位，如果让你拍片子，有十二位迥异的人物要介绍，你会用什么方式来“又好又快”地让观众记住他们谁是谁？让我们想想比较有名的十人左右群戏电影，《指环王》靠种族区分，《爱情呼叫转移》靠的是众多明星区分，而且都是通过相当长的时间来介绍人物。如果时间很紧只有半小时呢？如果人物都不是明星呢？怎么办？</p>
<p>《十二怒汉》编导的方法与众不同，而且他们的方法也只有这部片子能用。</p>
<p>他们引导观众记住人物的方法，不是名字（都没有名字，而且名字不重要），不是编号（数字没有个性差异，反而会阻碍人的记忆），不是职业和性格（这个需要时间来强化印象，不是很简单有效的方法），不是高矮胖瘦的外表（这仍需要反复强化才能让人记住），不是衣着（不仅黑白片，而且大家都穿相似的正装）……那到底是什么？</p>
<p>有牛人告诉我，间谍能在短时间内背下一篇长长的论文，不是靠强记，而是靠巧记，即把某些文本的代码替换成另一种非文本的代码，比如我们身体的某个部位或中国地图各省位置，那么他运用的大脑区域就不是我们平常用来记忆文本的区域，而是其他负责处理具象事物的大脑区域，这样记忆效率会大大提高。其核心技巧，按我的理解，相当于高中数学课上学的“数形结合”大法。的确，我考高考数学，只靠数形结合的方法，却几乎能答所有类型的题目。</p>
<p>写到此，不禁感叹《十二怒汉》的编导是天才。他们在不知不觉中，把我们变成了神通广大的伯恩，引导我们用间谍的方式去记忆，让我们毫不费力地记住了这十二个人。</p>
<p>编导开篇做的第一件事情，就是确立一名主持者；而让这主持者做的第一件事情，就是宣布每个人都按照陪审团的编号入座。注意，这个不起眼的宣布，是整个叙事的基石！《十二怒汉》让我们在极短时间内记住每个人的方式，就是这十二个人的位置！！！让固定的人，坐在长桌的固定位置，一端一个，一侧五个，以后哪怕因剧情需要人会走来走去，隔一段时间也一定会让他们重新回来入座，不断强化印象。我敢打赌，凡看过《十二怒汉》的人，基本上都说不出角色的名字，但全都说得出每个人的位置！</p>
<p>简单！有效！就是天才！其他电影根本做不到这一点，因为不可能不让角色从头到尾不动呀。所以说，场景单一，别人说是叙事上的劣势，我说到了天才手里反而是得天独厚的优势！《十二怒汉》失去的只可能是镣铐，得到的却是全世界！</p>
<p>二，怎么让这十二怒汉各个有戏唱？</p>
<p>好了，我们分析出了我们为什么能够一下子记住这十二人，但是这只是编导征服我们的最基础最简单的第一步。接下来，我们需要分析为什么他们能够使得每个人都给我们留下了那么深刻的印象？</p>
<p>有必要重提一下这里的几大难度：一，不能太夸张，不然观众看出了你的技巧，就显得很傻很矫情（《英雄》的叙事就是技巧被人一眼看出，又不是原创，显得太功利，所以被人BS至今）；二，不能太低调，不然效果不得力，观众不知你的表达；三，不能给人物贴标签，一个靠人物和对话撑场面的电影，贴标签是自杀行为；四，每个人当然不能同时出场唱戏，而分批出场又很难把握整体节奏；五，每个人的观点和思想是有层次和变化的，因为除了最开始一人，其他十一个人都经历着180度大转变；六，这种故事没有先例可循。</p>
<p>以上六大难题，《十二怒汉》必须攻克前五。</p>
<p>为了讲述方便，我暂且按照十二怒汉坐在长桌边上的方位，以顺时针方向来介绍这十二个人：</p>
<p>十二点方向：就是主持者，1号陪审员，陪审团团长，学校橄榄球队教练。他的作用，是组织者。在故事上，他起到的作用微乎其微；但是在影片结构上，编导只有通过他才能实现某些意图：他负责提供资料和道具的支持，负责制定规则，负责定期组织投票。虽然他自己也闹过情绪，但是他制定的规则有效地把其余十一个怒汉牢牢控制在座位上，最难能可贵的是他对这个原则的支持——只要有人提议，就会组织投票。这使得无论是怒汉还是观众都能在一个阶段性争辩后看到争辩的结果，而每个结果又产生了每个人新的心理效果，推进着故事继续讲下去。</p>
<p>一点方向：2号陪审员，小个子，戴眼镜，年轻人，职业不明，但是应该是需要高智商的工作，因为7号陪审员经常讽刺他“天才”。他的戏份不多，第一次参加陪审工作。刚开始没有自己主见，但是随着讨论的深入，他渐渐地有了立场。虽然没有站在风口浪尖，但是几次帮腔很有力。提出了凶手拿刀方式的疑问，间接贡献了这么一个“合理疑问”。曾帮助8号重演现场时数秒，热心肠，曾提供大家润喉糖吃。</p>
<p>二点方向：3号陪审员，中年人，大嗓门，火爆脾气，自己开了一家通讯公司。骄傲，自负，但是稍欠逻辑。因为与自己儿子闹翻，断绝了父子关系，带着对年轻一代的仇恨来看待这个弑父案件，所以他是站在“有罪”立场的最后、且最顽固的人。作为一个富有经验的陪审员，他在陪审时做了相当详尽的笔记，因此他也是第一个罗列案件信息的人，主要是老人和妇女两位证人的证词，于是我们知道了被告有多么不利：老人不仅听见了他与父亲的争吵，而且目击了儿子夺路而逃；妇女同时在街对面目击了凶杀的全过程。感谢3号陪审员的信息，我们基本上也站在了“有罪”这一边。3号不太懂得说话，尤其是好几次说漏嘴，自摆乌龙的台词倒凸显了他可恶外表下的可爱一面。</p>
<p>三点方向：4号陪审员。如果说3号是最顽固的“BOSS”，那么4号真的是最厉害的“BOSS”。4号是我最喜欢的角色，因为塑造得实在太成功了。身为投资经纪人，他有最自信的立场，最严谨的表达、最清晰的逻辑、最客观的立场、最稳定的情绪。我一最好的哥们，立志要当他这样职业的人，结果果然和他很相似，甚至客观到有失误了都会自责，最后那句“奇怪的是我竟然忽略了这个细节”是编剧的神来之笔，简直是活脱脱的金融界的福尔摩斯！这样无比彪悍的牛人，<strong>当他是敌人时最棘手，而当他是战友时却最可靠。</strong> 作为最后第二个被说服的人，他其实是最终大BOSS，如果不是一个细节被提出来，他很有可能重夺失地，甚至同样来个翻盘大逆转——事实上他创造了唯一一次的逆转，而且有理有力有节。当他宣布自己投票“无罪”，说“因为我有了一个合理疑问”时，我简直是大呼万岁的。听这个人讲话，就是一种享受。要说他的缺点，可能就是理性得过头了。</p>
<p>四点方向：5号陪审员，职业未知但应当算很体面的工作，出身来自于与被告一样的贫民窟。他一开始稍有犹豫，到第四次投票后就一直坚定地站在无罪的立场上。最大的贡献是他的身份：既证明了来自贫民窟的人不一定就没出息，又通过他的亲身见闻证明了被告不会以案件中的方式刺杀人，回答了2号提出的疑问，完整形成了一个“合理疑问”。</p>
<p>五点方向：6号陪审员，职业是装修工人，虽然职业不体面，但是教养很好，尊老爱幼。一开始是坚定的“有罪”派，在故事线索上没有起到重大推进作用，但是却在厕所里向8号提出过一个非常有哲理的问题：“如果你真的说服我们都投了无罪，而那孩子却是真的杀了自己的父亲，那怎么办？”这句话看似无意，实则点出了《十二怒汉》的核心：<strong>不在于探寻出真相，而在于找出合理的疑问。</strong></p>
<p>六点方向：7号陪审员，一个橘子酱推销员，球迷，戴着帽子，有较为典型的推销员的性格，自私，善变，玩世不恭、自以为是。他手上有当晚橄榄球赛的现场票，急着想脱身看球去，所以他是现场最心不在焉、最急于脱身的人。这恰恰能解释他为什么那么坚持“有罪”后又改投“无罪”，虽然他嘴上不承认。</p>
<p>七点方向：最核心的人来也，亨利·方达饰演的8号陪审员，唯一一个一开始就提出“无罪”的人，承载着编导的寄托，是希望的代言人，但是并非是一个“高达全”的人物。身为建筑师，他虽然有清晰的思维，也提出了很多有力的疑点，但是我认为他的分析能力远远不如4号，甚至有时还不如9号。他并非是由于有了清晰的反驳证据而提出的“无罪”，面对有力的质疑，他也会语塞。他提出“无罪”，是来自他对“合理怀疑”的正确理解和“悲天悯人”的圣贤气质，不是基于理性，而是基于本能。所以他只想TALK，只想抛砖引玉。所以我们看到他说的最多的三句话是：<strong>“I DON’T KNOW,LET’S TALK ABOUT IT”、“MAYBE”、“IT’S POSSIBOLE”。</strong> 好在“一个好汉三个帮”，他的坚持和建筑师实干的性格使得他成功地实现翻盘大逆转，完成了几乎不可能的任务。</p>
<p>八点钟方向：9号陪审员，年纪最大的绅士老头。他是第一个站起来支持8号的人。相较于8号的感性，他的作用相当于4号之于“有罪”阵营，以强势、理性的分析为“无罪”阵营提供“火力援助”。在12怒汉中，他是最具智慧，最具观察力的人。他对老人、妇女两位证人的外表和心理分析，几乎达到了波洛的水准，有鞭辟入里、一针见血的犀利之感。我想，他退休前要么是大学教授、要么是报纸编辑，要么真的是侦探。听他的分析，简直是赏心悦目！有了他的发言，《十二怒汉》简直如同阿加莎·克里斯蒂灵魂附体，像一个多面体，这时就翻到了侦探小说的一面！他提出了一个很有趣的疑问：证人的证词真的可信吗？这种充满智慧的提问向来很讨人喜欢，何况他的回答几乎完美。我认为9号是“无罪”阵营最关键的人物。</p>
<p>九点钟方向：10号陪审员，定然是个暴发户，傲慢无礼，始终对弱势群体充满歧视和偏见。在发表一通令人厌恶的歧视言论后，受到其余十一怒汉的“非暴力抵制”，结果脆弱的心理防线崩溃，站在了“无罪”一边。</p>
<p>十点钟方向：11号陪审员，带有英国口音的大胡子钟表匠，有自己独立思考的能力，提出了自己的一个疑问：“那孩子为什么会跑回现场”，为剧情进展推进了一把。而最难能可贵的是他的仗义执言：他曾不止一次地发表对“合理怀疑”这一法律概念的解读和看法，甚至提升到“这就是我们国家如此强大的原因”，可以说是点出了影片的核心。而他对投机的7号的责问“如果你觉得那孩子有罪，那你也应该坚持下去，而不是为了快点结束而投无罪”，显得正气浩然，大快人心！</p>
<p>十一点钟方向：12号陪审员，广告界人士，又一个被演活的人。玩世不恭，爱讲冷笑话，立场摇摆，圆滑世故。相对于建筑师、钟表匠、金融家这些实在的工作相比，讲究创意和表面功夫的广告职业使得12号成为了一开始相当抓人眼球结果却是最没主意的人之一。而他的优点是：不固执，尊重事实，且有正义感。最棒的一瞬间是有一次投票他思想开小差，1号叫了他好几次才听见，不耐烦状拖长音说“GUITY——”，又是神来之笔，无助于故事推进，却省时省力地把这仁兄的性格演活了。</p>
<p>好了，费了这么大劲介绍好了人物，可以看到每个人都有独一无二的背景和个性，这只是平面的；纵面上，他们是有节奏、有层次、有侧重、有步骤地展示出来，思路是这样的：一段新的案件分析引发了新的一个性格展示，新的性格展示又引起了新的争论，新的争论又引发了新的投票，新的投票结果又提出新的案件疑点……编导就是通过性格展示——案件信息同步揭示，最终，线索全部明朗，证据全部推翻，性格全部展示，有人甚至达到揭皮露骨的崩溃边缘……将如此复杂的功课完成得有条不紊，实在是有才！</p>
<p>有同志提出影片的段落是根据窗外的天气状况等分散观众注意力的支线情节来划分的，我觉得完全可以简单很多，就是以投票次数来分：</p>
<p>全篇共计投票次：</p>
<p>第一次，1：11，只有8号提出疑问，但是我注意到5号、9号的举手相当犹豫和滞后。</p>
<p>之后8号提出看凶器，并证明凶器作为证物有疑点。</p>
<p>第二次，2：10，9号加入进来。</p>
<p>随后提出老人、妇女两证人证词的矛盾之处。分析老人证人的心理状态。</p>
<p>第三次，3：9，5号加入。</p>
<p>11号提出被告为何回现场的疑问。</p>
<p>第四次，4：10，11号加入了进来。</p>
<p>随后通过重演老人证人的目击现场，证明他证词有不可信之处，这是一场很有力的动作戏，反驳得很有力。</p>
<p>第五次，6：6，2号和6号同时加入。</p>
<p>随后讨论被告案发在看电影的证词，通过8号与4号的对质证明了被告有可信之处，这场戏让“一向不出汗的”4号出汗了，分外精彩。随后2号提出凶器的刺杀方向问题，5号证明被告不可能用这方式杀人。</p>
<p>第六次，9：3，1号，7号，12号加入。</p>
<p>随后10号发表歧视宣言，大家不约而同冷处理，10号心理防线崩溃。4号作为最理性者，力挽狂澜，提出最具杀伤力的证据：即妇女的直接目击证据。一时间，无人能反驳。</p>
<p>第七次，8：4，12号倒戈。</p>
<p>对峙进入僵局，大家在商讨如何决策。9号观察到一细节，提出了全篇最精彩的论证和反驳，为了不影响各位初次观看的兴致，我拒绝透露这是关于眼镜和视力的。至此，原本确凿无疑的所有人证物证全部被打上疑问。</p>
<p>第八次，11：1，唯独3号在坚持。</p>
<p>3号自己情绪失控，防线也崩溃了，最终投下“无罪”一票。</p>
<p>前前后后，共8次战役，每一场都是其中某几位怒汉的性格和立场之间史诗般的角斗。虽然是黑白的画面，但是如此有信息、有条理、有戏肉、有张力，毫不矫情做作，毫不拖泥带水，该愤怒的时刻就怒发冲冠，该救济一把的时候就拔刀相助，实在是豪迈、爽快！</p>
<p>写得很晚了，赶紧刹车结束。</p>
<p>发现我目前只能罗列《十二怒汉》的表象，但是编导何以如此精彩地组织情节的秘笈，我却说不出来。</p>
<p>惭愧之余，却一点不失落，因为技巧始终是死的，但是我却体验了这部电影活的精神：那就是 <strong>对生命和敬畏和对真相的尊重</strong>。《十二怒汉》不是想炫耀“合理怀疑”的概念，而是想说，当一个人的生命掌握在你手中的时候，你是否愿意独立思考，哪怕做一点点的怀疑？《十二怒汉》的故事，分明很骄傲地宣布，不屈不挠的怀疑精神和尊重事实的态度，是他们国家如此强大的原因。所以，《十二怒汉》为什么能这样让人激动？表演是一回事，剧本是一回事，拍摄剪辑也是一回事，归根结底，是这样一种可敬的精神。是这种精神，让我们振奋，让我们感慨，让我们激动！</p>
<h2 id="宏观企业管理，微观组织行为学"><a href="#宏观企业管理，微观组织行为学" class="headerlink" title="宏观企业管理，微观组织行为学"></a>宏观企业管理，微观组织行为学</h2><p>看到很多评论，必须补充一句，我本人是不赞成过分强调这些技巧的，而且也不擅长，不过，为什么我们不能折中一点，学习一些人际技巧呢？起码可以润滑同事、家人、朋友关系，武器在有的人手里是凶器，在有的人手里是圣器，一念成佛，一念成魔。2010年3月</p>
<p>——《十二怒汉》观后感<br>苏格拉底以死证明，“多数人民主”也可能是“多数人专制”，尤其面对一个似乎证据确凿的杀人案和十二个例行公事的陪审员时，就如同企业里准备不足、例行公事的决策会议，很容易变成领导或是“权威”的一言堂。<br>除非碰到一个清醒执着的反对者，而且，还要有理有据有技巧，才能战胜十一对一的强大群体压力，《十二怒汉》就为我们展示了这样一个人和质疑与引导技巧。</p>
<p>太极之刚柔并济：<br>说服十一个陪审员，8号（在一群没有姓名的男人中间，只能如此称呼）运用了不同的策略，你柔我刚，你刚我柔，借力打力。对沉默寡言认真思考的或是表面逻辑清楚，实际并没有认真思考的，充分抓住思考成熟的逻辑论述，一句不让，直接说服，或是利用机会凸显自己的逻辑正确，争取信任，比如，面对12号，一直追问到他说出“没有人可以确认那一点（指证人不会犯错），我们又不是在做科学论证”；对被情绪控制的，制造沉默，避其锋芒，利用群体压力，凸现其无理性，比如很多时候对3号和10号的态度；对其相互之间意见的不一致，充分放大和利用，引起内部争议，静观其变而得到更多有利于自己的论据和支持者，分化论敌，比如当出身于贫民窟的5号与其他人关于出身问题发生争执时，还有很多情况下，都是任凭大家互相讨论，而没有急于发表自己的看法，虽然有时候他其实已经有成熟的意见（这点堪为部分企业一把手的楷模）。</p>
<p>当然，有的情况下也要以刚对刚，但要击其关节，令其避无可避、转无可转。手中有驳倒对方逻辑基础或者基础证据的杀手锏时，有目的的把对手逼到最后一步，再准确出击，从根本上击倒对手的逻辑信心，面对3号提出的凶器证据，8号就拿出了最有信心和最出其不意的论据，一把和凶器完全相同的摺刀，而且是把大家的指证从泛泛的“出身”、“前科”逼到凶器上才拿出来。</p>
<p>兵法之知己知彼：</p>
<p>十一个反对者，组成一个反对群体，实际上分成两部分，核心反对人员和助力人员，而体现在个体身上，群体的作用则体现为两种——社会助长作用和社会抑制作用，前者指在群体活动中，个体的活动效率因为群体中其他成员的影响而出现提高的现象，后者相反，个体活动的效率因为群体中其他成员的影响而受到减弱。说通俗一点，就是有的人见到人多就激动，有的人见到人多就发蔫。分化、瓦解、说服这个群体，要利用争论充分暴露和了解反对群体的组成结构和成员性格，针对性的组合语言、情绪和逻辑。</p>
<p>在面对助力人员时，社会助长型性格的，可以激发其英雄式的责任感，比如当6号很认真的询问9号老人意见时，就促发其充分发表了独特的意见；社会抑制型性格的，可以减轻其身上的责任压力，给以重视，通过赞扬和提供容易发挥专长的表现机会来提高自信和参与热情，比如对戴眼镜的2号和出身在贫民窟的5号，在讨论电车通过时间时，8号专门询问他们的意见，给注意语法的11号创造投无罪票和充分得到重视并发表意见的机会。还有一种群体懒惰者，只想随大流的人，对他们则要给予并利用压力，两种压力——负责和思考的压力，急于结束的压力，在讨论刀子刺入部位的时候，8号就专门向12号和7号提问，直接导致7号轻易的改投“无罪”票。</p>
<p>对核心反对人员，社会助长型性格的，可以离开、搁置他，降低激情和动力，避免可能造成的盲目偏执，比如，在讨论孩子为什么回去取刀时，10号非常激动的四处指责，8号并没有与其争论，而是提出再投票一次的建议，缓解其偏执的情绪；社会抑制型性格的，可以通过关注、理解以及主动的了解来拉近心理距离或是进行说服，这使得很多认真思考、意见坚定的反方在同意“无罪”之后成为“无罪”方很重要的力量，提出很多新的质疑。</p>
<p>同时善用群体压力，当自己处于弱势时，回避群体压力，比如第二次采用秘密书面投票，就避免赞同者因为迫于群体压力而不敢赞成无罪，而且借机凭借“善解人意”赢得了更多支持。</p>
<p>当己方占据优势时，可以充分发挥群体压力的作用：强调优势地位事实，并且可以利用沉默强化压力，寂静（寂寞）状态下，往往情感压力更大。在最后只有三票有罪时，面对情绪激动10号，大家都置之不理，反而使得这个社会助长型性格的老人变得懦弱无力。</p>
<p>情感之三十六计：</p>
<p>远交近攻<br>尊重人的感情和情绪，利用一切细节感染他人，关心、安抚是最佳的突破心理隔膜的机会，对不同的人和不同的观点，寻求一部分共性的内容或看待角度，缩小差距，建立信任，寻求支持者，既是对争论对手的分化瓦解，也是对本方人员的支持鼓励。重视1号作为主持人尽职尽责的特点，充分尊重他的组织权，并且在关窗户的时候认真听这个橄榄球教练讲故事；重视2号希望做一点事情的想法，当2号善解人意的为9号老人解围，询问谁要喉糖时，8号立即表示了支持，并且模拟开门场景时请他记录时间；重视7号对球赛时间的要求，并没有说他的要求无理；对很多人的部分质疑，都及时的给予支持。很多这种细节上的行为，反而更突出其他受情绪控制或者简单认为有罪的陪审员的无理。</p>
<p>暗渡陈仓<br>敌对方试图拉近距离的时候，可以接受其建立关系的努力，这种影响其实是双向的，在其主观接近的同时，不知不觉也会收到己方的影响，可以避免克服敌意单向接近，最终哪一方能影响和改变另外一方，取决于信念、理念、逻辑和策略。比如在卫生间里对6号和7号的态度。</p>
<p>欲擒故纵<br>说话要抓住要点和关键环境，不必争的不用争，听或者让其情绪激动，多说多暴露可能更有利于寻找问题点。<br> “我们可以花一小时来讨论，球赛八点才开始”；“他过了悲惨的十八年，我觉得我们应该给他一个机会”；“我想要提出一些问题，或许他们毫无意义”……在面对大家反对的弱势情况下，8号说话不多，而且总是保持一种收敛的情绪，没有走动，没有慷慨激昂，而且对一些容易激动的人，更多是引导和避让，并不针锋相对。<br>前期对3号的态度则通常是针锋相对，激怒他，制造他与其他陪审员的矛盾，积累其情绪冲动和其他陪审员对他的斥力与群体压力，而且，3号在激动情绪下说出的话和做的事，事实上也多次为他提供了证据，拿错了折刀（不是案件的凶器，而是8号买到的一模一样的刀），“他（作证人的老人）怎么能肯定他看到的都是真的”，“我要杀了他”……</p>
<p>反客为主：<br>当最后只剩下3号坚持有罪的时候，8号开始反过来挨个的询问反对方，并且最后站立着凝视和质疑3号，给予其最大的群体压力和情感压力，“我们想听听你的说法”。而3号作为面临情感压力者，往往会用行动掩饰自己的脆弱和痛苦，可能会暴露出真正的痛苦或意见来源，以及背后的一切真相。正是这种反客为主的压力，大家的凝视和无语，促使3号暴露了情感原因的偏执，当情绪宣泄一空后，只能承认“无罪”。</p>
<p>看完全片，探讨微观组织行为学和沟通技巧的同时，不妨也宏观上反思一下我们的企业，是不是在减少仓促决策的同时，能够培养几个这种了解企业战略、积极思考、坚持质疑的不同声音，而不是象征性的请示各位领导，最后无所适从。记得，不要让我们的员工在会议室里沉默的仰视领导，离去时低头默默无语，走进企业时仰视领军者个人魅力，离开时看轻企业的整体决策能力，就象整个影片为我们展示的，<strong>开篇时仰视着法院庄严肃穆的大门，结尾只有从内部俯视的台阶和匆匆离去、稀疏的人影……</strong></p>
<p>转自在下blog——三真阁<br><a href="http://www.justlaugh.com.cn/" target="_blank" rel="external">http://www.justlaugh.com.cn/</a><br>更多读书记录——100多篇书摘及20多篇详细读书笔记，请访问三真阁“读万卷书”——<a href="http://www.justlaugh.com.cn/books" target="_blank" rel="external">http://www.justlaugh.com.cn/books</a></p>
<h2 id="十二怒汉、辛普森案和程序正义"><a href="#十二怒汉、辛普森案和程序正义" class="headerlink" title="十二怒汉、辛普森案和程序正义"></a>十二怒汉、辛普森案和程序正义</h2><p>第一次看《十二怒汉》，还是刚上大一的时候，当时感觉非常非常震撼。因为以前虽然听说过陪审团制度，但多数是从嘻嘻TV等媒体上接触到的，自然是批判性的。可当时看了这部电影之后，我的第一感觉就是以前自己以前的想法错了，这个制度虽然不完美，但实在是一个“最不坏”的选择。</p>
<p>多数80后的人最早接触陪审团制度应该是上世纪90年代轰动世界的辛普森案，记得当时国内媒体把此案炒的红里发紫，作为美国司法制度失败和无能的典范大加宣扬，而我当时亦深以为然，感觉美国的法制在老辛的“梦之队”律师团这个金钱堆起来怪物面前不堪一击，甚至觉得美国的司法就是保护有钱人的，所以才会使辛普林这样“罪大恶极”的人逃脱制裁。记得当时批判的主要是陪审团黑箱操作，陪审员容易带有感情色彩，审完就解散，不用负任何责任等等。看了《十二怒汉》之后，我突然兴起，想详细了解一下辛普森案的审理经过特别是其陪审团的构成，于是第二天就开始在图书馆和网络上查相关资料。</p>
<p>翻阅了很多资料之后，不得不感叹于信息不透明的强大，可以让一个正常人变成弱智。简单的分析一下此案吧，谈一谈当时想法上的错误。<br>首先，现在可以看出来，当时的检方绝对是拼尽全力想把辛普森送进大牢的，派出了本地区最好的未尝一败的西方不败检察官、洛杉矶的总检察长亲自坐镇，前后调动了数百名刑警和刑事侦察专家，花了几百万美元，可谓是尽心竭力，当时国内媒体影射检方想放辛普森一马是站不住脚的。</p>
<p>其次，陪审团的构成也是没有问题的，这个陪审团对辛普森其实很不利。虽然在梦幻律师团和所谓“种族问题”的压力下把此案放在了洛杉矶黑人较多的区法院来审理，在随机抽取的12人陪审团中有9个是黑人，直觉上陪审团容易因肤色问题偏向辛普森。但仔细看陪审团的构成后会发现9个黑人中有8个是女性，这一点对辛普森其实是很不利的。因为美国有一项黑人女性讨厌哪种黑人男性的调查，结果显示最讨厌的是两种，一是赚钱或成名后马上娶个漂亮白人老婆的，二是喜欢家庭暴力常对老婆拳打脚踢的。众所周知，辛普森同学这两样占全了。根据多数女人的性格，在这样一个人身上估计很难唤起同肤色的“认同感”。</p>
<p>最后辛普森被判无罪并不是很意外，美国的司法系统对程序正义有着近乎苛刻的追求，本案没有直接证据，而主要的间接证据又因采证程序上的问题未被采纳，在美国这个一切重证据，“<strong>宁可放过一千，不可冤枉一个</strong>”的国家，陪审团最后只能做出无罪判决。当然，如果辛普森是一个穷光蛋，请不了那么好的能言善辩的律师，估计他是要坐牢的。但这种假设意义也不大，因为在一场审判中，谁都无法保证所有人的起点公平，能保证的只能是过程公平、程序正义，这一点这个案子上完全做到了。</p>
<p>美国司法首要的目标并不是把罪犯绳之以法，甚至也不是追求真相，而是保护公民的合法权利不受政府的侵犯。如果只是要查明真相，打击犯罪，那么就不应该有米兰达警告，就不应该有对程序正义的极端强调。因为没有程序上的正义，最终必将损害实体正义。因为在国家专政机器面前个人很弱小，不强调程序上的正义，也许一段时期内能很好的打击犯罪，但从长远来看，对社会正义的损害更大。“包青天”是靠不住的，对法律制度的严格的近于机械的执行，rule of law才是靠得住的。这一点中国人最懂也最不懂，冤假错案面前，中国人首先想到的是能够上达天听，批示远比证据重要，关系远比程序重要。在这样的环境中，佘祥林含冤入狱11年却能被当成司法公正的典型就不奇怪了。<br>昨晚又重新看了一遍这部电影，没有了当初的那种激动，但看后更感觉这是一部好电影。虽然绝多数情节都是发生在一间封闭、阴暗的小屋子里，只能靠人物对白推动情节发展，但巧妙的安排不会让人觉得丝毫厌倦。看完后细细回味才发现，导演竟然在短短的一部电影中讲述了十二个人的主要生活经历、生活观、价值观等等，人物的对白、动作没有一点浪费！仅此一项，就足以让这部电影成为经典！</p>
<h2 id="民主制度简明教程"><a href="#民主制度简明教程" class="headerlink" title="民主制度简明教程"></a>民主制度简明教程</h2><p>已经八十多岁的悉德尼卢内特（Sidney Lumet，他的中文译名很不统一，花样众多）2007年拍了部《在魔鬼知道你死前》，后辈们较好不断，为这位高龄的牛导欢呼。确实，他老人家至今已经拍了太多值得让人细细品味的好片，如《典当商》、《热天午后》、《大审判》等等，而其中至今最令我拜服的还是《12怒汉》，在我看来，这简直就是一部民主制度的简明教程，在一个屋子里，就12个人就能整一出充满戏剧性的精彩故事，实在强大。</p>
<p>本片首先当然表现的是美国的陪审团制度，我想有不少人应该和我一样，初听陪审团制度有些不可思议。天啦！判断一个人有罪无罪是多么需要专业知识的事情呀，竟然交给一群彼此多半不相识，凑在一起的“乌合之众”。本片我们看到，一个孩子的生死抉择被交到了12个人手中，而需要注意的是此时审理工作已经完成，他们需要的是根据这个过程做出尽可能正确的判断。其实，所谓陪审团制度不“专业”很大程度是因为我们常常忽视过程，只看结果，只看到最后的决定由非律政人士做出，却忽视了之前的这个过程，警察、律师、法官等都是专业人士，他们会搜集和甄别证据，而这个过程只要保证程序正义性，剩下的陪审团做出的判决往往可能不能保证百分之百都是完全正确，但是往往能尽可能避免最坏的结果。这就如美国总统大选，民众并不都是政治方面的专家，并不都是有敏锐洞察力的能人，但是大选和之后的弹劾等制度保障能尽可能避免糟糕的结果产生，这不完美，但是确是基于现实合理。</p>
<p>本片还纠正了很多人认为民主就是“少数服从多数”的观念，是的，某种程度上最后的结果往往这样做出，但是却是基于程序的正义和理性做出的。所以，我们看到，起初只有一个人认为被告无罪时，并不是大家就此做出决定，而是倾听这场争论弱势一方的论点。而到了后来形势逆转，只有少数人、甚至一个人认为被告有罪时，大家仍然倾听他们的声音，哪怕有些反驳有些歇斯底里。而这个过程中严守着程序公正，每当有人提出要投票时，主持人都组织着投票，没有因为观点对立双方的悬殊就省去一些“麻烦”的步骤。</p>
<p>同时，本片也告诉我们民主有时也会有些混乱，但是总体是有序的，有风度的活动。比如片中，我们看到了各色人的举动，他们争论不休，甚至几乎拳脚相向，但是总体上总会有人维持，让整个过程在理性中进行。同时，片中的人物也是背景相差很大，但是他们能够走到一起来讨论一个他们素昧平生的人的生死，这也体现着民主的包容性，让不同背景的人都能参与。片中有人显的正气凛然、有人显的吊儿郎当、有人从贫民区走出、有人对贫民区的人有固执的偏见，但是没关系，民主制度下会因为政治正确性问题影响你的结局，但是不会因此阻碍你的参与。同时，大家都原则上保持着理性和风度，如果真是缺乏理性的固执己见，那么也不会出现最后一个人说服大家的结果，大家大多带着严肃的态度看待这个事件，根据的是法庭上的证据做出抉择，不会意气用事，当发现最初的看法是错误时，也能很有风度的接受，大家都认识到他们之间的争执并不是为了一个“输”与“赢”的问题，而是事关一个人的生命，事关法律的尊严。</p>
<p>本片还告诉我们民主在严肃中又允许一些儿戏，但是同时又会有纠偏机制。比如，片中那位看起来有些痞，就希望赶快出个结果去看球赛的角色，他开始坚信被告有罪，希望赶快出个有罪判决，好去娱乐。后面见无罪的一方占了上风，又改口认为被告无罪，希望这时赶快出个无罪判决，好摆脱这麻烦事儿。片中又还有个坚持有罪看法到最后的“莽撞人”，出于一些原因态度粗暴，歇斯底里。但是他们的意见没有被剥夺，而是被尊重，同时，更多理性的意见又可以化解一些偏执的负面影响。而民主制度下的政治也是如此，我们曾经惊讶美国人怎么能这么娱乐政治，其相关的笑料有些巧妙、有些恶俗，但是这本身也是一种政治态度，或许不那么务实，有现实意义，但是却以其这种姿态对一些现实意义的政治行为产生着影响，所以当然也要包含进来。</p>
<p>《12怒汉》并不是一出简单的英雄主义赞歌，更多的是以小见大政治制度缩影，从中我们看到的却是一个群体的英雄形象，他们让一个无辜的生命逃过一劫，或者貌似让一个无辜的生命逃过一劫，谁知道呢，或许如《一级恐惧》一样放过了一个真正的罪犯，但是这种和“宁肯错杀一千，不可放过五百”的观念相左的导向我认为更加给公民以安全感。</p>
<p>最后，说说电影本身吧，本片整个故事都在一个房间内展开，但是却有悬念、有冲突、有人物性格的刻画、有剧情转折的亮点，可谓充分表现了电影的戏剧冲突的魅力，在高立足点的背景下还做到了好看，实在令人叫绝。而且本片逻辑上一环扣一环，注意细节，没有一些故弄玄虚的哗众取宠，比起2007年那部我认为被高估的《这个男人来自地球》来，剧情要饱满的多。在去年，本片也被俄罗斯大导米哈尔科夫翻拍了一部基于车臣背景的《12怒汉》，还没看过，不过根据同样普遍的好评来看，值得期待。再次向84岁高龄的悉德尼大导致敬，您老太牛了。</p>
<p><a href="http://hi.baidu.com/doglovecat/blog/item/97c99a135b049d856438db3c.html" target="_blank" rel="external">http://hi.baidu.com/doglovecat/blog/item/97c99a135b049d856438db3c.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Reasonable Probability&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p2173577632.webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;A jury holdout attempts to prevent a miscarriage of justice by forcing his colleagues to reconsider the evidence.&lt;/p&gt;
&lt;p&gt;Director: Sidney Lumet&lt;br&gt;Writers: Reginald Rose (story), Reginald Rose (screenplay)&lt;br&gt;Stars: Henry Fonda, Lee J. Cobb, Martin Balsam | See full cast &amp;amp; crew »&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="English" scheme="http://aisee.me/tags/English/"/>
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>Java Virtual Machine</title>
    <link href="http://aisee.me/2017/05/11/Program/Java/java-jvm/"/>
    <id>http://aisee.me/2017/05/11/Program/Java/java-jvm/</id>
    <published>2017-05-10T23:20:06.000Z</published>
    <updated>2017-05-11T00:09:07.710Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1986868-af3f10e6c1b0027a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a href="http://www.jianshu.com/p/24c074138efa" target="_blank" rel="external">Source</a></p>
<p>我们都知道，不管是Java还是Android都绕不开JVM(Java虚拟机)。虽然Android有dalvik和art，但是Android的编程语言还是Java，了解JVM机对于我们掌握Java知识有莫大的帮助。下面我将从以下部分来聊聊JVM:<br>1) JVM运行时数据区域<br>2) HotSpot 虚拟机对象的创建，内存布局以及访问定位<br>3) 垃圾收集算法<br>4) 垃圾收集器</p>
 <a id="more"></a>
<h1 id="你不得不了解的JVM（一）"><a href="#你不得不了解的JVM（一）" class="headerlink" title="你不得不了解的JVM（一）"></a>你不得不了解的JVM（一）</h1><p>我们都知道，不管是Java还是Android都绕不开JVM(Java虚拟机)。虽然Android有dalvik和art，但是Android的编程语言还是Java，了解JVM机对于我们掌握Java知识有莫大的帮助。下面我将从以下部分来聊聊JVM:<br>1) JVM运行时数据区域<br>2) HotSpot 虚拟机对象的创建，内存布局以及访问定位<br>3) 垃圾收集算法<br>4) 垃圾收集器<br>本文涉及内容比较多，所以本内容采用2篇文章来讲述，这篇文章主要讲讲1)和2)，3)和4)在（二）中再具体讲讲。那么接下来我们以问题为驱动来聊聊上面的每一个问题吧。<br>1)关于JVM运行时数据区域，我们会想到什么呢？JVM在执行Java程序代码的过程中会将它所管理的内存划分为若干不同的数据区，而这些区域各自的作用是什么呢？。<br>2)HotSpot虚拟机是什么？先不管他是什么，至少来讲他是虚拟机，虚拟机是用来执行程序代码的。我们知道Java是面向对象的程序语言之一，那么虚拟机在执行程序的过程中肯定会遇到对象的创建和销毁，所以我们就需要了解虚拟机对对象的创建，内存分配以及内存访问定位。<br>3)JVM是如何对垃圾进行收集的？具体的算法是什么？ 我们知道，Java有内存动态分配和垃圾收集技术，我们程序员并不需要管理内存。由于垃圾收集技术算法实现涉及了大量的代码细节（主要是本人技术水平有限，哈哈），而且各种虚拟机操纵内存方式各不相同，所以在这节并不会详细讲虚拟机实现垃圾收集算法的具体实现，而是让大家了解一些垃圾收集算法。<br>4)在我们了解了基本的垃圾收集算法的之后，我们就需要结合具体的虚拟机来了解一下。<br>上面讲了我们需要了解的相关内容，接下来就是具体讲讲每一点的具体知识吧。大家坐稳了…….</p>
<p>1)JVM运行时数据区域,讲这块内容之前，我们先来看一张关于JVM内存区的图<br><img src="http://upload-images.jianshu.io/upload_images/1986868-af3f10e6c1b0027a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>这张图中，我们清楚的知道：被编译过的.class文件通过类加载器加载到内存中，我们的重点是在内存划分的区域。从图中，我们看到了5大区域：线程共享的方法区和堆，线程私有的java虚拟机栈，本地方法栈以及程序计数器。我们具体来了解一下这5个内存划分：</p>
<p>程序计数器：（Program Counter Register）这个区域是唯一一个不会抛出OutOfMemoryError异常的区域。它是一块比较小的内存，是当前线程所执行的字节码的行号指示器。</p>
<p>java虚拟机栈：它描述的是java方法执行的内存模型，每个方法在执行的时候会创建一个栈帧用来存储局部变量，操作数，动态链接等。</p>
<p>本地方法栈：和java虚拟机栈功能类似，只不过java虚拟机栈执行的是java字节码而本地方法栈执行的是Native方法。</p>
<p>java堆：几乎所有的对象实例都在这里分配内存。java堆可以细分出新生代和老年代，再细致一点可以分为：Eden，From Survivor，To Survivor等空间。</p>
<p>方法区：该区域用来存储已经被虚拟机加载过来的类信息，常量，静态变量等。</p>
<p>以上讲完了JVM运行时内存区域的5大块，同时需要补充的一点是还有一个运行时常量池，它也是方法区的一部分。Class文件中除了有类的版本，字段，接口，方法等描述信息外，还有一项信息就是常量池，用来存放编译时期生成的各种字面量和符号引用。但是需要注意的是：Java语言并不要求常量一定是在编译期间产生，也就是并非与装入class文件中的常量池的内容才能进入到方法区运行时常量池，运行期间也可能将新的常量放入常量池中，如String.intern()方法。</p>
<p>现在相信大家对于JVM运行时内存区域有了相应的了解（如有不了解的地方请留言），接下来我们了解一下第二个问题。</p>
<p>2) HotSpot 虚拟机对象的创建，内存布局以及访问定位：在讲这个问题之前我们需要讲讲HotSpot虚拟机。HotSpot的正式发布名称为”Java HotSpot Performance Engine”，是Java虚拟机的一个实现，包含了服务器版和桌面应用程序版，现时由Oracle维护并发布。它利用JIT及自适应优化技术（自动查找性能热点并进行动态优化，这也是HotSpot名字的由来）来提高性能。从上面的介绍中我们知道HotSpot虚拟机是Oracle公司发布的一个java虚拟机的实现。既然是java虚拟机的实现，那么也是绕不开JVM的。那么接下来就讲讲HotSpot虚拟机对于对象的创建，内存分配以及定位等相关知识吧。</p>
<p>2.1）对象的创建<br>既然是讲对象的创建，那就是要从Object obj = new Object()开始讲起：<br>a：虚拟机在遇到new指令时，首先会去检查这个指令的参数是否能在常量池中定位到一个类的符号引用并且检查该符号引用代表的类是否已经被加载，解析和初始化过。如果没有，那就必须先执行相应的类加载。<br>b：在类经过加载检查后，虚拟机就需要为新生对象分配内存了。对象所需要的内存大小在类加载完成之后就可以确定。<br>c：在分配完内存之后，虚拟机需要将分配到的内存空间初始化为零值。<br>d：接下来，虚拟机会对对象进行必要的设置，如对象的hash码，对象的GC分代信息等。<br>e：最后执行对象的init方法对对象进行初始化。<br>到此，对象的创建过程已经完毕。其中，在b中我们可以继续了解对象内存分配的相关知识，虚拟机是通过何种方式为对象分配内存的呢？对象创建在虚拟机中是很频繁的，那么如何保证分配内存的时候线程安全呢？这些问题都是值得我们去思考的。讲完了对象的创建，我们继续讲讲对象的内存布局吧。</p>
<p>2.2)对象的内存布局<br>在HotSpot虚拟机中，对象在内存中存储的布局分为对象头，实例数据和对齐填充3个部分。<br>对象头（Header）：主要存储了2部分信息，第1部分是对象自身运行的数据，如hashcode，GC分代等信息；<br>第2部分是类型指针，就是对象对它的类元数据指针，其实就是一个引用。虚拟机通过这个指针（引用）来确定对象是哪个类的实例。<br>实例数据（Instance Data）：对象真正存储的有效信息，也就是程序代码中所写的各种类型的字段内容。<br>对齐填充（Padding）：这个不是必然存在的。</p>
<p>2.3)对象的访问定位<br>我们知道了对象的创建，内存布局等相关内容之后，需要知道存储的对象如何找到呢？这就涉及到对象的定位问题了。我们java程序需要通过栈上的引用数据来操作具体的对象。对对象的访问方式取决于虚拟机的实现，目前比较主流的有句柄和直接指针两种方式。下面让我们看看这两种方式吧，直接上图：<br><img src="http://upload-images.jianshu.io/upload_images/1986868-840a71b05e711834.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-ccfe76d2f2bf3d16.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>见图知意了吧。第1张图是通过句柄的方式对对象进行访问，在java堆中划分出来一块内存作为句柄池，而reference中存储的是对象的句柄地址，句柄中存储了对象实例等信息。第2张图是通过直接指针的方式，reference中存储的是实例对象的地址。</p>
<p>这两种对象引用的方式各有千秋，通过句柄的好处是reference中存储的是稳定的句柄地址，在对象被移动的时候只会改变句柄的实例指针而reference本身不需要修改；使用直接指针的好处是速度开，不需要在java堆中在划分出一块内存区域同时节省了指针定位的开销。但是就HotSpot而言，采用的是直接指针方式。</p>
<p>写到这里，我们应该对JVM的运行时的内存区域和对象创建过程有了一个初步的认识，在下一篇文章中，我会讲讲垃圾收集算法和垃圾搜集器，期待更新吧~~~</p>
<h1 id="你不得不了解的JVM（二）"><a href="#你不得不了解的JVM（二）" class="headerlink" title="你不得不了解的JVM（二）"></a>你不得不了解的JVM（二）</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在上一篇文章 你不得不了解的JVM(一)中，我们了解了<br>1) JVM运行时数据区域；<br>2) HotSpot 虚拟机对象的创建，内存布局以及访问定位；<br>那么这篇文章我们就需要了解一下<br>3) 垃圾收集算法<br>4) 垃圾收集器。</p>
<p>首先我们了解一下垃圾收集算法这块内容。因为垃圾算法的实现设计大量程序细节，各个平台的虚拟机操作内存的方法各不相同，因此在本节中我们主要讲讲垃圾收集算法，并不涉及具体实现。 下面让我们来一一了解一下各种收集算法吧。</p>
<h2 id="3-垃圾收集算法"><a href="#3-垃圾收集算法" class="headerlink" title="3) 垃圾收集算法"></a>3) 垃圾收集算法</h2><h3 id="1）标记-清除算法"><a href="#1）标记-清除算法" class="headerlink" title="1）标记-清除算法"></a>1）标记-清除算法</h3><p><img src="http://upload-images.jianshu.io/upload_images/1986868-99a7bc27d8b467aa.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图为标记-清除算法的示意图。首先需要标记可回收的内存，然后再对可回收的内存进行回收。这样做是不是很简单粗暴呢？当然，这样做的2个不足分别是：1）标记-清除效率不高；2）标记-清除之后产生大量不连续的空间碎片。基于这样的不足，有了标记-整理算法。</p>
<h3 id="2）标记-整理算法"><a href="#2）标记-整理算法" class="headerlink" title="2）标记-整理算法"></a>2）标记-整理算法</h3><p><img src="http://upload-images.jianshu.io/upload_images/1986868-a28cb01e4ea5dd76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>如图是标记-整理算法示意图。相比标记-清除算法，不同的是整理过程。将存活对象移到一端，然后清除可回收对象。这样做的明显好处就是产生了连续的空间。</p>
<h3 id="3）复制算法"><a href="#3）复制算法" class="headerlink" title="3）复制算法"></a>3）复制算法</h3><p><img src="http://upload-images.jianshu.io/upload_images/1986868-f78dbc61d3555a6b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图是复制算法实现图。它将内存分为大小相等的2块，每次只是使用其中一块。当一块内存用完之后，就将存活的对象复制到另外一块内存区域并将本块内存清理。这样做的大大降低了内存空间使用率。我们的HotSpot的年轻代就是使用复制算法，只不过它的比例不是1：1，而是8：1。这个稍后我们会讲到。</p>
<h3 id="4）分代收集算法"><a href="#4）分代收集算法" class="headerlink" title="4）分代收集算法"></a>4）分代收集算法</h3><p><img src="http://upload-images.jianshu.io/upload_images/1986868-1f0f33041789993f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>基于上面的几种收集算法，当前商业虚拟机基本采用的都是分代收集。结合了复制和标记-整理的优势。一般做法是将Java堆分为新生代和老年代。由于新生代会不断产生新生对象，因此采用了复制算法；而年老代的对象存活率较高，因此采用了标记-整理算法。<br>在新生代中，我们可以看到新生代=Eden+S0+S1；他们设计的默认比例是8：1：1；这个参数是可以通过虚拟机参数进行调整的。</p>
<p>以上，我们了解了基本的垃圾收集算法，只是了解哦！</p>
<h2 id="4-垃圾收集器。"><a href="#4-垃圾收集器。" class="headerlink" title="4) 垃圾收集器。"></a>4) 垃圾收集器。</h2><p>如果说垃圾收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。上面说过，各个平台虚拟机对内存的操作各不相同，因此本章所讲的收集器是基于JDK1.7Update14之后的HotSpot虚拟机。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-551b2e2baa930ae4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图是基于java虚拟机的HotSpot虚拟机垃圾收集器。一共是7种收集器，接下来让我们一一做个了解吧。</p>
<p>1）Serial/Serial Old<br>Serial最基本，发展历史最悠久的收集器。具体原理让我们看一张图最明了</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-4350ced80de5614c.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图是Serial和Serial Old 两种垃圾收集器的运行示意图。其中Serial 和Serial Old的区别就是一个是运行在年轻代一个是运行在年老代。从图中我们可以看到，他是一个单线程模式的垃圾收集器。这里不仅仅是说该收集器是使用单线程或者一个CPU去完成垃圾收集，更重要的是它在进行垃圾收集的时候必须暂停用户线程，直到收集完成，也就是Stop the World。</p>
<p>2）ParNew<br>ParNew收集器其实是Serial收集器的多线程版本。它也是运行在年轻代中，如图：<br><img src="http://upload-images.jianshu.io/upload_images/1986868-04697f66eb1264fb.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>如图，在新生代中采用的是多线程模式进行垃圾收集同时也需要暂停用户线程直到垃圾收集完毕。这种模式和Serial相比，CPU数量越多的情况下优势更加明显。如果CPU数量很少，比如2个，那么这种收集效率可能比Serial更低，因为它存在线程交互的开销。</p>
<p>3)Parallel Scavenge/Parallel Old</p>
<p>Parallel Scavenge也是一个新生代，多线程收集器。那么这种收集器和之前的ParNew有什么区别呢？区别还是有的，不然怎么会出来这种收集器呢？其实Parallel Scavenge收集器的特点是它关注一个可控的吞吐量。那么什么是吞吐量，我这边也不做任何讲述，直接上一个公式大家就知道了。<br>吞吐量=运行用户代码时间/（运行用户代码时间+垃圾收集时间）；<br>是不是很明白？垃圾收集时间越短，吞吐量就是越大。这里就有一个问题：垃圾收集时间越短，一般来讲收集的垃圾量就是越少，也就是回收的内存量越小，那么总内存一定的情况下，我们在一定时间内回收的次数就是越多。这就需要我们控制好回收时间来制约回收次数了。<br>同时，这里也有一个Parallel Old收集器，顾名思义是Parallel Scavenge收集器的年老代版本。<br>如下图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-3defdc5f710a677b.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>4）CMS<br>CMS(Concurrent Mark Sweep),从名字我们知道这是一款基于并发使用标记清除算法的垃圾收集器。他是一款以获得最短回收停顿时间为目标的收集器。让我们赶紧来看看他的实现吧。上图</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-13ab01c567c8fe82.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>如上图，它分为以下步骤：<br>1 初始标记：仅仅标记GC Roots能直接关联到的对象，时间很短，阻塞用户线程<br>2 并发标记：标记可回收对象，和用户线程并行。<br>3 重新标记：标记在并发阶段因用户线程继续运行产生的可回收对象，修正并发标记，此时是阻塞用户线程。<br>4 并发清理：使用标记-清除算法将垃圾进行清理。</p>
<p>这种收集算法存在3个缺点：<br>1 对CPU资源敏感。一般并发执行的程序对CPU数量都是比较敏感的<br>2 无法处理浮动垃圾。在并发清理阶段用户线程还在执行，这时产生的垃圾无法清理。<br>3 由于标记-清除算法产生大量的空间碎片。</p>
<p>下面，我们讲讲最后一个垃圾手机器G1</p>
<p>5）G1<br>G1，Garbage-First是当今收集器技术发展的最前沿成果之一，它是一款面向服务端的垃圾收集器。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-aceb6cae17227ff8.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>实现思路：将整个java堆划分为多个大小相等的独立区域(Region),G1跟踪各个Region里面的垃圾堆积和价值大小，在后台维护一个优先列表，每次进行优先回收。那么Region不是孤立的。那么如何避免全堆扫描呢？<br>G1使用Remembered Set。每一个Region对应一个Remembered Set，在虚拟机对Reference类型的数据进行写操作的时候，会检查Reference引用的对象是否处于不同的Region中，如是则记录到Remembered Set中。</p>
<p>初始标记：标记GC Roots能直接关联到的对象，耗时短<br>并发标记：找出存活的对象，耗时长<br>最终标记：修正并发标记<br>筛选回收：根据用户所期望的GC停顿时间来制定回收计划<br>可以发现它和CMS的前半部分步骤是一样的。当然，其实G1收集器的实现是非常复杂的，这里只是蜻蜓点水般的讲到一点，如果有兴趣可以继续深入学习。欢迎多多进行技术交流……</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1986868-af3f10e6c1b0027a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/24c074138efa&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们都知道，不管是Java还是Android都绕不开JVM(Java虚拟机)。虽然Android有dalvik和art，但是Android的编程语言还是Java，了解JVM机对于我们掌握Java知识有莫大的帮助。下面我将从以下部分来聊聊JVM:&lt;br&gt;1) JVM运行时数据区域&lt;br&gt;2) HotSpot 虚拟机对象的创建，内存布局以及访问定位&lt;br&gt;3) 垃圾收集算法&lt;br&gt;4) 垃圾收集器&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Java Virtual Machine" scheme="http://aisee.me/tags/Java-Virtual-Machine/"/>
    
  </entry>
  
  <entry>
    <title>Java Class Loader</title>
    <link href="http://aisee.me/2017/05/11/Program/Java/java-class-loader/"/>
    <id>http://aisee.me/2017/05/11/Program/Java/java-class-loader/</id>
    <published>2017-05-10T23:13:06.000Z</published>
    <updated>2017-05-11T00:01:45.389Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1986868-7ed5dc72e8f95e41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a href="http://www.jianshu.com/p/b6547abd0706" target="_blank" rel="external">Source</a></p>
<p>Java的核心是什么？当然是JVM了，所以说了解并熟悉JVM对于我们理解Java语言非常重要，不管你是做Java还是Android，熟悉JVM是我们每个Java、Android开发者必不可少的技能。如果你现在觉得Android的开发到了天花板的地步，那不妨往下走走，一起探索JAVA层面的内容。如果我们不了解自己写的代码是如何被执行的，那么我们只是一个会写代码的程序员，我们知其然不知其所以然。看到很多人说现在工作难找，真是这样吗？如果我们足够优秀，工作还难找吗？如果我们底子足够深，需要找工作吗？找不到工作多想想自己的原因，总是抱怨环境是没有用的，因为你没办法去改变坏境。如果我们一直停留在框架层面，停留在新的功能层面，那么我们的优势在哪里呢？所以说，我们不仅要学会写代码，还要知道为什么这样写代码，这才是我们的核心竞争力之一。这样我们的差异化才能够体现出来，不信？我们走着瞧……我们第一个差异化就是对JVM的掌握，而今天的内容类加载机制是JVM比较核心的部分，如果你想和别人不一样，那就一起仔细研究研究这次的内容吧。</p>
 <a id="more"></a>
<h1 id="深入理解Java类加载机制（一）"><a href="#深入理解Java类加载机制（一）" class="headerlink" title="深入理解Java类加载机制（一）"></a>深入理解Java类加载机制（一）</h1><h2 id="1-前言："><a href="#1-前言：" class="headerlink" title="1 前言："></a>1 前言：</h2><p> 在上一篇文章一文让你明白Java字节码中,<br> 我们了解了java字节码的解析过程，那么在接下来的内容中，我们来了解一下类的加载机制。</p>
<h2 id="2-题外话"><a href="#2-题外话" class="headerlink" title="2 题外话"></a>2 题外话</h2><p>Java的核心是什么？当然是JVM了，所以说了解并熟悉JVM对于我们理解Java语言非常重要，不管你是做Java还是Android，熟悉JVM是我们每个Java、Android开发者必不可少的技能。如果你现在觉得Android的开发到了天花板的地步，那不妨往下走走，一起探索JAVA层面的内容。如果我们不了解自己写的代码是如何被执行的，那么我们只是一个会写代码的程序员，我们知其然不知其所以然。看到很多人说现在工作难找，真是这样吗？如果我们足够优秀，工作还难找吗？如果我们底子足够深，需要找工作吗？找不到工作多想想自己的原因，总是抱怨环境是没有用的，因为你没办法去改变坏境。如果我们一直停留在框架层面，停留在新的功能层面，那么我们的优势在哪里呢？所以说，我们不仅要学会写代码，还要知道为什么这样写代码，这才是我们的核心竞争力之一。这样我们的差异化才能够体现出来，不信？我们走着瞧……我们第一个差异化就是对JVM的掌握，而今天的内容类加载机制是JVM比较核心的部分，如果你想和别人不一样，那就一起仔细研究研究这次的内容吧。</p>
<h2 id="3-引子"><a href="#3-引子" class="headerlink" title="3 引子"></a>3 引子</h2><p> 为了看看自己是否掌握了类加载机制，我们看看一道题：<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">new</span> Singleton();</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> counter1;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> counter2 = <span class="number">0</span>;</div><div class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</div><div class="line">      counter1++;</div><div class="line">      counter2++;</div><div class="line">  &#125;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span> </span>&#123;</div><div class="line">      <span class="keyword">return</span> singleton;</div><div class="line">  &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p> 上面是一个Singleton类，有3个静态变量，下面是一个测试类，打印出静态属性的值，就是这么简单。<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSingleton</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</div><div class="line">      Singleton singleton = Singleton.getSingleton();</div><div class="line">      System.out.println(<span class="string">"counter1="</span>+singleton.counter1);</div><div class="line">      System.out.println(<span class="string">"counter2="</span>+singleton.counter2);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 在往下看之前，大家先看看这道题的输出是啥？如果你清楚知道为什么，那么说明你掌握了类的加载机制，往下看或许有不一样的收获；如果你不懂，那就更要往下看了。我们先不讲这道题，待我们了解了类的加载机制之后，回过头看看这道题，或许有恍然大悟的感觉，或许讲完之后你会怀疑自己是否真正了解Java，或许你写了这么多年的Java都不了解它的执行机制，是不是很丢人呢？不过没关系，马上你就不丢人了。</p>
<h2 id="4-正题"><a href="#4-正题" class="headerlink" title="4 正题"></a>4 正题</h2><p> 下面我们具体了解类的加载机制。<br> 1)加载<br> 2)连接（验证-准备-解析）<br> 3)初始化<br> JVM就是按照上面的顺序一步一步的将字节码文件加载到内存中并生成相应的对象的。首先将字节码加载到内存中，然后对字节码进行连接，连接阶段包括了验证准备解析这3个步骤，连接完毕之后再进行初始化工作。下面我们一一了解：</p>
<h2 id="5-首先我们了解一下加载"><a href="#5-首先我们了解一下加载" class="headerlink" title="5 首先我们了解一下加载"></a>5 首先我们了解一下加载</h2><h3 id="5-1-什么是类的加载？"><a href="#5-1-什么是类的加载？" class="headerlink" title="5.1 什么是类的加载？"></a>5.1 什么是类的加载？</h3><p> 类的加载指的是将类的.class文件中的二进制数据读入内存中,将其放在运行时数据区域的方法去内,然后在堆中创建java.lang.Class对象,用来封装类在方法区的数据结构.只有java虚拟机才会创建class对象,并且是一一对应关系.这样才能通过反射找到相应的类信息.</p>
<p> 我们上面提到过Class这个类，这个类我们并没有new过，这个类是由java虚拟机创建的。通过它可以找到类的信息，我们来看下源码:<br> <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">  /*</div><div class="line">      * Constructor. Only the Java Virtual Machine creates Class</div><div class="line">      * objects.</div><div class="line">      */</div><div class="line">  private Class() &#123;&#125;</div><div class="line">```      </div><div class="line"> 从上面贴出的Class类的构造方法源码中，我们知道这个构造器是私有的，并且只有虚拟机才能创建这个类的对象。</div><div class="line"></div><div class="line">### 5.2 什么时候对类进行加载呢？</div><div class="line"></div><div class="line"> Java虚拟机有预加载功能。类加载器并不需要等到某个类被"首次主动使用"时再加载它,JVM规范规定JVM可以预测加载某一个类，如果这个类出错，但是应用程序没有调用这个类， JVM也不会报错；如果调用这个类的话，JVM才会报错，（LinkAgeError错误)。其实就是一句话，Java虚拟机有预加载功能。</div><div class="line"></div><div class="line">## 6 类加载器</div><div class="line"></div><div class="line"> 讲到类加载，我们不得不了解类加载器.</div><div class="line"></div><div class="line">### 6.1 什么是类加载器？</div><div class="line"></div><div class="line"> 类加载器负责对类的加载。</div><div class="line"></div><div class="line">### 6.2 Java自带有3种类加载器</div><div class="line">![](http://upload-images.jianshu.io/upload_images/1986868-7ed5dc72e8f95e41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class="line">     1)根类加载器,使用c++编写(BootStrap),负责加载rt.jar</div><div class="line">     2)扩展类加载器,java实现(ExtClassLoader)</div><div class="line">     3)应用加载器,java实现(AppClassLoader) classpath</div><div class="line"> 根类加载器，是用c++实现的，我们没有办法在java层面看到；我们接下来看看ExtClassLoader的代码,它是在Launcher类中，</div><div class="line"></div><div class="line"> static class ExtClassLoader extends URLClassLoader</div><div class="line"> 同时我们看看AppClassLoader，它也是在Launcher中，</div><div class="line"></div><div class="line"> static class AppClassLoader extends URLClassLoader</div><div class="line"> 他们同时继承一个类URLClassLoader。</div><div class="line"> 关于这种层次关系，看起来像继承，其实不是的。我们看到上面的代码就知道ExtClassLoader和AppClassLoader同时继承同一个类。同时我们来看下ClassLoader的loadClass方法也可以知道，下面贴出源代码：</div></pre></td></tr></table></figure></p>
<p>  private final ClassLoader parent;<br>  protected Class&lt;?&gt; loadClass(String name, boolean resolve)<br>                                            throws ClassNotFoundException<br>    {<br>       synchronized (getClassLoadingLock(name)) {<br>           // First, check if the class has already been loaded<br>              Class c = findLoadedClass(name);<br>               if (c == null) {<br>                  long t0 = System.nanoTime();<br>                     try {<br>                          if (parent != null) {<br>                              c = parent.loadClass(name, false);<br>                           } else {<br>                              c = findBootstrapClassOrNull(name);<br>                                }<br>                            } catch (ClassNotFoundException e) {<br>                                 // ClassNotFoundException thrown if class not found<br>                                 // from the non-null parent class loader<br>                             }<br>                 return c;<br>                    }<br>               }<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"> 源码没有全部贴出，只是贴出关键代码。从上面代码我们知道首先会检查class是否已经加载了，如果已经加载那就直接拿出，否则再进行加载。其中有一个parent属性，就是表示父加载器。这点正好说明了加载器之间的关系并不是继承关系。</div><div class="line"></div><div class="line"> ### 6.3 双亲委派机制</div><div class="line"></div><div class="line"> 关于类加载器，我们不得不说一下双亲委派机制。听着很高大上，其实很简单。比如A类的加载器是AppClassLoader(其实我们自己写的类的加载器都是AppClassLoader)，AppClassLoader不会自己去加载类，而会委ExtClassLoader进行加载，那么到了ExtClassLoader类加载器的时候，它也不会自己去加载，而是委托BootStrap类加载器进行加载，就这样一层一层往上委托，如果Bootstrap类加载器无法进行加载的话，再一层层往下走。</div><div class="line"> 上面的源码也说明了这点。</div><div class="line"> ```java</div><div class="line">   if (parent != null) &#123;</div><div class="line">            c = parent.loadClass(name, false);</div><div class="line">     &#125; else &#123;</div><div class="line">            c = findBootstrapClassOrNull(name);</div><div class="line">                 &#125;</div><div class="line">```                 </div><div class="line">### 6.4 为何要双亲委派机制</div><div class="line"></div><div class="line"> 对于我们技术来讲，我们不但要知其然，还要知其所以然。为何要采用双亲委派机制呢？了解为何之前，我们先来说明一个知识点：</div><div class="line"> 判断两个类相同的前提是这两个类都是同一个加载器进行加载的，如果使用不同的类加载器进行加载同一个类，也会有不同的结果。我们看一个例子：</div><div class="line"> ```java</div><div class="line"> public class MyClassLoader &#123;</div><div class="line">     public static void main(String args[]) throws ClassNotFoundException,         IllegalAccessException, InstantiationException &#123;</div><div class="line">     ClassLoader loader = new ClassLoader() &#123;</div><div class="line">         @Override</div><div class="line">         public Class&lt;?&gt; loadClass(String name) throws ClassNotFoundException &#123;</div><div class="line"></div><div class="line">             String fileName = name.substring(name.lastIndexOf(&quot;.&quot;)+1)+&quot;.class&quot;;</div><div class="line">             InputStream inputStream = getClass().getResourceAsStream(fileName);</div><div class="line">             if (inputStream==null)</div><div class="line">                 return super.loadClass(name);</div><div class="line">             try &#123;</div><div class="line">                 byte[] bytes = new byte[inputStream.available()];</div><div class="line">                 inputStream.read(bytes);</div><div class="line">                 return defineClass(name,bytes,0,bytes.length);</div><div class="line"></div><div class="line">             &#125; catch (IOException e) &#123;</div><div class="line">                 e.printStackTrace();</div><div class="line">                 throw new ClassNotFoundException(name);</div><div class="line">             &#125;</div><div class="line">         &#125;</div><div class="line"></div><div class="line">     &#125;;</div><div class="line">     Object object = loader.loadClass(&quot;jvm.classloader.MyClassLoader&quot;).newInstance();</div><div class="line">     System.out.println(object instanceof jvm.classloader.MyClassLoader);</div><div class="line"></div><div class="line">   &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<p> 大家可以看看输出的是什么？我们自己定义了一个类加载器，让它去加载我们自己写的一个类，然后判断由我们写的类加载器加载的类是否是MyClassLoader的一个实例。<br> 答案是否定的。为什么？因为jvm.classloader.MyClassLoader是在classpath下面，是由AppClassLoader加载器加载的，而我们却指定了自己的加载器，当然加载出来的类就不相同了。不信，我们将他的父类加载器都打印出来。在上面代码中加入下面代码：<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> ClassLoader classLoader = object.getClass().getClassLoader();</div><div class="line">     <span class="keyword">while</span> (classLoader!=<span class="keyword">null</span>)&#123;</div><div class="line">         System.out.println(classLoader);</div><div class="line">         classLoader = classLoader.getParent();</div><div class="line">     &#125;</div><div class="line">     <span class="keyword">if</span> (classLoader==<span class="keyword">null</span>)&#123;</div><div class="line">         System.out.println(<span class="string">"classLoader == null"</span>);</div><div class="line">     &#125;</div><div class="line">```     </div><div class="line"> 输出内容 ：</div><div class="line"> jvm.classloader.MyClassLoader$<span class="number">1</span>@<span class="number">60172</span>ec6</div><div class="line"> sun.misc.Launcher$AppClassLoader@<span class="number">338</span>bd37a</div><div class="line"> sun.misc.Launcher$ExtClassLoader@<span class="number">20e90906</span></div><div class="line"> classLoader == <span class="keyword">null</span></div><div class="line"> 对比一下下面的代码：</div></pre></td></tr></table></figure></p>
<p>   Object object2 = new MyClassLoader();<br>    ClassLoader classLoader2 = object2.getClass().getClassLoader();</p>
<pre><code>while (classLoader2!=null){
    System.out.println(classLoader2);
    classLoader2 = classLoader2.getParent();
}
if (classLoader2==null){
    System.out.println(&quot;classLoader2 == null&quot;);
}
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">输出内容：</div><div class="line">sun.misc.Launcher$AppClassLoader@20e90906</div><div class="line">sun.misc.Launcher$ExtClassLoader@234f79cb</div><div class="line">classLoader == null</div><div class="line">第一个是我们自己加载器加载的类，第二个是直接new的一个对象，是由App类加载器进行加载的，我们把它们的父类加载器打印出来了，可以看出他们的加载器是不一样的。很奇怪为何会执行classloader==null这句话。其实classloader==null表示的就是根类加载器。我们看看Class.getClassLoader()方法源码：</div><div class="line">```java</div><div class="line">/**</div><div class="line"> * Returns the class loader for the class.  Some implementations may use</div><div class="line"> * null to represent the bootstrap class loader. This method will return</div><div class="line"> * null in such implementations if this class was loaded by the bootstrap</div><div class="line"> * class loader.</div><div class="line">**/</div><div class="line">   @CallerSensitive</div><div class="line">public ClassLoader getClassLoader() &#123;</div><div class="line">    ClassLoader cl = getClassLoader0();</div><div class="line">    if (cl == null)</div><div class="line">        return null;</div><div class="line">    SecurityManager sm = System.getSecurityManager();</div><div class="line">    if (sm != null) &#123;</div><div class="line">        ClassLoader.checkClassLoaderPermission(cl, Reflection.getCallerClass());</div><div class="line">    &#125;</div><div class="line">    return cl;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 从注释中我们知道了，如果返回了null，表示的是bootstrap类加载器。</p>
<h2 id="7-类的连接"><a href="#7-类的连接" class="headerlink" title="7 类的连接"></a>7 类的连接</h2><p> 讲完了类的加载之后，我们需要了解一下类的连接。类的连接有三步，分别是验证，准备，解析。下面让我们一一了解</p>
<h3 id="7-1-首先我们看看验证阶段。"><a href="#7-1-首先我们看看验证阶段。" class="headerlink" title="7.1 首先我们看看验证阶段。"></a>7.1 首先我们看看验证阶段。</h3><p> 验证阶段主要做了以下工作<br> -将已经读入到内存类的二进制数据合并到虚拟机运行时环境中去。<br> -类文件结构检查:格式符合jvm规范-语义检查:符合java语言规范,final类没有子类,final类型方法没有被覆盖<br> -字节码验证:确保字节码可以安全的被java虚拟机执行.<br> 二进制兼容性检查:确保互相引用的类的一致性.如A类的a方法会调用B类的b方法.那么java虚拟机在验证A类的时候会检查B类的b方法是否存在并检查版本兼容性.因为有可能A类是由jdk1.7编译的，而B类是由1.8编译的。那根据向下兼容的性质，A类引用B类可能会出错，注意是可能。</p>
<h3 id="7-2-准备阶段"><a href="#7-2-准备阶段" class="headerlink" title="7.2 准备阶段"></a>7.2 准备阶段</h3><p> java虚拟机为类的静态变量分配内存并赋予默认的初始值.如int分配4个字节并赋值为0,long分配8字节并赋值为0;</p>
<h3 id="7-3-解析阶段"><a href="#7-3-解析阶段" class="headerlink" title="7.3 解析阶段"></a>7.3 解析阶段</h3><p> 解析阶段主要是将符号引用转化为直接引用的过程。比如 A类中的a方法引用了B类中的b方法，那么它会找到B类的b方法的内存地址，将符号引用替换为直接引用(内存地址)。</p>
<p> 到这里为止，我们知道了类的加载，类加载器，双亲委派机制，类的连接等等操作。那么接下来需要讲的是类的初始化，初始化内容较多，另开一篇文章深入理解Java类加载机制（二）讲，这样大家就不会疲劳和畏惧了。</p>
<h1 id="深入理解Java类加载机制（二）"><a href="#深入理解Java类加载机制（二）" class="headerlink" title="深入理解Java类加载机制（二）"></a>深入理解Java类加载机制（二）</h1><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>在深入理解Java类加载机制(一)一文中，我们了解了类的加载和连接过程，这篇文章重点讲述类的初始化过程，这样，我们就将类的加载机制弄明白了。</p>
<h2 id="2-初始化时机"><a href="#2-初始化时机" class="headerlink" title="2 初始化时机"></a>2 初始化时机</h2><p>在上一篇 类的加载时机5.2中我们提到了“首次主动使用”这个词语，那什么是“主动使用”呢？<br>主动初始化的6种方式<br>(1)创建对象的实例：我们new对象的时候，会引发类的初始化，前提是这个类没有被初始化。<br>(2)调用类的静态属性或者为静态属性赋值<br>(3)调用类的静态方法<br>(4)通过class文件反射创建对象<br>(5)初始化一个类的子类：使用子类的时候先初始化父类<br>(6)java虚拟机启动时被标记为启动类的类：就是我们的main方法所在的类<br>只有上面6种情况才是主动使用，也只有上面六种情况的发生才会引发类的初始化。</p>
<p>同时我们需要注意下面几个Tips:<br>1)在同一个类加载器下面只能初始化类一次,如果已经初始化了就不必要初始化了.<br>这里多说一点，为什么只初始化一次呢？因为我们上面讲到过类加载的最终结果就是在堆中存有唯一一个Class对象，我们通过Class对象找到<br>类的相关信息。唯一一个Class对象说明了类只需要初始化一次即可，如果再次初始化就会出现多个Class对象，这样和唯一相违背了。<br>2)在编译的时候能确定下来的静态变量(编译常量),不会对类进行初始化;<br>3)在编译时无法确定下来的静态变量(运行时常量),会对类进行初始化;<br>4)如果这个类没有被加载和连接的话,那就需要进行加载和连接<br>5)如果这个类有父类并且这个父类没有被初始化,则先初始化父类.<br>6)如果类中存在初始化语句,依次执行初始化语句.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</div><div class="line">    System.out.println(FinalTest.x);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FinalTest</span></span>&#123;</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> x =<span class="number">6</span>/<span class="number">3</span>;</div><div class="line">  <span class="keyword">static</span> &#123;</div><div class="line">      System.out.println(<span class="string">"FinalTest static block"</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面和下面的例子大家对比下，然后自己看看输出的是什么？<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</div><div class="line">        System.out.println(FinalTest2.x);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FinalTest2</span></span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> x =<span class="keyword">new</span> Random().nextInt(<span class="number">100</span>);</div><div class="line"><span class="keyword">static</span> &#123;</div><div class="line">    System.out.println(<span class="string">"FinalTest2 static block"</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>第一个输出的是<br>2<br>第二个输出的是<br>FinalTest2 static block<br>61（随机数）<br>为何会出现这样的结果呢？<br>参考上面的Tips2和Tips3，第一个能够在编译时期确定的，叫做编译常量；第二个是运行时才能确定下来的，叫做运行时常量。编译常量不会引起类的初始化，而运行常量就会。</p>
<p>那么将第一个例子的final去掉之后呢？输出又是什么呢？<br>这就是对类的首次主动使用，引用类的静态变量，输出的当然是：<br>FinalTest static block<br>2<br>那么在第一个例子的输出语句下面添加<br>FinalTest.x =3；<br>又会输出什么呢？<br>大家不妨试试！提示（Tips1）</p>
<h2 id="3-类的初始化步骤"><a href="#3-类的初始化步骤" class="headerlink" title="3 类的初始化步骤"></a>3 类的初始化步骤</h2><p>讲到这里我们应该对类的加载-连接-初始化有一个全局概念了，那么接下来我们看看类具体初始化执行步骤。我们分两种情况讨论，一种是类有父类，一种是类没有父类。（当然所有类的顶级父类都是Object）</p>
<p>没有父类的情况：</p>
<blockquote>
<p>1)类的静态属性<br>2)类的静态代码块<br>3)类的非静态属性<br>4)类的非静态代码块<br>5)构造方法</p>
</blockquote>
<p>有父类的情况:</p>
<blockquote>
<p>1)父类的静态属性<br>2)父类的静态代码块<br>3)子类的静态属性<br>4)子类的静态代码块<br>5)父类的非静态属性<br>6)父类的非静态代码块<br>7)父类构造方法<br>8)子类非静态属性<br>9)子类非静态代码块<br>10)子类构造方法</p>
</blockquote>
<p>在这要说明下，静态代码块和静态属性是等价的，他们是按照代码顺序执行的。<br>类的初始化内容这样看起来还是挺多的，包括“主动使用”大家可以自己去写一些demo去验证一下。</p>
<h2 id="4-结束JVM进程的几种方式"><a href="#4-结束JVM进程的几种方式" class="headerlink" title="4 结束JVM进程的几种方式"></a>4 结束JVM进程的几种方式</h2><p>了解完类加载机制之后，接下来我们了解一下结束JVM进程的几种方式吧。</p>
<p>(1) 执行System.exit()<br>(2) 程序正常结束<br>(3) 程序抛出异常,一直向上抛出没处理<br>(4) 操作系统异常,导致JVM退出</p>
<p>JVM有上面4种结束的方式，我们一一了解下：</p>
<p>(1)我们先来看看第一种方式，找到源代码我们发现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * Terminates the currently running Java Virtual Machine. The</div><div class="line">     * argument serves as a status code; by convention, a nonzero status</div><div class="line">     * code indicates abnormal termination.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">(<span class="keyword">int</span> status)</span> </span>&#123;</div><div class="line">        Runtime.getRuntime().exit(status);</div><div class="line">    &#125;</div><div class="line">```    </div><div class="line">上面的代码解释了System.exit()方法的作用就是：是中断当前运行的java虚拟机。这是自杀方式。</div><div class="line"></div><div class="line">(<span class="number">2</span>)第二种程序正常结束的方式，我们在运行main方法的时候，运行状态按钮由绿色变红色再变绿色的过程就是程序启动-运行-结束的过程。 那么，我们来看看Android的程序，同样，安卓也有自己的启动方式，也是一个main方法。那么我们的android程序能够一直运行的前提就是我们的main方法一直被执行着，一旦main方法执行完毕，程序就是kill。我们找找源代码才能有更好的说服力；我们找到ActivityThread的main方法</div><div class="line">```<span class="function">java</span></div><div class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> &#123;</div><div class="line">    SamplingProfilerIntegration.start();</div><div class="line"></div><div class="line">    <span class="comment">// CloseGuard defaults to true and can be quite spammy.  We</span></div><div class="line">    <span class="comment">// disable it here, but selectively enable it later (via</span></div><div class="line">    <span class="comment">// StrictMode) on debug builds, but using DropBox, not logs.</span></div><div class="line">    CloseGuard.setEnabled(<span class="keyword">false</span>);</div><div class="line"></div><div class="line">    Environment.initForCurrentUser();</div><div class="line"></div><div class="line">    <span class="comment">// Set the reporter for event logging in libcore</span></div><div class="line">    EventLogger.setReporter(<span class="keyword">new</span> EventLoggingReporter());</div><div class="line"></div><div class="line">    Security.addProvider(<span class="keyword">new</span> AndroidKeyStoreProvider());</div><div class="line"></div><div class="line">    Process.setArgV0(<span class="string">"&lt;pre-initialized&gt;"</span>);</div><div class="line"></div><div class="line">    Looper.prepareMainLooper();</div><div class="line"></div><div class="line">    ActivityThread thread = <span class="keyword">new</span> ActivityThread();</div><div class="line">    thread.attach(<span class="keyword">false</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (sMainThreadHandler == <span class="keyword">null</span>) &#123;</div><div class="line">        sMainThreadHandler = thread.getHandler();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    AsyncTask.init();</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="keyword">false</span>) &#123;</div><div class="line">        Looper.myLooper().setMessageLogging(<span class="keyword">new</span></div><div class="line">                LogPrinter(Log.DEBUG, <span class="string">"ActivityThread"</span>));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Looper.loop();</div><div class="line"></div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Main thread loop unexpectedly exited"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>上面的代码都不用看，直接看最后两行代码。执行完Looper.loop()之后，直接抛出了异常。但是我们并没有见到这个异常，说明我们的Looper一直在执行这样保证我们的app不被kill掉。Android就是用这种方式来保证我们的app一直运行下去的。</p>
<p>(3)第三种方式不用过多解释，一直没有处理被抛出的异常，这样导致了程序崩溃。<br>(4)第四种方式是系统异常导致了jvm退出。其实jvm就是一个软件，如果我们的操作系统都出现了错误，那么运行在他上面的软件（jvm）必然会被kill。</p>
<h2 id="5-结束并回顾"><a href="#5-结束并回顾" class="headerlink" title="5 结束并回顾"></a>5 结束并回顾</h2><p>到这里，我们基本都清楚了类的加载机制。那么我们在第一篇文章中开头提到一个例子，我们这里来讲讲输出的是什么，并且为何如此输出，大家坐稳。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> Singleton singleton = <span class="keyword">new</span> Singleton();</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> counter1;</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> counter2 = <span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span> </span>&#123;</div><div class="line">    counter1++;</div><div class="line">    counter2++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getSingleton</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> singleton;</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>下面是我们的测试类TestSingleton<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSingleton</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</div><div class="line">    Singleton singleton = Singleton.getSingleton();</div><div class="line">    System.out.println(<span class="string">"counter1="</span>+singleton.counter1);</div><div class="line">    System.out.println(<span class="string">"counter2="</span>+singleton.counter2);</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>输出是：<br>counter1=1<br>counter2=0<br>why？我们一步一步分析：</p>
<p>1 执行TestSingleton第一句的时候，因为我们没有对Singleton类进行加载和连接，所以我们首先需要对它进行加载和连接操作。在连接阶-准备阶段，我们要讲给静态变量赋予默认初始值。<br>singleton =null<br>counter1 =0<br>counter2 =0<br>2 加载和连接完毕之后，我们再进行初始化工作。初始化工作是从上往下依次执行的，注意这个时候还没有调用Singleton.getSingleton();<br>首先 singleton = new Singleton();这样会执行构造方法内部逻辑，进行++；此时counter1=1，counter2 =1 ；<br>接下来再看第二个静态属性，我们并没有对它进行初始化，所以它就没办法进行初始化工作了；<br>第三个属性counter2我们初始化为0，因此此时的counter2 =1 ；</p>
<p>3 初始化完毕之后我们就要调用静态方法Singleton.getSingleton(); 我们知道返回的singleton已经初始化了。<br>那么输出的内容也就理所当然的是1和0了。这样一步一步去理解程序执行过程是不是让你清晰的认识了java虚拟机执行程序的逻辑呢。</p>
<p>那么我们接下来改变一下代码顺序，将<br> public static int counter1;<br> public static int counter2 = 0;<br> private static Singleton singleton = new Singleton();<br> 又会输出什么呢？为什么这样输出呢？<br> 这个问题留给大家去思考，主要还是理解为什么这样输出才是最重要的。<br>结合第一篇文章深入理解Java类加载机制（一），我们讲完了类的加载机制。大家是否对java又有了不一样的认识了呢？如果这2篇文章对你有帮助，请动动你的小指头点个赞吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1986868-7ed5dc72e8f95e41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/b6547abd0706&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Java的核心是什么？当然是JVM了，所以说了解并熟悉JVM对于我们理解Java语言非常重要，不管你是做Java还是Android，熟悉JVM是我们每个Java、Android开发者必不可少的技能。如果你现在觉得Android的开发到了天花板的地步，那不妨往下走走，一起探索JAVA层面的内容。如果我们不了解自己写的代码是如何被执行的，那么我们只是一个会写代码的程序员，我们知其然不知其所以然。看到很多人说现在工作难找，真是这样吗？如果我们足够优秀，工作还难找吗？如果我们底子足够深，需要找工作吗？找不到工作多想想自己的原因，总是抱怨环境是没有用的，因为你没办法去改变坏境。如果我们一直停留在框架层面，停留在新的功能层面，那么我们的优势在哪里呢？所以说，我们不仅要学会写代码，还要知道为什么这样写代码，这才是我们的核心竞争力之一。这样我们的差异化才能够体现出来，不信？我们走着瞧……我们第一个差异化就是对JVM的掌握，而今天的内容类加载机制是JVM比较核心的部分，如果你想和别人不一样，那就一起仔细研究研究这次的内容吧。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Class Loader" scheme="http://aisee.me/tags/Class-Loader/"/>
    
  </entry>
  
  <entry>
    <title>Java Byte Code</title>
    <link href="http://aisee.me/2017/05/11/Program/Java/java-byte-code/"/>
    <id>http://aisee.me/2017/05/11/Program/Java/java-byte-code/</id>
    <published>2017-05-10T23:01:06.000Z</published>
    <updated>2017-05-13T13:23:25.082Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1986868-5b44e95ff7e30847.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a href="http://www.jianshu.com/p/252f381a6bc4" target="_blank" rel="external">Source</a></p>
<p>Java号称是一门“一次编译到处运行”的语言，但是我们对这句话的理解深度又有多少呢？从我们写的java文件到通过编译器编译成java字节码文件（也就是.class文件），这个过程是java编译过程；而我们的java虚拟机执行的就是字节码文件。不论该字节码文件来自何方，由哪种编译器编译，甚至是手写字节码文件，只要符合java虚拟机的规范，那么它就能够执行该字节码文件。那么本文主要讲讲java字节码文件相关知识。</p>
 <a id="more"></a>
<h2 id="1-首先我们来写一个java源文件"><a href="#1-首先我们来写一个java源文件" class="headerlink" title="1 首先我们来写一个java源文件"></a>1 首先我们来写一个java源文件</h2><p> <img src="http://upload-images.jianshu.io/upload_images/1986868-ce97d3e55fe919a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>上面是我们写的一个java程序，很简单，只有一个成员变量a以及一个方法testMethod() 。</p>
<h2 id="接下来我们用javac命令或者ide工具将该java源文件编译成java字节码文件。"><a href="#接下来我们用javac命令或者ide工具将该java源文件编译成java字节码文件。" class="headerlink" title="接下来我们用javac命令或者ide工具将该java源文件编译成java字节码文件。"></a>接下来我们用javac命令或者ide工具将该java源文件编译成java字节码文件。</h2><p><img src="http://upload-images.jianshu.io/upload_images/1986868-0993d73277575f75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图是编译好的字节码文件，我们可以看到一堆16进制的字节。如果你使用IDE去打开，也许看到的是已经被反编译的我们所熟悉的java代码，而这才是纯正的字节码，这也是我们今天需要讲的内容重点。</p>
<p>也许你会对这样一堆字节码感到头疼，不过没关系，我们慢慢试着你看懂它，或许有不一样的收获。在开始之前我们先来看一张图<br><img src="http://upload-images.jianshu.io/upload_images/1986868-5b44e95ff7e30847.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a href="http://www.jianshu.com/p/252f381a6bc4" target="_blank" rel="external">Source</a></p>
<p>这张图是一张java字节码的总览图，我们也就是按照上面的顺序来对字节码进行解读的。一共含有10部分，包含魔数，版本号，常量池等等，接下来我们按照顺序一步一步解读。</p>
<h3 id="3-1-魔数"><a href="#3-1-魔数" class="headerlink" title="3.1 魔数"></a>3.1 魔数</h3><p>从上面的总览图中我们知道前4个字节表示的是魔数，对应我们Demo的是 0XCAFE BABE。什么是魔数？魔数是用来区分文件类型的一种标志，一般都是用文件的前几个字节来表示。比如0XCAFE BABE表示的是class文件，那么有人会问，文件类型可以通过文件名后缀来判断啊？是的，但是文件名是可以修改的（包括后缀），那么为了保证文件的安全性，讲文件类型写在文件内部来保证不被篡改。<br>从java的字节码文件类型我们看到，CAFE BABE翻译过来是咖啡宝贝之意，然后再看看java图标。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-bc3cf7c4693669fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>CAFE BABE = 咖啡。</p>
<h3 id="3-2-版本号"><a href="#3-2-版本号" class="headerlink" title="3.2 版本号"></a>3.2 版本号</h3><p>我们识别了文件类型之后，接下来要知道版本号。版本号含主版本号和次版本号，都是各占2个字节。在此Demo种为0X0000 0033。其中前面的0000是次版本号，后面的0033是主版本号。通过进制转换得到的是次版本号为0，主版本号为51。<br>从oracle官方网站我们能够知道，51对应的正式jdk1.7，而其次版本为0，所以该文件的版本为1.7.0。如果需要验证，可以在用java –version命令输出版本号，或者修改编译目标版本–target重新编译，查看编译后的字节码文件版本号是否做了相应的修改。</p>
<p>至此，我们共了解了前8字节的含义，下面讲讲常量池相关内容。</p>
<h3 id="3-3-常量池"><a href="#3-3-常量池" class="headerlink" title="3.3 常量池"></a>3.3 常量池</h3><p>紧接着主版本号之后的就是常量池入口。常量池是Class文件中的资源仓库，在接下来的内容中我们会发现很多地方会涉及，如Class Name，Interfaces等。常量池中主要存储2大类常量：字面量和符号引用。字面量如文本字符串，java中声明为final的常量值等等，而符号引用如类和接口的全局限定名，字段的名称和描述符，方法的名称和描述符。</p>
<p>为什么需要类和接口的全局限定名呢？系统引用类或者接口的时候不是通过内存地址进行操作吗？这里大家仔细想想，java虚拟机在没有将类加载到内存的时候根本都没有分配内存地址，也就不存在对内存的操作，所以java虚拟机首先需要将类加载到虚拟机中，那么这个过程设计对类的定位（需要加载A包下的B类，不能加载到别的包下面的别的类中），所以需要通过全局限定名来判别唯一性。这就是为什么叫做全局，限定的意思，也就是唯一性。</p>
<p>在进行具体常量池分析之前，我们先来了解一下常量池的项目类型表：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-831993b2dc19dd90.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上面的表中描述了11中数据类型的结构，其实在jdk1.7之后又增加了3种（CONSTANT_MethodHandle_info,CONSTANT_MethodType_info以及CONSTANT_InvokeDynamic_info)。这样算起来一共是14种。接下来我们按照Demo的字节码进行逐一翻译。</p>
<p>0x0015：由于常量池的数量不固定（n+2），所以需要在常量池的入口处放置一项u2类型的数据代表常量池数量。因此该16进制是21，表示有20项常量，索引范围为1~20。明明是21，为何是20呢？因为Class文件格式规定，设计者就讲第0项保留出来了，以备后患。从这里我们知道接下来我们需要翻译出20项常量。<br>Constant #1 （一共有20个常量，这是第一个，以此类推…）<br>0x0a-：从常量类型表中我们发现，第一个数据均是u1类型的tag，16进制的0a是十进制的10，对应表中的MethodRef_info。<br>0x-00 04-：Class_info索引项#4<br>0x-00 11-：NameAndType索引项#17<br>Constant #2<br>0x-09: FieldRef_info<br>0x0003 :Class_info索引项#3<br>0x0012：NameAndType索引项#18<br>Constant #3<br>0x07-: Class_info<br>0x-00 13-: 全局限定名常量索引为#19<br>Constant #4<br>0x-07 :Class_info<br>0x0014:全局限定名常量索引为#20<br>Constant #5<br>0x01:Utf-8_info<br>0x-00 01-:字符串长度为1（选择接下来的一个字节长度转义）<br>0x-61:”a”(十六进制转ASCII字符)<br>Constant #6<br>0x01:Utf-8_info<br>0x-00 01：字符串长度为1<br>0x-49:”I”<br>Constant #7<br>0x01:Utf-8_info<br>0x-00 06:字符串长度为6<br>0x-3c 696e 6974 3e-:”<init>“<br>Constant #8<br>0x01 :UTF-8_info<br>0x0003:字符串长度为3<br>0x2829 56:”()V”<br>Constant #9<br>0x-01:Utf-8_info<br>0x0004：字符串长度为4<br>0x436f 6465:”Code”<br>Constant #10<br>0x01:Utf-8_info<br>0x00 0f:字符串长度为15<br>0x4c 696e 654e 756d 6265 7254 6162 6c65:”LineNumberTable”<br>Constant #11<br>ox01: Utf-8_info<br>0x00 12字符串长度为18<br>0x-4c 6f63 616c 5661 7269 6162 6c65 5461 626c 65:”LocalVariableTable”<br>Constant #12<br>0x01:Utf-8_info<br>0x0004 字符串长度为4<br>0x7468 6973 :”this”<br>Constant #13<br>0x01:Utf-8_info<br>0x0f:字符串长度为15<br>0x4c 636f 6d2f 6465 6d6f 2f44 656d 6f3b:”Lcom/demo/Demo;”<br>Constant #14<br>0x01:Utf-8_info<br>0x00 0a:字符串长度为10<br>ox74 6573 744d 6574 686f 64:”testMethod”<br>Constant #15<br>0x01:Utf-8_info<br>0x000a:字符串长度为10<br>0x536f 7572 6365 4669 6c65 :”SourceFile”<br>Constant #16<br>0x01:Utf-8_info<br>0x0009:字符串长度为9<br>0x-44 656d 6f2e 6a61 7661 :”Demo.java”<br>Constant #17<br>0x0c :NameAndType_info<br>0x0007:字段或者名字名称常量项索引#7<br>0x0008:字段或者方法描述符常量索引#8<br>Constant #18<br>0x0c:NameAndType_info<br>0x0005:字段或者名字名称常量项索引#5<br>0x0006:字段或者方法描述符常量索引#6<br>Constant #19<br>0x01:Utf-8_info<br>0x00 0d:字符串长度为13<br>0x63 6f6d 2f64 656d 6f2f 4465 6d6f:”com/demo/Demo”<br>Constant #20<br>0x01:Utf-8_info<br>0x00 10 :字符串长度为16<br>0x6a 6176 612f 6c61 6e67 2f4f 626a 6563 74 :”java/lang/Object”<br>到这里为止我们解析了所有的常量。接下来是解析访问标志位。</init></p>
<h3 id="3-4-Access-Flag-访问标志"><a href="#3-4-Access-Flag-访问标志" class="headerlink" title="3.4 Access_Flag 访问标志"></a>3.4 Access_Flag 访问标志</h3><p>访问标志信息包括该Class文件是类还是接口，是否被定义成public，是否是abstract，如果是类，是否被声明成final。通过上面的源代码，我们知道该文件是类并且是public。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-392acfe5fe81eb7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>0x 00 21：是0x0020和0x0001的并集。其中0x0020这个标志值涉及到了字节码指令，后期会有专题对字节码指令进行讲解。期待中……</p>
<h3 id="3-5-类索引"><a href="#3-5-类索引" class="headerlink" title="3.5 类索引"></a>3.5 类索引</h3><p>类索引用于确定类的全限定名<br>0x00 03 表示引用第3个常量，同时第3个常量引用第19个常量，查找得”com/demo/Demo”。#3.#19</p>
<h3 id="3-6父类索引"><a href="#3-6父类索引" class="headerlink" title="3.6父类索引"></a>3.6父类索引</h3><p>0x00 04 同理：#4.#20(java/lang/Object)</p>
<h3 id="3-7-接口索引"><a href="#3-7-接口索引" class="headerlink" title="3.7 接口索引"></a>3.7 接口索引</h3><p>通过java_byte.jpeg图我们知道，这个接口有2+n个字节，前两个字节表示的是接口数量，后面跟着就是接口的表。我们这个类没有任何接口，所以应该是0000。果不其然，查找字节码文件得到的就是0000。</p>
<h3 id="3-8-字段表集合"><a href="#3-8-字段表集合" class="headerlink" title="3.8 字段表集合"></a>3.8 字段表集合</h3><p>字段表用于描述类和接口中声明的变量。这里的字段包含了类级别变量以及实例变量，但是不包括方法内部声明的局部变量。<br>同样，接下来就是2+n个字段属性。我们只有一个属性a，按道理应该是0001。查找文件果不其然是0001。<br>那么接下来我们要针对这样的字段进行解析。附上字段表结构图<br><img src="http://upload-images.jianshu.io/upload_images/1986868-7c0ed3c898858129.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>0x00 02 ：访问标志为private（自行搜索字段访问标志）<br>0x00 05 : 字段名称索引为#5，对应的是”a”<br>0x 00 06 :描述符索引为#6，对应的是”I”<br>0x 00 00 :属性表数量为0，因此没有属性表。<br>tips:一些不太重要的表（字段，方法访问标志表）可以自行搜索，这里就不贴出来了，防止篇幅过大。</p>
<h3 id="3-9-方法"><a href="#3-9-方法" class="headerlink" title="3.9 方法"></a>3.9 方法</h3><p>我们只有一个方法testMethod，按照道理应该前2个字节是0001。通过查找发现是0x00 02。这是什么原因，这代表着有2个方法呢？且继续看……</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-44b812e1036aaef0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上图是一张方法表结构图，按照这个图我们分析下面的字节码：</p>
<h4 id="第1个方法："><a href="#第1个方法：" class="headerlink" title="第1个方法："></a>第1个方法：</h4><p>0x00 01：访问标志 ACC_PUBLIC，表明该方法是public。（可自行搜索方法访问标志表）<br>0x00 07：方法名索引为#7，对应的是”<init>“<br>0x00 08：方法描述符索引为#8，对应的是”()V”<br>0x00 01：属性表数量为1(一个属性表)<br>那么这里涉及到了属性表。什么是属性表呢？可以这么理解，它是为了描述一些专有信息的，上面的方法带有一张属性表。所有属性表的结构如下图：<br>一个u2的属性名称索引，一个u2的属性长度加上属性长度的info。<br>虚拟机规范预定义的属性有很多，比如Code，LineNumberTable，LocalVariableTable，SourceFile等等，这个网上可以搜索到。</init></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-596dd13ddcaad809.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>按照上面的表结构解析得到下面信息：<br>0x0009:名称索引为#9(“Code”)。<br>0x000 00038：属性长度为56字节。<br>那么接下来解析一个Code属性表，按照下图解析</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-d2e8cabf296300fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>前面6个字节（名称索引2字节+属性长度4字节）已经解析过了，所以接下来就是解析剩下的56-6=50字节即可。<br>0x00 02 ：max_stack=2<br>0x00 01 : max_locals=1<br>0x00 0000 0a : code_length=10<br>0x2a b700 012a 04b5 0002 b1 : 这是code代码，可以通过虚拟机字节码指令进行查找。<br>2a=aload_0(将第一个引用变量推送到栈顶)<br>b7=invokespecial(调用父类构造方法)<br>00=什么都不做<br>01 =将null推送到栈顶<br>2a=同上<br>04=iconst_1 将int型1推送到栈顶<br>b5=putfield 为指定的类的实例变量赋值<br>00= 同上<br>02=iconst_m1 将int型-1推送栈顶<br>b1=return 从当前方法返回void<br>整理，去除无动作指令得到下面<br>0 : aload_0<br>1 : invokespecial<br>4 : aload_0<br>5 : iconst_1<br>6 : putfield<br>9 : return<br>关于虚拟机字节码指令这块内容，后期会继续深入下去…… 目前只需要了解即可。接下来顺着Code属性表继续解析下去:<br>0x00 00 : exception_table_length=0<br>0x00 02 : attributes_count=2(Code属性表内部还含有2个属性表)<br>0x00 0a: 第一个属性表是”LineNumberTable”</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-34a97d658e59f0b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>0x00 0000 0a : “属性长度为10”<br>0x00 02 ：line_number_table_length=2<br>line_number_table是一个数量为line_number_table_length，类型为line_number_info的集合，line_number_info表包括了start_pc和line_number两个u2类型的数据项，前者是字节码行号，后者是Java源码行号<br>0x00 00 : start_pc =0<br>0x00 03 : end_pc =3<br>0x00 04 : start_pc=4<br>0x00 04 : end_pc=4</p>
<p>0x00 0b 第二个属性表是：”LocalVariableTable”</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-a93b62e38cdf0a4e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-b30b18f2a001dc13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>0x00 0000 0c：属性长度为12<br>0x00 01 : local_variable_table_length=1<br>然后按照local_variable_info表结构进行解析：<br>0x00 00 : start_pc=0<br>0x00 0a：length=10<br>0x000c : name_index=”this”<br>0x000d : descriptor_index #13 (“Lcom/demo/Demo”)<br>0000 index=0<br>//——-到这里第一个方法就解析完成了——-//<br>Method（<init>)–1个属性Code表-2个属性表（LineNumberTable ，LocalVariableTable）接下来解析第二个方法</init></p>
<h4 id="第2个方法："><a href="#第2个方法：" class="headerlink" title="第2个方法："></a>第2个方法：</h4><p>0x00 04：”protected”<br>0x00 0e: #14（”testMethod”）<br>0x00 08 : “()V”<br>0x0001 ： 属性数量=1<br>0x0009 ：”Code”<br>0x0000 002b 属性长度为43<br>解析一个Code表<br>0000 :max_stack =0<br>0001 : max_local =1<br>0000 0001 : code_length =1<br>0xb1 : return(该方法返回void)<br>0x0000 异常表长度=0<br>0x0002 属性表长度为2<br>//第一个属性表<br>0x000a : #10，LineNumberTable<br>0x0000 0006 : 属性长度为6<br>0x0001 : line_number_length = 1<br>0x0000 : start_pc =0<br>0x0008 : end_pc =8<br>//第二个属性表<br>0x000b : #11 ，LocalVariableTable<br>0x0000 000c : 属性长度为12<br>0x0001 : local_variable_table_length =1<br>0x0000 :start_pc = 0<br>0x0001: length = 1<br>0x000c : name_index =#12 “this”<br>0x000d : 描述索引#13 “Lcom/demo/Demo;”<br>0000 index=0</p>
<p>//到这里为止，方法解析都完成了，回过头看看顶部解析顺序图，我们接下来就要解析Attributes了。</p>
<h3 id="3-10-Attribute"><a href="#3-10-Attribute" class="headerlink" title="3.10 Attribute"></a>3.10 Attribute</h3><p>0x0001 ：同样的，表示有1个Attributes了。<br>0x000f : #15(“SourceFile”)<br>0x0000 0002 attribute_length=2<br>0x0010 : sourcefile_index = #16(“Demo.java”)<br>SourceFile属性用来记录生成该Class文件的源码文件名称。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-7924c9639c2bf501.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="4-另话"><a href="#4-另话" class="headerlink" title="4 另话"></a>4 另话</h2><p>其实，我们写了这么多确实很麻烦，不过这种过程自己体验一遍的所获所得还是不同的。现在，使用java自带的反编译器来解析字节码文件。<br>javap -verbose Demo //不用带后缀.class</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1986868-8b34fdb9961be90e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5 总结"></a>5 总结</h2><p>到此为止，讲解完成了class文件的解析，这样以后我们也能看懂字节码文件了。了解class文件的结构对后面进一步了解虚拟机执行引擎非常重要，所以这是基础并重要的一步。</p>
<h2 id="6-工具"><a href="#6-工具" class="headerlink" title="6 工具"></a>6 工具</h2><p><a href="https://github.com/zxh0/classpy" target="_blank" rel="external">https://github.com/zxh0/classpy</a> 这是一款分析字节码文件的工具，挺好用。</p>
<h1 id="Java类文件结构解析"><a href="#Java类文件结构解析" class="headerlink" title="Java类文件结构解析"></a><a href="https://tb-yangshu.github.io/2017/05/11/java_class_file_structure_analysis/" target="_blank" rel="external">Java类文件结构解析</a></h1><p>Class文件组成内容</p>
<p>class文件是一组以8位字节为基础的二进制流，其与Java虚拟机指令集和符号表以及若干其他辅助信息相对应。</p>
<p>该设计有如下优点：</p>
<p>平台无关性，class文件可以运行在任意平台，无需考虑各个平台机器指令集不同的问题<br>语言无关性，不论何种语言，只要生成的class文件格式符合JVM虚拟机规范即可<br>注：如果遇到8位字节以上空间的数据，则会按照高位在前的方式分割成若干个8位字节进行存储（Big-Endian，具体是指最高位字节在地址最低位、最低位字节在地址最高位的顺序来存储数据，它是SPARC、PowerPC等处理器的默认多字节顺序，而x86等处理器则是使用了相反的 Little-Endian 顺序来存储数据）</p>
<p>Class文件数据结构</p>
<p>class文件采用了类似C语言结构体)的形式来存储数据，主要有以下几个特点：</p>
<p>由无符号数和表两种数据结构组成<br>集合，用来描述同一类型但数量不定的多个数据，格式为 容量计数器 + 数据集合<br>没有任何分割符号（每个字节代表的含义，长度，先后顺序都不允许改变）<br>无符号数</p>
<p>定义：class文件基本的数据类型，用来描述数字、索引引用、数量值或者按照UTF-8编码构成字符串值。</p>
<p>表现形式：以u1、u2、u4、u8来分别代表1个字节、2个字节、4个字节、8个字节的无符号数。</p>
<p>表</p>
<p>组成：由无符号数或者其他表作为数据项构成的复合数据类型</p>
<p>特征：以_info 结尾</p>
<p>功能：用于描述有层次关系复合结构的数据</p>
<p>整个class文件本质上就是一张表</p>
<p>Class文件数据项</p>
<p>按照class文件中字节码的顺序来介绍数据项。</p>
<p>魔数</p>
<p>class文件的头4个字节。</p>
<p>功能：验证该文件是否能够被虚拟机接受</p>
<p>扩展名可以被修改</p>
<p>主次版本号</p>
<p>魔数后4个字节，第5个和第6个字节是次版本号（Minor Version），第7个和第8个字节是主版本号（Major Version）。</p>
<p>Java版本号从45开始，每个大版本发布版本号 +1</p>
<p>虚拟机拒绝超过其版本号的Class文件</p>
<p>常量池</p>
<p>可以说常量池是class文件的资源仓库，主要存放两大类常量，字面量和符号引用。</p>
<p>结构：容量计数器（u2类型） + 常量</p>
<p>容量计数从1开始，目的是满足某些常量池的索引值的数据在特定情况下需要表达“不引用任何一个常量池”的含义。</p>
<p>字面量（Literal）: 类似Java中的常量，如文本字符串，声明为final的常量值等。</p>
<p>符号引用（Symbolic References）：包括类和接口的全限定名（Full Qualified Name）,字段的名称和描述符（Descriptor），方法的名称和描述符这三类常量。</p>
<p>常量池中的表</p>
<p>每一项常量都是一个表。到JDK1.7为止，共有14种常量表类型，表结构见文章末尾（常量池中的14种常量项的结构总表）。</p>
<p>所有常量表开始第一位为u1类型的标志位，标识常量类型。</p>
<p>以下是常量池的项目类型表</p>
<p>类型    标志    描述<br>CONSTANT_Utf8_info    1    UTF-8编码的字符串<br>CONSTANT_Integer_info    3    整形字面量<br>CONSTANT_Float_info    4    浮点型字面量<br>CONSTANT_Long_info    5    长整形字面量<br>CONSTANT_Double_info    6    双精度浮点型字面量<br>CONSTANT_Class_info    7    类或接口的符号引用<br>CONSTANT_String_info    8    字符串类型字面量<br>CONSTANT_Fieldref_info    9    字段的符号引用<br>CONSTANT_Methodref_info    10    类中方法的符号引用<br>CONSTANT_InterfaceMethodref_info    11    接口中方法的符号引用<br>CONSTANT_NameAndType_info    12    字段或方法的部分符号引用<br>CONSTANT_MethodHandle_info    15    表示方法句柄<br>CONSTANT_MethodType_info    16    表示方法类型<br>CONSTANT_InvokeDynamic_info    18    表示一个动态方法调用点<br>每一种常量类型有着自己的结构，下面以CONSTANT_Class_info类型为例，它的结构如下表：</p>
<p>类型    名称    数量<br>u1    tag    1<br>u2    name_index    1<br>上表中的tag用来区分常量类型，name_index是一个索引值，它指向常量池中一个CONSTANT_Utf8_info类型常量，代表了这个类（或者接口）的权限定名。</p>
<p>访问标志</p>
<p>常量池之后两个字节标识类的访问标志，用于识别一些类或者接口层次的访问信息。</p>
<p>具体标志位及标志含义见下表</p>
<p>标志名称    标志值    含义<br>ACC_PUBLIC    0x0001    是否为public类型<br>ACC_FINAL    0x0010    是否被声明为final，只有类可设置<br>ACC_SUPER    0x0020    是否允许使用invokespecial字节码指令的新语言，invokespecial指令的语意在JDK1.0.2发生过改变，为了区别这条指令使用哪种语意，JDK1.0.2之后编译出来的类的这个标志都必须为真<br>ACC_INTERFACE    0x0200    标识这是一个接口<br>ACC_ABSTRACT    0x0400    是否为abstract类型，对于接口或者抽象类来说，此标志值为真，其他类值为假<br>ACC_SYNTHETIC    0x1000    标识这个类并非由用户代码产生的<br>ACC_ANNOTATION    0x2000    标识这是一个注解<br>ACC_ENUM    0x4000    标识这是一个枚举<br>类索引、父类索引、接口索引</p>
<p>类索引、父类索引</p>
<p>类索引、父类索引都是一个u2类型的数据。它们会对应到常量池中的类描述符常量，通过常量中的索引值就可以找到类的全限定名字符串。</p>
<p>接口索引</p>
<p>接口索引集合是一组u2类型的数据的集合。第一项u2类型的数据为接口计数器，表示接口索引表的容量，如果该类没有实现任何接口，该计算器值为0。</p>
<p>Class文件中由这三项数据来确定类的继承关系。</p>
<p>字段表集合</p>
<p>字段表用于描述接口或者类中声明的变量，包括类级变量以及实例级变量，但不包括在方法内部声明的局部变量。</p>
<p>字段表使用标志位表示修饰符，引用常量池中的常量描述字段名及字段数据类型。</p>
<p>字段表集合中不会列出从超类或者父接口中继承而来的字段，但可能列出原本Java代码之中不存在的字段，譬如，在内部类中为了保持对外部类的访问性，会自动添加指向外部类实例的字段。</p>
<p>Java语言中字段是无法重载的，必须使用不同的名称，但是对于字节码来说，字段可以重名，只要字段的描述符不一致</p>
<p>字段结构表</p>
<p>类型    名称    数量<br>u2    access_flags    1<br>u2    name_index    1<br>u2    descriptor_index    1<br>u2    attributes_count    1<br>attribute_info    attributes    attributes_count<br>access_flags表示字段修饰符，与类的access_flags类似，并且都是一个u2的数据类型。</p>
<p>标志位及含义见下表</p>
<p>标志名称    标志值    含义<br>ACC_PUBLIC    0x0001    字段是否public<br>ACC_PRIVATE    0x0002    字段是否private<br>ACC_PROTECTED    0x0004    字段是否protected<br>ACC_STATIC    0x0008    字段是否static<br>ACC_FINAL    0x0010    字段是否final<br>ACC_VOLATILE    0x0040    字段是否volatile<br>ACC_TRANSIENT    0x0080    字段是否transient<br>ACC_SYNTHETIC    0x1000    字段是否由编译器自动产生的<br>ACC_ENUM    0x4000    字段是否enum<br>name_index和descriptor_index都是对常量池的引用。</p>
<p>name_index代表字段的简单名称。</p>
<p>descriptor_index代表字段和方法的描述符。</p>
<p>全限定名</p>
<p>将类全名中的“.”替换成“/”，并在最后添加一个“;”,表示全限定名结束</p>
<p>简单名称</p>
<p>没有类型和参数的方法或者字段名称</p>
<p>描述符</p>
<p>描述字段的数据类型、方法的参数列表（包括数量、类型以及顺序）和返回值</p>
<p>描述符规则</p>
<p>基本数据类型（byte、char、double、float、int、long、short、boolean）以及void都用一个大写字符来表示</p>
<p>对象类型用字符L加对象的全限定名来表示</p>
<p>数组类型，每一纬度使用一个前置的“[”字符来描述，如定义为”java.lang.String[][]”，将被表示为”[[Ljava/lang/String”，一个整形数组”int[]”将被表示为”[I”</p>
<p>描述方法时，参数列表在前，返回值在后，且参数列表需要按顺序放在一组小括号之内</p>
<p>​</p>
<p>方法表集合</p>
<p>Class文件存储格式中对方法的描述与对字段的描述几乎采用了完全一致的方式，只是在访问标志和属性表集合的可选项中有所区别。</p>
<p>方法结构见下表</p>
<p>类型    名称    数量<br>u2    access_flags    1<br>u2    name_index    1<br>u2    descriptor_index    1<br>u2    attributes_count    1<br>attribute_info    attributes    attributes_count<br>方法表的访问标志中没有ACC_VOLATILE 和 ACC_TRANSIENT 标志，增加了 ACC_SYNCHRONIZED、ACC_NATIVE、ACC_STRICTFP、ACC_ABSTRACT 标志。</p>
<p>方法访问标志</p>
<p>标志名称    标志值    含义<br>ACC_PUBLIC    0x0001    方法是否为public<br>ACC_PRIVATE    0x0002    方法是否为private<br>ACC_PROTECTED    0x0004    方法是否为protected<br>ACC_STATIC    0x0008    方法是否为static<br>ACC_FINAL    0x0010    方法是否为final<br>ACC_SYNCHRONIZED    0x0020    方法是否为synchronized<br>ACC_BRIDGE    0x0040    方法是否由编译器产生的桥接方法<br>ACC_VARARGS    0x0080    方法是否接受不定参数<br>ACC_NATIVE    0x0100    方法是否为native<br>ACC_ABSTRACT    0x0400    方法是否为abstract<br>ACC_STRICTFP    0x0800    方法是否为strictfp<br>ACC_SYNTHETIC    0x1000    方法是否是由编译器自动产生的<br>如果父类方法在子类中没有被重写，方法表集合中就不会出现来自父类的方法信息，但有可能出现由编译器自动添加的方法，如类构造器<clinit>方法和实例构造器<init>方法</init></clinit></p>
<p>属性表集合</p>
<p>Class文件、字段表、方法表都可以有自己的属性表集合，用于描述某些场景的专有信息。属性表集合的限制更宽松一些，不要求各个属性表具有严格顺序，并且只要不与已有属性名重复即可。</p>
<p>Code属性</p>
<p>用来存储Java程序方法体中的代码经过编译处理后生成的字节码指令。每个指令是一个u1类型的单字节，共可以表达256条指令。</p>
<p>类型    名称    数量    含义<br>u2    attribute_name_index    1    指向常量池中一个CONSTANT_Utf8_info类型的常量，来表示属性名称<br>u4    attribute_length    1    属性值长度<br>u2    max_stack    1    表示操作栈深度的最大值<br>u2    max_locals    1    表示局部变量表所需的存储空间<br>u4    code_length    1    表示代码字节码长度<br>u1    code    code_length    用来存储字节码指令的一系列字节流<br>u2    exception_table_length    1    异常表长度<br>exception_info    exception_table    exception_table_length    Java代码的一部分，用来实现Java异常及finally处理机制（而不是简单的跳转命令）<br>u2    attributes_count    1    Code属性总数<br>attribute_info    attributes    attributes_count    Code属性<br>code_length类型为u4，理论上最大可以达到2^32-1，但虚拟机规定一个方法不能超过65535条字节码指令，否则Javac编译器会拒绝编译。</p>
<p>Slot是虚拟机为局部变量分配内存所只用的最小单位，Javac编译器会根据变量的作用域来分配Slot给各个变量使用。</p>
<p>Exception属性</p>
<p>用于列举方法中可能抛出的受查异常（throws 关键字后面列举的异常）。</p>
<p>LineNumberTable属性</p>
<p>用于描述Java源代码行号与字节码行号之间的对应关系。</p>
<p>可以在Javac中分别使用-g:none或-g:lines选项来取消或要求生成这项信息，如果选择不生成，在程序运行抛出异常时，堆栈中将不会显示出错的行号，在调试程序时也无法按照源码行设置断点</p>
<p>LocalVariableTable属性</p>
<p>用于描述栈帧中局部变量表中的变量与Java源码中定义的变量之间的关系。</p>
<p>可以在Javac中分别使用-g:none或-g:vars选项来取消或要求生成这项信息,如果没有生成该属性，对程序运行没有影响，只是对代码编写带来较大不便，而且在调试期间无法根据参数名称从上下文中获得参数值</p>
<p>SourceFile属性</p>
<p>该属性是一个定长属性，用于记录生成这个Class文件的源码文件名称。</p>
<p>类型    名称    数量<br>u2    attribute_name_index    1<br>u4    attribute_length    1<br>u2    sourcefile_index    1<br>可以使用Javac的-g:none或-g:source选项来关闭或要求生成这项信息，如果不生成这项属性，当抛出异常时堆栈中将不会显示出错误代码所属的文件名</p>
<p>ConstantValue属性</p>
<p>该属性为一个定长属性，用来通知虚拟机自动为静态变量赋值。</p>
<p>InnnerClass属性</p>
<p>用于记录内部类与宿主类之间的关联。</p>
<p>Deprecated及Synthetic属性</p>
<p>两者为标志类型的布尔属性，只存在是和否的区别，没有值的概念。</p>
<p>Deprecated属性表示某个类、字段或方法不在被推荐使用</p>
<p>Synthetic属性代表此字段或者方法并不是由Java源码直接产生的，而是由编译器自行添加的，比如Bridge Method</p>
<p>StackMapTable属性</p>
<p>Code属性中最多只能有一个StackMapTable属性，否则将抛出ClassFormatError异常</p>
<p>Signature属性</p>
<p>该属性是在JDK1.5发布后添加到Class文件规范的一个可选定长属性，可以出现在类、属性表和方法表的属性表中。</p>
<p>BootstrapMethods属性</p>
<p>该属性是在JDK1.7发布后增加到Class文件规范之中的一个复杂的变长属性，用于保存invokedynamic指令引用的引导方法限定符。</p>
<p>常量池中的14种常量项的结构总表</p>
<p>常量    项目    类型    描述<br>CONSTANT_Utf8_info    tag    u1    值为1<br>length    u2    UTF-8编码字符串占用的字节数<br>bytes    u1    长度为length的UTF-8编码的字符串<br>CONSTANT_Integer_info    tag    u1    值为3<br>bytes    u4    按照高位在前存储的int值<br>CONSTANT_Float_info    tag    u1    值为4<br>bytes    u4    按照高位在前存储的float值<br>CONSTANT_Long_info    tag    u1    值为5<br>bytes    u8    按照高位在前存储的long值<br>CONSTANT_Double_info    tag    u1    值为6<br>bytes    u8    按照高位在前存储的double值<br>CONSTANT_Class_info    tag    u1    值为7<br>index    u2    指向全限定名常量项的索引<br>CONSTANT_String_info    tag    u1    值为8<br>index    u2    指向字符串字面量的索引<br>CONSTANT_Fieldref_info    tag    u1    值为9<br>index    u2    指向声明字段的类或者接口描述符CONSTANT_Class_info的索引项<br>index    u2    指向字段描述符CONSTANT_NameAndType的索引项<br>CONSTANT_Methodref_info    tag    u1    值为10<br>index    u2    指向声明方法的类描述符CONSTANT_Class_info的索引项<br>index    u2    指向名称及类型描述符CONSTANT_NameAndType的索引项<br>CONSTANT_Interface_Methodref_info    tag    u1    值为11<br>index    u2    指向声明方法的接口描述符CONSTANT_Class_info的索引项<br>index    u2    指向名称及类描述符CONSTANT_NameAndType的索引项<br>CONSTANT_NameAndType_info    tag    u1    值为12<br>index    u2    指向该字段或方法名称常量的索引<br>index    u2    指向该字段或方法描述符常量项的索引<br>CONSTANT_MethodHandle_info    tag    u1    值为15<br>reference_kind    u1    值必须在1-9之间（包括1和9），它决定了方法句柄的类型。方法句柄类型的值表示方法句柄的字节码行为<br>reference_index    u2    值必须是对常量池的有效索引<br>CONSTANT_MethodType_info    tag    u1    值为16<br>descriptor_index    u2    值必须是对常量池的有效索引，常量池在该索引处的项必须是CONSTANT_Utf8_info结构，表示方法的描述符<br>CONSTANT_InvokeDynamic_info    tag    u1    值为18<br>bootstrap_method_attr_index    u2    值必须是对当前Class文件中引导方法表的bootstrap_methods[]数组的有效索引<br>name_and_type_index    u2    值必须是对当前常量池的有效索引，常量池在该索引出的项必须是CONSTANT_NameAndType_info结构，表示方法名和方法描述符<br>虚拟机规范预定义的属性</p>
<p>属性名称    使用位置    含义<br>Code    方法表    Java代码编译成的字节码指令<br>ConstantValue    字段表    final关键字定义的常量值<br>Deprecated    类、方法表、字段表    被声明为deprecated的方法和字段<br>Exceptions    方法表    方法抛出的异常<br>EnclosingMethod    类文件    仅当一个类为局部类或者匿名类时才能拥有这个属性，这个属性用于标识这个类所在的外围方法<br>InnerClasses    类文件    内部类列表<br>LineNumberTable    Code属性    Java源码的行号与字节码指令的对应关系<br>LocalVariableTable    Code属性    方法的局部变量描述<br>StackMapTable    Code属性    JDK1.6中新增的属性，供新的类型检查验证器（Type Checker）检查和处理目标方法的局部变量和操作数栈所需要的类型是否匹配<br>Signature    类、方法表、字段表    JDK1.5中新增的属性，这个属性用于支持泛型情况下的方法签名，在Java语言中，任何类、接口，初始化方法或成员的泛型签名如果包含了类型变量（Type Variables）或参数化类型（Parameterized Type），则Signature 属性会为它记录泛型签名信息。由于Java的泛型采用擦除法实现，在为了避免类型信息被擦除后导致签名混乱，需要这个属性记录泛型中的相关信息<br>SourceFile    类文件    记录源文件名称<br>SourceDebugExtension    类文件    JDK1.6中新增的属性，SourceDebugExtension属性用于存储额外的调试信息。譬如在进行JSP文件调试时，无法通过Java堆栈来定位到JSP文件的行号，JSR-45规范为这些非Java语言编写，却需要编译成字节码并运行在Java虚拟机中的程序提供了一个进行调试的标准机制，使用SourceDebugExtension属性就可以用于存储这个标准所新加入的调试信息<br>Synthetic    类、方法表、字段表    标识方法或字段为编译器自动生成的<br>LocalvariableTypeTable    类    JDK1.5中新增的属性，它使用特征签名代替描述符，是为了引入泛型语法之后能描述泛型参数化类型而添加<br>RuntimeVisibleAnnotations    类、方法表、字段表    JDK1.5中新增的属性，为动态注解提供支持。RuntimeVisibleAnnotations属性用于指明哪些注解是运行时（实际上运行时就是进行反射调用）可见的<br>RuntimeInvisibleAnnotations    类、方法表、字段表    JDK1.5中新增的属性，作用与RuntimeVisibleAnnotations属性作用刚好相反，用于指明那些注解是运行时不可见的<br>RuntimeVisibeParameterAnnotations    方法表    JDK1.5中新增的属性，作用与RuntimeVisibleAnnotations属性类似，只不过作用对象为方法参数<br>RuntimeInvisibeParameterAnnotations    方法表    JDK1.5中新增的属性，作用与RuntimeInvisibleAnnotations属性类似，只不过作用对象为方法参数<br>AnnotationDefault    方法表    JDK1.5中新增的属性，用于记录注解类元素的默认值<br>BootstrapMethods    类文件    JDK1.7中新增的属性，用于保存invokedynamic指令引用的引导方法限定符</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1986868-5b44e95ff7e30847.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/252f381a6bc4&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Java号称是一门“一次编译到处运行”的语言，但是我们对这句话的理解深度又有多少呢？从我们写的java文件到通过编译器编译成java字节码文件（也就是.class文件），这个过程是java编译过程；而我们的java虚拟机执行的就是字节码文件。不论该字节码文件来自何方，由哪种编译器编译，甚至是手写字节码文件，只要符合java虚拟机的规范，那么它就能够执行该字节码文件。那么本文主要讲讲java字节码文件相关知识。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Byte Code" scheme="http://aisee.me/tags/Byte-Code/"/>
    
  </entry>
  
  <entry>
    <title>Classic Books of Computer&#39;s Basic Concept</title>
    <link href="http://aisee.me/2017/05/09/Program/Tools/Computer/basic-serials-of-computer/"/>
    <id>http://aisee.me/2017/05/09/Program/Tools/Computer/basic-serials-of-computer/</id>
    <published>2017-05-09T14:20:06.000Z</published>
    <updated>2017-05-09T14:28:13.663Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img1.doubanio.com/lpic/s28079818.jpg" alt=""></p>
<p>本书倡导在计算机迅速发展、技术不断革新的今天，回归到计算机的基础知识上。通过探究计算机的本质，提升工程师对计算机的兴趣，在面对复杂的最新技术时，能够迅速掌握其要点并灵活运用。<br>本书以图配文，以计算机的三大原则为开端、相继介绍了计算机的结构、手工汇编、程序流程、算法、数据结构、面向对象编程、数据库、TCP/IP 网络、数据加密、XML、计算机系统开发以及SE 的相关知识。<br>图文并茂，通俗易懂，非常适合计算机爱好者和相关从业人员阅读。</p>
   <a id="more"></a>
<h2 id="计算机是怎样跑起来的"><a href="#计算机是怎样跑起来的" class="headerlink" title="计算机是怎样跑起来的"></a><a href="https://book.douban.com/subject/26397183/" target="_blank" rel="external">计算机是怎样跑起来的</a></h2><p>目录  · · · · · ·</p>
<h3 id="第1章-计算机的三大原则-1"><a href="#第1章-计算机的三大原则-1" class="headerlink" title="第1章　计算机的三大原则　　1"></a>第1章　计算机的三大原则　　1</h3><p>1.1　计算机的三个根本性基础　　3<br>1.2　输入、运算、输出是硬件的基础　　4<br>1.3　软件是指令和数据的集合　　6<br>1.4　对计算机来说什么都是数字　　8<br>1.5　只要理解了三大原则，即使遇到难懂的最新技术，也能轻松应对　　9<br>1.6　为了贴近人类，计算机在不断地进化　　10<br>1.7　稍微预习一下第2章　　13</p>
<h3 id="第2章-试着制造一台计算机吧-15"><a href="#第2章-试着制造一台计算机吧-15" class="headerlink" title="第2章　试着制造一台计算机吧　　15"></a>第2章　试着制造一台计算机吧　　15</h3><p>2.1　制作微型计算机所必需的元件　　17<br>2.2　电路图的读法　　21<br>2.3　连接电源、数据和地址总线　　23<br>2.4　连接I/O　　26<br>2.5　连接时钟信号　　27<br>2.6　连接用于区分读写对象是内存还是I/O的引脚　　28<br>2.7　连接剩余的控制引脚　　29<br>2.8　连接外部设备，通过DMA输入程序　　34<br>2.9　连接用于输入输出的外部设备　　35<br>2.10　输入测试程序并进行调试　　36</p>
<h3 id="第3章-体验一次手工汇编-39"><a href="#第3章-体验一次手工汇编-39" class="headerlink" title="第3章　体验一次手工汇编　　39"></a>第3章　体验一次手工汇编　　39</h3><p>3.1　从程序员的角度看硬件　　41<br>3.2　机器语言和汇编语言　　44<br>3.3　Z80 CPU的寄存器结构　　49<br>3.4　追踪程序的运行过程　　52<br>3.5　尝试手工汇编　　54<br>3.6　尝试估算程序的执行时间　　57</p>
<h3 id="第4章-程序像河水一样流动着-59"><a href="#第4章-程序像河水一样流动着-59" class="headerlink" title="第4章　程序像河水一样流动着　　59"></a>第4章　程序像河水一样流动着　　59</h3><p>4.1　程序的流程分为三种　　61<br>4.2　用流程图表示程序的流程　　65<br>4.3　表示循环程序块的“帽子”和“短裤”　　68<br>4.4　结构化程序设计　　72<br>4.5　画流程图来思考算法　　75<br>4.6　特殊的程序流程——中断处理　　77<br>4.7　特殊的程序流程——事件驱动　　78<br>COLUMN　来自企业培训现场　　电阻颜色代码的谐音助记口诀　　82</p>
<h3 id="第5章-与算法成为好朋友的七个要点-85"><a href="#第5章-与算法成为好朋友的七个要点-85" class="headerlink" title="第5章　与算法成为好朋友的七个要点　　85"></a>第5章　与算法成为好朋友的七个要点　　85</h3><p>5.1　算法是程序设计的“熟语”　　87<br>5.2　要点1：算法中解决问题的步骤是明确且有限的　　88<br>5.3　要点2：计算机不靠直觉而是机械地解决问题　　89<br>5.4　要点3：了解并应用典型算法　　91<br>5.5　要点4：利用计算机的处理速度　　92<br>5.6　要点5：使用编程技巧提升程序执行速度　　95<br>5.7　要点6：找出数字间的规律　　99<br>5.8　要点7：先在纸上考虑算法　　101</p>
<h3 id="第6章-与数据结构成为好朋友的七个要点-103"><a href="#第6章-与数据结构成为好朋友的七个要点-103" class="headerlink" title="第6章　与数据结构成为好朋友的七个要点　　103"></a>第6章　与数据结构成为好朋友的七个要点　　103</h3><p>6.1　要点1：了解内存和变量的关系　　105<br>6.2　要点2：了解作为数据结构基础的数组　　108<br>6.3　要点3：了解数组的应用——作为典型算法的数据结构　　109<br>6.4　要点4：了解并掌握典型数据结构的类型和概念　　111<br>6.5　要点5：了解栈和队列的实现方法　　114<br>6.6　要点6：了解结构体的组成　　118<br>6.7　要点7：了解链表和二叉树的实现方法　　120</p>
<h3 id="第7章-成为会使用面向对象编程的程序员吧-125"><a href="#第7章-成为会使用面向对象编程的程序员吧-125" class="headerlink" title="第7章　成为会使用面向对象编程的程序员吧　　125"></a>第7章　成为会使用面向对象编程的程序员吧　　125</h3><p>7.1　面向对象编程　　127<br>7.2　对OOP的多种理解方法　　128<br>7.3　观点1：面向对象编程通过把组件拼装到一起构建程序　　130<br>7.4　观点2：面向对象编程能够提升程序的开发效率和可维护性　　132<br>7.5　观点3：面向对象编程是适用于大型程序的开发方法　　134<br>7.6　观点4：面向对象编程就是在为现实世界建模　　134<br>7.7　观点5：面向对象编程可以借助UML设计程序　　135<br>7.8　观点6：面向对象编程通过在对象间传递消息驱动程序　　137<br>7.9　观点7：在面向对象编程中使用继承、封装和多态　　140<br>7.10　类和对象的区别　　141<br>7.11　类有三种使用方法　　143<br>7.12　在Java和.NET中有关OOP的知识不能少　　145</p>
<h3 id="第8章-一用就会的数据库-147"><a href="#第8章-一用就会的数据库-147" class="headerlink" title="第8章　一用就会的数据库　　147"></a>第8章　一用就会的数据库　　147</h3><p>8.1　数据库是数据的基地　　149<br>8.2　数据文件、DBMS和数据库应用程序　　151<br>8.3　设计数据库　　154<br>8.4　通过拆表和整理数据实现规范化　　157<br>8.5　用主键和外键在表间建立关系　　159<br>8.6　索引能够提升数据的检索速度　　162<br>8.7　设计用户界面　　164<br>8.8　向DBMS发送CRUD操作的SQL语句　　165<br>8.9　使用数据对象向DBMS发送SQL语句　　167<br>8.10　事务控制也可以交给DBMS处理　　170<br>COLUMN　来自企业培训现场　　培训新人编程时推荐使用什么编程语言？　　172</p>
<h3 id="第9章-通过七个简单的实验理解TCP-IP网络-175"><a href="#第9章-通过七个简单的实验理解TCP-IP网络-175" class="headerlink" title="第9章　通过七个简单的实验理解TCP/IP网络　　175"></a>第9章　通过七个简单的实验理解TCP/IP网络　　175</h3><p>9.1　实验环境　　177<br>9.2　实验1：查看网卡的MAC地址　　179<br>9.3　实验2：查看计算机的IP地址　　182<br>9.4　实验3：了解DHCP服务器的作用　　184<br>9.5　实验4：路由器是数据传输过程中的指路人　　186<br>9.6　实验5：查看路由器的路由过程　　188<br>9.7　实验6：DNS服务器可以把主机名解析成IP地址　　190<br>9.8　实验7：查看IP地址和MAC地址的对应关系　　192<br>9.9　TCP的作用及TCP/IP网络的层级模型　　193</p>
<h3 id="第10章-试着加密数据吧-197"><a href="#第10章-试着加密数据吧-197" class="headerlink" title="第10章　试着加密数据吧　　197"></a>第10章　试着加密数据吧　　197</h3><p>10.1　先来明确一下什么是加密　　199<br>10.2　错开字符编码的加密方式　　201<br>10.3　密钥越长，解密越困难　　205<br>10.4　适用于互联网的公开密钥加密技术　　208<br>10.5　数字签名可以证明数据的发送者是谁　　211</p>
<h3 id="第11章-XML究竟是什么-215"><a href="#第11章-XML究竟是什么-215" class="headerlink" title="第11章　XML究竟是什么　　215"></a>第11章　XML究竟是什么　　215</h3><p>11.1　XML是标记语言　　217<br>11.2　XML是可扩展的语言　　219<br>11.3　XML是元语言　　220<br>11.4　XML可以为信息赋予意义　　224<br>11.5　XML是通用的数据交换格式　　227<br>11.6　可以为XML标签设定命名空间　　230<br>11.7　可以严格地定义　　XML的文档结构　　232<br>11.8　用于解析XML的组件　　233<br>11.9　XML可用于各种各样的领域　　235</p>
<h3 id="第12章-SE负责监管计算机系统的构建-239"><a href="#第12章-SE负责监管计算机系统的构建-239" class="headerlink" title="第12章　SE负责监管计算机系统的构建　　239"></a>第12章　SE负责监管计算机系统的构建　　239</h3><p>12.1　SE是自始至终参与系统开发过程的工程师　　241<br>12.2　SE未必担任过程序员　　243<br>12.3　系统开发过程的规范　　243<br>12.4　各个阶段的工作内容及文档　　245<br>12.5　所谓设计，就是拆解　　247<br>12.6　面向对象法简化了系统维护工作　　249<br>12.7　技术能力和沟通能力　　250<br>12.8　IT不等于引进计算机　　252<br>12.9　计算机系统的成功与失败　　253<br>12.10　大幅提升设备利用率的多机备份　　255</p>
<h2 id="穿越计算机的迷雾"><a href="#穿越计算机的迷雾" class="headerlink" title="穿越计算机的迷雾"></a><a href="https://book.douban.com/subject/5432475/" target="_blank" rel="external">穿越计算机的迷雾</a></h2><p><img src="https://img3.doubanio.com/lpic/s6263451.jpg" alt=""></p>
<p>《穿越计算机的迷雾》从最基本的电学知识开始，带领读者一步一步、从无到有地制造一台能全自动工作的计算机。在这个过程中，读者可以学习到大量有趣的电学、数学和逻辑学知识，了解到它们是如何为电子计算机的产生创造条件，并促使它不断向着更快、更小、更强的方向发展。通过阅读《穿越计算机的迷雾》，读者可以很容易地理解自动计算实际上是如何发生的，而现代的计算机又是怎么工作的。以此为基础，在《穿越计算机的迷雾》的后面集中介绍了现代计算机的组成和主要功能，以及计算机核心与外部设备的接口，并对以操作系统为核心的软件进行了介绍。未经许可，不得以任何方式复制或抄袭《穿越计算机的迷雾》之部分或全部内容。</p>
<p>目　　录</p>
<h3 id="第1章-了解计算机，要从电开始-1"><a href="#第1章-了解计算机，要从电开始-1" class="headerlink" title="第1章　了解计算机，要从电开始    1"></a>第1章　了解计算机，要从电开始    1</h3><p>1.1　有的东西能导电，而有的则不能    2<br>1.2　电的老家是原子    2<br>1.3　为什么有些东西可以导电    6<br>1.4　电流是怎样形成的    8<br>1.5　电路和电路图    12</p>
<h3 id="第2章-用电来表示数-16"><a href="#第2章-用电来表示数-16" class="headerlink" title="第2章　用电来表示数    16"></a>第2章　用电来表示数    16</h3><p>2.1　怎样用电来代表一个数字    17<br>2.2　古怪的二进制计数法    21<br>2.3　二进制数就是比特串    25<br>2.4　用开关来表示二进制数字    26</p>
<h3 id="第3章-怎样才能让机器做加法-30"><a href="#第3章-怎样才能让机器做加法-30" class="headerlink" title="第3章　怎样才能让机器做加法    30"></a>第3章　怎样才能让机器做加法    30</h3><p>3.1　我们是怎样用十进制做加法的    30<br>3.2　用二进制做加法其实更简单    31<br>3.3　使用全加器来构造加法机    33</p>
<h3 id="第4章-电子计算机发明的前夜-38"><a href="#第4章-电子计算机发明的前夜-38" class="headerlink" title="第4章　电子计算机发明的前夜    38"></a>第4章　电子计算机发明的前夜    38</h3><p>4.1　电能生磁    39<br>4.2　继电器和莫尔斯电码    41<br>4.3　磁也能生电    44<br>4.4　电话的发明    46<br>4.5　爱迪生大战交流电    48<br>4.6　无线电通信的开端    53</p>
<h3 id="第5章-从逻辑学到逻辑电路-59"><a href="#第5章-从逻辑学到逻辑电路-59" class="headerlink" title="第5章　从逻辑学到逻辑电路    59"></a>第5章　从逻辑学到逻辑电路    59</h3><p>5.1　逻辑学    59<br>5.2　数理逻辑    70<br>5.3　数字逻辑和逻辑电路    75</p>
<h3 id="第6章-加法机的诞生-88"><a href="#第6章-加法机的诞生-88" class="headerlink" title="第6章　加法机的诞生    88"></a>第6章　加法机的诞生    88</h3><p>6.1　全加器的构造    88<br>6.2　加法机的组成    92</p>
<h3 id="第7章-会变魔术的触发器-95"><a href="#第7章-会变魔术的触发器-95" class="headerlink" title="第7章　会变魔术的触发器    95"></a>第7章　会变魔术的触发器    95</h3><p>7.1　不寻常的开关和灯    95<br>7.2　反馈和振荡器    96<br>7.3　电子管时代    100<br>7.4　记忆力非凡的触发器    105<br>7.5　触发器的符号    109</p>
<h3 id="第8章-学生时代的走马灯-111"><a href="#第8章-学生时代的走马灯-111" class="headerlink" title="第8章　学生时代的走马灯    111"></a>第8章　学生时代的走马灯    111</h3><p>8.1　能保存一个比特的触发器    111<br>8.2　边沿触发    115<br>8.3　揭开走马灯之谜    117<br>8.4　这个触发器很古怪    119</p>
<h3 id="第9章-计算机时代的开路先锋-121"><a href="#第9章-计算机时代的开路先锋-121" class="headerlink" title="第9章　计算机时代的开路先锋    121"></a>第9章　计算机时代的开路先锋    121</h3><p>9.1　纯电子化的计算时代    121<br>9.2　晶体管时代    123<br>9.3　新材料带动技术进步    128</p>
<h3 id="第10章-用机器做一连串的加法-133"><a href="#第10章-用机器做一连串的加法-133" class="headerlink" title="第10章　用机器做一连串的加法    133"></a>第10章　用机器做一连串的加法    133</h3><p>10.1　把一大堆数加起来    133<br>10.2　轮流使用总线    137<br>10.3　简化操作过程    139<br>10.4　这就是传说中的控制器    143</p>
<h3 id="第11章-全自动加法计算机-149"><a href="#第11章-全自动加法计算机-149" class="headerlink" title="第11章　全自动加法计算机    149"></a>第11章　全自动加法计算机    149</h3><p>11.1　咸鸭蛋坛子和存储器    149<br>11.2　磁芯存储器    155<br>11.3　先存储，后计算    157<br>11.4　半自动操作    162<br>11.5　全自动计算    166</p>
<h3 id="第12章-现代的通用计算机-168"><a href="#第12章-现代的通用计算机-168" class="headerlink" title="第12章　现代的通用计算机    168"></a>第12章　现代的通用计算机    168</h3><p>12.1　更多的计算机指令    169<br>12.2　当计算机面临选择时    173<br>12.3　现代计算机的大体特征    177<br>12.4　为什么计算机如此有用    180</p>
<h3 id="第13章-集成电路时代-183"><a href="#第13章-集成电路时代-183" class="headerlink" title="第13章　集成电路时代    183"></a>第13章　集成电路时代    183</h3><p>13.1　电子管和晶体管时代    183<br>13.2　集成电路时代    186<br>13.3　流水线和高速缓存技术    192<br>13.4　掌上游戏机和手机就是计算机    196</p>
<h3 id="第14章-核心与外部设备间的接口-198"><a href="#第14章-核心与外部设备间的接口-198" class="headerlink" title="第14章　核心与外部设备间的接口    198"></a>第14章　核心与外部设备间的接口    198</h3><p>14.1　计算机同外部的接口    199<br>14.2　I/O接口    203<br>14.3　中断和直接存储器访问    206<br>14.4　键盘    209<br>14.5　显示器    213</p>
<h3 id="第15章-计算机的启动过程和操作系统-224"><a href="#第15章-计算机的启动过程和操作系统-224" class="headerlink" title="第15章　计算机的启动过程和操作系统    224"></a>第15章　计算机的启动过程和操作系统    224</h3><p>15.1　打开电源并启动计算机    225<br>15.2　各种各样的辅助存储设备    228<br>15.3　启动操作系统    235<br>15.4　操作系统的功能    237</p>
<h3 id="第16章-办公、娱乐和程序设计-241"><a href="#第16章-办公、娱乐和程序设计-241" class="headerlink" title="第16章　办公、娱乐和程序设计    241"></a>第16章　办公、娱乐和程序设计    241</h3><p>16.1　用于写文章和排版的文字处理软件    241<br>16.2　压缩和解压缩    243<br>16.3　图像、音乐和视频    245<br>16.4　计算机语言和编译软件    248<br>16.5　计算机病毒也是软件    254</p>
<h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a><a href="https://book.douban.com/subject/4822685/" target="_blank" rel="external">编码</a></h2><p><img src="https://img3.doubanio.com/lpic/s4379914.jpg" alt=""></p>
<p>本书讲述的是计算机工作原理。作者用丰富的想象和清晰的笔墨将看似繁杂的理论阐述得通俗易懂，你丝毫不会感到枯燥和生硬。更重要的是，你会因此而获得对计算机工作原理较深刻的理解。这种理解不是抽象层面上的，而是具有一定深度的。</p>
<p>第1章 至亲密友<br>第2章 编码与组合<br>第3章 布莱叶盲文与二进制码<br>第4章 手电筒的剖析<br>第5章 绕过拐角的通信<br>第6章 电报机与继电器<br>第7章 我们的十个数字<br>第8章 十的替代品<br>第9章 二进制数<br>第10章 逻辑与开关<br>第11章 门<br>第12章 二进制加法器<br>第13章 如何实现减法<br>第14章 反馈与触发器<br>第15章 字节与十六进制<br>第16章 存储器组织<br>第17章 自动操作<br>第18章 从算盘到芯片<br>第19章 两种典型的微处理器<br>第20章 ASCII码和字符转换<br>第21章 总线<br>第22章 操作系统<br>第23章 定点数和浮点数<br>第24章 高级语言与低级语言<br>第25章 图形化革命</p>
<h2 id="程序是怎样跑起来的"><a href="#程序是怎样跑起来的" class="headerlink" title="程序是怎样跑起来的"></a><a href="https://book.douban.com/subject/26365491/" target="_blank" rel="external">程序是怎样跑起来的</a></h2><p>本书从计算机的内部结构开始讲起，以图配文的形式详细讲解了二进制、内存、数据压缩、源文件和可执行文件、操作系统和应用程序的关系、汇编语言、硬件控制方法等内容，目的是让读者了解从用户双击程序图标到程序开始运行之间到底发生了什么。同时专设了“如果是你，你会怎样介绍？”专栏，以小学生、老奶奶为对象讲解程序的运行原理，颇为有趣。本书图文并茂，通俗易懂，非常适合计算机爱好者及相关从业人员阅读。</p>
<h3 id="第1章-对程序员来说CPU是什么-1"><a href="#第1章-对程序员来说CPU是什么-1" class="headerlink" title="第1章　对程序员来说CPU是什么　　1"></a>第1章　对程序员来说CPU是什么　　1</h3><p>1.1　CPU的内部结构解析　　3<br>1.2　CPU是寄存器的集合体　　6<br>1.3　决定程序流程的程序计数器　　9<br>1.4　条件分支和循环机制　　10<br>1.5　函数的调用机制　　13<br>1.6　通过地址和索引实现数组　　16<br>1.7　CPU的处理其实很简单　　17</p>
<h3 id="第2章-数据是用二进制数表示的-19"><a href="#第2章-数据是用二进制数表示的-19" class="headerlink" title="第2章　数据是用二进制数表示的　　19"></a>第2章　数据是用二进制数表示的　　19</h3><p>2.1　用二进制数表示计算机信息的原因　　21<br>2.2　什么是二进制数　　23<br>2.3　移位运算和乘除运算的关系　　25<br>2.4　便于计算机处理的“补数”　　27<br>2.5　逻辑右移和算术右移的区别　　31<br>2.6　掌握逻辑运算的窍门　　34<br>COLUMN　如果是你，你会怎样介绍？——向小学生讲解CPU和二进制　　38</p>
<h3 id="第3章-计算机进行小数运算时出错的原因-41"><a href="#第3章-计算机进行小数运算时出错的原因-41" class="headerlink" title="第3章　计算机进行小数运算时出错的原因　　41"></a>第3章　计算机进行小数运算时出错的原因　　41</h3><p>3.1　将0.1累加100次也得不到10　　43<br>3.2　用二进制数表示小数　　44<br>3.3　计算机运算出错的原因　　46<br>3.4　什么是浮点数　　47<br>3.5　正则表达式和　　EXCESS系统　　50<br>3.6　在实际的程序中进行确认　　52<br>3.7　如何避免计算机计算出错　　55<br>3.8　二进制数和十六进制数　　56</p>
<h3 id="第4章-熟练使用有棱有角的内存-59"><a href="#第4章-熟练使用有棱有角的内存-59" class="headerlink" title="第4章　熟练使用有棱有角的内存　　59"></a>第4章　熟练使用有棱有角的内存　　59</h3><p>4.1　内存的物理机制很简单　　61<br>4.2　内存的逻辑模型是楼房　　65<br>4.3　简单的指针　　67<br>4.4　数组是高效使用内存的基础　　69<br>4.5　栈、队列以及环形缓冲区　　71<br>4.6　链表使元素的追加和删除更容易　　75<br>4.7　二叉查找树使数据搜索更有效　　79</p>
<h3 id="第5章-内存和磁盘的亲密关系-81"><a href="#第5章-内存和磁盘的亲密关系-81" class="headerlink" title="第5章　内存和磁盘的亲密关系　　81"></a>第5章　内存和磁盘的亲密关系　　81</h3><p>5.1　不读入内存就无法运行　　83<br>5.2　磁盘缓存加快了磁盘访问速度　　84<br>5.3　虚拟内存把磁盘作为部分内存来使用　　85<br>5.4　节约内存的编程方法　　88<br>5.5　磁盘的物理结构　　93</p>
<h3 id="第6章-亲自尝试压缩数据-97"><a href="#第6章-亲自尝试压缩数据-97" class="headerlink" title="第6章　亲自尝试压缩数据　　97"></a>第6章　亲自尝试压缩数据　　97</h3><p>6.1　文件以字节为单位保存　　99<br>6.2　RLE　　算法的机制　　100<br>6.3　RLE　　算法的缺点　　101<br>6.4　通过莫尔斯编码来看哈夫曼算法的基础　　103<br>6.5　用二叉树实现哈夫曼编码　　105<br>6.6　哈夫曼算法能够大幅提升压缩比率　　109<br>6.7　可逆压缩和非可逆压缩　　110<br>COLUMN　如果是你，你会怎样介绍？——向沉迷游戏的中学生讲解内存和磁盘　　114</p>
<h3 id="第7章-程序是在何种环境中运行的-117"><a href="#第7章-程序是在何种环境中运行的-117" class="headerlink" title="第7章　程序是在何种环境中运行的　　117"></a>第7章　程序是在何种环境中运行的　　117</h3><p>7.1　运行环境=操作系统＋硬件　　119<br>7.2　Windows克服了CPU以外的硬件差异　　122<br>7.3　不同操作系统的API不同　　124<br>7.4　FreeBSD　Port帮你轻松使用源代码　　125<br>7.5　利用虚拟机获得其他操作系统环境　　127<br>7.6　提供相同运行环境的　Java虚拟机　　128<br>7.7　BIOS和引导　　130</p>
<h3 id="第8章-从源文件到可执行文件-133"><a href="#第8章-从源文件到可执行文件-133" class="headerlink" title="第8章　从源文件到可执行文件　　133"></a>第8章　从源文件到可执行文件　　133</h3><p>8.1　计算机只能运行本地代码　　135<br>8.2　本地代码的内容　　137<br>8.3　编译器负责转换源代码　　139<br>8.4　仅靠编译是无法得到可执行文件的　　141<br>8.5　启动及库文件　　143<br>8.6　DLL文件及导入库　　145<br>8.7　可执行文件运行时的必要条件　　146<br>8.8　程序加载时会生成栈和堆　　148<br>8.9　有点难度的Q&amp;A　　150</p>
<h3 id="第9章-操作系统和应用的关系-153"><a href="#第9章-操作系统和应用的关系-153" class="headerlink" title="第9章　操作系统和应用的关系　　153"></a>第9章　操作系统和应用的关系　　153</h3><p>9.1　操作系统功能的历史　　155<br>9.2　要意识到操作系统的存在　　157<br>9.3　系统调用和高级编程语言的移植性　　160<br>9.4　操作系统和高级编程语言使硬件抽象化　　161<br>9.5　Windows操作系统的特征　　163<br>COLUMN　如果是你，你会怎样介绍？——向超喜欢手机的女高中生讲解操作系统的作用　　170</p>
<h3 id="第10章-通过汇编语言了解程序的实际构成-173"><a href="#第10章-通过汇编语言了解程序的实际构成-173" class="headerlink" title="第10章　通过汇编语言了解程序的实际构成　　173"></a>第10章　通过汇编语言了解程序的实际构成　　173</h3><p>10.1　汇编语言和本地代码是一一对应的　　175<br>10.2　通过编译器输出汇编语言的源代码　　177<br>10.3　不会转换成本地代码的伪指令　　180<br>10.4　汇编语言语法是“操作码+操作数”　　182<br>10.5　最常用的mov指令　　185<br>10.6　对栈进行push和pop　185<br>10.7　函数调用机制　　187<br>10.8　函数内部的处理　　189<br>10.9　始终确保全局变量用的内存空间　　191<br>10.10　临时确保局部变量用的内存空间　　196<br>10.11　循环处理的实现方法　　199<br>10.12　条件分支的实现方法　　202<br>10.13　了解程序运行方式的必要性　　204</p>
<h3 id="第11章-硬件控制方法-209"><a href="#第11章-硬件控制方法-209" class="headerlink" title="第11章　硬件控制方法　　209"></a>第11章　硬件控制方法　　209</h3><p>11.1　应用和硬件无关？　　211<br>11.2　支撑硬件输入输出的IN指令和OUT指令　　212<br>11.3　编写测试用的输入输出程序　　215<br>11.4　外围设备的中断请求　　218<br>11.5　用中断来实现实时处理　　221<br>11.6　DMA可以实现短时间内传送大量数据　　222<br>11.7　文字及图片的显示机制　　224<br>COLUMN　如果是你，你会怎样介绍？——向邻居老奶奶说明显示器和电视机的不同　　226</p>
<h3 id="第12章-让计算机“思考”-229"><a href="#第12章-让计算机“思考”-229" class="headerlink" title="第12章　让计算机“思考”　　229"></a>第12章　让计算机“思考”　　229</h3><p>12.1　作为“工具”的程序和为了“思考”的程序　　231<br>12.2　用程序来表示人类的思考方式　　232<br>12.3　用程序来表示人类的思考习惯　　235<br>12.4　程序生成随机数的方法　　237<br>12.5　活用记忆功能以达到更接近人类的判断　　239<br>12.6　用程序来表示人类的思考方式　　242<br>COLUMN　如果是你，你会怎样介绍？——向常光临的酒馆老板讲解计算机的思考机制　　245<br>附录　让我们开始C语言之旅　　247<br>C语言的特点　　247<br>变量和函数　　248<br>数据类型　　249<br>标准函数库　　250<br>函数调用　　251<br>局部变量和全局变量　　254<br>数组和循环　　255<br>其他语法结构　　256</p>
<h2 id="网络是怎样连接的"><a href="#网络是怎样连接的" class="headerlink" title="网络是怎样连接的"></a><a href="https://book.douban.com/subject/26941639/" target="_blank" rel="external">网络是怎样连接的</a></h2><p><img src="https://img3.doubanio.com/lpic/s29317812.jpg" alt=""></p>
<p>本书以探索之旅的形式，从在浏览器中输入网址开始，一路追踪了到显示出网页内容为止的整个过程，以图配文，讲解了网络的全貌，并重点介绍了实际的网络设备和软件是如何工作的。目的是帮助读者理解网络的本质意义，理解实际的设备和软件，进而熟练运用网络技术。同时，专设了“网络术语其实很简单”专栏，以对话的形式介绍了一些网络术语的词源，颇为生动有趣。<br>本书图文并茂，通俗易懂，非常适合计算机、网络爱好者及相关从业人员阅读。</p>
<h3 id="第1章-浏览器生成消息-1"><a href="#第1章-浏览器生成消息-1" class="headerlink" title="第1章　浏览器生成消息　　1"></a>第1章　浏览器生成消息　　1</h3><p>——探索浏览器内部<br>1.1 生成HTTP请求消息　　5<br>1.1.1 探索之旅从输入网址开始　　5<br>1.1.2 浏览器先要解析URL　　7<br>1.1.3 省略文件名的情况　　9<br>1.1.4 HTTP的基本思路　　10<br>1.1.5 生成HTTP请求消息　　14<br>1.1.6 发送请求后会收到响应　　20<br>1.2 向DNS服务器查询Web服务器的IP地址　　24<br>1.2.1 IP地址的基本知识　　24<br>1.2.2 域名和IP地址并用的理由　　28<br>1.2.3 Socket库提供查询IP地址的功能　　30<br>1.2.4 通过解析器向DNS服务器发出查询　　31<br>1.2.5 解析器的内部原理　　32<br>1.3 全世界DNS服务器的大接力　　35<br>1.3.1 DNS服务器的基本工作　　35<br>1.3.2 域名的层次结构　　38<br>1.3.3 寻找相应的DNS服务器并获取IP地址　　40<br>1.3.4 通过缓存加快DNS服务器的响应　　44<br>1.4 委托协议栈发送消息　　45<br>1.4.1 数据收发操作概览　　45<br>1.4.2 创建套接字阶段　　48<br>1.4.3 连接阶段：把管道接上去　　50<br>1.4.4 通信阶段：传递消息　　52<br>1.4.5 断开阶段：收发数据结束　　53<br>怪杰Resolver　　55</p>
<h3 id="第2章-用电信号传输TCP-IP数据-57"><a href="#第2章-用电信号传输TCP-IP数据-57" class="headerlink" title="第2章　用电信号传输TCP/IP数据　　57"></a>第2章　用电信号传输TCP/IP数据　　57</h3><p>——探索协议栈和网卡<br>2.1 创建套接字　　61<br>2.1.1　协议栈的内部结构　　61<br>2.1.2 套接字的实体就是通信控制信息　　63<br>2.1.3 调用socket时的操作　　66<br>2.2 连接服务器　　68<br>2.2.1 连接是什么意思　　68<br>2.2.2 负责保存控制信息的头部　　70<br>2.2.3 连接操作的实际过程　　73<br>2.3 收发数据　　75<br>2.3.1 将HTTP请求消息交给协议栈　　75<br>2.3.2 对较大的数据进行拆分　　78<br>2.3.3 使用ACK号确认网络包已收到　　79<br>2.3.4 根据网络包平均往返时间调整ACK号等待时间　　83<br>2.3.5 使用窗口有效管理ACK号　　84<br>2.3.6 ACK与窗口的合并　　87<br>2.3.7 接收HTTP响应消息　　89<br>2.4 从服务器断开并删除套接字　　90<br>2.4.1 数据发送完毕后断开连接　　90<br>2.4.2 删除套接字　　92<br>2.4.3 数据收发操作小结　　93<br>2.5 IP与以太网的包收发操作　　95<br>2.5.1 包的基本知识　　95<br>2.5.2 包收发操作概览　　99<br>2.5.3 生成包含接收方IP地址的IP头部　　102<br>2.5.4 生成以太网用的MAC头部　　106<br>2.5.5 通过ARP查询目标路由器的MAC地址　　108<br>2.5.6 以太网的基本知识　　111<br>2.5.7 将IP包转换成电或光信号发送出去　　114<br>2.5.8 给网络包再加3个控制数据　　116<br>2.5.9 向集线器发送网络包　　120<br>2.5.10 接收返回包　　123<br>2.5.11 将服务器的响应包从IP传递给TCP　　125<br>2.6 UDP协议的收发操作　　128<br>2.6.1 不需要重发的数据用UDP发送更高效　　128<br>2.6.2 控制用的短数据　　129<br>2.6.3 音频和视频数据　　130<br>插进Socket里的是灯泡还是程序　　132</p>
<h3 id="第3章-从网线到网络设备-135"><a href="#第3章-从网线到网络设备-135" class="headerlink" title="第3章　从网线到网络设备　　135"></a>第3章　从网线到网络设备　　135</h3><p>——探索集线器、交换机和路由器<br>3.1 信号在网线和集线器中传输　　139<br>3.1.1 每个包都是独立传输的　　139<br>3.1.2 防止网线中的信号衰减很重要　　140<br>3.1.3 “双绞”是为了抑制噪声　　141<br>3.1.4 集线器将信号发往所有线路　　146<br>3.2 交换机的包转发操作　　149<br>3.2.1 交换机根据地址表进行转发　　149<br>3.2.2 MAC地址表的维护　　153<br>3.2.3 特殊操作　　154<br>3.2.4 全双工模式可以同时进行发送和接收　　155<br>3.2.5 自动协商：确定最优的传输速率　　156<br>3.2.6 交换机可同时执行多个转发操作　　159<br>3.3 路由器的包转发操作　　159<br>3.3.1 路由器的基本知识　　159<br>3.3.2 路由表中的信息　　162<br>3.3.3 路由器的包接收操作　　166<br>3.3.4 查询路由表确定输出端口　　166<br>3.3.5 找不到匹配路由时选择默认路由　　168<br>3.3.6 包的有效期　　169<br>3.3.7 通过分片功能拆分大网络包　　170<br>3.3.8 路由器的发送操作和计算机相同　　172<br>3.3.9 路由器与交换机的关系　　173<br>3.4 路由器的附加功能　　176<br>3.4.1 通过地址转换有效利用IP地址　　176<br>3.4.2 地址转换的基本原理　　178<br>3.4.3 改写端口号的原因　　180<br>3.4.4 从互联网访问公司内网　　181<br>3.4.5 路由器的包过滤功能　　182<br>集线器和路由器，换个名字身价翻倍？　　184</p>
<h3 id="第4章-通过接入网进入互联网内部-187"><a href="#第4章-通过接入网进入互联网内部-187" class="headerlink" title="第4章　通过接入网进入互联网内部　　187"></a>第4章　通过接入网进入互联网内部　　187</h3><p>——探索接入网和网络运营商<br>4.1 ADSL接入网的结构和工作方式　　191<br>4.1.1 互联网的基本结构和家庭、公司网络是相同的　　191<br>4.1.2 连接用户与互联网的接入网　　192<br>4.1.3 ADSL Modem将包拆分成信元　　193<br>4.1.4 ADSL将信元“调制”成信号　　197<br>4.1.5 ADSL通过使用多个波来提高速率　　200<br>4.1.6 分离器的作用　　201<br>4.1.7 从用户到电话局　　203<br>4.1.8 噪声的干扰　　204<br>4.1.9 通过DSLAM到达BAS　　205<br>4.2 光纤接入网（FTTH）　　206<br>4.2.1 光纤的基本知识　　206<br>4.2.2 单模与多模　　208<br>4.2.3 通过光纤分路来降低成本　　213<br>4.3 接入网中使用的PPP和隧道　　217<br>4.3.1 用户认证和配置下发　　217<br>4.3.2 在以太网上传输PPP消息　　219<br>4.3.3 通过隧道将网络包发送给运营商　　223<br>4.3.4 接入网的整体工作过程　　225<br>4.3.5 不分配IP地址的无编号端口　　228<br>4.3.6 互联网接入路由器将私有地址转换成公有地址　　228<br>4.3.7 除PPPoE之外的其他方式　　230<br>4.4 网络运营商的内部　　233<br>4.4.1 POP和NOC　　233<br>4.4.2 室外通信线路的连接　　236<br>4.5 跨越运营商的网络包　　238<br>4.5.1 运营商之间的连接　　238<br>4.5.2 运营商之间的路由信息交换　　239<br>4.5.3 与公司网络中自动更新路由表机制的区别　　241<br>4.5.4 IX的必要性　　242<br>4.5.5 运营商如何通过IX互相连接　　243<br>名字叫服务器，其实是路由器　　246</p>
<h3 id="第5章-服务器端的局域网中有什么玄机-249"><a href="#第5章-服务器端的局域网中有什么玄机-249" class="headerlink" title="第5章　服务器端的局域网中有什么玄机　　249"></a>第5章　服务器端的局域网中有什么玄机　　249</h3><p>5.1 Web服务器的部署地点　　253<br>5.1.1 在公司里部署Web服务器　　253<br>5.1.2 将Web服务器部署在数据中心　　255<br>5.2 防火墙的结构和原理　　256<br>5.2.1 主流的包过滤方式　　256<br>5.2.2 如何设置包过滤的规则　　256<br>5.2.3 通过端口号限定应用程序　　260<br>5.2.4 通过控制位判断连接方向　　260<br>5.2.5 从公司内网访问公开区域的规则　　262<br>5.2.6 从外部无法访问公司内网　　262<br>5.2.7 通过防火墙　　263<br>5.2.8 防火墙无法抵御的攻击　　264<br>5.3 通过将请求平均分配给多台服务器来平衡负载　　265<br>5.3.1 性能不足时需要负载均衡　　265<br>5.3.2 使用负载均衡器分配访问　　266<br>5.4 使用缓存服务器分担负载　　270<br>5.4.1 如何使用缓存服务器　　270<br>5.4.2 缓存服务器通过更新时间管理内容　　271<br>5.4.3 最原始的代理——正向代理　　276<br>5.4.4 正向代理的改良版——反向代理　　278<br>5.4.5 透明代理　　279<br>5.5 内容分发服务　　280<br>5.5.1 利用内容分发服务分担负载　　280<br>5.5.2 如何找到最近的缓存服务器　　282<br>5.5.3 通过重定向服务器分配访问目标　　285<br>5.5.4 缓存的更新方法会影响性能　　287<br>当通信线路变成局域网　　291</p>
<h3 id="第6章-请求到达Web服务器，响应返回浏览器-293"><a href="#第6章-请求到达Web服务器，响应返回浏览器-293" class="headerlink" title="第6章　请求到达Web服务器，响应返回浏览器　　293"></a>第6章　请求到达Web服务器，响应返回浏览器　　293</h3><p>——短短几秒的“漫长旅程”迎来终点<br>6.1 服务器概览　　297<br>6.1.1 客户端与服务器的区别　　297<br>6.1.2 服务器程序的结构　　297<br>6.1.3 服务器端的套接字和端口号　　299<br>6.2 服务器的接收操作　　305<br>6.2.1 网卡将接收到的信号转换成数字信息　　305<br>6.2.2 IP模块的接收操作　　308<br>6.2.3 TCP模块如何处理连接包　　309<br>6.2.4 TCP模块如何处理数据包　　311<br>6.2.5 TCP模块的断开操作　　312<br>6.3 Web服务器程序解释请求消息并作出响应　　313<br>6.3.1 将请求的URI转换为实际的文件名　　313<br>6.3.2 运行CGI程序　　316<br>6.3.3 Web服务器的访问控制　　319<br>6.3.4 返回响应消息　　323<br>6.4 浏览器接收响应消息并显示内容　　323<br>6.4.1 通过响应的数据类型判断其中的内容　　323<br>6.4.2 浏览器显示网页内容！访问完成！　　326<br>Gateway是通往异世界的入口　　328<br>附录　　330<br>后记　　334<br>致谢　　334<br>作者简介　　335</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img1.doubanio.com/lpic/s28079818.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;本书倡导在计算机迅速发展、技术不断革新的今天，回归到计算机的基础知识上。通过探究计算机的本质，提升工程师对计算机的兴趣，在面对复杂的最新技术时，能够迅速掌握其要点并灵活运用。&lt;br&gt;本书以图配文，以计算机的三大原则为开端、相继介绍了计算机的结构、手工汇编、程序流程、算法、数据结构、面向对象编程、数据库、TCP/IP 网络、数据加密、XML、计算机系统开发以及SE 的相关知识。&lt;br&gt;图文并茂，通俗易懂，非常适合计算机爱好者和相关从业人员阅读。&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Computer" scheme="http://aisee.me/tags/Computer/"/>
    
  </entry>
  
  <entry>
    <title>V for Vendetta</title>
    <link href="http://aisee.me/2017/05/09/MyView/Movie/v-for-vendetta/"/>
    <id>http://aisee.me/2017/05/09/MyView/Movie/v-for-vendetta/</id>
    <published>2017-05-09T12:41:18.000Z</published>
    <updated>2017-05-09T14:33:00.390Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p1465235231.webp" alt=""></p>
<p><a href="http://www.imdb.com/title/tt0434409/?ref_=fn_al_tt_1" target="_blank" rel="external">V for Vendetta (2005)</a></p>
<p>In a future British tyranny, a shadowy freedom fighter, known only by the alias of “V”, plots to overthrow it with the help of a young woman.</p>
<p>Director: James McTeigue<br>Writers: Lilly Wachowski (screenplay) (as The Wachowski Brothers), Lana Wachowski (screenplay) (as The Wachowski Brothers) | 1 more credit »<br>Stars: Hugo Weaving, Natalie Portman, Rupert Graves | See full cast &amp; crew »</p>
<a id="more"></a>
<p><img src="https://img3.doubanio.com/view/photo/large/public/p457210293.webp" alt=""></p>
<p><img src="https://img3.doubanio.com/view/photo/large/public/p457210692.webp" alt=""></p>
<p>未来的英国社会处于极权统治的高压下，不能容许同性恋者、异教徒等社会角色的存在，人民在黑暗政权下苟延残喘。<br>　　这晚，年轻女子艾薇（娜塔丽·波特曼 Natalie Portman饰）身陷险境，幸得V（雨果·维文 Hugo Weaving饰）相助。V是一个永远带着面具的神秘男子，拥有高智商和超凡战斗力。V继承了前革命英雄的使命，为了推翻荒唐极权的统治阶层，他成立了神秘的地下组织，摧毁了伦敦的标志性建筑，点燃了反政府的熊熊烈火。<br>　　艾薇和V深入接触，不仅得知了V的神秘使命，还渐渐发现原来自己的身世，注定了自己和V是同一条阵线的人。</p>
<h2 id="一个腰部以下的叛逆"><a href="#一个腰部以下的叛逆" class="headerlink" title="一个腰部以下的叛逆"></a>一个腰部以下的叛逆</h2><p>一个腰部以下的叛逆：电影《V字仇杀队》　</p>
<p>文/王怡</p>
<p>沃卓斯基兄弟在《骇客帝国》三部曲后，推出这部对恐怖主义立场暧昧的电影。今年2月在柏林电影节亮相，直到最近一区推出DVD，争议之声仍不绝于耳。电影把英国史上著名的“火药阴谋案”，搬到了假想中的极权主义英国。当年没能炸掉王室和上下两院的天主教狂热分子盖?福克斯，摇身变成大众民主的斗士，最终利用伦敦地铁炸毁了古老的国会。影片原定在去年11月5日，也就是“火药阴谋案”400周年纪念日举行首映，因其对伦敦地铁爆炸案的渲染与联想，而被迫推迟到今年上映。</p>
<p>1605年，火药成为这个世界的关键词。在英国，一群梦想复辟天主教统治的狂热分子策划炸毁议会和王室。11月5日是议会大典，福克斯成功的将36桶火药偷运到国会的地下室。这一阴谋在5日凌晨奇迹般的败露，福克斯等人被处绞刑。英国逃过了人类政治史上最大的一次恐怖策划，他们实在有理由纪念这个日子，因为这批火药足以将整座国会炸毁20余次。所以11月5日成了英国传统的火药节，人们上街庆贺，将福克斯的人像反复焚烧了400年。</p>
<p>同年同月，世界另一端的北京城，却没能避开热兵器时代的第一次大爆炸。掌管皇家火药库的两名宦官，命令工匠用铁斧劈开结成硬块的旧火药，结果造成震动京师的爆炸。当场炸死官兵93人，居民死亡无数，炸毁房屋三十余间。</p>
<p>这两个火药事件，预示了近代的第一次全球化，就是热兵器暴力的全球化。恐怖主义是这部电影一个令人不寒而栗的时代背景。但这部电影原本还有另一个令人亲近的背景，那就是二十世纪文学史上的“反乌托邦”传统。</p>
<p>有件事非常奇怪，“乌托邦”思想是从英国诞生的，而最著名的“反乌托邦”小说也都是英国人写的，如奥威尔的《1984》和赫胥黎的《美丽新世界》。而且最近二十年来，著名的“反乌托邦”电影也都是英国人拍的，如《1984》在1984年被英国导演搬上银幕。1985年，特里·吉列姆在英国拍出他最经典的电影《妙想天开》。这部电影是奥威尔和卡夫卡的混合，对人们在极权主义和官僚主义体制下的挣扎，作了最形而上的镜像思考。似乎是为了更符合我的描述，吉列姆甚至离开好莱坞，特意加入英国国籍。</p>
<p>和《妙想天开》一样，《V字仇杀队》也改编自英国作家的作品。也耸人听闻的假设英国成了一个纳粹式的极权国家。和《1984》一样，一个至高无上的党和“老大哥”控制了人们的一切思想。一个离极权主义最遥远的国家，一种与极权主义最陌生的体制，却被想象为一个必须炸毁国会、推倒重来的法西斯国家。乐观的人会说，这证明了只有最自由的体制，才能容忍最恶毒的批评。但悲观的人会说，是啊，连英国也可能出希特勒，人类还有什么希望呢。想想大英图书馆那两道恶狠狠的脚印吧。如果自由意味着同时产出乌托邦和反乌托邦，同时产出恐怖和非暴力。那么得胜的希望又在哪里？</p>
<p>我承认影片中那个戴着福克斯面具的“V”，的确很有魅力，混乱了很多年轻观众的希望。很多人面对这部电影，企图分辨革命和恐怖主义的差别。但火药的出场，意味着它们之间一切差别都是可以被取消的。我也承认当“V”说出那段经典的台词时你很难不被诱惑，他说“面具下是思想，你无法杀死它，因为它刀枪不入”。几百年来，人们一步步把“思想”偶像化，当作真理本身去崇拜，最终导致相对主义和价值虚无。谁有资格说谁是错的呢，这一结论其实就是恐怖主义的本源。沃卓斯基兄弟的初衷，是借这部电影表达对西方宗教保守主义复兴的不满和逆反，但不满的列车通往哪里呢，竟然通向了反人类的地铁爆炸案。“思想”二字听起来很高贵，但人们往往不愿承认思想的主要成分，是激情和欲望再掺苏打水。</p>
<p>欲望无敌，这就是“反乌托邦”的原则。在《1984》中，奥威尔说，“做爱本身就是造反”，一次高潮就是对党的一次打击。温斯顿对他的女友说，“你只是一个腰部以下的叛逆”。亚里士多德说，理性就是对激情的克服。而腰部以下的叛逆，只是将这个世界由一种激情交给另一种激情。这也是我对《V字仇杀队》的评语。事实上，二十世纪并未诞生真正的“反乌托邦”精神，因为只有乌托邦才能反乌托邦。当一个“盼望不至于羞耻”的真正的乌托邦隐匿了，那些虚假的乌托邦你怎么去反呢，你的所谓反，其实只是替换。</p>
<p>盲目的眼看不见真正的历史。在福克斯的前后时代，英国史上有三种比他更值得尊敬的“受害者”。电影中用禁止《可兰经》来说明极权的性质，暗示以革命追求信仰自由的正当性。但就在火药阴谋案前50年，著名的殉道者丁道尔，为了将《圣经》译成英文，使英国老百姓能直接阅读圣经，而被天主教会烧死在火刑柱上。但他死前一刻并没有说，“炸毁国会吧，英国才有希望”，他说，“上帝啊，求你开启英格兰国王的眼睛”。到福克斯策划阴谋时，英文版圣经已经合法出版。具有讽刺意味的是，这一局面恰恰是福克斯所仇恨的，也是他决心炸毁国会的原因之一。6年后，没被他炸死的詹姆士一世，主持翻译的英文钦定版圣经，以5个先令的价格大量出版。</p>
<p>另一个人物是开创了违宪审查制度的柯克法官。他对那个没被炸死的国王说，司法必须独立，对不起，你没有审案子的权力。几年后，詹姆斯一世将他撤职。柯克转而成为下议院的议员，坚持主权在议会、而不在国王的宪法传统。几年后，詹姆斯又解散了下议院。但柯克也没有说，“杀死暴君吧，英国才有希望”。</p>
<p>第三个是清教徒和他们的长老会，因为宣扬民主理念和要求政教分离而受到迫害。詹姆斯一世的母亲，天主教徒玛丽女王临朝时，短短3年烧死了400名新教徒，留下“血腥玛丽”的称呼。詹姆士是新教徒，但反对政教分离，坚持必须由国王任命主教。他要求清教徒宣誓承认国王的最高宗教权威。清教徒们没有使用火药，他们成为远走荷兰和美利坚的“天路客”，为人类开创出宪政共和制度。</p>
<p>英国拥有古典自由和立宪政体，恰恰在于它固执地走在与“火药阴谋案”相反的道路上。这部电影替福克斯翻案，不过是为了取悦这个世界的相对主义激情。电影中V的颠覆计划很有意味，他第一年先炸毁了伦敦的老贝利法院，当那个著名的蒙眼的正义女神像倒下，意味着他要成为最高大法官。第二年再炸国会，乃是行使他偷来的审判权。马丁·路德曾经在反对德国农民战争时说，革命就是对上帝的叛乱。托尔斯泰在小说《复活》的扉页上，引用圣经题下“伸冤在我，我必报应”。这是一切非暴力的前提和信心。所谓革命或恐怖就是不承认自己之上的裁判权，而决意自我伸冤，担任人类的最高裁判官。</p>
<p>V其实是罗伯斯庇尔和马拉的混合，趋向马拉的一面使他看起来饶有情趣，甚至缓解了暴力的令人不适。某种无政府主义色彩也冲淡了暴力的专制内核。但趋向罗氏的那一面才是V的答案。他在密室中练剑的镜头，如一种强迫症，显出复仇动机的苦毒。他试图爱艾薇，也试图模仿正义，却始终无法胜过那满心的杀气。</p>
<p>每个人都是自己的最高大法官，别以为这是理想主义，这只是一个腰部以下的叛逆。无论V的造型多酷，飞刀舞得多圆，如《箴言书》所说，“有一条路人以为正，至终成为死亡之路”。真正的希望没有火药味，真正的英雄永远是丁道尔、柯克和那些天路客们。</p>
<p>沃卓斯基兄弟给了我们一个噩梦，我们要知道如何醒来。</p>
<h2 id="V和Gordon的关系探讨"><a href="#V和Gordon的关系探讨" class="headerlink" title="V和Gordon的关系探讨"></a>V和Gordon的关系探讨</h2><p>先声明，以下会有严重剧透……</p>
<p>看电影的时候因为那个煎蛋，估计不少人会对V和Gordon的关系产生各种各样的猜想。其实电影本身是把这个问题交代的很清楚的，只不过很多交代是用伏笔甚至一闪而过的画面，所以关注剧情主线的我们很容易把这些忽略掉。</p>
<p>首先说一下结论，V和Gordon是一个年代的人，在V进Larkhill监狱之前，他们应该是Gay伙伴，Gordon通过某些手段保全了自己，伪装成一个正常人，并在电视台做脱口秀的节目主播。暗中帮助V实现他的计划。</p>
<p>罗列一下片中出现的细节。</p>
<p>-在煎蛋的场景中，V和Gordon都开了背景音乐，曲调风格类似，都是轻快的萨克斯风，证明这两人有相似的喜好。</p>
<p>-两个人所煎的蛋的特写，V的是正面，Gordon的是反面，而且这个反面上形成○的符号，○代表啥，受呗。</p>
<p>-为什么说Gordon在暗中帮助V，这是借Creedy在神父被杀那个场景中对Finch说的话交代的，Creedy的原话是这样的“恐怖分子似乎对我们电视系统的内部结构了如指掌，首相大人很怀疑是不是有内鬼”。我们当然知道Finch不会是这个内鬼，但是V为什么在电视台行事如此的顺利，并且还知道秘密的紧急频道，用来播出他的演讲，是谁在帮助他呢？Gordon无疑是最佳人选。</p>
<p>-再来看V和Gordon房间的内部装饰，很明显两个房间有很多让人感觉相似的地方，油画，东方的雕塑。V的房间里有个台子，放着中国的石佛头像，而Gordon的地窖里，在Sutler漫画像底下，也摆着一个稍小一点的中国石佛头像。Taste真是相近呢。</p>
<p>-V监狱里的那个在草纸上写自传的女囚的故事也有很多信息量，首先我们知道这个女的是个Les，奇怪的是在交代她的同伴被捕的时候，画面上是一对Gay被抓的场面。这意味着和她们一起被捕到这个监狱里面的，应该都是同性恋者。从常理推断，Sutler政府也应该会把异教徒，政治激进者(比如女主角的父母）还有同性恋者分别关在不同的监狱。这就充分证明了和Les同在一个监狱的V早年是个Gay。同志们还可以回忆一下Larkhill监狱里面囚徒们排队打针的场景，我们知道V和那个女Les是隔壁，那么排队打针的时候应该也该挨着站的，所以，还等什么，赶快去看看V以前长什么样子吧。</p>
<p>-回到Gordon的房间，影片中Gordon和Evey在地窖里谈话的时候，Evey无意中看到Gordon背后的墙上的黑白照片，然后两个人都很尴尬，不定格的话你无法看到照片上是什么——年轻时代的Gordon和另一个男性赤身裸体的照片，很明显，Gordan同志是个Gay无疑了，后面他对Evey的话也证实了这一点。另外，有一个很重要的线索，也就是这部电影很明白的告诉你Gordon和V是一对的信息，也在这里出现了，在黑白照片上，Gordon和他的同伴的背后和手臂上都有大片的纹身。</p>
<p>我们先说一个线索，就是在V的房间里面，有一种很特别的装饰，就是镜框里的大大小小的蝴蝶标本，蝴蝶应该是纹身的一种意像，V热衷于收藏蝴蝶，多多少少说明了他自己的喜好。</p>
<p>你大概会想，这太牵强了吧，怎么能证明V就是Gordon的同伴呢，我们又没在电影中看到V的后背和手臂。你错了，电影里面有一处，我们清清楚楚的看到了在V的手臂上，有Gordon同伴一样的纹身。这一处是如此的短暂，但却毋庸置疑的表明了V和Gordon的关系。</p>
<p>在浴室里杀死“Voice of London”同志前，这个胖哥们回想起来当年在Larkhill用电棒打蜷缩在地上的V同志的场景。再到很后来，V假扮失踪的政府人员，向Finch交代Larkhill的故事的时候，又有一个蜷缩在地上的人被拳打脚踢的场景，很显然，V是在回忆自己的过去，这个被拳打脚踢的镜头只持续了大概0.5秒的时间，但是画面中却有一个惊人的信息–这个躺在地上被殴打的V，手臂上明明白白的有Gordon照片里的纹身。</p>
<p>这下够明白了吧，哪有什么猜想，在我们猜想的时候，导演和编剧正躲在背后得意的笑呢。</p>
<p>—— 2014.12.28更新 ——</p>
<p>暴走视频参考本篇影评做了一期视频，可以对照着看，感谢@zero 同学的提醒。</p>
<p><a href="http://v.youku.com/v_show/id_XNzQyNjc0ODM2.html" target="_blank" rel="external">http://v.youku.com/v_show/id_XNzQyNjc0ODM2.html</a></p>
<p>另外翻了一下评论，营养也很多，比如这@plane life (青山原不老，为雪白头)这条：<br>—quote—<br>　　重大发现：<br>　　V和戈登是什么关系暂且不论。V是男是女暂且不论。但V是同性恋是肯定的了。<br>　　今天回去找配乐的时候突然发现，娜塔莉波曼第一次被带到V的家里醒来之后疑惑地转着看，镜头展示了V的家中装饰，墙上有一幅著名油画《圣塞巴斯蒂安殉道图》<a href="http://movie.douban.com/photos/photo/1980841645/，其寓意为http://music.douban.com/subject/1769021/discussion/22876316/，这部电影细节微妙到极致，这应该是个有力的证据。" target="_blank" rel="external">http://movie.douban.com/photos/photo/1980841645/，其寓意为http://music.douban.com/subject/1769021/discussion/22876316/，这部电影细节微妙到极致，这应该是个有力的证据。</a></p>
<h2 id="如果恐惧成为了维系政权的工具，那么人民是否应…"><a href="#如果恐惧成为了维系政权的工具，那么人民是否应…" class="headerlink" title="如果恐惧成为了维系政权的工具，那么人民是否应…"></a>如果恐惧成为了维系政权的工具，那么人民是否应…</h2><p>一， 电影</p>
<p>很久没有看过这么全方位精彩的电影了。</p>
<p>之所以说它全方位精彩是说不管你喜欢电影的什么方面，你都能在VFV （V For Vendentta）里面找到自己的最爱。</p>
<p>你喜欢政治哲学的，里面有问题让你思考“如果恐惧成为了维系政权的工具，那么人民是否应该拿起暴力作为武器？”</p>
<p>你要是喜欢平等自由，公民权力的，里面有保护少数群体权益（比如同性恋），反对国家思想检查，支持言论自由等等。</p>
<p>你要是喜欢咬文嚼字（英文了），喜欢文字游戏的，里面有似韵非韵的偈语，里面有莎士比亚的台词。</p>
<p>你要是就喜欢视觉刺激，听觉享受，就只图看个热闹，听个动静。里面有场面宏大的爆破，《黑客帝国》式的华丽打斗，忧伤的Cry me a river，柴可夫斯基的1812序曲。</p>
<p>你要是喜欢演技的，那么Natalie Portman在电影里面的演出绝对让你满意。她的角色在片中感情跨度相当之大，从屈辱到感动，从镇定自若到disbelieve ，她都把握的丝丝入扣。这部电影是我感觉她演的最好的一部。不光是她，里面若干配角不管从选角到表演都有出彩的地方，特别是那个 Chief Inspector Finch。</p>
<p>二， 如果恐惧成为了维系政权的工具，那么人民是否应该拿起暴力作为武器？</p>
<p>这个问题其实早就有答案了。</p>
<ol>
<li>独立宣言（The Declaration of Independence）里面<br>先说 人的基本权力是 Life, Liberty and the pursuit of Happiness<br>然后说 That to secure these rights, Governments are instituted among Men, deriving their just powers from the consent of the governed, 政府建立的目的就是维护人的这些基本权利</li>
</ol>
<p>接着说 That whenever any Form of Government becomes destructive of these ends, it is the Right of the People to alter or to abolish it. 不管什么样的政府，只要危害到人民的这些权利了，人民就有权改变或者废除这样的政府。</p>
<p>当然这不是说你随便找个小事情（比如被开罚单了）就可以推翻政府 Governments long established should not be changed for light and transient causes</p>
<p>但是，当追逐同一目标的一连串滥用职权和强取豪夺发生，证明政府企图把人民置于专制统治之下时，那么人民就有权利，也有义务推翻这个政府，并为他们未来的安全建立新的保障<br>But when a long train of abuses and usurpations, pursuing invariably the same Object evinces a design to reduce them under absolute Despotism, it is their right, it is their duty, to throw off such Government, and to provide new Guards for their future security.</p>
<p>这里 it is their right, it is their duty. 不光光是权利，而且是duty， moral obligation 起来造反。</p>
<ol>
<li>杰佛逊 Thomas Jefferson 有句话更直接<br>what country can preserve its liberties if their rulers are not warned from time to time that their people preserve the spirit of resistance? 如果统治者不被人民的反抗意识所畏惧的话，什么样的国家可以保障自由呢？</li>
</ol>
<p>The tree of liberty must be refreshed from time to time with the blood of patriots &amp; tyrants.<br>自由之树木需要不时地用爱国者和暴君的鲜血来浇灌。</p>
<p>3.林肯也有类似的思想，比如在他的就职演说里面，他说。<br>This country, with its institutions, belongs to the people who inhabit it. Whenever they shall grow weary of the existing Government, they can exercise their constitutional right of amending it or their revolutionary right to dismember or overthrow it.</p>
<p>其实这样的理论，我们祖宗也有的。<br>有人问孟子，推翻 夏桀、商纣，是不是弑君，是不是不义。<br>他说 “贼仁者谓之贼， 贼义者谓之残，残贼之人，谓之一夫，闻诛一夫纣矣，未闻弑君也。”</p>
<p>三，台词</p>
<p>这部电影的台词对于整部电影的意义完全可以用画龙点睛来形如。</p>
<p>V 出场的自白，一长段话里面几乎每句话的每个单词都是以v开始，真的是帅呆了 ：）</p>
<p>Voilà! In view, a humble vaudevillian veteran, cast vicariously as both victim and villain by the vicissitudes of Fate. This visage, no mere veneer of vanity, is it vestige of the vox populi, now vacant, vanished. However, this valorous visitation of a by-gone vexation, stands vivified, and has vowed to vanquish these venal and virulent vermin vanguarding vice and vouchsafing the violently vicious and voracious violation of volition. The only verdict is vengeance; a vendetta, held as a votive, not in vain, for the value and veracity of such shall one day vindicate the vigilant and the virtuous. Verily, this vichyssoise of verbiage veers most verbose so let me simply add that it’s my very good honor to meet you and you may call me V.</p>
<p>hehe, 真的很cool，还有这个</p>
<p>Evey Hammond: Who–who are you?<br>V: Who? Who is but the form following the function of what… and what I am is a man in a mask.</p>
<p>Evey Hammond: I can see that.<br>V: Of course you can. I’m not questioning your powers of observation, I’m merely remarking on the paradox of asking a masked man who he is.</p>
<p>和这个</p>
<p>A revolution without dancing…is a revolution not worth having!</p>
<p>特别是这个</p>
<p>Creedy: Die! Why won’t you die?<br>V: Beneath this mask there is more than flesh. There is an idea, Mr. Creedy - and ideas are bulletproof.</p>
<p>这里有更多的台词：</p>
<p><a href="http://www.imdb.com/title/tt0434409/quotes" target="_blank" rel="external">http://www.imdb.com/title/tt0434409/quotes</a></p>
<p>4 总结</p>
<p>这样精彩的电影因为主题的关系应该是不会在国内上映了。<br>如果以后出了D版DVD的话，请大家一定收藏一份，保证绝不让你失望！</p>
<p>最后，用V的两句话来收尾吧。</p>
<p>People should not be afraid of their governments. Governments should be afraid of their people.</p>
<p>A revolution without dancing is a revolution not worth having!</p>
<h2 id="跳着舞革命"><a href="#跳着舞革命" class="headerlink" title="跳着舞革命"></a>跳着舞革命</h2><p>相信我，V是这世上最为风度翩翩的杀手、怪客、武士和复仇者。<br>他熟读莎士比亚，热爱柴科夫斯基，每看一遍《基督山复仇记》都会被打动，懂得烹饪，怀旧，电唱机里播放老歌。<br>他不属于他所在的时代他所在的世界，他好像去错了时空的流亡贵族，自得其乐，但离群索居。<br>他很浪漫，在他用以摧毁国会大楼的炸药中，甚至混合得有大量烟火。该时刻，倾城惊动，众人仰面观望，这阴霾世界有一场火树银花。他把复仇变成节日。他带来光。</p>
<p>没有理由地，V总是叫我想起伦敦老城区爬满常春藤的灰墙，落雨的泰晤士河，浓雾中维多利亚式样的街灯，一切旧的，美丽的，而又昏暗的事物。</p>
<p>故事的时间应该是二零四零年前后，地点，伦敦。<br>那是最坏的时代，整个英国都处于严酷的强权控制之下，好像乔治•奥威尔的《1984》，在传感器和监视系统的包围里，人们沉默而顺从。<br>V是二十年前政府的病毒性生物武器研制中，所用的活体试验品里，唯一的生还者。<br>而他复仇的对象则是一个时代——有序的灰暗的死气沉沉的时代，在其中，同性恋、异教徒、政治激进分子都将被逮捕被处决，他们莫名消失，好像没有存在过。<br>这个剔除了全部异质元素的世界，表面上纯粹，平静，没有锋芒，呵，美丽新世界。<br>但大众的怨怼愤怒却转而向内，汹汹暗涌，这虚幻的乌托邦。</p>
<p>阴差阳错地，伊芙（娜塔丽•波曼饰）被卷入V的复仇行动，并被带回他位于地底的家中。<br>次日，她醒来，懵懂中听见荡来一支老歌，《泪流成河》。又见幽暗走廊遍布书籍、雕塑和油画——来自政府仓库的违禁品。<br>伊芙有些恍惚，是否走错了时光来错了年代，她不知今夕何夕。<br>娜塔丽•波曼，呵，我实在忍不住想要说一说她，这个十二岁已经颠倒众生的女孩。成年的她，面貌趋于中正，邪气收敛起来，但依然美艳。而且，这一回，她又遇上孤独的杀手，又与他相爱。</p>
<p>爱得又隐忍又寂寞。<br>电影中，她跟V少有恋人间的身体接触，从始到终，他们不过共舞一曲，还有一个吻，隔着面具。<br>甚至，她都不晓得他长什么样子。<br>伊芙对V说<br>——我不明白，为什么我对你一无所知，而你却成为我生命中最重要的事。<br>呵，大概是因为，这世上有太多人没有面具，但却以其他方式掩饰着自己，而惟独这个男子，戴着面具，却敞开了他的灵魂。他美丽昏暗的老灵魂。</p>
<p>电影中有一封藏在牢房老鼠洞里的信，非常动人。<br>“给我不认识的你”，它来自一个因同性恋而被捕并且在狱中死去的女子，瓦拉瑞。<br>在信里，她说，我们的尊严是那么的小，但那是我们的仅有，那是我们最后一寸领地，但在这一寸里，我们是自由的。<br>读过这封信的人——V、伊芙，都被它深深打动过，乃至死亡当前仍不肯退却。<br>是这封信唤醒了他们体内沉睡的力量，使他们可以与死、与恐惧对垒。他们自由了。</p>
<p>故事的结尾，V死去。他躺在装满炸药的列车里，国会大厦是这辆车的终站。<br>他的身边簇拥着他种的红玫瑰，已经绝迹的斯嘉丽•卡森。<br>至死他也戴着面具，永恒微笑，笑容诡谲轻蔑。</p>
<p>他独自行过死荫的幽谷，去赴一年前订下的，那一回菊花约。<br>他将二十年的寂寞谋划，换一场漫天烟花众人来看，来惊动，来歌哭，来欢喜。<br>东方曙色初动，他带来光。</p>
<h2 id="来吧，为了V，起立，鼓掌！"><a href="#来吧，为了V，起立，鼓掌！" class="headerlink" title="来吧，为了V，起立，鼓掌！"></a>来吧，为了V，起立，鼓掌！</h2><p>你有多久没有体验到一部电影让你有热血沸腾，让你有想大声呐喊才能宣泄的快感？身体每一个毛孔都酣畅淋漓的呼吸，那每一根血管里的血液都是即将喷薄而出的岩浆，炙热灼人。</p>
<p>关于一部好电影，其实最高的赞扬，在我看来，就是四个字“起立，鼓掌”。</p>
<p>昨晚，在电脑前的我，不止一次，为这部电影鼓掌叫好。</p>
<p>这哪是一部电影啊？这分明是号召为自由而战的檄文！</p>
<p>这是虚幻的乌托邦，也是曾经、现在甚至未来都会出现的暴政。电影的色调是阴郁的黑，喷涌的红。</p>
<p>影片的开端，以一段历史事件为援引，1605年的“火药阴谋”，我们的主角V的那张面具，就是盖伊福克斯。</p>
<p>从摘下手套露出的那双“体无完肤”的手，可以知道V曾所经受的。</p>
<p>这是我看过的电影里所存在的最乖戾的面具了，并不是像拿着砍刀的杰森在黑色星期五里带的面具那般透露着血腥的恐怖，它时时刻刻都是微笑的表情，纤细的眉和髭须，狭长却如同黑暗深渊般无光的眸子，还有脸颊上诡异的淡红，初时看像小丑般引人发笑，而后却有不寒而栗的惊悚。</p>
<p>他是谁？从电影里面我们未曾见到他的真实面目，但仅从他曾露出的双手便可以知道那张面具之下的脸是多么的可怖，如同那一晚，从烈火中走出的身影，来自地狱的恶魔。</p>
<p>这部电影的台词堪称字字珠玑，如果你能有耐心把每一句台词都细细品读，你甚至已经无需再看任何影评，你会明白，那些语言所能带来的力量，甚至远远超出V刺向黑暗的短剑所拥有的犀利—————“尽管沉默代替了谈话，但语言却总是能保持它的力量，言语提供了表达见解的方式，并且它可以告诉那些愿意倾听的人们真相”。</p>
<p>故事伴随着1812序曲那激昂的音乐开始，又伴着它结束，除却V手中冰冷的剑刃，他同样是个浪漫主义的侠客，酷肖那些只在英雄传说中存在的人物，他彬彬有礼，他喜欢古典音乐，他学识广博，通晓莎翁笔下那些浪漫的诗句，在如同世外桃源的“暗影长廊”里，摆满了各种艺术奇珍，他就像他所喜爱的基督山伯爵一样，充满了神秘，有着侠骨柔情的情怀，但他所要复仇的目标，却是这个残暴黑暗的政府。</p>
<p>恐怖主义也是信仰，但只有恐怖主义才会漠视生命的价值，这就是它同革命的区别。V所要做的并非杀戮，而是拯救。</p>
<p>这样政府曾经存在过，你可以认为是纳粹的亡灵；这样的政府如今也实实在在的存在着，你我都明白。他们有强有力的国家机器，禁锢着人们的思想，有为其辩护的喉舌，控制着舆论，麻痹着人心，为虎作伥，有道貌岸然却卑鄙无耻的党棍，宣扬高尚的信仰，却干着最肮脏的行当，他们有密如蛛网的审查制度，监视措施，将他的人民隔离在一块黑暗的荒岛，所有的人权都是最卑微的婢女，面对着专制的强暴，无路可逃。</p>
<p>而高高在上的统治者，有着豪华的宫殿，奢侈的生活，富可敌国的财富，凌驾于任何法律之上—–尽管那些法律也是他们自己定下——无可比拟的特权，这些特权的表现形式可以是开着特殊牌照的豪车，无视交通法规的公子哥，可以是奸淫幼女之后反诬其卖淫的判决，可以是政府办公楼的奢侈豪华与百姓简陋的蜗居的对比，可以是在商海里稳赚不赔只因有各路神仙保驾的国企领导那源源不断的油水。而在电影里，特权可以是百姓已经快连味道都忘了的黄油，元首却可以用专列来为自己满足口腹之欲，当然不单是黄油，还有元首的雪茄，还有元首每晚都必须饮用的温牛奶，还有那些送上牛奶的美女———-这些大家都知道，但不能有意见，要不然等待你的就是一个恐怖的黑口袋。</p>
<p>面对着这个国家的“不正常”，大多数人选择了沉默，艾薇就是其中之一，所以才有了V在电视台那番振聋发聩的演说。照一照镜子，你就会找到造成这一切的罪人————-通往朝鲜的道路，是每一个沉默的人共同铺就的———–即便是猛士才敢正视的鲜血淋漓，时光也会将它洗刷的只剩下苍白的印记，而那些呼声，会被选择性的遗忘。我们能看得见V的面具，却看不见自己的面具。</p>
<p>艾薇的父母就是这样的猛士，在艾薇的回忆里，她的母亲提出离开这个国家，然而她的父亲说“如果我们离开，他们就赢了”。历史不总是偏爱那些“高尚者和警醒的人”，更多的时候，刺刀和子弹更能取得胜利。而面对当权者的暴力镇压和思想禁锢，你还能指望什么？非暴力不合作就能取得一个自由民主的国家，只能是美好却不切实际的愿望。</p>
<p>我想到了90年前的五四运动，五四的精神并不高深，如果你读懂了她，你就会明白那不是教科书上的一段铅印文字，不是某道历史大题的概念性回答，她甚至都和官方每年的那些的纪念南辕北辙，因为统治者并不希望五四精神的真正发扬光大，当权柄落入手中，那些曾经拿来做宣传的理想都变得不值一文，“民主”曾经是刺向政治对手的利剑，当自己坐了江山，却惧怕了这把剑的锋芒。这就是中国的游戏。</p>
<p>90年前的那些青年们，他们的青春热血让这个民族有了希望，他们就是我们这个民族曾经有过的最有鲜活生命力的群体，在近代饱受欺凌的土地上，绽放出了最美丽的民主之花。20年前，也有那样的一些学生，但我们已经知道了结局，我想问的是，艾薇所言的“希望”，我们曾经有过，但我们还会见到么？</p>
<p>就像往往学完了学生时代的语文课本，才能明白鲁迅的勇气和伟大，那不是语文课上枯燥无味的自然段分解，不是将书页翻烂得到的某道阅读理解的条条框框。那些隐藏在平凡字眼下的真正财富，都被我们的教育和体制屏蔽了。</p>
<p>面对着一切，大多数人选择了沉默，因为他们害怕，谁能不害怕呢？丢掉目前虽然怯懦却实在的生活而去追求那崇高而飘渺的理想？难道家人和自己的生命不是最重要的么？难道活着，不是最好的么？就像威廉华莱士和那些农民们说的，“逃走，至少还能活，年复一年，直到寿终正寝”。</p>
<p>到底是生命更重要还是理想更重要，这是个没法说清的命题，没有人可以不畏惧死亡，我也没法把这篇文章写得如同舍身取义那样的崇高，但毫无疑问的是，艾薇在大雨磅礴的夜晚，张开双臂，她和当年从熊熊烈火中走出的V一样，获得了重生。</p>
<p>自由之树需要用爱国者和暴君的血来浇灌。V选择了同这个旧世界一同毁灭的命运。而广场上潮水般涌来的V，代表着一个国家的新生和人性尊严的复活。</p>
<p>无论怎样卑劣黑暗的暴政，他所能动用的终极手段就是剥夺你的生命，但如果你明白了你所能捍卫的最后一样东西就是作为一个人的尊严，它虽然卑微，虽然被当局视如粪土，但那是你最后的领地，为这最后一寸领地，也许，你可以像艾薇那样，像V那样，像戈登一样，直面死亡。</p>
<p>V说，平等，公正和自由不是泛泛而谈，而是高耸的灯塔。</p>
<p>那一丝光明或许微弱，但即便在最浓重的黑暗中，也永不褪色</p>
<p>因为你宣扬的是自由的光，让独裁的黑暗战栗。</p>
<p>如果你没有看过，我希望你看看这部电影，更希望读懂电影里的灵魂。</p>
<p>只有习惯了黑暗的眼睛才会畏惧光明，所以它在大陆理所当然的不得上映。</p>
<p>但感谢这个时代，我们还有网络，无论是sutler还是Hitler，都无法阻断这张网。</p>
<p>V也许是英雄，但V，也是我们每一个人，我们内心深处的正义良知不会消失殆尽，这个世界，就会有V。</p>
<p>人民不该惧怕他的政府，而是政府应该惧怕他的人民。11月5日如潮般的V，我们也曾有过。</p>
<p>子弹和刺刀可以杀死肉体，但无法杀死信念，信念不死，就像曙光必然降临。</p>
<p>V是胜利，是罗马数字5，是一个符号，是一种信念，最重要的，它在我们每一个人的内心深处。</p>
<p>面对暴政，你可以选择沉默和服从，你可以将那些与你不相干的事件屏蔽，你可以杀死V，而后，你会发现，当你的尊严被肆无忌惮的践踏，已经不再有人能为你抗争。</p>
<p>若你果真心意如铁石，将这些仅视作电影世界里的荒诞不经，那么，我也无话可说。</p>
<p>被代表 被死亡 被和谐 被选举 当一些的常见的词语都可以加上被动式，当这些被动式就活生生的出现在我们生活里。</p>
<p>当我们已经不大能弄清楚党和国家 政府和人民的关系。</p>
<p>这部电影，在寂静的午夜，像闪电划过，雷声轰隆。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p1465235231.webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.imdb.com/title/tt0434409/?ref_=fn_al_tt_1&quot;&gt;V for Vendetta (2005)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In a future British tyranny, a shadowy freedom fighter, known only by the alias of “V”, plots to overthrow it with the help of a young woman.&lt;/p&gt;
&lt;p&gt;Director: James McTeigue&lt;br&gt;Writers: Lilly Wachowski (screenplay) (as The Wachowski Brothers), Lana Wachowski (screenplay) (as The Wachowski Brothers) | 1 more credit »&lt;br&gt;Stars: Hugo Weaving, Natalie Portman, Rupert Graves | See full cast &amp;amp; crew »&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>The Truman Show</title>
    <link href="http://aisee.me/2017/05/09/MyView/Movie/the-truman-show/"/>
    <id>http://aisee.me/2017/05/09/MyView/Movie/the-truman-show/</id>
    <published>2017-05-09T12:32:18.000Z</published>
    <updated>2017-05-09T14:33:57.949Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images-na.ssl-images-amazon.com/images/M/MV5BMDIzODcyY2EtMmY2MC00ZWVlLTgwMzAtMjQwOWUyNmJjNTYyXkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_UX182_CR0,0,182,268_AL_.jpg" alt=""></p>
<p>An insurance salesman/adjuster discovers his entire life is actually a television show.<br>Director: Peter Weir<br>Writer: Andrew Niccol<br>Stars: Jim Carrey, Ed Harris, Laura Linney | See full cast &amp; crew »</p>
<a id="more"></a>
<p><img src="https://img1.doubanio.com/view/photo/albumicon/public/p459270379.webp" alt=""></p>
<p><img src="https://img3.doubanio.com/view/photo/large/public/p459268525.webp" alt=""></p>
<p><img src="https://img3.doubanio.com/view/photo/large/public/p459279016.webp" alt=""></p>
<p>楚门（金•凯瑞 Jim Carrey 饰）是一个平凡得不能再平凡的人，除了一些有些稀奇的经历之外——初恋女友突然失踪、溺水身亡的父亲忽然似乎又出现在眼前，他和绝大多数30多岁的美国男人绝无异样。这令他倍感失落。他也曾试过离开自己生活了多年的地方，但总因种种理由而不能成行。<br>　　直到有一天，他忽然发觉自己似乎一直在被人跟踪，无论他走到哪里，干什么事情。这种感觉愈来愈强烈。楚门决定不惜一切代价逃离这个他生活了30多年的地方，去寻找他的初恋女友。<br>　　但他却发现自己怎样也逃不出去。真相其实很残忍。</p>
<h2 id="《楚门的世界》：媒介时代的操纵隐喻"><a href="#《楚门的世界》：媒介时代的操纵隐喻" class="headerlink" title="《楚门的世界》：媒介时代的操纵隐喻"></a>《楚门的世界》：媒介时代的操纵隐喻</h2><p>版权归作者所有，任何形式转载请联系作者。<br>作者：典林同學（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/1028479/" target="_blank" rel="external">https://movie.douban.com/review/1028479/</a></p>
<p>我们的时代究竟是一个怎样的时代？技术的发展、物质的充裕，究竟是解放了人还是束缚了人？究竟是把人推向了更加自主的方向，还是把他更加置于自己的对立面，更加失去了自我，更加远离了真实的世界和鲜活的人生？</p>
<p>《楚门的世界》用一个近乎残忍的故事，以一种寓言式的叙事，给了我们一个耐人寻味的回答。</p>
<p>很显然，楚门只属于楚门的世界——一个被操纵的虚拟世界。他的出生、成长，一切的喜怒哀乐，如果不出意外的话，包括他的死亡，都将在一个被人为操纵和设计好的舞台上上演，并被无以计数的生活于光鲜富足的现代世界的男男女女们驻足观看。他们与楚门融为一体，一起经历着成长的历程，离开楚门，他们的生活将无以为继，世界将大乱，生活将没有意义。</p>
<p>但一场被设计好的持续了三十年之久的旷古未有的真人秀，却终因楚门的疑心和探求欲被击碎了。在楚门历经了人造的风暴、雷电、巨浪的考验后，承载着他走向真相的船，无情地撞破了那个蓝得刺眼的美丽但却虚假的天空。在那一刹那，一个神话结束了，一个阴谋被置于阳光之下。更为重要的是，这深深的撞击，证明只要人性尚存，心灵是无法被永远操纵的。</p>
<p>然而，楚门又绝不仅仅属于楚门的世界。他同时就是生活在这个弥漫着电子硝烟的世界里的你和我。</p>
<p>从出生，到成长，到死去，我们对世界的认识，从来是都是局限的，我们永远无法做到像万能的上帝那样，可以对这个世界了然于胸。我们不得不借助于各种载体来超脱我们的肉体樊篱，从而使得心灵可以通达久远的过去，遥想漫长的未来，想象异邦的人世间，以满足我们无限的好奇心和知识欲望。在这个意义上，我们不得不赞同麦克卢汉的至理名言：“媒介是人体的延伸”。</p>
<p>然而，文明发展的吊诡正在于，它常常走向自身的反面，成为剥夺自由和消解主体性的帮凶。今天，电子媒介在全球范围内的普及和迅速扩张，已经完全实现了麦克卢汉关于“地球村”的天才预言。也正因为如此，全世界的人们才得以在同一个地球上，同时观看楚门的世界，从而在如此广袤的时空范围内把人性中的窥探欲演绎得如此淋漓尽致。</p>
<p>现实的悲剧性正在于，在这个媒介的时代，谁都难以逃脱楚门的命运，谁也没有十足的底气说自己与楚门无关。在各种形式的电视真人秀节目中，难道我们不会见到楚门的影子吗？当我们在为超级女声而狂热欢呼的时候，难道我们不会在自己的身上看到那些抱着电视与楚门厮守的观众的影子吗？在经济利益驱动一切的今天，商业逻辑的泛滥，已经逼迫我们不得不把我们自己玩弄于股掌之间，我们只有自娱自乐，并在狂欢的刹那间，出卖我们的金钱、隐私、自由，乃至生命。</p>
<p>如此看来，《楚门的世界》作为一个时代性的操纵隐喻，不仅讲述了真实和虚假的边界问题，更重要的则是提醒我们走出时代的骗局，走近我们的心灵，在一种顽强的反思中，保有一份不那么时髦的自由。</p>
<h2 id="我们每个人都是楚门"><a href="#我们每个人都是楚门" class="headerlink" title="我们每个人都是楚门"></a>我们每个人都是楚门</h2><p>被设定，被限制，被禁锢，主角在这种环境中生活了30年而不自知。<br>记得当初看此片时，嘴是一直张着的，太震惊了。情节太离奇了，怎么可能会有这么样的人！</p>
<p>然而时隔6年再看此片，感到的却是一丝无奈和一丝悲哀。<br>其实我们都是楚门，差别只是，楚门最终走出了他的世界，而大多数的我们终其一生都将在其中徘徊。</p>
<p>我们每个人都是活在被设定的世界里，我们能在周围生活中找到“被设定”的痕迹，我们也有着在被设定的世界里所难以达成的梦想（楚门的斐济），但是我们却像前半段的楚门一样，无法或无力走出自己的世界去追寻自己的梦想。</p>
<p>1.<br>楚门被设定，我们是能看到的。<br>安排的剧情和演员；为了控制他，尽力去影响他的思维，想法以及习惯（从小到教育，父亲溺死的桥段，报纸对桃源居住环境的渲染，海报对空难的宣传等等）。这所有的设定都让楚门感到，他在桃源30年的生活是那么的自然而惬意，整个世界本应如此。</p>
<p>梦想是一切改变的源。<br>楚门对他的梦想从没有放弃过，或许在平时没有太多的行动，甚至说对他日常生活没有任何影响，照样工作结婚。但是这个梦想却在他心里慢慢发芽。</p>
<p>然而，当你决心要走出日常的生活，去追寻梦想时，身边本来自然和谐的一切竟忽然变成了压力。<br>楚门想去斐济时，所感到的是来自工作，母亲，妻子，朋友以及从小就被强加的思想（水的恐惧，飞机的不安全），各个方面，各种各样的压力。于是，他想追寻梦想的念头一次次被扼杀。</p>
<p>2.<br>我们被设定，多数人根本不自知<br>好好读书，将来才可以考上好大学，考上好大学才能找到好工作，有了好的前途才会有好的婚姻，只有这样走，才会迎来成功！有钱，有地位，才是成功的人生！<br>我们从小不是就是这么被教育的么？是不是觉得很自然呢？难道就真的只有这一条路么？当然不是，我们从小就被设定了，在每个人自己的“楚门世界”里。</p>
<p>然而我们有梦，这就是路开始的地方<br>不是所有人都想当科学家的，即便这话谁都说过。<br>成长后有人喜欢上了摄影，有人爱上旅行，有人钟情写作。我们都曾经以为找到了自己的“Laura”。但是现实的种种设定根本就不容许我们跟着自己的梦走。“爸，我不参加高考了，我要当诗人”这话只能招来现实无情的殴打。<br>于是我们妥协了，生活在“楚门的世界”里继续。</p>
<p>我们敢于追寻自己的梦想么？<br>-我准备辞职，我还是热爱诗歌，我今后要专心文学创作<br>-那怎么行？现在诗歌是冷门，不赚钱啊！你这样就等于废掉了啊，穷困潦倒的，以后怎么面对亲戚朋友啊？<br>-唉，也对啊。。。<br>但是，谁说人活着就是为了赚钱，为了他人口中的赞叹？<br>被设定了，所有才使一切听起来那么的理所当然。。。</p>
<p>当年的梦想呢？早已在地球另外一面的斐济岛上了</p>
<p>楚门走出来了，因为自己的梦想，因为不想在过这种平静而又安逸的生活，勇敢的令人流泪。走出去的不仅仅是楚门，还有龙套们对追求梦想的寄托，他们看到有人做了自己想做又不敢做的事。<br>所以酒吧里的人疯狂，老太流泪，洗澡的人癫狂。</p>
<p>但是这种勇气是普通人根本无法具备的！</p>
<p>于是，保安说，还有别的什么节目？看看其他的吧。<br>完成了对梦想的憧憬，普通人们回归各自的“楚门世界”，继续着平静而又安详的生活</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images-na.ssl-images-amazon.com/images/M/MV5BMDIzODcyY2EtMmY2MC00ZWVlLTgwMzAtMjQwOWUyNmJjNTYyXkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_UX182_CR0,0,182,268_AL_.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;An insurance salesman/adjuster discovers his entire life is actually a television show.&lt;br&gt;Director: Peter Weir&lt;br&gt;Writer: Andrew Niccol&lt;br&gt;Stars: Jim Carrey, Ed Harris, Laura Linney | See full cast &amp;amp; crew »&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>What&#39;s the Next Generation of OS</title>
    <link href="http://aisee.me/2017/05/07/Program/Tools/Computer/next-generation-of-os/"/>
    <id>http://aisee.me/2017/05/07/Program/Tools/Computer/next-generation-of-os/</id>
    <published>2017-05-07T12:12:06.000Z</published>
    <updated>2017-05-13T13:47:17.942Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20170504112514961" alt=""><br>（移动互联网架构和下一代网络生态圈，资料来源《弘则研究：人工智能下的物联网生态圈 从移动互联网到物联网》）</p>
<p><a href="http://geek.csdn.net/news/detail/195814" target="_blank" rel="external">Source</a></p>
<p>摘要： 在这个环境下，需要有一个平台或者说是一个系统能够把软件、硬件以及服务串联在一起，这个平台或者说是系统很可能就是IoT操作系统。</p>
<a id="more"></a>
<p>每一代信息产业都会诞生新一代的操作系统。因为每一代信息产业都会诞生不同的平台，每一代平台都由新一代的操作系统所驱动。PC时代有Windows，移动时代有Android和iOS。</p>
<p>PC已成昨日黄花，而移动互联网已然停滞不前，对于大多数互联网企业以而言都在展望下一个爆发点——下一个平台究竟是何种模样？下一个流量富矿究竟在何方？按照“每一代平台都由新一代的操作系统所驱动”这个角度来看，下一代操作系统可能也会因此诞生。</p>
<p>纵观如今的产业发展来看，下一代操作系统很可能就是IoT操作系统。</p>
<h2 id="手机为基础的IoT布局已经失效"><a href="#手机为基础的IoT布局已经失效" class="headerlink" title="手机为基础的IoT布局已经失效"></a>手机为基础的IoT布局已经失效</h2><p>oT不是趋势，而是现实。移动互联网发展至今气数已尽，很难再有太多商业形态的创新，也很难再创造出太多新的平台。</p>
<p>在移动互联网发展初期，我们看到很多企业曾经试图以自家基于安卓定制的Rom为基础，进行智能家居、智能互联网的布局。几乎所有互联网手机厂商的思路都是如此。</p>
<p>曾经这些手机厂商的设想非常美好——以智能手机为中心，控制家庭中的其他智能设备，以此推动IoT的前进。但事实上我们发展，智能手机为中心的战略没有起到太多作用。几乎所有手机厂商都只能控制自家的硬件，没办法带来太多的想象空间。手机很大程度上只起到了遥控器的作用。</p>
<p>之所以出现这样的局面是有原因的。国内智能手机基本都是以安卓定制Rom为核心，能够连接的设备本身非常有限。加上安卓碎片化严重，国内几乎每个厂商都有一套自己的Rom，Rom只会连接自家的服务和设备，最后导致的结果就是诸侯割据，很难有太多的想象空间。</p>
<p>所以2015年的悉尼思想领袖峰会（The Reimagination Thought Leaders Summit）上，IoT之父凯文·艾希顿就曾谈到：不是我说，那些智能酒瓶、智能比基尼、智能水杯什么的，都是渣渣！</p>
<p>在这位1999年就提出“全球物品信息实时共享的实物互联网”的老教授眼中，IoT的真正奥义在于高效化的大数据，而不是这些过家家的玩意儿。</p>
<p>我们可以这样理解这个问题。人们常说移动互联网之后是人工智能的阶段。但人工智能这个阶段并非孤立存在的，因为我们常说的人工智能往往是和大数据、云计算是孪生的。而且这个环境中，几乎所有硬件、软件、服务都跑在云端，构建起一套万物互联的系统。</p>
<p>在这个环境下，需要有一个平台或者说是一个系统能够把软件、硬件以及服务串联在一起，这个平台或者说是系统很可能就是IoT操作系统。</p>
<p>马云之前在马来西亚演讲时曾经很隐晦地谈到过IoT操作系统——当你在一部电话装一个操作系统，打电话只占了 20%的使用。今天，80%的时间，手机并不是用来打电话的。想像一下，如果我们在汽车上装一个操作系统，或者我们一个操作系统内置于一盏灯，一个电冰箱或洗衣机，世界就发生改变了。</p>
<p>我们深入思考便会发现，给一盏灯，一个电冰箱或洗衣机准备的操作系统恰恰是正是IoT操作系统。</p>
<h2 id="IoT操作系统不是趋势而是现实"><a href="#IoT操作系统不是趋势而是现实" class="headerlink" title="IoT操作系统不是趋势而是现实"></a>IoT操作系统不是趋势而是现实</h2><p>IoT操作系统不是趋势，而是现实。据Gartner预测，到2020年IoT带来的经济附加值将达到1.9万亿美元。因此，各国目前都针对IoT制定了不同的发展战略，如“中国制造2025”、德国的“工业4.0”、和美国的“工业互联网”等。</p>
<p>因为IoT不是一个简单的手机Rom和硬件、服务连接，而是需要能够系统化、结构化地收集数据，提供服务。所以IoT的需要的不仅仅是个Rom，而是个OS。</p>
<p><img src="http://img.blog.csdn.net/20170504112655524" alt=""><br>（物联网也被称作是互联网3.0；资料来源：《阿里研究院：互联网3.0，未来15年会发生的事情》）</p>
<p>我们从OS的解释就能看出这个问题来——OS的英文全称是Operation System，也就是常说的操作系统，用来管理全部硬件和软件资源，比如控制程序运行、改善人机界面等。</p>
<p>对于IoT系统来说，要集中收集、管理、处理数据后向合作伙伴、行业开放，基于该平台行业伙伴可以开发应用。此外IoT系统非常重要的一点还需要网络接入，网络接入包括有线接入和无线接入。</p>
<p>网络接入表面上看貌似现有的网络也能满足，实际上IoT的发展也受限于现有网络。如果按华为预计，到2020年，IoT设备数量连接将会接近1000亿（现阶段仅为70亿），新部署的传感器速度将达到每小时200万，到了那个时候，目前的网络不仅难以承担负载，就连现有的网络速率和延时情况，也远不能够确保远程精确控制类工业级产品的安全和可靠——这就需要专门接入5G网络的芯片、系统以及终端。</p>
<p><img src="http://img.blog.csdn.net/20170504112626933" alt=""><br>（华为所设想的物联网架构体系；资料来源《华为：共建可信可管的物联网世界》）</p>
<p>综合以上诸多因素来看，其任务之重，非简简单单的一个Rom可以完成。非要OS才能完成其中繁重的任务。所以你会发现，三星在今天会逐渐把三星的安卓定制系统放在一边，而是主攻自家的Tizen和SmartThings。</p>
<p>而且阿里今天在IoT层面的布局包括阿里云、阿里智能、YunOS等事业群组，这一个个板块共同打造IoT时代的服务平台，能够为企业和创业者赋能。</p>
<p>可以说，现在几乎所有的互联网巨头、科技巨头都在都在试图开发自家的IoT操作系统。</p>
<p>像华为这种通信巨头就有自己的IoT系统Liteos。Liteos的系统体积只有10KB，是目前世界上最轻量级的IoT操作系统，同时它是开源的，华为希望能够有更多的第三方伙伴采用该系统，在华为的数据基础上开发行业应用。</p>
<p>今年4月还有外媒报道称，谷歌正在开发一个代号为“Brillo”的AndroidIoT系统。昨日，在美国旧金山Monscane中心举行的谷歌I/O开发者大会上，谷歌正式推出了这个以Android为核心的Brillo系统。</p>
<p>Brillo是出自Android，所以在设备配对和设置上将非常方便，任何Android设备都可以轻松与Brillo智能设备对接，并实现控制。除了Brillo，谷歌还发布了Weave跨平台协议。这款协议可以连接云端、手机和Brillo支持的设备，比如Nest旗下产品。</p>
<p>“我们希望打造一种自然无缝的方式让智能家居互联互通。”谷歌Sundar Pichai透露，NEST团队将传统设备进行了更新，并与安卓团队合作，提供端到端解决方案。</p>
<p>不仅如此，其实微软也在为未来的IoT操作系统做准备。俄罗斯的WZor近日在推特上表示，微软正在研发Windows Cloud操作系统，这款操作系统预计将会在2020年登场，这款操作系统的特别之处在于必须连接到互联网才可以使用完整功能，离线模式仅仅提供了非常基础的功能。微软还在微软与GE、西门子等制造业巨头达成云端合作，更好地服务IoT用户。</p>
<p>其实不仅仅是这几家公司，我们可以从这份表格中看出到底有多少科技巨头涉足IoT系统：</p>
<blockquote>
<p>2013年Intel 创立IoT事业部，次年即投放产品Intel IoT Platform。该平台旨在帮助企业用户更便捷地测试、投放和保护设备。<br>2015年亚马逊云计算服务IoT平台让连接设备轻松安全地与云端应用进行交互。<br>2015年微软IoT套件发布，结合了云计算、存储领域多年技术积累，帮助企业收集、整理、处理信息。<br>2016年思科斥资14亿美元收购联网通讯平台Jasper全部股权，扩充和完整已有的物理联网生态系统。<br>2014年， 腾讯推出QQ物联，以硬件产品为主，面向传统硬件、智能家居、可穿戴设备、车载、健康设备等多个领域开放。<br>2015年IBM推出Bluemix IoT 服务，提供了简单且强大的功能将全球不同种类的设备和应用程序互联起来。<br>2015年，百度发表百度IoT，将与ARM、MTK、科通芯城、TI、博通等产业领军战略合作伙伴一起，共同推动中国IoT产业的发展。</p>
</blockquote>
<h2 id="下代操作系统将是人工智能与IoT应用的统一"><a href="#下代操作系统将是人工智能与IoT应用的统一" class="headerlink" title="下代操作系统将是人工智能与IoT应用的统一"></a>下代操作系统将是人工智能与IoT应用的统一</h2><p>综上来看，人工智能和IoT的应用在云平台上实现统一是下一代网络生态圈的雏形。</p>
<p><img src="http://img.blog.csdn.net/20170504112607836" alt=""><br>（物联网产业的应用产业结构图；资料来源《弘则研究：人工智能下的物联网生态圈 从移动互联网到物联网》）</p>
<p>2016年2月29日，阿里巴巴推出IoT战略时，阿里巴巴CEO张勇就曾表示，阿里会坚持用大生态的思路推动IoT生态的繁荣，阿里不会做智能硬件，而是利用电商，云计算和操作系统等强项，提供基础服务赋能商家，阿里会把工业制造和产品设计的创新机遇留给合作伙伴。</p>
<p>其实从“不会做智能硬件”这一点就可以看出巨头IoT真正该有的思路——在万物互联思维框架下，人工智能与IoT统一的系统深度挖掘庞大数据背后的价值，灵活应对随时可变的应用场景，确保传感器、监控、现场设备之间开放、安全的通信，并可实现云端远程管理与服务。</p>
<p>IoTPaaS平台Xively分析曾预估，截至2020年，全球将有400-800亿设备接入IoT，其中政府设备至少占77亿，总金额约21亿美元，预计投资回报为47亿美元，人均拥有的IoT设备将有10台。Gartner的市场调研报告认为，全球每秒接入IoT的设备将达63台，也就是每天550万台，预计2015-2020年间IoT市场规模将达千亿量级。</p>
<p>IoT产业目前处在发展初期，碎片化特点必将导致IoT时代对软件的多样性需求。一种操作系统和开发工具很难支持IoT系统中的所有设备，短时间内，IoT操作系统很难形成像智能手机中Android和iOS两家独占市场的局面。以安全性和集成化为代表的IoT新需要给传统嵌入式软件带来挑战，也给以互联网企业为代表的产业新人带来机遇。</p>
<p>本文作者：吴俊宇，已获授权，版权归原作者所有，未经作者同意，请勿转载。<br>责编：屠敏，关注物联网、移动开发领域，寻求报道或投稿请发邮件tumin@csdn.net，或微信tm_forever_miss。</p>
<h1 id="如何看待-Google-最新的系统-Fuchsia？"><a href="#如何看待-Google-最新的系统-Fuchsia？" class="headerlink" title="如何看待 Google 最新的系统 Fuchsia？"></a><a href="https://juejin.im/post/591517ed2f301e006b8d8e6b?utm_source=gold_browser_extension" target="_blank" rel="external">如何看待 Google 最新的系统 Fuchsia？</a></h1><p>想必大家都知道了，前几天 Google 曝光了新 OS Fuchsia 的部分信息与 UI，已经很多人在后台给我留言，让我说说看法，那么趁我还没去美国，就给大家写篇文章普及下，顺便说下我个人对 Fuchsia 系统的期待与看法。</p>
<p>Google 在开发一个全新的系统其实一直都不是秘密了，只不过 Google 一直没有透露出更多的消息，只透露说 Fuchsia 是完全区别于 Android 和 Chrome OS 的全新系统，我们都知道，开发一款操作系统可不是那么容易的事，虽然这对 Google 来说不是啥难事，但是毕竟费时费力，而且还很可能最后徒劳无功，然而 Google 还是这么做了，我们不妨先大胆猜测下为什么 Google 要做这么一件有魄力的事呢？</p>
<p>Google 一直有个软肋，就是在 PC 市场的表现，虽然移动时代让人们可以随时随地上网，但是手机毕竟取代不了电脑，而 Google 也意识到 PC 市场的重要性，所以也推出了 Chrome OS 上网本，但是结果已经很明确，表现不如预期，很少有人会买账，毫无疑问，PC 市场几乎被微软和苹果牢牢把控，但是我相信 Google 肯定不会这么轻易放弃的。</p>
<p>再看表现抢眼的 Android 领域，毫无疑问，Android 至今在移动操作系统的市场份额占据绝对领先地位，但是 Android 仍然存在不少问题，碎片化问题严重，在平板以及大屏幕设备上表现糟糕，以及被很多用户诟病的卡顿与体验问题，虽然卡顿的本质原因是很多无良应用的后台互相唤醒，无节制的权限、内存使用等，但是这也反应了 Android 的底层架构设计是有瑕疵的，这些众所周知的问题 Google 不可能不知道，但是不是 Google 不想解决，而是解决起来很困难。</p>
<p>而似乎现在看起来 Google 推出的 Fuchsia 系统就承载了以上使命，但是 Google 是不是这样想的，我们不得而知，我们先来看下这次 Google 曝光的 Fuchsia 的一些信息吧：</p>
<p><strong>没有基于 Linux 内核，而是基于一种叫 Magenta 的内核，是一种轻量级的内核，适用于嵌入式系统</strong>；</p>
<p>UI 层使用 <strong>Flutter 框架</strong>，这是 Google 内部的一种用 Dart 语言实现的移动应用框架，并且支持 Android、iOS，可以写 native app；</p>
<p>这两个信息足以让我们有更多的想象力，首先 Fuchsia 抛弃了 Linux 内核再次说明了 Google 的魄力，要知道 Android、Chrome OS 都是基于 Linux 内核的，但是你们知道  <strong>Linux 内核有哪些问题么？</strong></p>
<p>首先不得不承认基于 Linux 内核的一些操作系统如 Ubuntu、Debian、CentOS 等都是比较优秀的 Linux 发行版本，但是这些系统多用于 <strong>服务器</strong> 上，而 Linux 在桌面系统，尤其在 User Interface 上表现不是那么惊艳。</p>
<p>其次，<strong>Linux 内核是基于 GPL 协议的</strong>，GPL 协议意味着对源码的任何修改与引用都必须开源，Android 底层采用的 Linux 内核，所以 Android 是开源的，而硬件厂商给 Android 开发的驱动是不可能开源的，当初 Google 为了解决这个问题，找到了一个解决办法，<strong>底层对 Linux 内核做了修改，但是把驱动程序放在了 Linux 内核上层跑，而且特意搞了一个隔离层叫 HAL，即 Hardware Abstraction Layer，硬件抽象层，所以，Android 系统架构中的 HAL 层本质是为了规避 GPL 协议而生的，这事在当时还蛮有争议的，但是不得不说，Google 的这种思路彻底解决了问题，既保护了「不想开源」的硬件厂商的利益，又解决了「软硬件兼容」，既利用出色而现成的 Linux Kernel 又防止了被 Linux Kernel 传染上 GPL 的后遗症。</strong></p>
<p>那么这次 Fuchsia 系统彻底抛弃了 Linux Kernel 这个决定，不得不联想到之前 Linux Kernel 的劣势以及潜在的一些风险，不过能真正的完全抛弃当前市场上很出色而成熟的 Linux Kernel 是非常有魄力的决定，不过魄力也是建立在实力的基础之上，可能这个决定 Google 也想了很久。</p>
<p>但是你们以为这就够了么？</p>
<p>Fuchsia 系统采用了 Magenta 内核，这种内核多用在嵌入式系统上，而且支持高性能的图形渲染，Hack News 上有人分析该特性非常适应于 VR/AR 领域，我们都知道 Google 在去年的 IO 大会上就推出了 Daydream VR 平台，以及 Project Tango AR 平台，已经确定发力于 VR/AR 领域，就在昨天，Google 还收购了虚拟现实游戏公司 Owlchemy Labs，这些动作与隐藏的特性很可能说明 Fuchsia 会应用在更广的领域，这么一看 <strong>Fuchsia 会是未来移动端、PC、AR/VR、物联网等全平台统一、通用的操作系统，Google 的野心有点大哦，未来有更大的想象力了，很可能这是一款面向未来的操作系统。</strong></p>
<p>很多 Android 开发者们肯定关心 Fuchsia 会放弃 Android 平台，对 Android 开发产生一些打击，其实真的想多了，要知道 Android 现在市场的份额以及对 Google 的地位是非常大的（说个题外话，这次 Googe IO 的一些会场，Android 相关的会场都非常火爆，很多会场的座位都提前预定完了），Google 现在很多东西都要依赖 Android 平台来进行推进，这么大一块蛋糕，Google 怎么可能轻易就放弃呢，何况 Fuchsia 系统的两位贡献者 Travis Geiselbrecht 和 Brian Swetland 是 Android 系统的主力开发者，退一万步，Google 即使真的要完全抛弃 Android，也会有一个切实可行的逐步过渡方案的。</p>
<p>不过，Google 的野心是蛮大的，这让我们对这个系统有更多的期待，但是这是一个长远的计划，不确定性因素也非常大，能不能被开发者与用户接受还不知道呢，而且按照 Google 的惯例，说不定哪个时候就放弃了，可能一飞冲天，也很可能默默无闻直至消亡。</p>
<p>最后，就我个人来说是蛮希望这个系统，就如它的中文名字「紫红」一样，可以大红大紫，毕竟看起来，也许这真的就是未来的操作系统。</p>
<p>本文原创发布于微信公众号 AndroidDeveloper，欢迎关注获取更多原创分享。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170504112514961&quot; alt=&quot;&quot;&gt;&lt;br&gt;（移动互联网架构和下一代网络生态圈，资料来源《弘则研究：人工智能下的物联网生态圈 从移动互联网到物联网》）&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://geek.csdn.net/news/detail/195814&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要： 在这个环境下，需要有一个平台或者说是一个系统能够把软件、硬件以及服务串联在一起，这个平台或者说是系统很可能就是IoT操作系统。&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="OS" scheme="http://aisee.me/tags/OS/"/>
    
      <category term="IoT" scheme="http://aisee.me/tags/IoT/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow, Next Android?</title>
    <link href="http://aisee.me/2017/05/03/AI/TensorFlow/tensorflow-android/"/>
    <id>http://aisee.me/2017/05/03/AI/TensorFlow/tensorflow-android/</id>
    <published>2017-05-03T11:46:06.000Z</published>
    <updated>2017-05-03T13:20:18.748Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7mnpep.com2.z0.glb.qiniucdn.com/uploads/image/file/25/0e/250e707a638b56899b3d42faad02181f.png?imageView2/2/w/930/interlace/1/q/88/ignore-error/1/" alt=""></p>
<p><a href="http://www.geekpark.net/topics/213892" target="_blank" rel="external">Source</a></p>
<p>就像上图所描述的那样，机器学习实际上只包括了三个主要构成部分：</p>
<ol>
<li><p>首先，你需要通过建模来确定一个公式，这个公式就是「机器」。</p>
</li>
<li><p>其次，确定「w」和「b」这两个变量「参数」。</p>
</li>
<li><p>通过系统或软件的设定不断重复测试并调整「参数」直到达到一个稳定的值。</p>
</li>
</ol>
<p>在公式的确定中，整个学习的过程是渐进的，一旦这种重复的运算达到了一个稳定的取值，机器学习的错误概率就会大大减少。</p>
<p>简单来说，就是用一个公式来描述输入、输出和参数，从而提高机器对特定事物的认知。</p>
   <a id="more"></a>
<h2 id="Google开源TensorFlow背后：会成为人工智能领域的Android-吗？"><a href="#Google开源TensorFlow背后：会成为人工智能领域的Android-吗？" class="headerlink" title="Google开源TensorFlow背后：会成为人工智能领域的Android 吗？"></a><a href="http://www.geekpark.net/topics/213892" target="_blank" rel="external">Google开源TensorFlow背后：会成为人工智能领域的Android 吗？</a></h2><p> <img src="http://7mnpep.com2.z0.glb.qiniucdn.com/uploads/image/file/ec/90/ec90c0f8957b86bda5d8ef9528804fdf.png?imageView2/2/w/930/interlace/1/q/88/ignore-error/1/" alt=""></p>
<p> 在具体的实践中，Gmail 已经能够辨别 99.9% 的垃圾邮件，并能将语音识别为文字；Google Photo 的图片识别错误率也从 23% 降到了 13%，用户不需要再照片上标注「大海」的名字即可自动归类；而在 Google 的现金流业务广告系统中，机器学习的应用也将大大提高广告投放的投资回报率。</p>
<p>这一切看似复杂的过程都源自于一个简单公式的重复测试，正如 Greg Corrado 所言，「我们不会给机器一个规则，而是让它不断地去自己去学习和纠正。」</p>
<p>人类通过几个简单的例子就能进行学习，但机器却需要大量的测试。即便依靠一个简单的公式就能实现准确的预测，但整个参数和过程的确立却要经历无数的重复试验。</p>
<blockquote>
<p>「机器学习并不是魔术，它只是个工具而已。」</p>
</blockquote>
<p>未来，机器学习还面临着在移动设备上实现的瓶颈。由于大量的计算需要在云端完成，因此所有的结果的实现需要一个庞大网络的支撑，而目前的移动设备和网络还不足以达到这一要求。</p>
<p>「你的手机现在只是接受了数千台计算机为你计算处理的数据，未来我们会把网络做小，让机器学习的结果更具适用性。」Schimidt 毫不回避这一困境所在。</p>
<p>因此，TensorFlow 的开源变得理所当然，能否超越 Android 称为又一个全新的生态也变得没那么重要。比起建立一套固定的规则，「机器学习」和「人工智能」更需要的是一套技术标准。</p>
<h2 id="利用-TensorFlow-Serving-系统在生产环境中运行模型"><a href="#利用-TensorFlow-Serving-系统在生产环境中运行模型" class="headerlink" title="利用 TensorFlow Serving 系统在生产环境中运行模型"></a><a href="http://wiki.jikexueyuan.com/project/geekdigest/TensorFlow-Serving.html" target="_blank" rel="external">利用 TensorFlow Serving 系统在生产环境中运行模型</a></h2><p>机器学习技术支撑着许多 Google 产品的功能，比如：Google 应用中的语音识别，收件箱的智能回复，以及 Google 照片搜索，等等。尽管软件行业几十年中积累起的无数经验促成了很多用于构建并支持产品的最佳实践，但基于机器学习的服务却还是带来了一些新颖而有趣的挑战。如今，专为解决这些挑战的系统终于出现了，这就是 TensorFlow Serving。TensorFlow Serving 是一种用于机器学习模型的高性能开源服务系统，专为生产环境而设计，并针对 TensorFlow 进行了优化处理。</p>
<p>TensorFlow Serving 系统非常适用于大规模运行能够基于真实情况的数据并会发生动态改变的多重模型。它能够实现：</p>
<p>模型生命周期管理。<br>使用多重算法进行试验。<br>GPU 资源的有效使用。<br>TensorFlow Serving 能够简化并加速从模型到生产的过程。它能实现在服务器架构和 API 保持不变的情况下，安全地部署新模型并运行试验。除了原生集成 TensorFlow，还可以扩展服务其他类型的模型。下图显示了简化的监督学习过程，向 learner 输入训练数据，然后输出模型：</p>
<p><img src="http://wiki.jikexueyuan.com/project/geekdigest/images/Tensor_Flow_Diagram1_TrainingPipeline_FINAL.png" alt=""></p>
<p>一旦经过验证后，新模型版本定型，就可以部署到服务系统，如下图所示：</p>
<p><img src="http://wiki.jikexueyuan.com/project/geekdigest/images/Tensor_Flow_Diagram1_Serving_FINAL.png" alt=""></p>
<p>TensorFlow Serving 使用（之前训练的）模型来实施推理——基于客户端呈现数据的预测。因为客户端通常会使用远程过程调用（RPC）接口来与服务系统通信，TensorFlow Serving 提供了一种基于 gRPC 的参考型前端实现，这是一种 Google 开发的高性能开源 RPC 架构。当新数据可用或改进模型时，加载并迭代模型是很常见的。事实上，在谷歌，许多管线经常运行，一旦当新数据可用时，就会产生新版本的模型。</p>
<p><img src="http://wiki.jikexueyuan.com/project/geekdigest/images/Tensor_Flow_Diagram2_Final.png" alt=""></p>
<p><img src="http://wiki.jikexueyuan.com/project/geekdigest/images/Tensor_Flow_Diagram2_Final.png" alt=""></p>
<p>TensorFlow Serving 由 C++ 编写而成，支持 Linux。TensorFlow Serving 引入的开销是非常小的。我们在一个有着 16个 vCPU 的英特尔至强 E5 2.6 GHz 的机器上进行了测试，执行每核每秒约 100,000 次查询，不包括 gRPC 和 TensorFlow 推理处理时间。我们非常激动地向大家分享这个遵守 Apache 2.0 开源协议的 TensorFlow 重要组件。非常希望大家能在 Stack Overflow 和 GitHub 上提问或请求开发一些功能。上手很简单，只需复制 github.com/tensorflow/serving 中的代码，然后签出教程即可。随着我们对 TensorFlow 的继续开发，你一定会了解到更多有关内容，因为这大概是世界上最好用的机器学习工具包了。如果希望及时了解最新进展，请关注 @googleresearch 或 +ResearchatGoogle，以及 2016 年 3 月，Jeff Dean 将在 GCP Next 2016 上的主题演讲。</p>
<h2 id="人工智能：TensorFlow-带你进入深度学习的世界"><a href="#人工智能：TensorFlow-带你进入深度学习的世界" class="headerlink" title="人工智能：TensorFlow 带你进入深度学习的世界"></a><a href="http://www.weiot.net/plugin.php?id=wq_wechatcollecting&amp;mod=view&amp;articleid=68655" target="_blank" rel="external">人工智能：TensorFlow 带你进入深度学习的世界</a></h2><p>自 TensorFlow 于 2015 年底正式开源，距今已有一年多，不久前，TensorFlow 正式版也发布了。这期间 TensorFlow 不断给人以惊喜，推出了分布式版本，服务框架 TensorFlow Serving，可视化工具 TensorFlow，上层封装 TF.Learn，其他语言（Go、Java、Rust、Haskell）的绑定、Windows 的支持、JIT 编译器 XLA、动态计算图框架 Fold，以及数不胜数的经典模型在 TensorFlow 上的实现（Inception Net、SyntaxNet 等）。在这一年多时间，TensorFlow 已从初入深度学习框架大战的新星，成为了几近垄断的行业事实标准。</p>
<p>目前看来，对于人工智能这个领域依然有不少怀疑的声音，但不可否认的是，人工智能仍然是未来的发展趋势。因此，在高手问答第 142 期里，我们策划了 “TensorFlow 实战” 的主题，并邀请了 @黄文坚 @唐源Terry 作为高手嘉宾。</p>
<p>本文整理了本期高手问答中一些与 TensorFlow 相关的精彩问答。</p>
<h3 id="一、TensorFlow-之入门篇"><a href="#一、TensorFlow-之入门篇" class="headerlink" title="一、TensorFlow 之入门篇"></a>一、TensorFlow 之入门篇</h3><p>1.没接触过，刚了解了一下，这个东西就是把某种东西用数据描述出来，然后用一些样本告诉机器它是什么，或者要对他进行什么操作，训练后，机器就能告诉我们输入的数据是什么，或者自动的进行操作吗？比如输入一堆图片告诉他哪个是猫，以后它就能自动识别猫了；给汽车装上各种传感器采集数据，人开着车操作，一段时间后，它就知道什么情况要怎么操作了，就会自动驾驶了？不知理解得对不对，希望指正。</p>
<p>对的，你说的是其中一类运用，属于机器学习的概念，但可以做到的还远远不止这些，可以多多关注这个领域。深度学习是机器学习的一个分支。TensorFlow 是主要用来进行深度学习应用的框架。</p>
<ol>
<li>我是 TensorFlow 爱好者，现在正在学习， 国内的这方面的资料不多， 感谢你们提供的资料。我想问一下，学习 TensorFlow 有什么学习曲线，有没有什么实战的案例？另外在集群模式支持的是不是友好，和 Spark 集成是不是友好？或者有没有这方面的规划。</li>
</ol>
<p>书中有特别多的实战例子，欢迎购买！至于对 Spark 集群的友好，你可以了解一下雅虎最近新开源的 TensorFlowOnSpark。</p>
<ol>
<li>看了这个题目的一些提问，发现这个 TensorFlow 技术，学习曲线还是很陡峭，研究的人还是少数，有什么方法可以把学习曲线降低，更容易入门吗？还有学习这个技术，有什么必要的学科基础要求吗？</li>
</ol>
<p>可以先通过 keras 上手，这是一个支持 TensorFlow 的上层封装。在学习 TensorFlow 之前，需要有基础的 Python 编程能力，以及对深度学习有一定了解。不过我现在在和 RStudio 合作把这个也能放在 R 里面跑，可以关注一下我的 GitHub：<a href="https://github.com/terrytangyuan。" target="_blank" rel="external">https://github.com/terrytangyuan。</a></p>
<ol>
<li>好期待 TensorFlow 这本书，对于新手看着书入门会有难度吗？要先掌握什么基础知识呢？</li>
</ol>
<p>可以先看看 TensorFlow 中文官方站点的文档。本书对新手难度不高。需要一些基础的 Python 运用能力，还有一些机器学习基础。书中对深度学习有较多的讲解，所以对深度学习的知识要求不高。</p>
<ol>
<li>作为一名成长在 Spring 技术栈下的码农，转投 TensorFlow 的话，这本书适合我们入门么？也想请您在机器学习方向上提供一些指导意见，谢谢。</li>
</ol>
<p>完全可以的，可以学习一下基础的 Python 语法，学习机器学习，深度学习，尝试做一做相关的小应用，也可以看看雅虎最近出的 TensorFlowOnSpark，或从 sklearn+numpy+pandas 开始。</p>
<ol>
<li>请问如果要学习 TensorFlow，数学应该掌握到什么程度，高数，线代，积分都学过还需要再学哪些内容？</li>
</ol>
<p>如果只是要掌握这门工具，不需要学习太多理论的东西，比如说你如果想利用这门工具来做一些机器学习的运用，我现在做的 tf.contrib.learn 模块，类似 scikit-learn，降低了很多学习的门槛，希望能够帮助到大家。如果想深入做研究的话，你说的这些都是必须要掌握的基础，可以在这基础上多关注一下相关的研究，建立好自己的感兴趣方向。</p>
<ol>
<li>学习 TensorFlow 需要哪些技术栈，了解 TensorFlow 需要阅读源码吗？</li>
</ol>
<p>如果只是想调用高阶的一些模块做一些应用，基本的 Python 就够了，如果想在某一块做提升的话，能自己学习读代码是再好不过的了，我一开始参与开源软件的时候也是只懂一些基础，可以积极参与开发和讨论，从这个过程中可以学到很多。如果想掌握底层的一些细节，就需要学好 C 语言之类的了。</p>
<p>最底层还有 cuda 的代码。这个要看自己的需求，是想了解到什么程度，如果只是用来做应用，想要很快出结果，直接看 api 就好。如果想对性能进行优化，可能需要阅读源码。</p>
<ol>
<li>与 TensorFlow 类似的项目有哪些？TensorFlow 的优点和缺点是？</li>
</ol>
<p>还有 Caffe、CNTK、MXNet 等，在《TensorFlow实战》书中第二章详尽地讲解了 TensorFlow 与其他学习框架的对比。</p>
<ol>
<li>TensorFlow 只能部署在 Linux 机器上？</li>
</ol>
<p>Mac, Windows, Mobile, Rasberry Pi 都是可以的</p>
<h3 id="二、TensorFlow-之性能篇"><a href="#二、TensorFlow-之性能篇" class="headerlink" title="二、TensorFlow 之性能篇"></a>二、TensorFlow 之性能篇</h3><p>1.TensoFlow 的优点我知道，架构好、跨平台、接口丰富、易部署，而且是大公司的产品。问题就是 TensoFlow 的性能到底如何，我看过网上几个评测，是不是像以前别人测试中的那样慢的离谱，不管 CPU 还是 GPU 跟 Torch 比都慢不少，评比原文，更有测试评论说 TensoFlow 比 convnetjs 慢 100 倍，原文地址。</p>
<p>我简单了解深度学习的算法有很多，效率也不同，我希望知道的是，在同算法的情况下，TensoFlow 到底比其它框架慢多少？毕竟性能也是一个很关键的因素。</p>
<p>这些评测是很旧的了，新版的 TensorFlow 没有这个问题。TensorFlow 目前可能在全连接的 MLP 上稍微慢一点，但是后续 XLA 会解决这个问题。但是其他比如 CNN、RNN 等，因为大家主要都使用 cuDNN，差异不大，性能基本上非常接近的。性能你可以放心，Google 内部全部使用这个框架，如果真有性能慢的话，这么多人使用着早就解决了。</p>
<ol>
<li>机器学习中一般分有监督学习和无监督学习，无监督学习下，用 TensorFlow 来对某个数据集进行学习，那么它识别出来的特征是什么？还有 TensorFlow1.0 中加入了 XLA，我理解为能把代码翻译成特定的 GPU 或 x86-64 的运行代码，是不是只有在做代数运算时才会用上 XLA？TensorFlow 不是已经在底层用cuda 的 cuDNN 库加速了吗，为什么还要用 XLA？</li>
</ol>
<p>关于无监督学习，书中有讲解。无监督学习在深度学习中一般是自编码器等，提取到的是抽象的高阶特征，去除了噪声。XLA 会对几个层叠的操作进行 JIT 编译。cuda 是一门语言，cuDNN 是深度学习的库，使用 cuda 加速也要看是怎么使用它加速，是一层计算执行一次，还是把几层的计算合并在一起执行，XLA 做的就是这个，将一些简单的操作编译合并成一个操作。此前 TensorFlow 训 练 MLP 等网络较慢，使用 XLA 后有。</p>
<ol>
<li>请问使用 TensorFlowOnSpark 之后，除了免去数据在 HDFS 和 TensorFlow 移动之外，是否能对性能有较好的提升呢？如果不用 TensorFlowOnSpark，TensorFlow 目前自己的分布式性能是否已经成熟了呢？</li>
</ol>
<p>目前 TensorFlow 的分布式算是比较成熟的，但可能还不是最快的。TensorFlowonSpark 应该不能提升分布式的性能，毕竟还经过了一层 Spark 的通信机制处理。</p>
<ol>
<li>应该选择 TensorFlow 还是 Theano？有使用两个库的用户比较一下这两者。比如从编译速度，运行速度，易用性等角度进行比较。</li>
</ol>
<h3 id="三、TensorFlow-之适用场景"><a href="#三、TensorFlow-之适用场景" class="headerlink" title="三、TensorFlow 之适用场景"></a>三、TensorFlow 之适用场景</h3><ol>
<li>请问 TensorFlow 在自然语言处理上有没有优势？</li>
</ol>
<p>自然语言主要使用 RNN、LSTM、GRU 等，目前新推出的 TensorFLow Fold 支持 Dynamics Batching，计算效率大幅度提升，非常适合做自然语言处理。</p>
<ol>
<li>TensorFlow 在实际生产环境中，有什么特别适合的场景呢？</li>
</ol>
<p>TensorFlow 部署非常方便，可用在 Android、iOS 等客户端，进行图像识别、人脸识别等任务。常见的 CTR 预估，推荐等任务，也可以轻松地部署到服务器 CPU 上。</p>
<ol>
<li>TensorFlow 有在生产企业中应用的案例吗？</li>
</ol>
<p>在 Google 用的特别多，所有会用到深度学习的场景，都可以使用 TensorFlow，比如搜索、邮件、语音助手、机器翻译、图片标注等等。</p>
<ol>
<li>TensorFlow 在大数据行业的应用和运用怎么样？TensorFlow 的源码使用了哪些设计模式？</li>
</ol>
<p>应用非常广的，谷歌已经在很多项目上用了 TensorFlow，比如说 Youtube watch next，还有很多研究型的项目，谷歌 DeepMind 以后所有的研究都会使用这个框架。如果对某段代码好奇，可以去参考参考源代码学习学习，很多的设计都是经过内部各种项目和用户的千锤百炼。</p>
<p>Google 内部非常多 team 在使用 TensorFlow，比如搜索、邮件、语音、机器翻译等等。数据越大，深度学习效果越好，而支持分布式的 TensorFlow 就能发挥越大的作用。</p>
<ol>
<li>最近在学习 TensorFlow，发现其分布式有 in-graph 和 between-gragh 两种架构模式，请问这两种架构的区别是什么？或者是不是应用场景不同？</li>
</ol>
<p>其实一个 in-graph 就是模型并行，将模型中不同节点分布式地运行；between-graph 就是数据并行，同时训练多个 batch 的数据。要针对神经网络结构来设计，模型并行实现难度较大，而且需要网络中天然存在很多可以并行的节点。因此一般用数据并行的比较多。</p>
<ol>
<li>TensorFlow实现估值网络 ，作用和意义在哪里？ 有没有其他的方法实现估值网络？</li>
</ol>
<p>估值网络是深度强化学习中的一个模型，可以用来解决常见的强化学习问题，比如下棋，自动玩游戏，机器控制等等。</p>
<ol>
<li>想请问下 TF 有类似 Spark Streaming 的模块吗？TF 在后端存储上和 cassandra 或者 hdfs 的集成上有没有啥需要注意的地方？Spark 在集群上依赖 Master，然后分发到 Worker 上，这样的架构感觉不太稳定，不知道 TF 在分布式是什么架构有没有什么特点？</li>
</ol>
<p>目前没有类似 Streaming 的东西，Spark 主要用来做数据处理。TensorFlow 则更多是对处理后的数据进行训练和学习。</p>
<ol>
<li>TensorFlow 对初学者是否太难了？TensorFlow 貌似都是研发要用的，对服务器运维会有哪些改变？</li>
</ol>
<p>TensorFlow 针对实际生产也是非常好的。应该是所有框架中最适合实际生产环境的，因为有 Google 强大的工程团队的支持，所以 TensorFlow 拥有产品级的代码，稳健的质量，还有适合部署的 TensorFlow Serving。</p>
<ol>
<li>TensorFlow 从个体学习研究到实际生产环境应用，有哪些注意事项？</li>
</ol>
<p>个人研究的时候没有太多限制，实际上线生成可以使用 TensorFlow Serving，部署效率比较高。</p>
<ol>
<li>TF 的耗能是否可以使其独立工作在离线环境的嵌入式小板上，真正达到可独立的智能机器人。</li>
</ol>
<p>可以的，使用 TensorFlow 的嵌入式设备很多。但做机器人涉及到很多步骤，核心部分都设计了机器学习，图像处理之类的，TensorFlow 可以用来搭建那些。</p>
<ol>
<li>互联网应用如何结合 TensorFlow，能简单介绍一下吗？</li>
</ol>
<p>互联网应用很多都是推荐系统，比如说 Youtube watch next 的推荐系统就是用到了 TensorFlow，现在在 tf.contrib.learn 里面有专门的 Estimator 来做 Wide and Deep Learning（可以查看官网上的例子，我们的书中也有更深一些的讲解），大家也都可以用的。</p>
<ol>
<li>不知道有没有针对传统零售行业的实际案例，比如销售预测的案例。</li>
</ol>
<p>用深度学习可以做销售预测模型，只要它可以转为一个分类预测的问题。</p>
<ol>
<li>使用 TensorFlow 的产品有哪些？有比较有代表性的吗？</li>
</ol>
<p>可以看看我之前的评论，Youtube watch next 就是其中一个例子，还有很火的 AlphaGo。</p>
<h3 id="四、TensorFlow-之实战篇"><a href="#四、TensorFlow-之实战篇" class="headerlink" title="四、TensorFlow 之实战篇"></a>四、TensorFlow 之实战篇</h3><p>1.现在在用 TensorFlow 实现图像分类的例子，参考的是 CIFAR-10，输入图片会被随机裁剪为 24x24 的大小，而且训练效率较慢（用了近 20 小时，已使用了 GPU），是否有其他方法来提高效率？TensorFlow 有分布式的处理方法吗，若采用分布式，是否要手动将每一台机器上的训练结果进行合并？若提高裁剪的大小，是否能提高准确率？另外，网上有评论说 TensorFlow 的 C/C++ 接口没有 Caffe 友好，这个您怎么看？</p>
<p>提高裁剪的大小，会降低样本量，准确率不一定提高。训练 20 多小时是用了多少 epoch？可以通过 tensorboard 观看准确率变化，不一定要训练特别多 epoch。TensorFlow 有分布式的训练，不需要手动，有比较好用的接口，在《TensorFlow实战》中有详细的例子如何使用分布式版本。TF 的 C/C++ 接口很完善，有没有 caffe 友好这个见仁见智。</p>
<ol>
<li>想问一下 TensorFlow 和 Spark 结合的框架，例如 TensorFlow on Spark，目前是否已经成熟可用？另外，TensorFlow 新版本增加了对 Java API 的支持，如果不使用 Python 语言，所有功能都直接使用 Java 语言进行相关开发是否已经可行？</li>
</ol>
<p>Java API 目前还不太成熟，很多还有待实现，TensorFlowOnSpark 也挺有意思的，可以在现有的 Spark/Hadoop 分布式集群的基础上部署 TensorFlow 的程序，这样可以避免数据在已有 Spark/Hadoop 集群和深度学习集群间移动，HDFS 里面的数据能够更好的输入进 TensorFlow 的程序当中。至于成熟不成熟我就不清楚了，毕竟自己还没有试过，不过稍微看了看雅虎自己有使用。</p>
<ol>
<li>对其他的一些机器学习的库接触过一些，要出一个好的效果，对算法选取和参数设置及调节这些方面，希望能给些建议。算法比较多，该如何从分析维度去选取合适的算法？</li>
</ol>
<p>我觉得最好的方法就是参加数据科学竞赛，比如说 Kaggle，通过融入在大家的讨论当中，实际操作和锻炼，你可以很快的理解各种参数的意义和一些比较好的参数范围。</p>
<p>对于一般的数值、种类等特征的数据集，XGboost 和 Lightgbm 都有很好的效果。如果你的数据量很大，或者是图片、视频、语音、语言、时间序列，那么使用深度学习将能获得很好的效果。</p>
<ol>
<li>打算做个文章分析类的东东，比如，分析一篇新闻的要素(时间、地点、人物)，用 TensorFlow 应该怎么着手？</li>
</ol>
<p>这个问题应该先看看 NLP（自然语言处理）相关的内容，TensorFlow 是实现你算法的工具。但是前提是你得知道应该使用什么算法。</p>
<ol>
<li><p>TensorFlow 对于分布式 GPU 支持吗？如何选择 TensorFlow 和 XGboost？<br>TensorFlow 支持分布式 GPU，用于深度学习。XGBoost 主要是做 gradient boosting 这一块，最近也有人贡献了代码使它能够的 GPU 上跑，可以做一做实验比较一下。毕竟 XGboost 是经过 kaggle 用户的千锤百炼，很多都已经能够满足他们的需求了。</p>
</li>
<li><p>现在学习 TensorFlow 有没有合适的数据可以使用的？</p>
</li>
</ol>
<p>TensorFlow 中自带了 MNIST 和 CIFAR 数据的下载程序，其他常用的，比如 ImageNet, Gigaword 等数据集需要自己下载。</p>
<ol>
<li>BNN分类器训练出的曲线是高次多项式吗？</li>
</ol>
<p>你说的 BNN 是指？如果神经网络中没有激活函数，那输出的结果只是输入的线性变换。但是加入了激活函数后，就不是高次多项式了。</p>
<h3 id="五、其他相关的问题"><a href="#五、其他相关的问题" class="headerlink" title="五、其他相关的问题"></a>五、其他相关的问题</h3><p>1.TensorFlow 的发展趋势是怎么样的？</p>
<p>会集成越来越多的 contrib 模块，添加很多方便的上层接口，支持更多的语言绑定。同时新推出的 XLA（JIT编译器），Fold（Dynamics Batching）都是未来的大方向。</p>
<ol>
<li>个人开发者做 TensorFlow 应用和开发有前途吗？还是说数据和资料都在大公司，没有合适的、相当数量的数据喂养是无法训练好模型的？</li>
</ol>
<p>不仅仅限制在深度学习领域，现在 TensorFlow 也提供很多机器学习的 Estimators，我贡献的大部分都在这一块，可以了解一下 tf.contrib.learn 这个模块，书中有很多机器学习的例子。</p>
<p>另外就是具体要看你做什么任务，当然数据是需要的，但是 <strong>现在也有很多公开的数据。大公司的数据虽多，但是质量也并不是非常高。</strong></p>
<p>有关 TensorFlow 的相关问答内容至此结束。欢迎大家在开源中国的技术问答区上面踊跃提问和回答。</p>
<p>最后，安利一下两位老师的著作 €€€€ 《TensorFlow实战》。 本书结合了大量代码实例，深入浅出地介绍了如何使用 TensorFlow、深度剖析如何用 TensorFlow 实现主流神经网络、详述 TensorBoard、多 GPU 并行、分布式并行等组件的使用方法。</p>
<h2 id="谷歌人工智能背后的大脑"><a href="#谷歌人工智能背后的大脑" class="headerlink" title="谷歌人工智能背后的大脑"></a><a href="http://blog.jobbole.com/110925/" target="_blank" rel="external">谷歌人工智能背后的大脑</a></h2><p>【伯乐在线导读】：1996 年 Jeff Dean 在华盛顿大学获得计算机科学博士学位，三年后便加入了谷歌。谷歌在 1998 年成立，他是公司早期员工之一。Jeff Dean 在谷歌公司的成长过程中扮演了重要角色，设计并实现了支撑谷歌大部分产品的分布式计算基础架构。2016 年 8 月 Forbes 的 Peter High 对 Jeff Dean 做了一次采访，伯乐在线编译如下。</p>
<p>谷歌 CEO Sundar Pichai 曾说谷歌将主要成为一家人工智能公司，作为系统和基础架构小组的资深前辈，Dean 和他的团队对于实现这个计划来说至关重要。这次的采访所涵盖的内容比较广泛，Dean 描述了他在谷歌扮演的多样角色，公司的 AI 愿景以及他对于谷歌即使已成为科技巨头但仍保持着创业精神的看法，同时还包括其他各种各样的话题。</p>
<p><img src="http://wx2.sinaimg.cn/mw690/63918611gy1feqvu2gi3dj21jk111top.jpg" alt=""></p>
<p>Peter High：你好，Jeff Dean，你参与了谷歌大部分的历史，在 1999 年就加入了公司。请简单描述下这十几年来你在公司的角色是如何演变的。</p>
<p>Jeff Dean：我刚加入时公司真的很小，我们一起挤在帕罗奥图市大学路的一间小办公室里。我做的第一件最主要的事情就是创建我们第一个广告系统。之后，我花费了4到5年的时间在用于每一次查询的抓取、索引和搜索系统。之后，我主要与同事 Sanjay Ghemawat 等人创建用于存储和处理大规模数据设置的软件基础架构，还做一些像搜索指数或者处理卫星图像这样的事情。最近，我致力于机器学习系统。</p>
<p>High：你在公司的权限有多大，你要做的工作范围有多广？我猜想你没有“普通的一天”。你如何与公司内部或者外部的人员互动？在当前的工作上，你如何把时间分配在这些不同的事情呢？</p>
<p>Dean： 真不是典型的工作日 。在最初的 14 到15 年，我没有接受任何管理性的职位，这给了我更多自由时间去集中精力写代码。在最近几年，我接受了一些机器学习方面的管理职位，这对我来说很有趣，也是新的学习经历。因为在公司历史上我从事过多种工作，我会保持跟进这些不同的项目，我收到很多邮件。我花费相当一部分时间去处理邮件，通过浏览邮件来跟进项目的最新进展。在任何特定的时间，我手上都有几个技术性项目，我努力分配出时间在这些项目上面，同时还穿插着各种会议和设计审查各种事情。</p>
<p>High：尽管谷歌已经取得了巨大的发展，它仍然是保持创新的典范。它保持着壮志雄心和开拓创新，仿佛它只是一个很小的组织一般。但是它已有了资源——不管是人才上还是资金上——俨然已是科技界的庞然大物。这个组织是如何对抗停滞和官僚主义，从而保持不拘于自身规模的更强的灵活性呢？</p>
<p>Dean： 自从我加入公司以来，我们基本就经历了公司的不断成长。在早期，我们新招聘的员工每年都会增长一倍。按新员工占总员工的百分比算，我们后来降低了这个比例，但是在绝对数量上，我们基本仍保持一个大的增长，现在大约每年招聘 10% 到 20% 的新员工。公司规模每扩大一倍，我们就被迫使去重新思考公司已经完成的这些事情。哪些过去适用于 X 倍规模，但却不再适用于 2X 倍规模，我们必须去努力使我们的模式、工程、组织结构、团队动力等适应新的规模。</p>
<p>我认为有助于我们成长的一个举动是，把与谷歌其他业务在一定程度相分离的部分独立出来，成立不同的部门。创建为偏远地区覆盖网络的高海拔气球，与服务搜索查询有相对适度的互动。大体上把各种不同的活跃的项目独立开来，我们能获取更好的规模和效率，这些项目是我们的核心业务，但是彼此不需要太多的沟通交流。</p>
<p>High：我理解 Google/Alphabet 各部门的分离，是出于想要维持一定的灵活性，和划分开不同的活动的逻辑。这个评价是否公允？</p>
<p>Dean： 是的。我认为这使得 Alphabet 下面一些其他实体可以更独立地操作。关于规模的成倍增长，有一个有趣的转变是：以前我们每个人都是在同一个大楼，现在每个人都不在同一个大楼。</p>
<p>另一个转变，以前员工只在山景城，后来在瑞士苏黎世、纽约、日本东京和西雅图都设有办事处。我们一度有 5 个办事处，都相当大而完善。然后在短短几年内，我们的办事处从 5 个扩张到 35 个，因为我们觉得在世界各地设有许多办事处很好，在哪里可以找到有才华的人才，就在他们身边设立一个办事处。这促使我们不得不重新思考，如何去组织我们工程师的诸多成果。如果你有一个小的办公室，他们可能不应该做一百件事；他们应该做少数几件事，并专心把他们做好。一些小办公室采取的模式是看山景城的人在做什么，他们看到他们在做一百件事，所以他们认为他们也应该做一百件事。我们慢慢摸索到有一种更好的方式来充分发挥这些散布在各地的工程办事处的人的能力。</p>
<p>High：谷歌 CEO Sundar Pichai 曾说，从长远来看，设备装置将会消失，计算将从移动设备优先向人工智能优先进化。你如何看待谷歌对于人工智能优先的愿景？</p>
<p>Dean：我认为我们已经从桌面计算进入到了移动计算，这时候每个人都有一个计算设备随身随时携带。随着设备不断地缩小，语音识别和其他可用的 UI 变得实际可用，这将改变我们与计算设备交流的方式。他们将会退居到幕后或者只是周边，允许我们与他们对话就像我们与其他可信赖的伙伴对话一样。他们将会帮助我们获取我们需要的信息和完成各种任务。我认为这是推动机器学习的一个主要目标：在提供咨询方面让计算机提供其他人类伙伴能够提供的智慧，期待必要的时候有更多的信息和更多这类的事情。我认为在下个 5 到 10 年，将会是一个激动人心的时期。</p>
<p>High：随着各种进步和各种关于 AI 的目标的实现，看起来很多人不再谈论那些已经实现的真正的 AI。那就是，AI 在被谈论时似乎总是带有未来色彩。你怎么定义 AI 的边界？</p>
<p>Dean：我认为真正的通用人工智能将是一个系统，能够执行人类水平的推理，理解和完成复杂的任务。我们显然还没有达到这个水平，但你说得很对，确实有了很多进展。5 年前，给计算机一张图片，它还不能生成一个人类水平的句子来描述这个图片。现在，计算机生成的句子会说，“这张图片描述的是一个男人拿着网球拍在网球场上。”同时，一个人可能会说，“这是一张网球运动员发球的图片。”人的描述更为微妙，但事实上，现在计算机能够生成看起来几乎是人类写的标题，这是一个相当大的进步。这只是过去的 5~6 年间已实现的众多更具智慧的机器学习模型中的其中一个成就。随着他们应用更大的数据和计算，结果会更好。</p>
<p>High：你认为我们距离通用人工智能还有多远？</p>
<p>Dean：不同的问法有不同的回答，这个问题有点广泛。我只敢给出一个宽泛的猜测。大约就是 15 到 50 年，也有可能比 15 年更早。</p>
<p>High：正如你所提到的，语言是关键，许多谷歌的人工智能都围绕着语言、阅读和理解网页上的一切或从事智能对话和理解背景。你能谈谈能使得机器更好的解释事物的路径吗？你预见的事情，以及你从事的事情正朝什么方向进展，如果还没完全达到全面的通用人工智能的话？</p>
<p>Dean：我认为有趣的事之一是信息检索领域，这基本上就是谷歌早期做的工作。传统上，它并不试图真正理解用户在查询时需要什么。它更多的是关于查找包含或者接近这个单词的文档。有趣的是，在过去的四五年，我们已经开始发展出这样一种技术，可以更好地理解“car”这个单词的本质。知道 “car” 和 “cars”、 “automobile”、“passenger car”、“pickup truck” 在某种意义上都是相关联的，能够以更顺畅的方式匹配出文章，在许多语言理解任务上可以得出更好的结果。</p>
<p>我们能理解的不仅仅是单词，我们的理解还能达到这个水平，即理解在阐释上不同但意思相同的两个句子。这开始促使我们的语言理解达到这样一个层次：以更机器学习的方式理解更长得多的序列文本。</p>
<p>接下来几年我们有个目标，希望能够采集数以百计数以千计的文件，然后对这些文件内容展开一个对话。也许系统会自动总结这些文件，提问或者回答关于文件内容的问题。我认为这种水平的理解，是我们将真正去实现的高水平的语言理解。</p>
<p>High：似乎你和你们团队的成果已经开始应用在谷歌的各种产品当中：谷歌助手，谷歌新的对话虚拟助手；与 Amazon Echo 相竞争的 Google Home；以及为谷歌服务提供对话界面的信息 APP——Allo。你怎么看待谷歌最近的产品和服务？</p>
<p>Dean： 我目前领导的研究小组被称为谷歌大脑（Google Brain）。我们专注于建立大规模计算系统来实现机器学习，和做前沿的机器学习研究。只有机器学习技能或只有大规模计算技能的人才，往往不能完全发挥他们的才能，而同时拥有这两种不同技能的人才在一起工作，合作解决问题，通常会产生出意义重大的进步。我想这就是我们团队在这两个领域，在关于我们在这些难题上投入达到世界先进水平的计算力，以及我们怎样训练大有力的模型在我们关心的问题上都取得很大成功的原因之一。</p>
<p>通过理解我们的一些研究成果什么时候可以用于提升谷歌现有产品上，我们以往在长期研究上是相当机会主义的。我们与产品团队一起合作说，“嘿，我们认为这个机器学习研究将会非常有用。”有时这是需要放手去做的事情。其他时候我们小组和产品团队深度合作，让研究结果变成真实产品。</p>
<p>我们小组的研究人员曾发明了一种叫“从序列到序列学习（sequence-to-sequence learning）”的模型。这其中的理念是，你使用一个输入序列来预测某些输出结果序列。听起来有点抽象，但可以映射到许多你想要解决的真正问题。他们发表的研究论文最初是在语言翻译的背景下。输入序列可以是一个句子中的英文单词，一次一个。该模型被训练去输出对应的法国单词来创建一个法语句子，意思与输入的英语句子相同。这不同于其他机器翻译系统，别的机器翻译系统往往是问题的代码和子件——也许使用了机器学习或统计模型，然后将它拼接在一起。相比与那个方法，这个系统是一个完全的机器学习，端到端系统，在这个系统中你用语言不同但表达的意思相同的成对的句子作为数据来训练，然后系统就能学会将一种语言翻译另一种语言。</p>
<p>在其他语境中，这种通用模型非常有用。Gmail 团队采用了它，把它作为我们称之为“智能回复”特征的基础，其中输入序列是一封刚收到的邮件，而通过序列是根据刚收到邮件的语境而做出的对回复内容的预测。例如，你也许会收到一封这样的邮件，“嘿，我们想邀请你参加感恩节晚宴。如果能来请回复。”回复通常来说可能是这样。“是的，我们很想去。我们要带些什么？”或者“不好意思，我们去不了，”或者与此语境下相关的类似的回复。它是同一个基本模型，只是用了不同的数据集来训练。</p>
<p>High：潜在的研究应用以及 Google Brain 做出的突破，如何部署在谷歌传统的产品服务中？</p>
<p>Dean： 我们已经开始将这个流程变得规范一点。五年前，当我们最初创建机器学习研究团队去研究海量计算和深度神经网络如何解决问题时，公司里还没有太多人使用这些方法。我们找到了一些感觉领域，在这些领域我们感觉他们是有效地，包括语音识别系统，所以我们与语音识别团队密切协作，将深度神经网络配置为语音识别系统的一部分，并且在识别准确率上取得了实质性进展。然后我们和各种计算机视觉相关团队合作，比如图片搜索和街景服务团队，从而训练模型在给定的各种图片的原始像素下做有趣的事情，比如从图片中提取文本或者理解图片内容是什么（美洲豹、垃圾车等等）。</p>
<p>有趣的是，随着时间的推移，更多的团队开始采用这些方法，因为他们总会听说另一个团队正在尝试新的东西并取得了好成果。我们会帮助这样这些团队建立联系，或者提供一些关于在特定问题情境中如何使用这些方法的基本建议。我们后来把这个流程做得更规范了一些，所以现在我们有一个专门的团队做外展服务。这是为正在产品中尝试使用这些机器学习模型的团队建立联系的第一点。他们会描述他们的问题，然后外展服务团队会告诉他们：噢，听起来很像另外 XX 团队的问题，这个解决方案很有效果，试试并记得给我们反馈。使用这些方法的团队在数量上有非常大的增长，在 2011 年、2012 年只有几个团队，现在已经发展到 200 多个，并且可能已有几千人在使用我们团队创建的软件训练这种模型。</p>
<p>High：你同时也是 Google 开源机器学习库 TensorFlow 的主要创始人。 和其他几个大公司一样，谷歌专注于开发开源 AI 技术。您对使用开源人工智能技术的理论基础及优势有什么看法？</p>
<p>Dean： 现在有许多表达不同机器学习算法的不同框架，并且都还是开源项目 。有更多选择，我认为挺好的，但如果我们可以开发出能获得机器学习社区支持，大家一起来改进的东西，这样也很好。这些框架都在尝试着相似的工作，所以如果我们能将它们放在一起形成一个库供大家采用和使用，这样是很好的。这样做，可以更为简单地表达机器学习想法。传统方式是把探索出来的想法写成论文，做一些实验，而且他们通常不会公开代码，不允许其他人再做这些实验。作为一个研究者，你正在看某人的论文，并尝试将你自己的技术与其对比。通常，因为论文中没有代码，你只能猜测那些代码会是什么。作者并不是有意省去了大量细节。论文作者也许会使用「我们使用了低的学习率」一样的描述，然而你关心的是他们使用了 .0001 的学习率，在一万步后降低到 .0005。建立一个人们可以用代码表达机器学习理念，并把这些研究模型和想法以可执行的方式发布出来的软件架构，使得机器学习理念可以在社区中快速传播。</p>
<p>对于我们自己而言，它也方便了我们与谷歌外部人员的合作。通常我们暑期会招聘实习生，过去他们大部分已经完成了实习期的项目，但是他们仍在写这方面的论文。然后他们离开了谷歌，再也接触不到谷歌的电脑，所以他们很难继续完成论文最后的工作，运行更多的实验。现在他们使用开源或者 TensorFlow 就可以很快做到，甚至可以找到平台上的人来帮忙。我们正在教谷歌的工程师学习通用机器学习，并把 TensorFlow 作为基本的教学工具。</p>
<p>High：谷歌的优势之一是它拥有大量 AI 和机器学习领域的人才。谷歌研究主管Peter Norvig 估测，全球超过 5% 的机器学习顶尖专家都在谷歌工作。谷歌如何做到对这些天才有这么大的吸引力？鉴于这涉及到多个不同的学科的交叉——计算机科学、工程、神经科学、生物学、数学，你怎么把这些人才安排到最适合他们的位置？</p>
<p>Dean： 因为我们涉足的领域很多，所以我们需要拥有多种专业知识的人。我发现，当你把具有不同专业知识的人聚在一起去解决问题时，你会发现最终得到结果比那些只具备一种专业知识的一大群人一起做出来的要好。总的来说，你最终做的事情，没有人可以单独做出来。我们的机器学习团队是一个很好的例子。我们有像我一样在建设大规模计算系统方面有很多经验的人，然后我们也有世界级的机器学习研究人员。把这些类型的人结合起来是一个非常强大的团队。机器学习正在接触很多不同的领域。我们正在做的工作涉及医疗、机器人和计算机科学里的一大堆领域，这非常的好。我们团队有数位神经科学专家。</p>
<p>很快我们将开始一个有趣的实验，它被称为“谷歌大脑培训项目”。这些人在我们的团队工作一年基本上是学习怎么去做机器学习研究。我们有大量的申请者，但是最后这个项目只会留下 28 个人。他们来自不同的背景，处于职业生涯的不同阶段。有的刚刚完成本科学业，有些已经读完博士，有的刚读完博士后，有些已经在不同的领域有过工作经历。他们有不同的学科背景，包括计算机科学、统计学、数学、生物学、物理学，从解决问题的角度来说，我认为这是一个极好的结合。</p>
<p>High：我很好奇，有很多不以技术为中心的传统公司也会使用人工智能和机器学习，你会在多大程度这些传统公司交流与合作？你如何看待采用创新曲线（市场采用新型或创新产品的速度）？显然这涉及了不同公司甚至是不同行业，但也有一些领先的传统行业开始利用人工智能，包括医疗、金融服务公司、有大量非结构化数据需要处理的公司。你是否曾经有机会与传统行业的公司互动或者谈论他们在更加传统的环境中走向人工智能的过程？</p>
<p>Dean：其他行业的大部分公司在把机器学习应用到业务方面，可能不如谷歌或者其他高科技公司那样深远。我认为随着时间推移，最终大部分公司都会越来越多地应用机器学习，因为机器学习会给他们的业务带来很大的能量和转型。在与一些大的医疗组织建立合作关系上，我们有过多次讨论，看看机器学习可以为这个领域解决什么样的问题。我们最近开发了一个机器学习云产品，可以让人们在谷歌云基础设施上运行机器学习算法。有很多公司对于他们怎么在起业务背景下使用这个产品感兴趣。</p>
<p>我认为要实现这个转变的途径之一，要经历几个层次。在这些层次中你能使用 AI 技术和机器学习方法来解决问题。在一些领域，了解图像中有什么东西，对很多行业来说是普遍有用的。谷歌和其他公司正在提供使用简便的接口，你不需要知道什么机器学习的知识就可以使用这个接口。你可以只给出一个图像，然后说“跟我说说这个图像”，软件工程即使没有机器学习方面的技能就可以使用，他们得到的信息会像是“照片上是一个体育场，人们在那里打棒球，而且图像中还有一堆文字，文字内容是……”即使没有应用机器学习，这也是非常有用的。</p>
<p>然后将已开发好的模型用公司的数据再次训练得到一个定制的方案，而不需要做核心机器学习研究去开发一个全新模型。有一个好例子，我们已经应用序列到序列的成果，解决了谷歌六七个不同的难题。另一个好例子，有一个模型可以采集图像然后找出图像中有趣的部分。这个通用模型的一个使用案例是，检测街景图片中的文本信息。你想要能去读取所有的文本，但是首先，你必须能够在店面、路标等上面找到它。这个通用模型同样适用于在医疗设置中，当你诊断糖尿病患者视网膜病变时，你给出一张视网膜的扫描图片，你想要找到这个图片中的病变的指标。这是相同的模型结构，只是换了不同的数据。在这里不是找出街景图片的文本，而是指出视网膜扫描图像中的病变部位。我相信这个通用方法可以很好地解决各类型的难题。</p>
<p>High：2016 年 3 月，你在韩国现场目睹了 AlphaGo 的首场胜利。亲眼见证这个成果的感受如何？鉴于人工智能已经更广泛地影响到了我们的日常生活，你如何看待这种世界博览会般的展示，以及人工智能对激发人类想象力和好奇心的广泛影响?</p>
<p>Dean：我在现场观看了首场比赛，赛程的一半时间我都留在韩国。那种激动的心情真的难以言说。有 3 亿中国人现场观看了首场比赛直播，他们用了 8 个电视频道，每场都有不同的评论员报道这个比赛。韩国也处于同样的兴奋状态。真是很精彩。</p>
<p>我认为这种高调的事件，展示了与人工智能相关的各种难题取得了重大意义的进步。我需要指出的是，AlphaGo的大部分工作都是我们伦敦的 DeepMind 团队完成。在项目开始的阶段我们与他们有过一些合作，他们还使用了我们的机器学习软件来训练一些 AlphaGo 模型。他们还使用了张量处理单元（Tensor Processing Unit）——这是一种谷歌设计的定制机器学习硬件芯片，在某种意义上来说这是 AlphaGo 的比赛中的额外的“秘密武器”。人们注意到计算机现在拥有了四五前不曾有的能力，这使我们感到兴奋。在全球范围内，计算机科学系机器学习课程的招生量已经猛增。我认为这个意义重大。受益的不仅仅是计算机科学，还包括公司和业界。有越多聪明的人思考这类问题，我们的社会就会更进步。</p>
<p>High：许多科技界的知名人士比如埃隆·马斯克、比尔·盖茨 和 斯蒂芬·霍金都对人工智能的安全问题发出过警告。你怎么看到这方面的风险？当你对人工智能的思考不断进步成熟时，你如何把这方面的风险也考虑进去？</p>
<p>Dean：我觉得我并不太赞同你提到的那些人所担忧的末日场景。我觉得那不够贴近现实。我确实认为 AI 会带来社会变革，首先最大的问题就是自动化比较难进行，我们有大量的劳动力会参与到其中。有些事情会被自动化代替，尽管不是完全代替。电脑会以多种方式给予我们帮助，比如阅读医学图像数据，这是一个狭窄但是高技能的领域。我认为电脑不久之后就会相当擅长这方面的工作，更别提自动驾驶了。我不确定政府都在认真思考这些技术的一些影响，以及这对社会总的来说意味着什么。我认为这才是急切需要担忧的。确保决策者仔细考虑这些类型的问题，将是一个非常重要的一步。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://gmlove.github.io/2017/03/01/recognize-house-number/" target="_blank" rel="external">识别门牌号的移动应用</a><br><a href="http://gmlove.github.io/2017/01/16/dl-workshop-massive-network-tips/" target="_blank" rel="external">大规模Tensorflow网络的一些技巧</a><br><a href="http://blog.csdn.net/dongchangzhang/article/details/53524985" target="_blank" rel="external"> 在Android上使用Tensorflow</a><br><a href="http://blog.csdn.net/dongchangzhang/article/details/60886015" target="_blank" rel="external"> 在移动平台上使用tensorflow图片分类 （android and ios）</a><br><a href="http://blog.csdn.net/dongchangzhang/article/details/53524985" target="_blank" rel="external">在Android上使用Tensorflow</a><br><a href="http://hp.stuhome.net/index.php/2017/02/17/tensorflow-on-android/" target="_blank" rel="external">在Android端使用TensorFlow</a><br><a href="http://hp.stuhome.net/" target="_blank" rel="external">新手向的TensorFlow学习之路2（Learning paths 2）</a><br><a href="http://hp.stuhome.net/index.php/2017/02/16/retrain-google-inception-model/" target="_blank" rel="external">利用TF重训练Google Inception模型</a><br><a href="http://tflearn.org/" target="_blank" rel="external">TFLearn: Deep learning library featuring a higher-level API for TensorFlow.</a><br><a href="http://colah.github.io/" target="_blank" rel="external">Neural Networks (General)</a><br><a href="https://deeplearning4j.org/" target="_blank" rel="external">Deep Learning for Java</a><br><a href="http://lib.csdn.net/article/aiframework/60538?knId=1756" target="_blank" rel="external">将 TensorFlow 移植到 Android手机，实现物体识别、行人检测和图像风格迁移详细教程</a><br><a href="http://lib.csdn.net/article/aiframework/61087" target="_blank" rel="external">02：一文全解：利用谷歌深度学习框架Tensorflow识别手写数字图片（初学者篇）</a><br><a href="http://blog.jobbole.com/105602/" target="_blank" rel="external">TensorFlow深度学习，一篇文章就够了</a><br><a href="http://blog.jobbole.com/110558/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts" target="_blank" rel="external">TensorFlow 资源大全中文版</a><br><a href="http://blog.jobbole.com/108469/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts" target="_blank" rel="external">GitHub 上 57 款最流行的开源深度学习项目</a><br><a href="http://blog.jobbole.com/110557/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts" target="_blank" rel="external">人人都可以做深度学习应用：入门篇</a><br><a href="http://blog.jobbole.com/110144/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts" target="_blank" rel="external">9 个超酷的深度学习案例</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7mnpep.com2.z0.glb.qiniucdn.com/uploads/image/file/25/0e/250e707a638b56899b3d42faad02181f.png?imageView2/2/w/930/interlace/1/q/88/ignore-error/1/&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.geekpark.net/topics/213892&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;就像上图所描述的那样，机器学习实际上只包括了三个主要构成部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先，你需要通过建模来确定一个公式，这个公式就是「机器」。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其次，确定「w」和「b」这两个变量「参数」。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过系统或软件的设定不断重复测试并调整「参数」直到达到一个稳定的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在公式的确定中，整个学习的过程是渐进的，一旦这种重复的运算达到了一个稳定的取值，机器学习的错误概率就会大大减少。&lt;/p&gt;
&lt;p&gt;简单来说，就是用一个公式来描述输入、输出和参数，从而提高机器对特定事物的认知。&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="Machine Learning" scheme="http://aisee.me/tags/Machine-Learning/"/>
    
      <category term="Android" scheme="http://aisee.me/tags/Android/"/>
    
      <category term="TensorFlow" scheme="http://aisee.me/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>人工智能如何变革法律？</title>
    <link href="http://aisee.me/2017/05/03/AI/Business/ai-on-law/"/>
    <id>http://aisee.me/2017/05/03/AI/Business/ai-on-law/</id>
    <published>2017-05-03T06:40:06.000Z</published>
    <updated>2017-05-03T06:44:16.606Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>与之前讨论颇多的人工智能面临的法律挑战有所不同，本文试图描述法律可能面临的人工智能挑战。</p>
</blockquote>
  <a id="more"></a>
<p>  【编者按】人工智能（AI）的发展影响着每个人的日常生活，经历了过去一年中对AI的忧虑和伦理讨论之后，新的一年大家越来越关注AI领域的创业机会，人工智能随之成为今年创投圈的新风口。那么，国外的机器人产业的发展对中国有什么样的启示？以及中国人工智能创业中需要注意什么问题等，FT中文网近期组织人工智能专题，编辑事宜，请联系闫曼 man.yan@ftchinese.com。</p>
<p>自AlphaGo大杀国手、无人驾驶夺人性命以来，人对人工智能（AI）的情感就开始变得爱恨交织。倘若不把人工智能单纯想象为具有自我意识的机器人，而是以大数据、神经网络、机器学习、超级计算为依凭的智能系统，那么我们就可以暂时抛开电影《黑客帝国》中Matrix引发的战栗，以及《她》中OS1带来的绮梦，回到理性平和的人工智能本身。不过，与之前讨论颇多的人工智能面临的法律挑战有所不同，本文试图描述法律可能面临的人工智能挑战。</p>
<h2 id="人工智能会改变法律的产生方式吗？"><a href="#人工智能会改变法律的产生方式吗？" class="headerlink" title="人工智能会改变法律的产生方式吗？"></a>人工智能会改变法律的产生方式吗？</h2><p>自1804年的《法国民法典》以来，在包括中国在内的所有成文法国家中，立法机关都是最重要的法律供给者。正因如此，它们念兹在兹的，就是如何通过体系完备、逻辑严密的法律规则，将纷繁芜杂的世间万物囊括其中，所谓天网恢恢，疏而不漏。然而，这毕竟只是人类的妄想。天才的数学家哥德尔业已经证明：一个复杂到一定程度的系统，其无矛盾性与完备性不可兼得。因此，任何既定的法律体系如果是完备的，就一定有矛盾；反之，如果它是无矛盾的，则必然不完备。为了化解这种悖论，立法机关不得不在明确的法律规则之外，引入抽象的法律原则与不确定的法律概念。以刚刚通过的《中华人民共和国民法总则》为例，其既有公平诚信、公序良俗等价值理念，又有“重大”、“合理”等模糊术语。正由于成文法的这一特色，司法机关才接过立法机关的接力棒，通过司法解释和个案判决，参与到法律的创造之中。但是，这种妥协在某种程度上为司法者打开了主观擅断的阀门，动摇了以立法为中心的法律产生模式。</p>
<p>上述看似无解的困局如今却有望缓解。人工智能的到来，使收集、存储、处理和分析信息的成本大幅降低，基于深度学习的预测又远胜于目前的回归分析，这些令立法机关可以更好地预测人类行为及其后果，并能在算法的协助下，根据特定情形、特定地域和特定对象，自动化地制定细致、精准的规则，甚至能够一事一议。传统上以典型类型、普遍状态和静态经验为基础的立法，以及由此导致的不确定性和滞后性将不复重在，司法机关的事后介入和司法解释也将不再重要。在极端的情况下，鉴于法律已将几乎所有争议的处理结果予以事前规定，事后提交法院的诉讼必将大幅减少。</p>
<p>人工智能对于法律产生的影响不限于此。在信息成本高昂的年代，法典是立法机关的优先选择，因为它所具有的体系功能，有助于最大程度地拓展调整范围，降低法律适用者搜寻成本，并防范恣意裁判。但在人工智能面前，不管数量多么庞大的法条，均瞬间可达、触手可及，法律规则的定制化更在法典之外滋生种种特别法。这么看来，法典的优势所剩无几，在未来很可能沦为中看不中用的古董旧物。倘若如此，当前如火如荼的中国民法典编撰，究竟意义何在、命运如何？开放式和松散化的法律体系是否可行？恐怕还要费一番思量。</p>
<h2 id="人工智能会改变人们对法律的认知吗？"><a href="#人工智能会改变人们对法律的认知吗？" class="headerlink" title="人工智能会改变人们对法律的认知吗？"></a>人工智能会改变人们对法律的认知吗？</h2><p>让民众知法守法是所有国家的愿望，中国从1985年开始的30年普法活动就是其最好注脚。然而，法律是由宪法、法律、法规、规章、规范性文件、司法解释、指导性案例、公报案例形成的复杂化合物，学习它并不容易。1788年，主要起草人Carl Gottlieb Svarez在题为《法律能简短吗？》的演讲中说，最好的状况是同时制定两部法律，一部简短的，告诉人民如何行为，另一部则巨细靡遗，让法官受到完全的节制。而就像我们看到的，人工智能已经解决了后一部法律的问题，那它可以解决前一个吗？</p>
<p>回答是肯定的。我们可以想一下驾驶汽车的演进。20年前，当你准备从家去300公里开外的景区度假，你必须是一个老司机。你要研究地图，规划路线，并且有能力应对路上各种交通指示和发生的不测。今天的出行已大不相同。通过车载GPS导航系统，你不但可以找到最近的路线，而且可以根据路况实时优化。同时，凭借车道偏移抑制、自动刹车、巡航定速、事故避让、自动泊车等技术，新手也可以轻松抵达目的地。而在自动驾驶普及的未来，你将完全听从算法的安排，你不会违反任何交通法规，也无需知晓它们。</p>
<p>同样的变化可以发生在任何法律部门。以商业合规领域为例，监管机构的指令将被内化到企业的工作流程之中，并通过人工智能在具体场景下形成微指令（micro-directive）。服从这些指令不再是额外负担，而是自动自发的结果。假设公司拟进行一项或许违反董事忠实义务的交易，现在的做法是从外部律师或内部法务那里获取专业意见，综合考量后决策。而在未来，法律评估将嵌入到决策层面，人工智能将首先筛选并禁止违规活动的开展。总之，未来的人们在作出法律决定时，他们既不需要检索法律，也无须理解法律，更无须权衡行为的合法性，他们所遵循的不过是经由人工智能优化了的微指令而已。</p>
<h2 id="人工智能会改变法律服务职业吗"><a href="#人工智能会改变法律服务职业吗" class="headerlink" title="人工智能会改变法律服务职业吗"></a>人工智能会改变法律服务职业吗</h2><p>在2013年广为关注的一篇研究中，Carl Benedikt Frey 和 Michael Osborne 核查了702种职业的计算能力，并发现美国47%的雇员都面临着工作自动化的风险。在人工智能的浪潮中，法律职业当然无法置身事外。伦敦法律顾问公司在《文明2030：律师事务所的近景》报告（Civilisation 2030: The Near Future for Law Firms）中提出，在15年内，人工智能将会主导法律实践，或许会给律所带来“结构性坍塌”（structural collapse）。IBM首个人工智能律师 ROSS、英国的机器人律师DoNotPay以及中国的“小梨”、“法狗狗”计算机系统的问世，大大强化了这种担忧。</p>
<p>但是，这一对律师职业的悲观态度并不正确，因为它只看到问题的一面。实际上，人工智能同时改变了法律服务的供应与需求。通过降低法律检索、尽职调查、文件审阅、合同起草的劳动成本，律师事务所提高了工作效率，在按时收费制下，这意味着律师费用的降低。由于法律成本是内生性的，这反过来增加了客户对法律服务的需求。并且，在人工智能冲击下，大型律师事务所的规模优势不再像以前那么明显。传统上依赖大量律师助理，因而不得不在大型律所开展的项目，有可能被转移到小型律所。这或许算作人工智能把大量程式化服务从小型律所夺走后给予的补偿。更重要的是，这种市场民主化的趋势，给年轻律师提供了更多的机会，使他们不再汲汲于大型律所，而可能凭借创新服务，发现法律服务的利基市场。如此，人工智能不仅增强了法律服务职业的灵活性，而且能吸引更多的法律人投身其中。</p>
<p>正如人工智能本身的发展一样，它对法律的变革还有很长的路要走，但变革已经开始。想一想电梯的历史吧。尽管1900年就出现了自动电梯，但在发达国家，直到上世界50年代，它才成为标准配置，中国甚至到现在，还有很多电梯由专人值守。人们是如何信任一台自动化的金属盒子将我们提升到上百米高空的？答案是——时间。长远来看，人们终将克服对人工智能的怀疑和恐惧，但在此之前，我们必须做好变革的准备。</p>
<p>（作者系中国人民大学金融科技与互联网安全研究中心副主任，法学博士，责任编辑邮箱：man.yan@ftchinese.com)</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>  <a href="https://36kr.com/p/5062356.html" target="_blank" rel="external">为法律行业提供AI工具，法狗狗从案情智能预测入手</a><br>  <a href="https://36kr.com/p/5071024.html?from=related" target="_blank" rel="external">人工智能在法律界如何落地 ？标准化机器人产品之外，法狗狗还要涉足定制服务</a><br>  <a href="https://36kr.com/p/5061703.html?from=related" target="_blank" rel="external">中国司考通过率仅为10%， “法里”想用AI提升法律服务效率</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;与之前讨论颇多的人工智能面临的法律挑战有所不同，本文试图描述法律可能面临的人工智能挑战。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="Law" scheme="http://aisee.me/tags/Law/"/>
    
  </entry>
  
  <entry>
    <title>怎么快速学习一门新技术</title>
    <link href="http://aisee.me/2017/05/03/Program/Tools/Reactive/reactive-native-learning/"/>
    <id>http://aisee.me/2017/05/03/Program/Tools/Reactive/reactive-native-learning/</id>
    <published>2017-05-03T06:14:06.000Z</published>
    <updated>2017-05-03T06:23:04.981Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opb37u589.bkt.clouddn.com/react-native.png" alt=""><br><a href="http://blog.csdn.net/jspandasp/article/details/71024299" target="_blank" rel="external">包建强</a></p>
<p>本文表面上讲React Native（以下简称RN），实际上对于学习任何语言和系统都适用。</p>
<p>对于新技术的学习，分为两种，一种是语言，类似Swift、Objective-C、Java、ES6，另一种是系统，比如Android、iOS、前端。</p>
<a id="more"></a>
<h2 id="1-语言层面"><a href="#1-语言层面" class="headerlink" title="1. 语言层面"></a>1. 语言层面</h2><p>如果你精通某一门语言，那么是可以很快切换到另一门语言的。这就是语言的相通性。翻开市面上那些21天精通某某语言之类的书籍，你会发现，它们具有很多共通的地方：</p>
<ul>
<li>变量</li>
<li>类型</li>
<li>运算符</li>
<li>流程控制语句（if、for、while、swicth）</li>
<li>字符串操作</li>
<li>集合（数组、字典等）</li>
<li>函数（参数、返回值等等）</li>
<li>面向对象编程（类、接口、抽象类、属性、继承、多态、、重载、重写等等）</li>
<li>反射</li>
<li>结构体、枚举</li>
<li>异常捕获</li>
<li>多线程编程</li>
<li>函数式编程</li>
</ul>
<p>无论是Java、Objective-C，还是Swift和ES6，基本都被上面这些点覆盖，所以经常有老司机说说自己是Android领域做了很多年，然后一两个月就进入到iOS领域，但这仅仅是语言层面的。</p>
<p>对于从一门语言切换到另一门语言，我这些年来的经验是，把23个设计模式用这门新语言全都实现一遍，基本你就掌握了这门语言的大部分特性了。</p>
<p>我是9年经验的C#技术出身，我起初对Java的Interface回调方法也很不理解，是通过亲手写了一个策略模式，牢记于心。我对Objective-C中的delegate语法也曾经一度感到很别扭，也是通过编写适配器模式后，才想明白的。</p>
<h2 id="2-系统层面"><a href="#2-系统层面" class="headerlink" title="2. 系统层面"></a>2. 系统层面</h2><p>这个部分就没那么简单了。你可以花一个月学会一门语言，但是想把Android或iOS搞明白就需要几年时间的积累了，每个领域都有自己独特的文化：</p>
<p>比如<strong>iOS的Runtime技术</strong>，iOS所有的技术体系都围绕着Runtime而展开。<br>比如Android的四大组件，以及背后的AMS、PMS，进而延伸到AIDL和Binder机制。<br>比如前端的几十种框架，从JS打包、CSS打包，到SPA、Hybrid等若干思想的演进历史。</p>
<p>所以每个领域都是需要沉淀几年，没发过几次版，或者熬到半夜修改其中的bug，是难以理解这个领域中的酸甜苦辣到。</p>
<p>但是，当你在Android、iOS、前端这几个领域都做过一遍之后，你会发现，它们也是有相同的东西的，我们一个个分析。</p>
<p>首先是一些基本的点：</p>
<ul>
<li>基本控件、事件绑定</li>
<li>列表</li>
<li>网络请求封装</li>
<li>页面跳转</li>
<li>本地存储（数据库、文件）</li>
<li>页面的生命周期</li>
<li>自定义组件</li>
</ul>
<p>其实做App，只要会做两种页面就够了，列表页和详情页，你会发现，任何App，都是这两种页面的循环往复，首页、产品列表页、产品详情页、订单填写页、支付页、订单列表页、订单详情页。这是一条主线。</p>
<p>这其中，在列表页，需要知道怎么把数据绑定到ListView上，怎么上拉分页。在详情页，需要知道几个基本的控件，Button、Label、输入框、单选框，基本就够了。然后你还要知道怎么点击控件触发一个方法，怎么发起一个网络请求并处理返回的数据。掌握了这些，一个页面内的事情就都搞定了。</p>
<p>只有一个页面不够啊，所以要学会页面跳转，从A页面跳转到B页面，至此，App就“活”了。</p>
<h2 id="模块化拆分"><a href="#模块化拆分" class="headerlink" title="模块化拆分"></a>模块化拆分</h2><p>功能开发多了，比如网络请求，你会封装出几个类，专门处理网络请求，与业务逻辑无关，这时候就需要把这几个类放到一个单独的项目中，Android称之为Library，iOS称之为静态库，你的App保持对这个Library的引用。</p>
<p>再接着，业务多了，比如吃喝玩乐四大模块，为了能让项目编译更快，为了团队之间相互不干扰，就需要把这些模块都拆分成Library，各自模块在日常开发过程中，既能作为独立的App调试，又能在发版本时融合在一起。Android用到了Maven，iOS用到了CocoaPods来解决这类问题，我们称之为模块化拆分，也称为组件化拆分。</p>
<p>以上种种，在前端根本不是什么难事，各个模块的脚本可以各自打包下载分发。</p>
<h2 id="插件化和热修复"><a href="#插件化和热修复" class="headerlink" title="插件化和热修复"></a>插件化和热修复</h2><p>都是为了解决线上bug的修复，或者快速发版而不通过市场的审核。</p>
<h2 id="MVP和MVVM"><a href="#MVP和MVVM" class="headerlink" title="MVP和MVVM"></a>MVP和MVVM</h2><p>起初Android和iOS都是基于MVC的，随着App越做越复杂，发现MVC不好用了。我是13年的时候在做电影院选座逻辑的时候就发现MVC搞不定这事了，因为我要写四五十种单元测试case，来保障每次修改繁杂的选座逻辑，不会影响之前运行良好的功能，但是MVC的Controller层把UI逻辑和数据逻辑混在一起，而导致我没办法写单元测试。因为当时我刚从微软的WPF/Silverlight技术转到App技术，所以自然就把WPF的MVVM思想引入了App中。时至今日，五年时间，MVP和MVVM思想已经深入人心，无论是Android还是iOS，抑或是前端的Angular、Vue和React，都是如此。</p>
<h2 id="推送、埋点、性能监控、崩溃统计"><a href="#推送、埋点、性能监控、崩溃统计" class="headerlink" title="推送、埋点、性能监控、崩溃统计"></a>推送、埋点、性能监控、崩溃统计</h2><p>这些技术点，都是企业App开发所不可或缺的技术，顾名思义，这里不多介绍。</p>
<p>看到这里，你也许会问，怎么还没讲React Native啊？如果我说这篇文章已经接近尾声了。你会不会打我？</p>
<p>关于如何学习React Native，都在上面的内容中。为了不让广大的读者说我故弄玄虚，我还是结合前面列举的清单，梳理一下React Native的学习方法。</p>
<p>1.语言层面，需要把ES6看一遍。但也没必要全看，很多高级语法短期你是用不到的。掌握我上面列举的语言类清单的内容就够了。</p>
<p>所以当你为…或bind(this)这样到语法搞得三尸神暴躁的时候，那是你缘木求鱼了。就比如说bind(this)这样的语法，也许看RN中按钮的绑定方法，会理解的更透彻一些。</p>
<p>此外，网上讲解ES5的文章很多，会和ES6混在一起，对于初学者是个很大的障碍，我就曾经花了很多冤枉时间在上面。</p>
<p>2.系统层面</p>
<p>这里主要是对React的快速学习，可以参照我上面列举的那几个关键点，再发一遍：</p>
<p>基本控件、事件绑定<br>这里比较有趣的就是按钮，它在React中其实并不存在。<br>列表<br>网络请求封装<br>有必要像封装Android和iOS网络框架那样，封装出一个React的网络框架来给开发人员使用。<br>页面跳转<br>React提供的页面跳转机制太复杂，有必要把它进行封装。<br>本地存储（数据库、文件）<br>访问SQLite和Realm<br>页面的生命周期<br>Component的生命周期，尤其是props和state这两个值的读写<br>自定义组件<br>主要是父子组件之间怎么进行通信。</p>
<p>至此，你就可以开发出一个简单的RN应用了。但是还没完，想做一个完整的RN应用，还需要下面的技术：</p>
<ol>
<li><p>打包<br>把RN的js脚本打出bundle包，手动放入App中，然后线上实现增量更新。</p>
</li>
<li><p>集成到App<br>使用RN的很多场景，是在原有的Android或iOS应用中的某个模块，使用RN来编写。这时，如何在现有项目中集成RN，是我们所需要解决的。<br>集成进来后，App和RN中间的相互跳转页面、相互调用方法，是我们需要解决的。</p>
</li>
<li><p>Redux<br>对于复杂的ReactNative应用，需要使用Redux进行解耦。</p>
</li>
</ol>
<p>写到这里，ReactNative的全貌就都展现着读者面前了。有人会觉得React Native太庞大太复杂，但如果按照我的这个学习方法论，把上面这些点都扫一遍，一个月时间左右，基本就能搞定一款App了。</p>
<p>接下来我会有一系列文章和例子来介绍React Native，这是我这一年来做线下培训的教案。我面对的都是些什么学员呢？有没接触过React Native的前端人员，有转型为React Native的Android和iOS开发人员，所以我比较清楚怎么把我文章中的这些知识点，灌输给他们。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opb37u589.bkt.clouddn.com/react-native.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/jspandasp/article/details/71024299&quot;&gt;包建强&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文表面上讲React Native（以下简称RN），实际上对于学习任何语言和系统都适用。&lt;/p&gt;
&lt;p&gt;对于新技术的学习，分为两种，一种是语言，类似Swift、Objective-C、Java、ES6，另一种是系统，比如Android、iOS、前端。&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="Reactive" scheme="http://aisee.me/tags/Reactive/"/>
    
  </entry>
  
  <entry>
    <title>《程序员》5月精彩内容：人工智能 为我所用</title>
    <link href="http://aisee.me/2017/05/03/AI/Business/use-ai/"/>
    <id>http://aisee.me/2017/05/03/AI/Business/use-ai/</id>
    <published>2017-05-03T06:07:06.000Z</published>
    <updated>2017-05-03T06:11:11.996Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20170430205125120" alt=""></p>
<p>当心！假如你未还考虑在公司业务中应用人工智能技术，就有被对手超越的风险。人工智能已不单单是发表学术论文、刷新正确率的竞赛，抑或全民参与的新闻事件，它早在为各行各业的先行者们创造着实实在在的利润和商业价值。而且，随着算法改进、硬件升级、架构优化，应用人工智能技术带来的收益还会越来越高。</p>
<p>这些先行者们正在关注哪些关键技术？如何从理论上跨越到企业创新实践？如何实现企业级云深度学习平台？在电商领域如何实现人机交互？除了深度学习之外还有哪些值得我们关注的技术？如何保持足够清醒的头脑并把握创业机遇？</p>
<p>本封面报道汇聚来自百度、阿里、小米、美丽联合、58同城等公司的技术专家，分享实践过程中的开发经验、行业的发展与前沿技术方向，展示这项技术如何才能“为我所用”。</p>
<a id="more"></a>
<ul>
<li>深度学习在推荐领域的应用（吴岸城，菱歌科技首席算法科学家）</li>
<li>打造企业级云深度学习平台——小米云深度学习平台的架构设计与实现（陈迪豪，小米深度学习工程师）</li>
<li>美丽联合业务升级下的机器学习应用（吴海波，美丽联合架构师）</li>
<li>自然语言处理技术在推荐系统中的应用（张相於，58集团算法架构师）</li>
<li>智能人机交互在电商领域的技术实践——阿里小蜜（周伟、陈海青，阿里智能创新中心）</li>
<li>浅析强化学习及使用Policy Network实现自动化控制（黄文坚，PPmoney大数据算法总监）</li>
<li>人工智能创业的“风口”和“泡沫”（李开复，王咏刚）</li>
<li>基于容器的AI系统开发（王鹤麟，于洋，王益，百度PaddlePaddle团队）</li>
<li>表示学习在信息推荐系统中的应用（高升，北京邮电大学副教授；邱琳，北京邮电大学模式识别实验室博士生）</li>
</ul>
<h2 id="资讯"><a href="#资讯" class="headerlink" title="资讯"></a>资讯</h2><p>CSDN要闻<br>微秒击杀<br>以内容为中心网络<br>追查俄罗斯最臭名昭著的黑客</p>
<h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><p>稳定性与内存优化——小型团队的Android应用质量保障之道（何红辉，《Android源码设计模式解析与实战》图书作者）</p>
<p>对于小型创业公司来说，没有BAT等大厂里的测试平台、方案研究员，QA资源相对有限，如果将一切发现问题的重担都交给测试部门，不但耗费的测试周期长，而且有一些问题将难以发现。本文作者基于此分享了他们是如何保证应用的稳定性、避免内存泄漏的，希望能够帮助大家在开发过程中少走弯路。<br>58同城iOS客户端IM系统演变历程（蒋演，58同城iOS高级研发工程师）</p>
<p>58同城App自1.0版本开始，便一直致力于自研IM系统。在这过程中，发现如何降低IM系统层次和页面间的耦合，减少IM系统的复杂性，是降低技术成本提高研发效率的关键。对此，本文作者对iOS客户端IM系统架构演变的过程以及经验进行了总结，希望能够给设计或改造优化IM模块的开发者提供一些参考。<br>携程无线离线包增量更新方案实践（赵辛贵，携程无线基础工程团队高级技术经理）</p>
<p>为了提高页面加载速度和成功率，携程团队在开发Hybrid技术之初就采用了离线包的方式，并经过持续的迭代优化，已经形成一套稳定、高效的无线离线包更新方案，本文作者即分享了其团队在增量更新方面的实践。<br>安居客Android模块化探索与实践（张磊，Anjuke资深软件开发工程师）</p>
<p>万维网发明人Tim Berners-Lee谈到设计原理时说过：“简单性和模块化是软件工程的基石；分布式和容错性是互联网的生命。”由此可见模块化之于软件工程领域的重要性。本文以安居客为例，分享笔者在模块化探索实践方面的一些经验。</p>
<h2 id="物联网"><a href="#物联网" class="headerlink" title="物联网"></a>物联网</h2><p>如何基于Android Things构建一个智能家居系统？（王玉成，供职于清华大学移动计算研究中心）</p>
<p>Android Things是Google在2016年底推出的基于物联网的操作系统，广泛运用于物联网设备。本文作者从其技术原理开始，详解了Android Things本身及与之相关的技术之后，总结了如何搭建一个物联网系统的技术路线。<br>MVP到商用产品——从物车位检测器谈物联网应用开发中的痛点与解决方案（韩骏，微软中国云计算与企业事业部研发工程师）</p>
<p>本文以一个车位检测的物联网MVP（最简可行产品）项目为例，由浅入深地向读者解读物联网开发中遇到的痛点和问题，以及相应的解决方案。此外，本文还介绍了MVP与实际商用项目存在的差距，即从原型开发到真实的使用环境，如何改进可提升MVP更接近实际生产环境的要求。<br>浅析物联网应用层协议CoAP（徐凯，嵌入式软件工程师，物联网应用层协议CoAP方面专家）</p>
<p>CoAP协议专为物联网中资源受限型设备设计，与HTTP协议在设计原理、工作模式方面有诸多相似，却又不尽相同。本文针对CoAP协议的工作模式、消息结构、软件实现框架等进行了详细的讲解，并列举了具体实例来展示CoAP协议的使用。</p>
<h2 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h2><p>PostgreSQL并行查询介绍（赵志强，南京SkyData（天数科技）数据库团队的负责人）</p>
<p>2016年4月，PostgreSQL社区发布了PostgreSQL 9.6 Beta 1，迎来了并行查询（Parallel Query）这个新特性。在追求高性能计算和查询的大数据时代，能提升性能的特性都会成为一个新的热门话题。作为关注PostgreSQL发展的数据库开发者，本方作者将分享对于一些PostgreSQL并行查询特性相关话题的认识。<br>平安云运维解密（周锋、丘子隽，平安云平台事业部云网络服务组技术专家）</p>
<p>本文将介绍平安云的日常运维管理，工具研发与最佳实践，希望对从事云计算服务的读者有借鉴意义。<br>CoreOS vs. Docker容器大战引擎（雷伟，有容云产品总监）</p>
<p>选择哪个技术流派从某种意义上，也决定了选择哪种生态，这也是当前使用容器的公司面临的一大难题。本文将从容器引擎为切入点，说明这两大流派的历史、初衷和技术对比。<br>Hurricane实时处理系统架构剖析（卢誉声，Autodesk软件研发工程师）</p>
<p>本文介绍分布式存储系统以及分布式计算系统，进而引出分布式实时处理系统的基础知识及其在机器学习和深度学习领域的应用。之后介绍了Hurricane实时处理系统的整体结构和设计，并在此基础上，探讨结合深度学习的框架设计方案和实际解决方案。</p>
<h2 id="百味"><a href="#百味" class="headerlink" title="百味"></a>百味</h2><p>西乔漫画：《神秘的程序员》之程序员们的“潜台词”<br>订阅程序员（含iOS、Android及印刷版）请访问 <a href="http://dingyue.programmer.com.cn" target="_blank" rel="external">http://dingyue.programmer.com.cn</a></p>
<p><img src="http://img.blog.csdn.net/20160612144648416" alt=""></p>
<p>订阅咨询：</p>
<p>在线咨询（QQ）：2251809102<br>电话咨询：010-64351436<br>更多消息，欢迎关注“程序员编辑部”</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170430205125120&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;当心！假如你未还考虑在公司业务中应用人工智能技术，就有被对手超越的风险。人工智能已不单单是发表学术论文、刷新正确率的竞赛，抑或全民参与的新闻事件，它早在为各行各业的先行者们创造着实实在在的利润和商业价值。而且，随着算法改进、硬件升级、架构优化，应用人工智能技术带来的收益还会越来越高。&lt;/p&gt;
&lt;p&gt;这些先行者们正在关注哪些关键技术？如何从理论上跨越到企业创新实践？如何实现企业级云深度学习平台？在电商领域如何实现人机交互？除了深度学习之外还有哪些值得我们关注的技术？如何保持足够清醒的头脑并把握创业机遇？&lt;/p&gt;
&lt;p&gt;本封面报道汇聚来自百度、阿里、小米、美丽联合、58同城等公司的技术专家，分享实践过程中的开发经验、行业的发展与前沿技术方向，展示这项技术如何才能“为我所用”。&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
  </entry>
  
  <entry>
    <title>Cognitive Trilogy By FuSheng</title>
    <link href="http://aisee.me/2017/05/03/MyView/Share/cognitive-trilogy-by-fusheng/"/>
    <id>http://aisee.me/2017/05/03/MyView/Share/cognitive-trilogy-by-fusheng/</id>
    <published>2017-05-03T04:03:06.000Z</published>
    <updated>2017-05-03T04:39:03.191Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic.36krcnd.com/avatar/201703/05123358/08jin07cl3kcunf5.jpg!heading" alt=""></p>
<ol>
<li>傅盛认知三部曲之一：所谓成长就是认知升级</li>
<li>傅盛认知三部曲之二：管理本质就是认知管理</li>
<li>傅盛认知三部曲之三：战略就是格局+破局</li>
<li><p>傅盛认知三部曲后记：到底什么是认知？</p>
<a id="more"></a>
<h2 id="1-傅盛认知三部曲之一：所谓成长就是认知升级"><a href="#1-傅盛认知三部曲之一：所谓成长就是认知升级" class="headerlink" title="1.傅盛认知三部曲之一：所谓成长就是认知升级"></a><a href="https://36kr.com/p/5065824.html" target="_blank" rel="external">1.傅盛认知三部曲之一：所谓成长就是认知升级</a></h2><blockquote>
<p>怎么才能让一家公司更快地成长？一个人怎么才能从一群人的竞争当中脱颖而出？</p>
</blockquote>
<p>我一直在思索，怎么才能让一家公司更快地成长？一个人怎么才能从一群人的竞争当中脱颖而出？</p>
<h3 id="1、人的四种认知状态"><a href="#1、人的四种认知状态" class="headerlink" title="1、人的四种认知状态"></a>1、人的四种认知状态</h3><p>最近我看了一幅图，我在其上加了一个数字注脚。</p>
<p><img src="https://pic.36krcnd.com/201703/05120632/rg906gxxmojr2bpp!1200" alt=""></p>
<p>这是一个人认知的四种状态——“不知道自己不知道”，“知道自己不知道”，“知道自己知道”和“不知道自己知道”，也是人的四种境界。我将其简单翻译为：</p>
</li>
</ol>
<p>不知道自己不知道——以为自己什么都知道，自以为是的认知状态。</p>
<p>知道自己不知道——有敬畏之心，开始空杯心态，准备丰富自己的认知。</p>
<p><strong>知道自己知道——抓住了事情的规律，提升了自己的认知。</strong></p>
<p><strong>不知道自己知道——永远保持空杯心态，认知的最高境界。</strong></p>
<p>现在我终于意识到，人和人根本的区别就在于这四种状态。更可怕的是，95%的人都处在第一个状态，甚至更多。这也就是为什么碌碌无为的人是大多数。视而不见，只会失去升级的可能性。只有自我否定，保持空杯心态，一个人才有可能真正成长，实现跨越。</p>
<p>今天，我们处在一个大拐弯的时代，每一个行业的认知都在迅速叠加，跨界越来越普遍。如果不保持这种“自我否定”的认知状态，很难完成对快速变化的行业的认知。</p>
<h3 id="2、人和人最大的差别是认知"><a href="#2、人和人最大的差别是认知" class="headerlink" title="2、人和人最大的差别是认知"></a>2、人和人最大的差别是认知</h3><p>认知，几乎是人和人之间唯一的本质差别。技能的差别是可量化的，技能再多累加，也就是熟练工种。而认知的差别是本质的，是不可量化的。</p>
<p>记得在香港约过一次马云喝茶，他几乎不用电子邮件，当时我就琢磨，他为什么能去指挥那么大一个帝国？后来发现，他在不断观察行业变化，从变化里找关键切入点，找资源和人配合。</p>
<p><strong>人和人比拼的，是对一件事情的理解和对行业的洞察。执行很重要，但执行本质是为了实践认知。</strong></p>
<p>有时候，我也会鉴古通今地去琢磨，为什么鸦片战争时期，大清帝国输那么惨？简单说，一群怀揣现代物理学认知的人，打败了另一群信奉四书五经认知的人。其实就是两种不同认知的较量。</p>
<h3 id="3、认知升级的两个误区"><a href="#3、认知升级的两个误区" class="headerlink" title="3、认知升级的两个误区"></a>3、认知升级的两个误区</h3><p>真正的认知需要通过行动展现，行动一旦缺失，认知容易陷入误区。我总结了两个可能遇到的误区，未必全面，抛砖引玉：</p>
<h4 id="误区一：以为自己知道，远远不如以为自己不知道"><a href="#误区一：以为自己知道，远远不如以为自己不知道" class="headerlink" title="误区一：以为自己知道，远远不如以为自己不知道"></a>误区一：以为自己知道，远远不如以为自己不知道</h4><p>自以为是，是自我认知升级的死敌。回想奇虎当年搜索没干过百度，老周一度总结为不小心把公司卖了，百度没卖。他没想到，当时李彦宏对搜索的认知远高于他。老周不愿打硬仗，不愿打重型战役，不愿搞大研发，不相信算法。那时候卖，本质上是打不下去了。可他不这么认为。</p>
<p>自我否定，就是假设自己无知，是自我认知升级的唯一路径。不做痛苦的自我否定，认知上不了一个新台阶。即使正确信息摆在面前，你也会视而不见。这基本是区别英雄和凡人唯一的机会了。</p>
<h4 id="误区二：以为自己认为重要和真的认为重要，往往不是一回事"><a href="#误区二：以为自己认为重要和真的认为重要，往往不是一回事" class="headerlink" title="误区二：以为自己认为重要和真的认为重要，往往不是一回事"></a>误区二：以为自己认为重要和真的认为重要，往往不是一回事</h4><p>有一个词叫自我迷惑。自认为觉得很重要，但根本没把它转化成真正的行动。</p>
<p>我最大的反思就是对头条的理解。两年多前，我说头条就是移动端的搜索。我的反思是什么？我当时认为挺重要的，一直到15年四季度，我才开始召集人马，着手海外头条的业务。</p>
<p>这是认知里经常出现的一个误区：以为自己认为很重要和真的认为很重要，往往不是一回事。</p>
<p>不行动的认知，就是伪认知。炫耀自己知道，有什么用？一个浪潮打过来，认知就没了，如同没有。真正的认知，必须知行结合。</p>
<h3 id="4、认知升级的三剂解药"><a href="#4、认知升级的三剂解药" class="headerlink" title="4、认知升级的三剂解药"></a>4、认知升级的三剂解药</h3><p>把一件事情转化成行动，难度之大。认知到行动，中间有巨大损耗。我给认知升级开了三剂解药：</p>
<h4 id="解药一：坚信大趋势"><a href="#解药一：坚信大趋势" class="headerlink" title="解药一：坚信大趋势"></a>解药一：坚信大趋势</h4><p>想法要立刻转为行动。坚信大趋势，坚信这家公司的各种认知决定。不要简单的批判，你一定要相信那些行业领头人。他们拿到的信息肯定比你多，处理信息的能力比你强，他们的认知不是现阶段的你所能赶得上的。不理解，就执行，在执行中理解。</p>
<p>盲目坚信，立即行动，在行动中形成认知。不要怕死，早死早超生。去年，我想出做机器人的决定，几乎没人认为可行。我就想，先去找人，坚信趋势，立即行动。那种情况，不做，更没有机会，只能是大量时间的损耗。</p>
<p><strong>不行动，是最糟糕的。行动，才有可能证伪。坐而论道，没有意义。</strong></p>
<h4 id="解药二：对外求教，不做井底之蛙"><a href="#解药二：对外求教，不做井底之蛙" class="headerlink" title="解药二：对外求教，不做井底之蛙"></a>解药二：对外求教，不做井底之蛙</h4><p>有一个对外求教的心态，非常重要。对外求教，是为了扩展你的视野。要找到带路党，吃过猪肉不一样。他们比你强不是他们聪明，而是有着你不知道的认知。</p>
<p>当年我和徐鸣做可牛影像，我们的口号是我们来了。我们的技术水平，做过的客户端体验，见啥灭啥。我们来这个行业了，谁还活得下去？结果，美图秀秀把我们打得内心都快崩溃了。</p>
<p>这是我们特别容易陷入的一种状态：<strong>以自我为中心，不向外看。面对新事物，很多人甚至连尝试和对外沟通的欲望都没有。完全不知道外面发生什么。</strong></p>
<p>强调一点：认知理解与聪明度无关。只有从认知角度，而不从聪明角度，去理解这个世界，理解所在行业，你才会有更多不一样的认知，才能看到更多别人看不到以及顽固不愿去理解的机会。</p>
<p>越是处在绝路的团队，越是往外看得多。</p>
<h4 id="解药三：活在当下，面向未来"><a href="#解药三：活在当下，面向未来" class="headerlink" title="解药三：活在当下，面向未来"></a>解药三：活在当下，面向未来</h4><p><strong>活在当下，恐惧时，想想错了又如何？多错才有机会对。</strong> 这是我给自己的一个思维训练。当你面对一些事情，想想最坏的结果是什么？想完你会发现，最坏结果与你内心的恐惧，根本不在一个量级。</p>
<p>恐惧就是恐惧本身。不肯尝试的本质是不敢面对所谓失败。但，这个失败的后果是什么？很少有人认真思考过。其实绝大部分失败是没有后果的。</p>
<p>再就是面向未来，纠结时，想想五年后会怎样？会不会被淘汰掉？如果五年后，你跟这个时代已形同陌路，这才是最可怕的。行业变化之快，超出我们想象。</p>
<h3 id="5、所谓成长就是认知升级"><a href="#5、所谓成长就是认知升级" class="headerlink" title="5、所谓成长就是认知升级"></a>5、所谓成长就是认知升级</h3><p>所谓成长，并不来自于所谓的位高权重，不来自于所谓的财富积累，也不来自于你掌握的某一个单项技能。</p>
<p>行业里有很多这样的人，比如史玉柱。最惨时，欠了一屁股债，什么都没有。靠一个脑白金，重新崛起。因为他在整个营销上的认知水平，领先了一个时代。即便失去所有财富，甚至所有队伍，就凭他对营销的理解，也是那个时代无人可望其项背的。只要他活着，随时可翻身。</p>
<p><strong>绝境当中，他真正拥有的核心武器，根本不是资源，而是认知。</strong></p>
<p>想想腾讯这些年的发展。3Q大战前，腾讯讲花瓣策略——我的花朵上长出很多花瓣，每个花瓣都能干掉你。这种态势，使得腾讯在每个领域都不得不与当时各个领域最先进的认知打，非常困难；3Q大战后，腾讯的策略改为生态链。第一个投资的就是猎豹，接着又投了一批公司。</p>
<p>结果如何呢？腾讯市值从300亿美金涨到了今天的2000多亿美金。《福布斯》杂志曾经做了一个年龄在四十岁以下的四十位中国商业精英年度排行榜“40 Under 40”，第一位是刘强东，其次是王小川、我、姚劲波。马化腾当时留言说，前五个当中，四个都跟我有关系，很荣幸。</p>
<p>此后，我一直思考，其实 <strong>马化腾通过投资形成的生态系，帮助他建立了足够的行业认知。</strong>  因为，当他投资了这些公司之后，他就不是在跟一个普通的产品经理聊了，而是跟刘强东聊电商，跟王小川聊搜索，跟猎豹聊国际化。</p>
<p>所以，腾讯用这样一种开放的生态策略，本质拿到的不是投资挣来的钱，而是投资挣来的认知。它和大家建立友好的关系，怎么会不知道出行市场的规模、方向和目标呢？怎么会不知道国际化有哪些机会呢？核心就在于行业认知。</p>
<p>回顾360崛起给我带来了什么？简单说，就是让我拿到行业最一手的认知——一种对于安全行业，对于客户端软件，对于互联网怎么颠覆一个行业的认知。</p>
<p>离开360时，我的前东家只给了我1块钱，但朋友安慰说，没关系，你 <strong>积累的认知，别人都拿不走，将来所有东西都会还给你。</strong> 我就带着一个认知，走上了茫茫创业人海。</p>
<p>就因为这么一个小小的认知。</p>
<p>我才能那么坚决做Clean Master。没人知道APP全球化怎么做，好多单词也不认识，没做过商业。当时几乎对所谓国际化，对美国市场一无所知的情况下，做了All in Clean Master的决定。就因为有那样的认知。</p>
<p>因为我就信一点——360单点撬动一个行业的事情，在我面前真真切切发生过，而我就是亲历者。</p>
<p><strong>所谓成长，就来自于认知。</strong></p>
<p>有时候，想起这个时代，我脑海常浮现一个历史典故——煮酒论英雄。两人坐在那，一个指点群雄，一个一味谦恭。问天下英雄是谁？曹操说唯使君与操耳，刘备吓得筷子都掉了。纵然天下各种人物拥有千军万马，但曹操真正顾忌的却是这个正在种菜的刘备。虽然刘备寄人篱下，内心却是匡扶汉室的认知。</p>
<p>后面的历史走向也正如以上的认知讨论一样。天下大势，何其复杂；即便如此，也能简化到最关键的点，即关键人的关键认知。</p>
<p>而认知的本质就是做决定。人和人一旦产生认知差别，就会做出完全不一样的决定。而这些决定，就是你和这些人最大的区别。你拥有的资源、兵力，都不重要，<strong>核心是你脑海里的大图和你认知的能力。</strong></p>
<p>单点也好，势能也好，猎豹能有一点成绩，本质是在移动互联网巨大红利增长之下，做了一个未必那么关键但很正确的决定。那个时候，我们开了先河。但这个认知，不足以支撑我们变成一家卓越而伟大的公司。我们依然需要认知升级。而猎豹和我在过去一年获得的最大财富，就是开始了认知升级。</p>
<p>我开始思考一句话：<strong>一个人卓越，造就不了一家卓越的公司；一群人卓越，才能造就一家卓越的公司。而卓越的核心是一家公司和一群人的认知升级，否则不可能真的上新台阶。</strong></p>
<p>只会陷入死循环：认知不统一，事情推不动。推不动的本质是大家没有建立对这件事重要性的认知。看不见也罢，顽固拒绝也罢，都不可怕。最可怕的是，我们不知道“我们不知道”。</p>
<p>如果一个人，不断想学习，想了解，去反思；空杯心态，放下恐惧，不拒绝改变。认知升级，其实也就是捅破那层窗户纸。成长如是。</p>
<p>我的认知三部曲会分三篇发布：《认知三部曲之一：所谓成长就是认知升级》着重讲一个人认知的四种状态和认知升级的本质，其实就是捅破那层窗户纸。下一篇《认知三部曲之二：管理本质就是认知管理》，我会着重将认知延伸到管理，从宏观认知体系的构建，到微观信息、时间、人的三个维度，细剖管理之道，请各位拍砖~</p>
<h2 id="2-傅盛认知三部曲之二：管理本质就是认知管理"><a href="#2-傅盛认知三部曲之二：管理本质就是认知管理" class="headerlink" title="2.傅盛认知三部曲之二：管理本质就是认知管理"></a><a href="https://36kr.com/p/5071158.html?from=authorlatest" target="_blank" rel="external">2.傅盛认知三部曲之二：管理本质就是认知管理</a></h2><blockquote>
<p>谁建立正确认知，谁就能脱颖而出</p>
</blockquote>
<p><img src="https://pic.36krcnd.com/avatar/201704/17100255/pdq6xkg9dukc22fq.jpg!heading" alt=""></p>
<p>我曾经讲过管理三段论——<strong>目标、路径、资源</strong>。找到一个目标，想清楚路径，再投入资源。</p>
<p>但它有一个大前提叫——有判断力。没有判断力，搞错了目标，路径切不进去，资源就调不动。而这种判断力的本质，就是认知。</p>
<p>这个时代，管理不是执行管理，不是组织结构管理，而是你比别人更理解一件事情。管理的本质就是一种认知管理。</p>
<p>领导力的核心不是所谓的高情商，而是 <strong>在大格局下构建对整个行业的认知体系，用大趋势做出正确的判断和聪明的决策。</strong></p>
<p>在这个大的认知体系下，管理又可被细化为“信息、时间、人”三个维度：<strong>怎样利用“信息”做出正确的决定，怎样通过抓关键让“时间”更高效，怎样运用简化管理“人”。</strong></p>
<p>我总结了“一体两翼”和“三个管理维度”，逐步解答以上问题。</p>
<h3 id="一体：构建领导者的认知体系"><a href="#一体：构建领导者的认知体系" class="headerlink" title="一体：构建领导者的认知体系"></a>一体：构建领导者的认知体系</h3><p>一个优秀的领导，必须在核心点上拥有覆盖队伍的认知体系。一个人的认知要大于一个队伍，大于一群人。这样的领导，才有真正存在的价值。</p>
<p>我跟腾讯总裁刘炽平交流，他说，互联网特别像一部武侠史，一群人打不过一个武林高手。你堆再多的人，不如来一个武艺出众的人。本质上，就是这个人，在这个点上的认知体系，超越了一个庞大的队伍。</p>
<p>一年半前，我见过百度的人，我跟他们说，<strong>头条就是移动上的搜索</strong>。他们不以为然。说百度有头条不具备的即时搜索，头条离了很远。一直到去年五月，百度才上了信息流。这就是两家产品在认知上的差距。</p>
<p>领导者在核心点上必须有一个强大的认知体系覆盖所有人，才值得成为一个领导，才得以做出正确的决定，才能够带领整个队伍走到一条正确的道路。如果认知错了，即使每天鸡飞狗跳，也做不成真正有效的管理。绩效，期望，只是配合手段。核心是必须有这样的认知体系。</p>
<p><strong>所谓认知体系，是在脑海里有完整的认知框架，才能做出正确的判断。脑海要有一些抽象的框架图。比如简单、差异化、跨界、大趋势，还有时代热点等等。脑海里不断要有这样的框架。看到一个点，就拿这个框架去套。</strong></p>
<p>怎么建立这种框架呢？首先，对市场和产品的深入了解是认知体系的基础。<strong>用产品，抓细节，像用户一样思考问题。</strong> 其次，真的要去和市场上吃过猪肉的人多聊天。看看别人在干什么，这很重要。其三，切忌以听报告的方式建立认知。有些领导，派两个实习生做个调查报告，看一眼，得出一个结论。非常要命。本质上是用实习生的认知取代团队认知。</p>
<p>就像Snap CEO说，Snap chat不是聊天工具，而是改变新一代美国年轻人的沟通方式。现在它把chat去掉了，不再简单做熟人关系，而是 <strong>围绕摄像头建立内容</strong>，这就与Facebook非常不一样了。<strong>Snap让Facebook头疼，不是源于钱更多，或队伍更强，而是源于对社交的认知不一样。</strong> 今天就是这样一个时代——谁建立正确认知，谁就脱颖而出。</p>
<h3 id="两翼：认知管理的两剂良药"><a href="#两翼：认知管理的两剂良药" class="headerlink" title="两翼：认知管理的两剂良药"></a>两翼：认知管理的两剂良药</h3><p>大的认知体系构建之后，具体问题是否有具体方法论作支撑——比如，事情太多管不过来怎么办？做了那么多总被老板批怎么办？做得辛苦不出绩效怎么办？对此，我开了两剂良药：</p>
<h4 id="解药一：学会逆向思考，如果花的时间少一半，事情能否做得更好"><a href="#解药一：学会逆向思考，如果花的时间少一半，事情能否做得更好" class="headerlink" title="解药一：学会逆向思考，如果花的时间少一半，事情能否做得更好"></a>解药一：学会逆向思考，如果花的时间少一半，事情能否做得更好</h4><p>记得有段时间，我非常忙，各种会议满天飞，效率很低。我当时就想，难道当年乔布斯会比我更忙吗？归根到底还是我的管理方法不对。于是我不停追问自己，如果我现在让工作时间少一半，能不能做得更好？</p>
<p>当我的脑海里不断浮现这个问题时，我突然意识到——我忙的根源其实就在于自己认为太多事情都很重要。</p>
<p>怎么让管理变得更有效率？本质是减少真正所谓管理的量，增加判断的量。增加帮团队在关键点做决定和梳理目标的量。</p>
<p>核心是转换思维，培养做判断的能力。而不是勤勉工作的能力。勤勉工作只是基础。假设一下，如果只花一半时间，事情能不能做得更好？顺着这个方向想，很多事情就会不断要求去划分优先级。</p>
<h4 id="解药二：战略的略是忽略，不敢忽略，本质是分不清优先级"><a href="#解药二：战略的略是忽略，不敢忽略，本质是分不清优先级" class="headerlink" title="解药二：战略的略是忽略，不敢忽略，本质是分不清优先级"></a>解药二：战略的略是忽略，不敢忽略，本质是分不清优先级</h4><p>绝大部分人觉得战略的重心是“战”，其实是“忽略”。忽略就是能放弃什么。</p>
<p>不敢忽略，本质就是分不清优先级。怎么去建立优先级？分清优先级的前提是认知清晰。你脑海里有一个格局，叫大趋势。要知道什么是更重要的。找到最关键的点，牢牢不放。不是最关键的点，学会妥协和让步。有时候，我们思维会有盲点。原因在于：视野不够宽，反思不够频。</p>
<p>人和人最大的区别就在于思维格局。<strong>什么是中层？什么是创始人？两者区别就在于：一个是迷恋具体情况，我在努力工作；一个是高低结合，我既能努力工作，又能不断花时间去反思，去判断，去拿到认知。而且清楚知道，低的目的是高。即我的每一个执行，本质上又在建立我的认知。</strong></p>
<h3 id="三个管理维度：信息、时间、人"><a href="#三个管理维度：信息、时间、人" class="headerlink" title="三个管理维度：信息、时间、人"></a>三个管理维度：信息、时间、人</h3><p>宏观层面，领导者要构建对行业的认知体系；那么微观层面，执行操作时，怎样才能做到更聪明的工作？怎样找到那件最重要的事？我从信息、时间、人三个维度剖析管理方法。</p>
<p><img src="https://pic.36krcnd.com/201704/17095409/gjqq9f5lfb2ltrxs!1200" alt=""></p>
<p>先说信息维度。人的本质就是一个CPU。运算能力再强，没有足够的数据输入也不会有产出。有足够大的信息输入，足够高的反思频度，你才会有足够的信息输出，也才会产生格局，做出正确判断。搜集信息的目的，不是为了保持自身现状，而是为了进一步成长获得新能力，使我们做出正确的判断和聪明的决策。</p>
<p><strong>信息怎么输入？第一，深入分析对手。花时间加大信息搜集，磨刀不误砍柴工。第二，定期遍访行业。了解对手，否则会失去行业认知。第三，不断招聘行业里的人。他们不仅是来工作的，也会带来行业里的认知。</strong></p>
<p>一个领导者的本质就是做正确的决定。只要你拿到足够的信息，就能做出正确的决定，执行将容易十倍，矛盾也会迎刃而解。有一句话叫主将无能累死三军。执行很难的本质是没有做出正确的决定。</p>
<p>再来说时间维度，管理上最重要的资源就是领导人时间。时间的分配，表明了一个领导者对实际情况的优先级判断。</p>
<p>我们经常自认为一件事情很重要，回头一看，根本没花足够时间，没放足够人力，没放足够资源。时间都去哪儿了？</p>
<p>反问下自己：时间是如何分配的？构建格局上花了多少时间？信息输入花了多少时间？关键人身上花了多少时间？是不是偶尔想到了，去思考一下，还是变成一种工作习惯？</p>
<p>猎豹最早能杀出来的一个核心原因，就是我们当时乐此不疲地参加各种展会，跟各种人聊，建立了对国际APP市场的认知。我作为CEO亲自站台，亲自扛资料，住很远的酒店，转地铁转三次，走路还得十几分钟，听起来都很辛苦。但一有展会，我就会带人去。而且经常是规模性的。看上去花了这么多时间，但实际上建立了认知，找到了简单的切入点。于是，整个公司的工作都变得简单了，反而为其他事务节约了时间。</p>
<p>时间是最重要的资源。经常有同事问我，你天天管公司，介绍新文章，还玩无人机和王者荣耀，时间怎么用的？其实很简单。我每天都会想：有哪几个关键的会，关键的人，关键点是什么。</p>
<p>讲完信息和时间，回到人的维度。一句话：学会通过管一个人达到管一片人的目的。</p>
<p>首先，管理一个人，解决一大片。我们很容易陷入一种状况，搞一堆人，这个要照顾，那个要照顾。团队初创时，可扁平化。但越往后，越成熟的业务，越要找一个堪以重用的人。重用到什么程度？为了这一个人，能把整个团队重构掉。</p>
<p>要简化对人的管理，找到关键人。在关键人身上花足够多的时间，把足够的认知传递给这个关键人，让他做一群人的决定。切忌多人平行站位的职责不清。多人负责，容易变成每个人都不满意。给一个人足够授权，职责清晰，简化管理，即便没有达到预期，更换人时他也更容易接受。</p>
<p>其次就是简化目标。不要给一个人多目标。领导最大的职责是帮员工找到一个简单的目标。这就考验领导，能否构建纵深的行业认知体系，找出那个关键目标，帮助团队简化目标，建立一个正确统一的目标认知。团队目标越简单，越明确，越容易达成一致。</p>
<p>现在我做管理，就简化成<strong>“定目标”和“找关键人”</strong>。目标要简单清晰，人要能挺身而出，超出预期，一战就要解决问题。</p>
<p><strong>好领导，首先是打胜仗。开战之前，就要有七分胜算。这七分胜，就靠认知。打的就是认知之仗。看上去千军万马在打，本质是两个将领脑海里的战争格局。胜负基本已定。</strong></p>
<p>先胜后战，胜算就在认知。管理如是。</p>
<h2 id="3-傅盛认知三部曲之三：战略就是格局-破局"><a href="#3-傅盛认知三部曲之三：战略就是格局-破局" class="headerlink" title="3.傅盛认知三部曲之三：战略就是格局+破局"></a><a href="https://36kr.com/p/5071119.html" target="_blank" rel="external">3.傅盛认知三部曲之三：战略就是格局+破局</a></h2><blockquote>
<p>战略就是大格局之下寻找破局点</p>
</blockquote>
<p><img src="https://pic.36krcnd.com/avatar/201704/17070000/h9j1hos9spxb3mbx.jpg!heading" alt=""></p>
<p>两年前，我写过一篇《一家公司CEO该如何做战略》。应该说，上市以来，我花在战略思考的时间，不少。伴随猎豹前进中遇到的一些问题，我的思考也在不断深入。</p>
<p>我曾经说过战略三部曲是预测——破局点——All in。破局的单点，被很多人讨论。但，预测这件事，给忽略了。然而，预测背后就是格局观。怎么理解？</p>
<p>今天的移动互联网，纯粹靠一个单点爆发，已经很难了。过去十年，甚至二十年，互联网是一片蛮荒之地，需求稀缺，人才也稀缺。只要你投身这个行业，随便找个单点开始深耕；只要你还算努力和坚韧，运气也不太差，就有机会做家不错的公司。所以，那个时候不需要预测，需要的就是干干干！</p>
<p>于是，我们都觉得自己很牛，以为世界就是这样。我们以为不断努力努力再努力，加班加班再加班，逼疯自己，逼死对手，战争就结束了，却没有意识到——<strong>我们站在互联网这个正确的格局和风口上，做什么事情都是对的，而我们正是那群幸运的猪。</strong></p>
<p>不幸的是，这个世界是不连续的。经过二十年的发展，今天，互联网已经是一个传统行业。风停了，放眼望去，到处是血海竞争，乌压压一片创业大军。勤奋依然很重要，但聪明的勤奋才是关键。这个时候，就要求我们想清楚，行业里的大风在哪里，并做出预测。</p>
<p>因此，你的脑海里必须有一个对于这个行业越来越清晰的认知格局脑图。哪里已经是过度竞争，哪里刚兴起却没人察觉，三四线城市网民的不同在哪，互联网与哪个行业、以哪种形式的结合会有机会等等。</p>
<p>我们需要在这样的大格局下，在过去积累的认知红利之上，重新构建新的认知体系，制定战略的新打法，去更大的空间，寻找新的破局点和机会。</p>
<h3 id="1、战略认知-格局思考"><a href="#1、战略认知-格局思考" class="headerlink" title="1、战略认知=格局思考"></a>1、战略认知=格局思考</h3><p>过去，我讲过一句话，叫“现象即规律”。现在，我把它解释得更清楚一点，叫 <strong>“没有偶然，只有必然，所有单点都是大趋势下的必然。”</strong></p>
<p>一个现象，它发生的时候，一定有大趋势支撑它。没有孤立的单点，本质都是大趋势下的单点的必然。</p>
<p>以前，我们就站在肥沃的土地上，不用深入思考就可有所作为；今天，挤进来的人越来越多，思考某个现象为什么突然生机勃勃，它背后反应的规律是什么，怎么利用这个规律帮助自己找到下一个肥沃的土壤，就变得非常关键了。</p>
<p>我曾经一度认为：美国人强调“think different”很有情怀，后来才发现，本质不是情怀，而是为了减少竞争成本。因为美国创业者们比我们更早进入血海竞争阶段，<strong>“勤奋+努力+不要命”已经很难产生质的差别了，才逼迫他们用“更勤奋的思考”来避免高成本的竞争，从而降低失败概率。</strong></p>
<p>创业必须讲究方法论，必须讲究不同情形下的不同方法。今天互联网的竞争格局，远远不是十年前的样子。我们必须think different，而think different的前提，就是要有行业格局认知，看清大趋势，在大趋势下做判断。</p>
<p>所谓战略，就是在这样的格局认知下，找到破局点，制定路线图，投入资源。如果不去建立这样的认知，公司很容易陷入一些误区。</p>
<h3 id="2、战略认知的两个误区"><a href="#2、战略认知的两个误区" class="headerlink" title="2、战略认知的两个误区"></a>2、战略认知的两个误区</h3><p>第一个误区是：见招拆招，啥热做啥，啥熟悉做啥。这是懒惰思考，不愿意认知升级的表现。结果就是越做越多，越做越累，越做越委屈。</p>
<p>我拿自己做例子。</p>
<p>一年多前，我跟几个高管反思，猎豹今天是不是做挺多的？我们在过去野蛮生长中，不断强调快速执行，做热点，认为只要做好这个点就会有机会。没有拿整个大趋势，或者叫大格局下的战略，做一个大方向下的可串联的点。但事实上，整个互联网的竞争加剧比我们想象中来得快。如果每个单点，不是在一个大格局下的累加，以致每个单点都会遇到对手强大的竞争，很难长大。</p>
<p>我们老说战略的懒惰，就这个意思。看到一个机会，扑上去。看到另一个机会，再扑上去。看上去每天都在努力工作，但回头一看，各种方向上布满了各种产品，彼此不能借力，也没办法真正在单点上聚焦。</p>
<p>第二个误区是：做产品的方法论依然停留在5年前，认为抓一个简单功能热点就颠覆格局。</p>
<p>我经常在微博上收到各种私信，说他有个点子，要颠覆腾讯，颠覆阿里，问要不要见他？我基本不回，为什么？</p>
<p>因为我不觉得存在这样的点。如果20年前，想个网址导航，还有可能成为hao123。几个人在屋子里攒出一个聊天APP，还有机会是QQ，逆向一个Dos3.0，写个WPS，一不小心就成为一家上市公司。那是一个多么美好的时代。</p>
<p>但这个时代真的过去了。<strong>移动互联网的APP，不稀缺了，越来越少的APP可异军突起了。APP呈现越来越强的头部效应。而头部的那些大佬们，已经总结了一整套如何面对单点突破的小对手。尽管你精干灵活，但他们会用生态、用流量、用更强大的研发力量碾压你。</strong></p>
<p><strong>只把一个单点做到极致就能创造奇迹的时代，真的过去了。</strong></p>
<p>为什么会出现这种情况？归根到底，还是以前互联网不被重视，具备互联网技能和认知的人有限，所以你做了，别人要么看不起，要么做不来。而今天，“互联网就是金矿”的认知，已经深入人心；互联网相关从业者，浩浩荡荡。这好像一碗好吃的牛肉面，如果利润很高，如果能做出来的人已经一大片，就更不要提那些巨头们了。</p>
<p>怎么办？你必须结合趋势，结合整个战略思考，把所有东西累加进去。容易打的仗，已经打完了。要花足够的精力和时间，去构建自己的行业格局认知。在看上去繁杂纷扰的信息中，不断深度思考，加大自己的认知优势，然后在熙熙攘攘的人流中找到不为人知的机会，趁着大家还不够懂，突然发起战役，全力以赴。</p>
<p>这就回到开头的问题，我们究竟该如何构建这样一种格局思考的能力？</p>
<h3 id="3、举个例子：回顾几个破局点"><a href="#3、举个例子：回顾几个破局点" class="headerlink" title="3、举个例子：回顾几个破局点"></a>3、举个例子：回顾几个破局点</h3><p>先拿我自己做例子，回顾几个破局点的思考路径。</p>
<p>怎么产生Clean Master这一个点？我当时觉得，中国互联网APP水平还是不错的。拉了一个技术同事到美国开会，请了一个挺牛的人介绍安卓。讲完后，我的同事说，这人水平一般。我想，这位同事虽然狂了点，但说得很中肯。而这位牛人，已经是一家60人硅谷创业公司的CTO。我们做了一些动效给他，他还很疑惑怎么做到的。我发现，中美之间并不存在技术代差。</p>
<p>于是，我开始思考，中国APP能否走出去。最后我作出了一个大趋势的判断——中国APP已经领先全球了，我们已具备这样的基础。这个判断做出以后，后面的事情就简单了。</p>
<p>包括猎豹上市后，该干什么？当时我的判断是，移动互联网颠覆格局的机会基本过去了，要想找到猎豹十倍增长的机会，必须从未来着手。所以那时，我跑硅谷，跑以色列，去世界各地看创业团队。在国内搞傅盛战队，办紫牛基金，只投非纯粹互联网的早期创业项目，想知道年轻创业者在干什么，互联网跨界到底怎么发生的。</p>
<p>在这个过程中，我慢慢发现了人工智能和机器人。尤其深度学习，开始在很多创业方向中都有体现。它把很多过去跨行业的算法统一了起来，并且效果上有了质的飞跃，这让我非常着迷。</p>
<p>而机器人又是个工具，和猎豹过去做的事情不谋而合。它到底长什么样子，谁也不知道。这就有机会去定义。作为一个产品经理，要去定义机器人的交互是怎样的，人的感受是怎样的？我觉得这个特别吸引我，也符合我的特质。与此同时，能把基于深度学习产生的视觉、听觉技术革命，与机器人产业结合起来，更是今天很少人意识到的巨大机会。</p>
<p>这个行业认知建立以后，执行也就变得简单了。去年年初，我开始下大力气组建人工智能和机器人团队。在整个行业暴热，开启人才大战的前夜，我们组建了一支精壮的国际化队伍，还全力以赴研发了产品。很快大家就会看到我们即将发布的AI产品，多少也算领先了业界一步。</p>
<p>回想当初，我说自己要倾家荡产做机器人，很多人还认为我只是蹭个热点，搞个宣传。但把真实情况串起来后，你会发现，我是经过了深思熟虑，花了足够时间认真思考的。如同上文所述，这个单点，它不是偶然，而是我整体思路的必然。</p>
<p>所以，一个点不是孤立存在的。你的脑海里有没有一个大格局？这个大格局是什么？这很重要。</p>
<h3 id="4、回到根本：怎样做战略？"><a href="#4、回到根本：怎样做战略？" class="headerlink" title="4、回到根本：怎样做战略？"></a>4、回到根本：怎样做战略？</h3><p>首先，脑海要有大格局。大格局就是对这个行业深入的、清晰的认知。</p>
<p>你心中要不断问这个问题——在这个行业里，什么才是真正的机会？什么才是下一个趋势？这样，你才有机会，才能判断，这个点对不对。否则，可能消耗了很多人，把什么都投进去，但不形成持续爆发增长。因为它不是大趋势下的点。本质就不该做。</p>
<p>我们需要花足够的时间去了解行业，去思考对手，去观察现象。在获取大量信息后，不断在脑海里做思维推演，去判断。</p>
<p>当然，这些格局认知里，至少你要想到一些关键词，比如全球化、视频、品牌、AI、争夺时长和红利结束等等。整个行业的大格局，没必要从零开始做认知判断，一些看上去很热门的趋势，选择相信，再去分析背后的规律。</p>
<p>其次，养成格局和破局结合的思维习惯。高是什么？你的格局，大风口。破局就是找到与众不同的那个点。二者缺一不可。</p>
<p>过去，我们太强调那个单点的重要性了。大部分人的思维习惯，停留在游击战。有个好想法，做起来。就像游击队，看到有头猪，就抢一把。对手在哪，他们在怎么做？这个领域的趋势会怎样？这个点领先者是不是稍微抄袭下就一样了？基本都不知道，也不去了解。只在为自己的想法激动不已，恨不得明天就赶紧实现。</p>
<p><strong>今天，做一个互联网产品就像做一辆汽车。如果你只有对某个功能（比如汽车安全）的好想法，而不去认真思考资金，工厂，产业链，上下游，品牌定位，对手策略，消费者习惯迁移等因素，你认为你有机会超越宝马、奥迪、奔驰吗？</strong></p>
<p>战略，就是要求我们进行深入的、逼迫自我的思考。真正的超越机会，不是来自于在工作时间上把对手逼死，而是在认知深度上先把自己逼疯。</p>
<p>互联网竞争已经白热化的形势下，做战略的关键点，就在于不断加深自己的认知，找到已经存在但不为人知的那个秘密。而且，这个秘密所能孕育的机会，要足够大；离现有领先者的区域，要足够远。核心是你能否具备超出对手的、对行业的、与众不同的认知。基于这个格局认知，为自己撕开一道突破口。</p>
<p>简单一句话概括——经过充分思考和认真研究后，制定清晰目标以及持续推进的路线图，这应该就是战略的全貌。</p>
<p>同时我也要补充一点：战略是在这个路线图下的势能的累加，不能累加势能的，再有效果的执行，本质都是增加成本。</p>
<p>这就慢慢理解了杰克·韦尔奇说的“数一数二法则”。因为不数一数二，长期没有竞争力，还耗费精力。就不是一个累加势能的点。</p>
<p>如今，<strong>猎豹的新Slogan——Make The World Smarter</strong>，目标就是要围绕AI方向做累加。猎豹的路线非常清楚，那就是——以人工智能为核心的累加，以6亿月度活跃用户数据为基础，用技术和产品的突进，完成我们整个目标。对目标没有持续、有效累加的事情，都没有意义。</p>
<p>猎豹要做的，是将人工智能跟传统移动互联网的业务相结合。产品创新上不断发力，真正做出一些赶超BAT的AI产品。</p>
<p>回到战略，它的本质是什么？我认为，战略就是一个杠杆。它让你做的每一件事，都放大几倍，几十倍。一旦远离这个杠杆，就变成小公司创业模式。关键是，这种创业模式，又比不过真正的创业公司。</p>
<p>猎豹走到今天，重新回到创业，置身于一处——于大格局之下，寻找新的破局点。战略如是。</p>
<p>截止现在，我的认知三部曲已全部发布。其中《认知三部曲之一：成长就是认知升级》分享了认知迭代的本质就是捅破那层窗户纸；《认知三部曲之二：管理本质就是认知管理》分享了分享了一个领导如何在大格局下构建对整个行业的认知体系，并从信息、时间、人的三个维度，剖析了管理之道；《认知三部曲之三：战略就是格局+破局》分享了大格局的认知下，升级战略打法，积累势能，寻找新的突破口。</p>
<h2 id="傅盛认知三部曲后记：到底什么是认知？"><a href="#傅盛认知三部曲后记：到底什么是认知？" class="headerlink" title="傅盛认知三部曲后记：到底什么是认知？"></a><a href="http://36kr.com/p/5072217.html" target="_blank" rel="external">傅盛认知三部曲后记：到底什么是认知？</a></h2><p><img src="https://pic.36krcnd.com/avatar/201704/24131042/fb66hlqcanil2q9e.jpg!heading" alt=""></p>
<blockquote>
<p>我从认知三要素讲起……</p>
</blockquote>
<p>我的认知三部曲《所谓成长就是认知升级》、《管理本质就是认知管理》、《战略就是格局+破局》发布后，收到了很多朋友的宝贵留言：</p>
<p>“你对认知的清晰定义到底是什么？</p>
<p>“认知有多深才算知？”</p>
<p>“为啥技能差别可量化，认知差别是本质的？</p>
<p>“如何去提升自己的认知？”</p>
<p>于是，我决定补一篇后记，答读者问。简短分享一些我对认知的理解。部分想法，未必成熟，还是拍砖引玉，与各位探讨。</p>
<p>思考认知，本质是在思考“一种思维”。认知思维所具有的超越性，不可想象。正所谓，擒贼先擒王。这个王，某种维度看，就是认知。</p>
<p>那么，到底怎么定义认知？技能相对认知，为什么可量化？</p>
<p>我认为，技能就是回字的四种写法，是一种知识的熟练掌握。再直白点，技能就是背了唐诗三百首，背了圆周率后50位或背一个微积分方程，然后来回做题。</p>
<p><strong>技能的熟练掌握，当然重要。甚或，掌握一种获得熟练技能的方法，也可能是一种认知。但，技能最终仍是一种线性映射。如同程序里的函数，输入A，就产生B。一旦学到了，就变成简单的模式化。</strong></p>
<p>本质上，整个中国教育就是技能教育。发一张答题卡，谁填得好，谁就优秀。它是一种封闭条件下的技能组合。</p>
<p>而认知是什么呢？<strong>认知是基于一个综合情况而做出的一个精准判断。什么叫综合情况？就是复杂情况下，做了超出常人的不一样的判断。从这个维度看，技能本质是一个封闭式问题，而认知更多是一个开放式问题。</strong></p>
<p>这里，我画了一幅图来描述认知产生的整个过程。</p>
<p><img src="https://pic.36krcnd.com/201704/24130424/givz9ck2miuxx5x7!1200" alt=""></p>
<p>认知产生原理跟神经网络的模型训练很像。简言之，通过海量信息不断输入，再进行自我思维模式的训练，最后输出一个判断。由此，我总结了认知的三个要素，分别为输入、训练和判断。</p>
<h3 id="认知第一要素：信息输入与挖掘"><a href="#认知第一要素：信息输入与挖掘" class="headerlink" title="认知第一要素：信息输入与挖掘"></a>认知第一要素：信息输入与挖掘</h3><p>有一句话很流行：道理听了无数，依然无法过好这一生。为什么？不同人面对信息，有不同的态度、方法和能力。所有这些因素，决定了认知的起跑线。同样刷朋友圈，你看花边新闻，人家看某一篇论文，认知能一样吗？</p>
<p>有的人，凭着一股喜欢，叶公好龙。比如我面试一些技术人员，让他们讲讲对 <strong>AlphaGO的原理</strong>，十有八九，答不上来。有人说，AlphaGO就是运算能力更强，能算出更多步数。</p>
<p>听懂这个答案是错的人，说明不是叶公好龙。关于AlphaGO技术解析的文章遍网都是，不需数学知识就能看懂。看不懂，不是智商问题，而在于是否愿意深度挖掘。</p>
<p>信息挖掘的核心，就是广度和深度兼得。我们常常遇到的广度问题是——对很多新的现象和机会视而不见；而遇到的深度问题则是——对当下处境和形势看不透。</p>
<p>然而，即使认为自己很有深度，也可能会出现盲区。这里的盲区主要有两类：第一类盲区是“看不起-自傲”；第二类盲区是“接受不了-自卑”。</p>
<p>先说第一类盲区，看不起-自傲。99%的人都可能有这样的心态，一开始就抗拒信息的输入。</p>
<p>有一天，我跟一位同事讨论游戏，告诉他要学习王者荣耀。他反驳道，我不是王者荣耀。我说你玩了吗？一个做游戏的人，不玩王者荣耀，不要跟我谈了。当然，或许你比它牛，但你都不了解它，不愿去接触它，何谈超越？</p>
<p>看不起，是一种非常要命的心理。</p>
<p>我说过，现象即规律。看到一个现象，如果没有惶恐感，就会错过一堆现象。一个现象背后必然有大规律，而这个大规律背后，肯定还有别的现象根本不在你的视野。</p>
<p>我们有时候看到现象，就跟当年乾隆看到西方人送的钟表一样。认为这都是奇淫技巧，全然不知钟表背后隐藏的现代物理学规律。<strong>当一个现象发生时，我们应该首先扑上去，了解它，吃透它，再想想背后的规律，而不是简单予以屏蔽。</strong></p>
<p>表面看，你错过了一些看似不重要的现象，本质上有可能错过了一个重要规律或对一个机会的认知。</p>
<p>第二类信息挖掘的盲区叫“接受不了-自卑”。有时候，一些同事工作没啥进展，当我跟他们聊时，本来就有情绪，聊完情绪更大了。甚至来一句：你不了解我。我想说的是，你试图了解过我为什么这么说吗？我站在CEO的位置，看到的对一个岗位的要求，肯定和你看到的不一样。</p>
<p>如果换一个角度看，实际是一个人进入到了自我保护和自卑的状态。于是非常难以接受外面的信息，尤其负面信息。</p>
<p><strong>我们都是成年人，要有职业心理。否则真的沦为一群巨婴。更重要的是，当你将情绪转化为一种意见，由此会下定论——领导对自己极度不满。这时候，你就丧失了一个信息深度挖掘的机会。</strong></p>
<p>这一点，我们必须警醒。</p>
<p>我曾经跟腾讯一位高管交流，他说，牛人其实都是在自信和自卑之间来回跳跃。如果我们能平衡二者，站在上帝视角思考问题，检视自己的心态，是不是更有利于获取认知呢？</p>
<p><strong>人的成长，就是一种自我抗衡。如果你能在信息输入与挖掘的过程中，把自傲与自卑对抗掉，获取信息的维度一定会好很多。</strong></p>
<p>反之，我们怎样才能克服以上两类盲区，真正从海量信息中挖掘出真知灼见呢？我认为需要两种能力：<strong>第一要能趴在地上面对自己；第二要能学会倾听。</strong></p>
<p>人不能心比天高，命比纸薄。心态高一定会导致信息获取遭遇巨大问题。尤其在激烈的商业竞争中，我们不仅需要趴在地上看对手，更要趴在地上看世界。因为只有趴在地上时，你才能发现对手真的很强大。</p>
<p>大多数时候，我们的行为往往是：<strong>获取信息时，站在云端看别人，每个人都很渺小，一览众山小；真正做起事情来，又趴在地上，觉得这事太难，困难像高山一样无法撼动。</strong></p>
<p>其实应该反过来。</p>
<p>当我们学习时，应该趴在地上，每个人都挺高大，像小学生一样对别人保持崇敬和倾听；而遇到困难时，应该站得更高一点，虽然困难很多，但心态要乐观。</p>
<p>第二，倾听是一种能力。我经常观察一些人，喜欢打断别人的人，往往容易在学习状态上出问题。</p>
<p>有时候，几个人一起聊天，有的人突然打断，急于提问或强调自己，别人的叙述就断了。<strong>所谓信息挖掘，先要让人把话说完，你才有机会挖掘。而不是听了只言片语，也不是听了一点立刻欣喜若狂。与人沟通时，无需极力表现自我。</strong></p>
<p>有一句万能理由是：只要对了，我就听。其实也是一种经验主义。<strong>经验主义的问题在于，拿过去的经验作信息筛选，往往漏掉可能改变自己的很多新信息。你要假定，自己可能错，多去听一听，才有机会纠正。</strong></p>
<p>信息挖掘，是构建认知体系中非常重要的一点。我们必须承认，<strong>那些对行业变化非常敏锐的人，对关键点的信息挖掘能力，一定比常人技高一筹。</strong></p>
<h4 id="认知第二要素：思维模式训练"><a href="#认知第二要素：思维模式训练" class="headerlink" title="认知第二要素：思维模式训练"></a>认知第二要素：思维模式训练</h4><p>如上图所示，有了足够大的信息输入后，才能不断训练自己脑海里的模型，从而形成自己独有的思维模式。</p>
<p>什么叫思维模式？我看过一些认知神经科学的文章。人脑的信号是通过神经元之间的连接来发送的。尽管，基因大致决定了神经元的连接形态。不过，在大脑发育的过程中，后天经历也在不断塑造神经元的连接。</p>
<p>比如，人们进行学习与认知活动时，大脑中的电信号就会激活神经元。当人们接受和处理外界信息后，神经元之间的连接就会发生可塑性的改变。而这些改变，代表了我们思考的过程，或可理解为一种思维训练的模式。</p>
<p>随着接受外部信息更多，你会学习更多，神经元之间的连接就会出现“创造性破坏”，不仅产生功能性改变，大脑认知结构也会重塑。而这些变化，正是学习的结果。本质上，思维模式就是如此被训练出来的。它一定不是天生长成。</p>
<p>此外，思维模式的训练中，还有一个非常重要的点叫自我挑战。即不断站在自己的对立面自我互搏。这个过程跟AlphaGO算法模型训练中的左右互搏原理一样。</p>
<p>然而现实生活中，绝大部分人只会作自我增强。一旦有了想法，每天都很激动，觉得要改变世界了。自我信任大过于自我质疑。</p>
<p><strong>所谓思维模式训练，就是不断进行“自己问自己”的思考训练。两个自我，反复博弈，无休无止，直至精进。</strong></p>
<h3 id="认知第三要素：自我博弈与输出判断"><a href="#认知第三要素：自我博弈与输出判断" class="headerlink" title="认知第三要素：自我博弈与输出判断"></a>认知第三要素：自我博弈与输出判断</h3><p>做判断，必须基于深度思考。而深度思考的核心标志，就是自我博弈。即一个人要能不断自我反思。吊诡的是，尽管大家都在反思，但反思也是有层次深浅的。我把反思分了三个层次：</p>
<p>傅盛认知三部曲后记：到底什么是认知？</p>
<p>第一层反思，较为普遍，叫客观环境反思。反思时，只回顾客观困难。想当然假设，如果自己掌握更好资源，就能重新解决难题。这叫第一层反思。</p>
<p>第二层反思，进了一层，叫心态反思。认为自己不够投入。言下之意，只要投入，就能做好。</p>
<p>第三层反思，更难了，叫能力反思。认为自己可能不具备这样的能力。我曾经就反思过自己是否具备做CEO的能力。有一段时间，甚至很崩溃。心想：我这么一个在乎别人感受的人，做CEO，太痛苦了。</p>
<p>有时候，我们真的需要跳出来看。张颖有一句话叫——<strong>脱光了看自己。你要把自己的内在和外在，与事情本身结合起来。直面痛苦和真相，才能让反思真正产生效用。这个过程就是不断的自我博弈。</strong></p>
<p>人的内心，本质只会自我加强。想了一个点，会顺着这个点继续想，于是越想越觉得自己好。尤其当自傲和自卑心态作祟时，就更难挑战自我了。</p>
<p>所以，我们要把思维模式的训练，由刻意为之，逐渐变成一种习惯。面对困境时，多向内看，反求诸己；取得一些成绩时，多向外看，总结外在机会，警惕自傲。如此，认知能力才可精进。</p>
<p>而 <strong>精进本身，就是认知现实能力的不断升级。即通过大量信息的不断输入，反复的思维模式训练，不断自我博弈与挑战，克服自傲与自卑心态，使其认知结构在广度与深度上充分扩展，形成一套更高维度的、完整的认知框架，最终做出正确的判断和聪明的决策。</strong></p>
<p><strong>认知其实就是一场自我革命</strong>。这是我最后想说的。     </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://pic.36krcnd.com/avatar/201703/05123358/08jin07cl3kcunf5.jpg!heading&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;傅盛认知三部曲之一：所谓成长就是认知升级&lt;/li&gt;
&lt;li&gt;傅盛认知三部曲之二：管理本质就是认知管理&lt;/li&gt;
&lt;li&gt;傅盛认知三部曲之三：战略就是格局+破局&lt;/li&gt;
&lt;li&gt;&lt;p&gt;傅盛认知三部曲后记：到底什么是认知？&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Fu Sheng" scheme="http://aisee.me/tags/Fu-Sheng/"/>
    
  </entry>
  
  <entry>
    <title>Some Deep Minds</title>
    <link href="http://aisee.me/2017/05/02/MyView/Original/future/level-up-again-and-again/"/>
    <id>http://aisee.me/2017/05/02/MyView/Original/future/level-up-again-and-again/</id>
    <published>2017-05-02T13:29:06.000Z</published>
    <updated>2017-05-03T05:20:52.066Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://opb37u589.bkt.clouddn.com/quote-forget-yourself-by-becoming-interested-in-others-every-day-do-a-good-deed-that-will-dale-carnegie-55-57-04.jpg" alt=""></p>
<blockquote>
<p>Good things worth paying, waiting and sharing.</p>
<p>Failure is the mother of success, and success is the father of success.</p>
</blockquote>
<a id="more"></a>
<h2 id="Forget-Yourself"><a href="#Forget-Yourself" class="headerlink" title="Forget Yourself"></a>Forget Yourself</h2><blockquote>
<p>speak little ,listen more.</p>
</blockquote>
<ul>
<li>Idea,</li>
<li>Program,</li>
<li>Career</li>
<li>…</li>
</ul>
<h2 id="Elegant"><a href="#Elegant" class="headerlink" title="Elegant"></a>Elegant</h2><blockquote>
<p>Simple and Real</p>
</blockquote>
<ul>
<li>Code,</li>
<li>Blog,</li>
<li>Skill,</li>
<li>Investment,</li>
<li>Life</li>
<li>…</li>
</ul>
<h2 id="Focus"><a href="#Focus" class="headerlink" title="Focus"></a>Focus</h2><ul>
<li>Time</li>
<li>Money</li>
<li>Resource</li>
<li>Energy</li>
<li>…</li>
</ul>
<h2 id="Forgiveness"><a href="#Forgiveness" class="headerlink" title="Forgiveness"></a>Forgiveness</h2><ul>
<li>To err is human</li>
<li>People can not escape from doing wrong</li>
<li>A fault confessed is half redressed<br>…<br><img src="http://cdn.iciba.com/news/word/big_20170501b.jpg" alt=""><br>People who agonize don’t act. People who act don’t agonize.– Pierre Sauvage</li>
</ul>
<blockquote>
<p>不要在一件别扭的事上纠缠太久。纠缠久了，你会烦，会痛，会厌，会累，会神伤，会心碎。实际上，到最后，你不是跟事过不去，而是跟自己过不去。无论多别扭，你都要学会抽身而退。——几米</p>
</blockquote>
<h2 id="Insist"><a href="#Insist" class="headerlink" title="Insist"></a>Insist</h2><blockquote>
<p>Patient</p>
</blockquote>
<p><img src="http://cdn.iciba.com/news/word/big_20170503b.jpg" alt=""></p>
<p>Don’t worry too much about the ambiguous future; just make the effort for the explicit present.</p>
<ul>
<li>Accumulation is powerful.</li>
<li>Perseverance prevails.</li>
<li>…</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://opb37u589.bkt.clouddn.com/quote-forget-yourself-by-becoming-interested-in-others-every-day-do-a-good-deed-that-will-dale-carnegie-55-57-04.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Good things worth paying, waiting and sharing.&lt;/p&gt;
&lt;p&gt;Failure is the mother of success, and success is the father of success.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Growing Up" scheme="http://aisee.me/tags/Growing-Up/"/>
    
  </entry>
  
  <entry>
    <title>In the Name of People</title>
    <link href="http://aisee.me/2017/05/01/MyView/Movie/the-name-of-people/"/>
    <id>http://aisee.me/2017/05/01/MyView/Movie/the-name-of-people/</id>
    <published>2017-05-01T10:57:18.000Z</published>
    <updated>2017-05-06T10:03:43.679Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://omj173lhw.bkt.clouddn.com/p2452241358.webp" alt=""></p>
<blockquote>
<p>A straight foot is not afraid of a crooked shoe<br>A true story of Chinese officialdom<br>Selfless, Upright…</p>
</blockquote>
<a id="more"></a>
<p><img src="http://omj173lhw.bkt.clouddn.com/p2453102923.webp" alt=""></p>
<p><img src="http://omj173lhw.bkt.clouddn.com/p2453102682.webp" alt=""></p>
<p><img src="http://omj173lhw.bkt.clouddn.com/p2453102678.webp" alt=""></p>
<p><img src="http://omj173lhw.bkt.clouddn.com/p2453102680.webp" alt=""></p>
<p><img src="http://omj173lhw.bkt.clouddn.com/p2453103794.webp" alt=""></p>
<p><img src="http://omj173lhw.bkt.clouddn.com/p2409995013.webp" alt=""></p>
<p>人民的名义的剧情简介 · · · · · ·<br>　　夜幕下的汉东省京州市，看似平静的官场霎时间阴云密布。国家部委项目处处长赵德汉涉嫌受贿，遭到最高人民检察院反贪总局侦查处处长侯亮平（陆毅 饰）的突击调查。与此同时，侯亮平要求在京州市反贪局担任局长的老同学陈海协助调查有行贿嫌疑的京州市副市长丁义珍。陈海嫉恶如仇，准备行动， 却被检察长季昌明拦下，一同前往省里汇报。此前汉东省由省委副书记兼政法委书记高育良和省省委常委、京州市委书记李达康（吴刚 饰）截然分为“汉大帮”和“秘书帮”两派，新来的书记沙瑞金（张丰毅 饰）则无疑打破了两派的平衡。狡猾的丁义珍得知消息后潜逃海外，随后大风厂拆迁风波揭开了京州市乃至汉东省的官场黑幕。一场反贪风暴即将掀起……<br>　　本剧根据周梅森的同名小说改编。 ©豆瓣</p>
<h2 id="阶层固化下的小人物奋斗"><a href="#阶层固化下的小人物奋斗" class="headerlink" title="阶层固化下的小人物奋斗"></a><a href="https://movie.douban.com/subject/26727273/" target="_blank" rel="external">阶层固化下的小人物奋斗</a></h2><p><img src="https://img1.doubanio.com/view/thing_review/large/public/p635338.jpg" alt=""></p>
<p>版权归作者所有，任何形式转载请联系作者。<br>作者：Jason_Zhou（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8507360/" target="_blank" rel="external">https://movie.douban.com/review/8507360/</a></p>
<p>李达康：具有较强的工作能力以及胆识和魄力，但是由于所谓的爱惜羽毛，没有朋友，没有生活；从个人角度讲，这是一个有能力的民二代的奋斗之路，代价是妻离子散，无情无义，但是如果是有情有义，他能在结局善终么？在这个人物的内心，他真的幸福么？</p>
<p>祁同伟：具有较强的工作能力以及胆识和魄力，在经历了，对权力碾压，向权力靠拢，再到被权力征服，最后成为权力的奴隶。还有一种说辞，理想向现实低头，在现实中迷失，在现实中沉沦。这也是一个民二代的奋斗之路，代价是放弃底线，放弃人格，饮弹自尽，我想这是编剧给人物最大的尊重。</p>
<p>高小琴：一个贫女的奋斗史，要想成功突破阶层上线，只有接近更高的阶层，哪怕是成为上层的工具，从踏上那条路一开始，就再也没有选择，也再也不能回头，只有奋力向前！</p>
<p>在社会的运行法则中，一直有定理：那就是有得必有失，如果一个人想要实现 阶层固化下的越层，努力奋斗史基本条件，而放弃某些东西也是基本条件，李达康和祁同伟无疑是幸运的，至少他们可以选择舍弃什么，得到什么，而高小琴呢，她没得选。</p>
<h2 id="人民的名义中的官场细节-amp-政治生态"><a href="#人民的名义中的官场细节-amp-政治生态" class="headerlink" title="人民的名义中的官场细节&amp;政治生态"></a>人民的名义中的官场细节&amp;政治生态</h2><p>版权归作者所有，任何形式转载请联系作者。<br>作者：郎真多（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/8445022/" target="_blank" rel="external">https://movie.douban.com/review/8445022/</a></p>
<p>所谓“规”就是双规，“规定时间，规定地点，交代问题”，这是由纪检部门所做的行为，请注意纪检是中国共产党的纪律检查，所以双规是中国共产党对党员是否违反党的纪律的调查。而“拘”则是指走司法程序，说明已经有比较明确的证据证明其已经违反了法律</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://omj173lhw.bkt.clouddn.com/p2452241358.webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A straight foot is not afraid of a crooked shoe&lt;br&gt;A true story of Chinese officialdom&lt;br&gt;Selfless, Upright…&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>A Complete Guide To Learn RxJava</title>
    <link href="http://aisee.me/2017/04/30/Program/Android/a-complete-guide-to-learn-rxJava/"/>
    <id>http://aisee.me/2017/04/30/Program/Android/a-complete-guide-to-learn-rxJava/</id>
    <published>2017-04-30T14:11:06.000Z</published>
    <updated>2017-04-30T14:25:31.947Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn-images-1.medium.com/max/1000/1*S_Mq74exiad5JrgyN-41pw.png" alt=""></p>
<blockquote>
<p>RxJava is an art and endless possibilities await those who can master it</p>
</blockquote>
<a id="more"></a>
<p><a href="https://blog.mindorks.com/a-complete-guide-to-learn-rxjava-b55c0cea3631" target="_blank" rel="external">A Complete Resources To Learn RxJava At One Place.</a></p>
<h2 id="What-is-RxJava"><a href="#What-is-RxJava" class="headerlink" title="What is RxJava?"></a>What is RxJava?</h2><p>RxJava is used for reactive programming. In reactive programming, the consumer reacts to the data as it comes in. Reactive programming allows for event changes to propagate to registered observers.</p>
<p>As we know that the RxJava is the most important library for Android Projects. So we must have a proper grip on using RxJava in the Android Projects.</p>
<p>And I believe:<br>RxJava is an art and endless possibilities await those who can master it</p>
<p>Let’s see all the best resources available to learn RxJava in the best possible way.</p>
<h2 id="Grokking-RxJava-Series"><a href="#Grokking-RxJava-Series" class="headerlink" title="Grokking RxJava Series"></a>Grokking RxJava Series</h2><p>RxJava is the new hotness amongst Android developers these days. The only problem is that it can be difficult to approach initially. Functional Reactive Programming is hard when you come from an imperative world, but once you understand it, it’s so awesome.</p>
<h2 id="Learn-RxJava-By-Examples"><a href="#Learn-RxJava-By-Examples" class="headerlink" title="Learn RxJava By Examples"></a>Learn RxJava By Examples</h2><p>Because Learning by examples is the best way to learn.<br>amitshekhariitbhu/RxJava2-Android-Samples</p>
<p>RxJava2-Android-Samples - RxJava 2 Android Examples - Migration From RxJava 1 to RxJava 2 - How to use RxJava 2 in…<br>github.com<br>It consists of many examples like:<br>How to use operators in RxJava?<br>How to do networking in RxJava?<br>How to implement RxBus(EventBus) in RxJava?<br>How to implement pagination with RxJava?<br>Another one is from Kaushik. I have learned a lot from here.<br>kaushikgopal/RxJava-Android-Samples</p>
<p>RxJava-Android-Samples - Learning RxJava for Android by example<br>github.com</p>
<h2 id="Exploring-RxJava-2-for-Android-by-Jake-Wharton"><a href="#Exploring-RxJava-2-for-Android-by-Jake-Wharton" class="headerlink" title="Exploring RxJava 2 for Android by Jake Wharton"></a>Exploring RxJava 2 for Android by Jake Wharton</h2><p><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-30_222219.jpg" alt=""></p>
<p><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-30_222250.jpg" alt=""></p>
<h2 id="Managing-State-with-RxJava-by-Jake-Wharton"><a href="#Managing-State-with-RxJava-by-Jake-Wharton" class="headerlink" title="Managing State with RxJava by Jake Wharton"></a>Managing State with RxJava by Jake Wharton</h2><h2 id="Another-Learn-Rxjava-By-Examples"><a href="#Another-Learn-Rxjava-By-Examples" class="headerlink" title="Another Learn Rxjava By Examples"></a>Another Learn Rxjava By Examples</h2><p>Understanding RxJava Subject — Publish, Replay, Behavior and Async Subject<br>Understanding RxJava Subject — Publish, Replay, Behavior and Async Subject</p>
<p>This article is all about the Subject available in RxJava.<br>blog.mindorks.com<br>Using RxJava In Networking<br>RxJava + Fast Android Networking</p>
<p>Big news: Fast Android Networking now supports RxJava.<br>blog.mindorks.com<br>Better Explanation of RxJava and Using It In Android<br>RxAndroid Basics: Part 1</p>
<p>Welcome friend! So glad to see you! So you’re a little curious about this RxJava stuff and how it applies to Android…<br>medium.com<br>The Complete Introduction To Reactive Programming<br>Link here.<br>Intro To RxJava<br>Link here.<br>Crunching RxAndroid<br>Crunching RxAndroid — Intro</p>
<p>Learning Reactive Programming the easy way<br>medium.com<br>Why should you use RxJava in Android?<br>Why you should use RxJava in Android a short introduction to RxJava</p>
<p>In most Android applications, you are reacting to user interactions (clicks, swipes and etc.) while doing something…<br>blog.feedpresso.com<br>With great power, comes great responsibility. So learn it in the best way.<br>Happy Coding :)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1000/1*S_Mq74exiad5JrgyN-41pw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RxJava is an art and endless possibilities await those who can master it&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="RxJava" scheme="http://aisee.me/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Creating Custom Model For Android Using TensorFlow</title>
    <link href="http://aisee.me/2017/04/30/AI/TensorFlow/creating-custom-model-for-android-using-tensorflow/"/>
    <id>http://aisee.me/2017/04/30/AI/TensorFlow/creating-custom-model-for-android-using-tensorflow/</id>
    <published>2017-04-30T13:43:06.000Z</published>
    <updated>2017-04-30T13:46:13.686Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.mindorks.com/creating-custom-model-for-android-using-tensorflow-3f963d270bfb" target="_blank" rel="external">Article Source</a></p>
<blockquote>
<p>In this article, we will train a model to recognize the handwritten digits. Here, we will use the famous MNIST Image Dataset which like the Hello World in Machine Learning for simplicity.</p>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/1250/1*Kyuv2e6HrUh8_b9jM1c7HA.png" alt=""></p>
 <a id="more"></a>
<p> As I had promised in my previous article on building TensorFlow for Android that I will be writing an article on How to train custom model for Android using TensorFlow. So, I have written this article. Still more to come.<br>If you have not checked my article on building TensorFlow for Android, check here.<br>Android TensorFlow Machine Learning Example</p>
<p>Machine Learning: Integrating Tensorflow in Android<br>blog.mindorks.com<br>In this article, we will train a model to recognize the handwritten digits. Here, we will use the famous MNIST Image Dataset which like the Hello World in Machine Learning for simplicity.<br>Credit: The classifier example has been taken from Google TensorFlow example. The custom drawing view used in this project is taken from here.</p>
<p><img src="https://cdn-images-1.medium.com/max/500/1*YdULNcG8A7AECa07xum7xQ.png" alt=""></p>
<p><img src="https://cdn-images-1.medium.com/max/500/1*YjGUlBmV61HWSaSS6bWTmg.png" alt=""></p>
<p><img src="https://cdn-images-1.medium.com/max/500/1*iMgj8cYImOprdk_T6N5JTA.png" alt=""></p>
<p>Screenshot from sample app<br>Here is the complete sample project.<br>MindorksOpenSource/AndroidTensorFlowMNISTExample</p>
<p>AndroidTensorFlowMNISTExample - Android TensorFlow MachineLearning MNIST Example (Building Model with TensorFlow for…<br>github.com<br>The complete code to train and save the model which will directly run on Android is below. Read it carefully.</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div></pre></td><td class="code"><pre><div class="line">from __future__ import print_function</div><div class="line">import shutil</div><div class="line">import os.path</div><div class="line">import tensorflow as tf</div><div class="line">from tensorflow.examples.tutorials.mnist import input_data</div><div class="line"></div><div class="line">EXPORT_DIR = './model'</div><div class="line"></div><div class="line">if os.path.exists(EXPORT_DIR):</div><div class="line">    shutil.rmtree(EXPORT_DIR)</div><div class="line"></div><div class="line">mnist = input_data.read_data_sets("MNIST_data/", one_hot=True)</div><div class="line"></div><div class="line"># Parameters</div><div class="line">learning_rate = 0.001</div><div class="line">training_iters = 200000</div><div class="line">batch_size = 128</div><div class="line">display_step = 10</div><div class="line"></div><div class="line"># Network Parameters</div><div class="line">n_input = 784  # MNIST data input (img shape: 28*28)</div><div class="line">n_classes = 10  # MNIST total classes (0-9 digits)</div><div class="line">dropout = 0.75  # Dropout, probability to keep units</div><div class="line"></div><div class="line"># tf Graph input</div><div class="line">x = tf.placeholder(tf.float32, [None, n_input])</div><div class="line">y = tf.placeholder(tf.float32, [None, n_classes])</div><div class="line">keep_prob = tf.placeholder(tf.float32)  # dropout (keep probability)</div><div class="line"></div><div class="line"></div><div class="line"># Create some wrappers for simplicity</div><div class="line">def conv2d(x, W, b, strides=1):</div><div class="line">    # Conv2D wrapper, with bias and relu activation</div><div class="line">    x = tf.nn.conv2d(x, W, strides=[1, strides, strides, 1], padding='SAME')</div><div class="line">    x = tf.nn.bias_add(x, b)</div><div class="line">    return tf.nn.relu(x)</div><div class="line"></div><div class="line"></div><div class="line">def maxpool2d(x, k=2):</div><div class="line">    # MaxPool2D wrapper</div><div class="line">    return tf.nn.max_pool(x, ksize=[1, k, k, 1], strides=[1, k, k, 1],</div><div class="line">                          padding='SAME')</div><div class="line"></div><div class="line"></div><div class="line"># Create Model</div><div class="line">def conv_net(x, weights, biases, dropout):</div><div class="line">    # Reshape input picture</div><div class="line">    x = tf.reshape(x, shape=[-1, 28, 28, 1])</div><div class="line"></div><div class="line">    # Convolution Layer</div><div class="line">    conv1 = conv2d(x, weights['wc1'], biases['bc1'])</div><div class="line">    # Max Pooling (down-sampling)</div><div class="line">    conv1 = maxpool2d(conv1, k=2)</div><div class="line"></div><div class="line">    # Convolution Layer</div><div class="line">    conv2 = conv2d(conv1, weights['wc2'], biases['bc2'])</div><div class="line">    # Max Pooling (down-sampling)</div><div class="line">    conv2 = maxpool2d(conv2, k=2)</div><div class="line"></div><div class="line">    # Fully connected layer</div><div class="line">    # Reshape conv2 output to fit fully connected layer input</div><div class="line">    fc1 = tf.reshape(conv2, [-1, weights['wd1'].get_shape().as_list()[0]])</div><div class="line">    fc1 = tf.add(tf.matmul(fc1, weights['wd1']), biases['bd1'])</div><div class="line">    fc1 = tf.nn.relu(fc1)</div><div class="line">    # Apply Dropout</div><div class="line">    fc1 = tf.nn.dropout(fc1, dropout)</div><div class="line"></div><div class="line">    # Output, class prediction</div><div class="line">    out = tf.add(tf.matmul(fc1, weights['out']), biases['out'])</div><div class="line">    return out</div><div class="line"></div><div class="line"></div><div class="line"># Store layers weight &amp; bias</div><div class="line">weights = &#123;</div><div class="line">    # 5x5 conv, 1 input, 32 outputs</div><div class="line">    'wc1': tf.Variable(tf.random_normal([5, 5, 1, 32])),</div><div class="line">    # 5x5 conv, 32 inputs, 64 outputs</div><div class="line">    'wc2': tf.Variable(tf.random_normal([5, 5, 32, 64])),</div><div class="line">    # fully connected, 7*7*64 inputs, 1024 outputs</div><div class="line">    'wd1': tf.Variable(tf.random_normal([7 * 7 * 64, 1024])),</div><div class="line">    # 1024 inputs, 10 outputs (class prediction)</div><div class="line">    'out': tf.Variable(tf.random_normal([1024, n_classes]))</div><div class="line">&#125;</div><div class="line"></div><div class="line">biases = &#123;</div><div class="line">    'bc1': tf.Variable(tf.random_normal([32])),</div><div class="line">    'bc2': tf.Variable(tf.random_normal([64])),</div><div class="line">    'bd1': tf.Variable(tf.random_normal([1024])),</div><div class="line">    'out': tf.Variable(tf.random_normal([n_classes]))</div><div class="line">&#125;</div><div class="line"></div><div class="line"># Construct model</div><div class="line">pred = conv_net(x, weights, biases, keep_prob)</div><div class="line"></div><div class="line"># Define loss and optimizer</div><div class="line">cost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(pred, y))</div><div class="line">optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate).minimize(cost)</div><div class="line"></div><div class="line"># Evaluate model</div><div class="line">correct_pred = tf.equal(tf.argmax(pred, 1), tf.argmax(y, 1))</div><div class="line">accuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))</div><div class="line"></div><div class="line"># Initializing the variables</div><div class="line">init = tf.initialize_all_variables()</div><div class="line"></div><div class="line"># Launch the graph</div><div class="line">with tf.Session() as sess:</div><div class="line">    sess.run(init)</div><div class="line">    step = 1</div><div class="line">    # Keep training until reach max iterations</div><div class="line">    while step * batch_size &lt; training_iters:</div><div class="line">        batch_x, batch_y = mnist.train.next_batch(batch_size)</div><div class="line">        # Run optimization op (backprop)</div><div class="line">        sess.run(optimizer, feed_dict=&#123;x: batch_x, y: batch_y,</div><div class="line">                                       keep_prob: dropout&#125;)</div><div class="line">        if step % display_step == 0:</div><div class="line">            # Calculate batch loss and accuracy</div><div class="line">            loss, acc = sess.run([cost, accuracy], feed_dict=&#123;x: batch_x,</div><div class="line">                                                              y: batch_y,</div><div class="line">                                                              keep_prob: 1.&#125;)</div><div class="line">            print("Iter " + str(step * batch_size) + ", Minibatch Loss= " + \</div><div class="line">                  "&#123;:.6f&#125;".format(loss) + ", Training Accuracy= " + \</div><div class="line">                  "&#123;:.5f&#125;".format(acc))</div><div class="line">        step += 1</div><div class="line">    print("Optimization Finished!")</div><div class="line"></div><div class="line">    # Calculate accuracy for 256 mnist test images</div><div class="line">    print("Testing Accuracy:", \</div><div class="line">          sess.run(accuracy, feed_dict=&#123;x: mnist.test.images[:256],</div><div class="line">                                        y: mnist.test.labels[:256],</div><div class="line">                                        keep_prob: 1.&#125;))</div><div class="line">    WC1 = weights['wc1'].eval(sess)</div><div class="line">    BC1 = biases['bc1'].eval(sess)</div><div class="line">    WC2 = weights['wc2'].eval(sess)</div><div class="line">    BC2 = biases['bc2'].eval(sess)</div><div class="line">    WD1 = weights['wd1'].eval(sess)</div><div class="line">    BD1 = biases['bd1'].eval(sess)</div><div class="line">    W_OUT = weights['out'].eval(sess)</div><div class="line">    B_OUT = biases['out'].eval(sess)</div><div class="line"></div><div class="line"># Create new graph for exporting</div><div class="line">g = tf.Graph()</div><div class="line">with g.as_default():</div><div class="line">    x_2 = tf.placeholder("float", shape=[None, 784], name="input")</div><div class="line"></div><div class="line">    WC1 = tf.constant(WC1, name="WC1")</div><div class="line">    BC1 = tf.constant(BC1, name="BC1")</div><div class="line">    x_image = tf.reshape(x_2, [-1, 28, 28, 1])</div><div class="line">    CONV1 = conv2d(x_image, WC1, BC1)</div><div class="line">    MAXPOOL1 = maxpool2d(CONV1, k=2)</div><div class="line"></div><div class="line">    WC2 = tf.constant(WC2, name="WC2")</div><div class="line">    BC2 = tf.constant(BC2, name="BC2")</div><div class="line">    CONV2 = conv2d(MAXPOOL1, WC2, BC2)</div><div class="line">    MAXPOOL2 = maxpool2d(CONV2, k=2)</div><div class="line"></div><div class="line">    WD1 = tf.constant(WD1, name="WD1")</div><div class="line">    BD1 = tf.constant(BD1, name="BD1")</div><div class="line"></div><div class="line">    FC1 = tf.reshape(MAXPOOL2, [-1, WD1.get_shape().as_list()[0]])</div><div class="line">    FC1 = tf.add(tf.matmul(FC1, WD1), BD1)</div><div class="line">    FC1 = tf.nn.relu(FC1)</div><div class="line"></div><div class="line">    W_OUT = tf.constant(W_OUT, name="W_OUT")</div><div class="line">    B_OUT = tf.constant(B_OUT, name="B_OUT")</div><div class="line"></div><div class="line">    # skipped dropout for exported graph as there</div><div class="line">    # is no need for already calculated weights</div><div class="line"></div><div class="line">    OUTPUT = tf.nn.softmax(tf.matmul(FC1, W_OUT) + B_OUT, name="output")</div><div class="line"></div><div class="line">    sess = tf.Session()</div><div class="line">    init = tf.initialize_all_variables()</div><div class="line">    sess.run(init)</div><div class="line"></div><div class="line">    graph_def = g.as_graph_def()</div><div class="line">    tf.train.write_graph(graph_def, EXPORT_DIR, 'mnist_model_graph.pb', as_text=False)</div><div class="line"></div><div class="line">    # Test trained model</div><div class="line">    y_train = tf.placeholder("float", [None, 10])</div><div class="line">    correct_prediction = tf.equal(tf.argmax(OUTPUT, 1), tf.argmax(y_train, 1))</div><div class="line">    accuracy = tf.reduce_mean(tf.cast(correct_prediction, "float"))</div><div class="line"></div><div class="line">    print("check accuracy %g" % accuracy.eval(</div><div class="line">            &#123;x_2: mnist.test.images, y_train: mnist.test.labels&#125;, sess))</div></pre></td></tr></table></figure>
<p>Explanation of code:<br>First, it downloads the dataset from the MNIST.<br>Then it starts training the model.<br>After training, it checks accuracy.<br>Then, it saves the model to the given path and checks the accuracy again.<br>Check the complete python code here.<br>MindorksOpenSource/AndroidTensorFlowMNISTExample</p>
<p>AndroidTensorFlowMNISTExample - Android TensorFlow MachineLearning MNIST Example (Building Model with TensorFlow for…<br>github.com<br>It is very easy to understand it by reading the python code.<br>When we run this code, we get the required trained model that will be used in the Android application.<br>If you are getting any problem in building the project, connect with me, I will be happy to help.<br>Happy Coding :)</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://blog.mindorks.com/creating-custom-model-for-android-using-tensorflow-3f963d270bfb&quot;&gt;Article Source&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this article, we will train a model to recognize the handwritten digits. Here, we will use the famous MNIST Image Dataset which like the Hello World in Machine Learning for simplicity.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1250/1*Kyuv2e6HrUh8_b9jM1c7HA.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="TensorFlow" scheme="http://aisee.me/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Android TensorFlow Machine Learning Example</title>
    <link href="http://aisee.me/2017/04/30/AI/TensorFlow/android-tensorFlow-machine-learning-example/"/>
    <id>http://aisee.me/2017/04/30/AI/TensorFlow/android-tensorFlow-machine-learning-example/</id>
    <published>2017-04-30T13:36:06.000Z</published>
    <updated>2017-05-03T08:25:51.135Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.mindorks.com/android-tensorflow-machine-learning-example-ff0e9b2654cc" target="_blank" rel="external">Article Source</a></p>
<blockquote>
<p>Machine Learning: Integrating Tensorflow in Android</p>
</blockquote>
<p><img src="https://cdn-images-1.medium.com/max/800/1*NeIBdXoA5gQRDoCAo3CfNQ.png" alt=""></p>
 <a id="more"></a>
<p> As we all know Google has open-sourced a library called TensorFlow that can be used in Android for implementing Machine Learning.</p>
<p>TensorFlow is an open-source software library for Machine Intelligence provided by Google.</p>
<p>I searched the internet a lot but did not find a simple way or a simple example to build TensorFlow for Android. After going through many resources, I was able to build it. Then, I decided to write on it so that it would not take time for others.</p>
<p>Credit: The classifier example has been taken from Google TensorFlow example.</p>
<p>This article is for those who are already familiar with machine learning and know how to the build model for machine learning(for this example I will be using a pre-trained model). Sooner, I will be writing a series of articles on machine learning so that everybody can learn how to build the model for machine learning.</p>
<p>Let’s start with the building process for Android<br>Few important pointers that we should know:<br>The core of the TensorFlow is written in c++.<br>In order to build for android, we have to use JNI(Java Native Interface) to call the c++ functions like loadModel, getPredictions, etc.</p>
<p>We will have a .so(shared object) file which is a c++ compiled file and a jar file which will consist of JAVA API that will be calling the native c++. And then, we will be calling the JAVA API to get things done easily.</p>
<p>So, we need the jar(Java API) and a .so(c++ compiled) file.</p>
<p>We must have the pre-trained model file and a label file for the classification.</p>
<p>We will be building the below object detection.</p>
<p><img src="https://cdn-images-1.medium.com/max/800/1*FGXmgMprzz6cRo6-MK9mQw.png" alt=""></p>
<p>So let’s build the jar and .so file.</p>
<p>git clone –recurse-submodules  <a href="https://github.com/tensorflow/tensorflow.git" target="_blank" rel="external">https://github.com/tensorflow/tensorflow.git</a><br>Note: –recurse-submodules is important to pull submodules.</p>
<p>Download NDK from here.<br>Download Android SDK or we can provide the path from Android Studio SDK.<br>Install Bazel from here. Bazel is the primary build system for TensorFlow.<br>Now, edit the WORKSPACE, we can find the WORKSPACE file in the root directory of the TensorFlow that we have cloned earlier.</p>
<h1 id="Uncomment-and-update-the-paths-in-these-entries-to-build-the-Android-demo"><a href="#Uncomment-and-update-the-paths-in-these-entries-to-build-the-Android-demo" class="headerlink" title="Uncomment and update the paths in these entries to build the Android demo."></a>Uncomment and update the paths in these entries to build the Android demo.</h1><p>#android_sdk_repository(</p>
<h1 id="name-“androidsdk”"><a href="#name-“androidsdk”" class="headerlink" title="name = “androidsdk”,"></a>name = “androidsdk”,</h1><h1 id="api-level-23"><a href="#api-level-23" class="headerlink" title="api_level = 23,"></a>api_level = 23,</h1><h1 id="build-tools-version-“25-0-1”"><a href="#build-tools-version-“25-0-1”" class="headerlink" title="build_tools_version = “25.0.1”,"></a>build_tools_version = “25.0.1”,</h1><h1 id="Replace-with-path-to-Android-SDK-on-your-system"><a href="#Replace-with-path-to-Android-SDK-on-your-system" class="headerlink" title="# Replace with path to Android SDK on your system"></a># Replace with path to Android SDK on your system</h1><h1 id="path-““"><a href="#path-““" class="headerlink" title="path = ““,"></a>path = “<path_to_sdk>“,</path_to_sdk></h1><p>#)<br>#</p>
<p>#android_ndk_repository(</p>
<h1 id="name-”androidndk”"><a href="#name-”androidndk”" class="headerlink" title="name=”androidndk”,"></a>name=”androidndk”,</h1><h1 id="path-”“"><a href="#path-”“" class="headerlink" title="path=”“,"></a>path=”<path_to_ndk>“,</path_to_ndk></h1><h1 id="api-level-14"><a href="#api-level-14" class="headerlink" title="api_level=14)"></a>api_level=14)</h1><p>Like below with our sdk and ndk path:<br>android_sdk_repository(<br>    name = “androidsdk”,<br>    api_level = 23,<br>    build_tools_version = “25.0.1”,</p>
<pre><code># Replace with path to Android SDK on your system
path = &quot;/Users/amitshekhar/Library/Android/sdk/&quot;,
</code></pre><p>)<br>android_ndk_repository(<br>    name=”androidndk”,<br>    path=”/Users/amitshekhar/Downloads/android-ndk-r13/“,<br>    api_level=14)<br>Then build the .so file.<br>bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so \<br>   –crosstool_top=//external:android/crosstool \<br>   –host_crosstool_top=@bazel_tools//tools/cpp:toolchain \<br>   –cpu=armeabi-v7a<br>Replacing armeabi-v7a with our desired target architecture.<br>The library will be located at:<br>bazel-bin/tensorflow/contrib/android/libtensorflow_inference.so<br>To build the Java counterpart:<br>bazel build //tensorflow/contrib/android:android_tensorflow_inference_java</p>
<p>We can find the JAR file at:<br>bazel-bin/tensorflow/contrib/android/libandroid_tensorflow_inference_java.jar</p>
<p>Now we have both jar and .so file. I have already built both .so file and jar, you can directly use from the below project.<br>I have created a complete running sample application here.<br>MindorksOpenSource/AndroidTensorFlowMachineLearningExample</p>
<p>AndroidTensorFlowMachineLearningExample - Android TensorFlow MachineLearning Example (Building TensorFlow for Android)<br>github.com</p>
<p>But, we need the pre-trained model and label file.<br>In this example, we will use the Google pre-trained model which does the object detection on a given image.<br>We can download the model from here.</p>
<p>Unzip this zip file, we will get imagenet_comp_graph_label_strings.txt(label for objects) and tensorflow_inception_graph.pb (pre-trained model).</p>
<p>Now, create an android sample project in Android Studio.<br>Put imagenet_comp_graph_label_strings.txt and tensorflow_inception_graph.pb into assets folder.<br>Put libandroid_tensorflow_inference_java.jar in libs folder and right click and add as library.</p>
<p>compile files(‘libs/libandroid_tensorflow_inference_java.jar’)<br>Create jniLibs folder in main directory and put libtensorflow_inference.so in jniLibs/armeabi-v7a/ folder.</p>
<p>Now, we will be able to call TensorFlow Java API.<br>The TensorFlow Java API has exposed all the required methods through a class TensorFlowInferenceInterface.<br>Now, we have to call the TensorFlow Java API with the model path and load it.</p>
<p>And, then we can provide the input image to get the prediction.</p>
<p>To see it completely working, clone the project, build and run.</p>
<p>MindorksOpenSource/AndroidTensorFlowMachineLearningExample</p>
<p>AndroidTensorFlowMachineLearningExample - Android TensorFlow MachineLearning Example (Building TensorFlow for Android)<br>github.com</p>
<p>If you are getting any problem in building the project, connect with me, I will be happy to help.<br>Update: Check Creating Custom Model For Android Using TensorFlow Here.<br>Creating Custom Model For Android Using TensorFlow</p>
<p>As I had promised in my previous article on building TensorFlow for Android that I will be writing an article on How to…</p>
<p>blog.mindorks.com<br>Happy Coding :)</p>
<p>Thanks for reading this article. Be sure to click ❤ below to recommend this article if you found it helpful. It means a lot to me.</p>
<p>For more about programming, follow me and Mindorks , so you’ll get notified when we write new posts.<br>Check out all the Mindorks best articles here.<br>Also, Let’s become friends on Twitter, Linkedin, Github and Facebook.</p>
<h2 id="机器学习：如何在安卓上集成-TensorFlow"><a href="#机器学习：如何在安卓上集成-TensorFlow" class="headerlink" title="机器学习：如何在安卓上集成 TensorFlow"></a><a href="https://www.myzaker.com/article/590188631bc8e0426e00001a/" target="_blank" rel="external">机器学习：如何在安卓上集成 TensorFlow</a></h2><p><img src="http://zkres1.myzaker.com/201704/590188621bc8e0426e000011_640.jpg" alt=""><br>授权转自 THU 数据派<br>作者：Amit Shekhar</p>
<p>翻译：梁傅淇    王军福</p>
<p>校对：李君</p>
<p>原文链接：<a href="https://blog.mindorks.com/android-tensorflow-machine-learning-example-ff0e9b2654cc#.aoq0izsg6" target="_blank" rel="external">https://blog.mindorks.com/android-tensorflow-machine-learning-example-ff0e9b2654cc#.aoq0izsg6</a></p>
<p>我们都知道，谷歌有一个开源库叫做 TensorFlow，可被用在安卓系统中实现机器学习。换言之，TensorFlow 是谷歌为机器智能提供的一个开源软件库。</p>
<p>我在网络上搜寻了很久，都没有找到在安卓上搭建 TensorFlow 的简单的方法或实例。仔细查阅许多资料以后，我终于可以搭建它了。于是，我决定把我搭建的过程写出来，这样其他人就不必再浪费时间了。</p>
<p>这篇文章是写给那些熟悉机器学习并且知道怎样为机器学习搭建模型的人的（在这个示例中我会使用一个预训练模型）。近期，我会写一系列关于机器学习的文章，这样每个人都能够学到如何为机器学习搭建模型。</p>
<p>从搭建安卓上的机器学习模型过程讲起</p>
<p>我们需要知道的几个要点：</p>
<p>TensorFlow 的核心是用 C++ 编写的；</p>
<p>为了在安卓上搭建 TensorFlow，我们需要用 JNI（Java 本地接口）来调用 C++ 函数，比如说 loadModel，getPredictions，等等；</p>
<p>我们会用到 .so（shared object，即共享对象）文件，它是 C++ 编译文件；还会用到 jar 文件，它由能够调用本地 C++ 的 Java   API 组成。之后，我们就可以调用 Java   API 轻松地把事情做好；</p>
<p>所以我们需要 jar（Java   API）和一个 .so（C++ 编译）文件；</p>
<p>我们必须要有一个预训练模型文件和一个用于分类的标签文件。</p>
<p>我们会做以下的目标检测：</p>
<p>编译 jar 和 .so 文件<br>注意：–recurse-submodules 对于提取子模块（pull submodules）很重要。</p>
<p>在这里（<a href="https://developer.android.com/ndk/downloads/older_releases.html#ndk-12b-downloads）下载" target="_blank" rel="external">https://developer.android.com/ndk/downloads/older_releases.html#ndk-12b-downloads）下载</a> NDK。</p>
<p>下载安卓 SDK，或者，我们也可以从 Android Studio   SDK 提供路径。</p>
<p>安装 Bazel（<a href="https://bazel.build/versions/master/docs/install.html）。Bazel" target="_blank" rel="external">https://bazel.build/versions/master/docs/install.html）。Bazel</a> 是 TensorFlow 的主要编译系统。</p>
<p>现在，编辑工作空间（WORKSPACE），我们可以在早先克隆的 TesnsorFlow 根路径中找到工作空间（WORKSPACE）文件。</p>
<p>我们的 SDK 和 NDK 路径就跟下面一样：</p>
<p>然后编译生成 .so 文件：<br>将 armeabi-v7a 换成我们所需要的目标架构。</p>
<p>库会被放置在：</p>
<p>编译 Java 副本：<br>我们可以在这里找到 JAR 文件：</p>
<p>现在我们有了 jar 和 .so 文件。你也可以从下面的工程中直接提取使用我已经建立好的 .so 文件和 jar。</p>
<p>我已经在这里（<a href="https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample）创建了一个完整可运行的示例应用。" target="_blank" rel="external">https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample）创建了一个完整可运行的示例应用。</a></p>
<p>但是，我们需要预训练模型和标签文件。</p>
<p>在这个例子中，我们会使用 Google 预训练模型，它实现了在一张给定的照片上做目标检测。</p>
<p>解压缩 zip 文件，我们就会得到 imagenet_comp_graph_label.strings.txt（目标标签）以及 tensorflow_inception_graph.pb（预训练模型）。</p>
<p>现在，在 Android Studio 上创建安卓示例工程吧。</p>
<p>将 imagenet_comp_graph_label.strings.txt（目标标签）以及 tensorflow_inception_graph.pb 放进 assets 文件夹。</p>
<p>将 libandroid_tensorflow_inference_java.jar 放进 lib 文件夹，单击右键，添加库。</p>
<p>在主目录新建一个 jniLibs 文件夹并且将 libtensorflow_inference.so 放到 jniLibs/armeabi-v7a 文件夹中。<br>现在，我们就可以调用 TensorFlow Java API 了。</p>
<p>TensorFlow Java API 通过 TensorFlowInferenceInterface 类开放了所有需要的方法。</p>
<p>现在，我们可以用模型路径调用 TensorFlow Java API 并且加载它了。</p>
<p>然后，我们可以输入一张图片来获取预测结果。</p>
<p>如果想要体会完整的流程，克隆这个项目（<a href="https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample），搭建并运行它吧。" target="_blank" rel="external">https://github.com/MindorksOpenSource/AndroidTensorFlowMachineLearningExample），搭建并运行它吧。</a></p>
<p>如果你在搭建这个项目的过程中有任何问题的话，联系我，我会非常乐意帮助你。</p>
<p>Happy Coding: )</p>
<h3 id="读者问答"><a href="#读者问答" class="headerlink" title="读者问答"></a>读者问答</h3><p>Q：我很疑惑要怎么连接到‘ so ’库？也没有任何一行像’ System.loadLibray ’的代码？</p>
<p>A：<strong>System.loadLibrary 已经写在 TensorFlow jar 中了。</strong></p>
<p>Q：所以这是一个 C++ 应用还是 Java 应用啊？你用的是什么语言？</p>
<p>A：这是一个用 Java 语言编写的安卓应用，它通过 Java 本地接口（JNI: Java Native Interface）调用 C++ 做预测（机器学习）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://blog.mindorks.com/android-tensorflow-machine-learning-example-ff0e9b2654cc&quot;&gt;Article Source&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Machine Learning: Integrating Tensorflow in Android&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/800/1*NeIBdXoA5gQRDoCAo3CfNQ.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="TensorFlow" scheme="http://aisee.me/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Tutorial  Build Your First Tensorflow Android App</title>
    <link href="http://aisee.me/2017/04/30/AI/TensorFlow/tutorial-build-your-first-tensorflow-android-app/"/>
    <id>http://aisee.me/2017/04/30/AI/TensorFlow/tutorial-build-your-first-tensorflow-android-app/</id>
    <published>2017-04-30T11:50:06.000Z</published>
    <updated>2017-04-30T11:53:29.783Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://omid.al/posts/2017-02-20-Tutorial-Build-Your-First-Tensorflow-Android-App.html" target="_blank" rel="external">Article Source</a></p>
<blockquote>
<p>A step-by-step tutorial on how to use a Tensorflow model inside an Android app</p>
</blockquote>
<p><img src="https://omid.al/img/tf_android.png" alt=""></p>
 <a id="more"></a>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>This tutorial helps you getting started with bringing your tensorflow models into your Android applications.</p>
<p>Recently, and slowly, tensorflow has been adding features and examples for using its models on Android and iOS. There are now three apps in the TensorFlow Android Camera Demo which show very cool computer vision examples. However, they all use models that are already prepared and packaged and don’t explain much how to create a new one. So, I thought it would be nice to have a short tutorial on how to start with your own machine learning model and use it inside any Android application.</p>
<p>In this tutorial, we go through two parts: creating and preparing the tensorflow model, and accessing the model inside an Android app. Although it doesn’t get deep into any machine learning or Android concepts, you need to have a basic knowledge of Python, Java, Tensorflow, and Android development to go follow this tutorial.</p>
<p>You need a working installation of tensorflow. I’ve tested these procedures on the recent v1.0 release of tensorflow, however, if you use older compiled libraries they work with v0.12 as well with minor changes. You can find the instructions on how to install tensorflow here.</p>
<h2 id="Preparing-the-TF-Model"><a href="#Preparing-the-TF-Model" class="headerlink" title="Preparing the TF Model"></a>Preparing the TF Model</h2><p>First, we first create a simple model and save its computation graph as a serialized GraphDef file. After training the model, we then save the values of its variables into a checkpoint file. We have to turn these two files into an optimized standalone file, which is all we need to use inside the Android app.</p>
<h2 id="Creating-and-Saving-the-Model"><a href="#Creating-and-Saving-the-Model" class="headerlink" title="Creating and Saving the Model"></a>Creating and Saving the Model</h2><p>For this tutorial, we create a very simple Tensorflow graph that implements a small single-layer neural network with ReLU activations. We define four tensors: a 3-dimensional input tensor named I, a 3x2 weight tensor named W, a bias tensor named b, and an output activation tensor named O.</p>
<p>This network might seem too simple and lack an actual learning, but I think it is enough to demonstrate the point. I know I could have been more creative here ;)</p>
<p>Running the above piece of code will produce two files: first, it saves the TF computation graph in a GraphDef text file called tfdroid.pbtxt. Next, it will do a simple assignment (which normally would be done through actual learning) and saves a checkpoint of the model variables in tfdroid.ckpt.</p>
<h2 id="Freezing-the-Graph"><a href="#Freezing-the-Graph" class="headerlink" title="Freezing the Graph"></a>Freezing the Graph</h2><p>Now that we have these files, we need to freeze the graph by converting the variables in the checkpoint file into Const Ops that contain the values of the variables, and combining them with the GraphDef proto in a single standalone file. Using this file makes it easier to load the model inside a mobile app. Tensorflow provides freeze_graph in tensorflow.python.tools for this purpose:</p>
<h2 id="Optimizing-the-Model-File"><a href="#Optimizing-the-Model-File" class="headerlink" title="Optimizing the Model File"></a>Optimizing the Model File</h2><p>Once we have the frozen graph, we can further optimize the file for inference-only purposes by removing the parts of the graph that are only needed during training. According to the documentation, these include:</p>
<p>Removing training-only operations like checkpoint saving.<br>Stripping out parts of the graph that are never reached.<br>Removing debug operations like CheckNumerics.<br>Folding batch normalization ops into the pre-calculated weights.<br>Fusing common operations into unified versions.<br>Tensorflow provides optimize_for_inference_lib in tensorflow.python.tools for this purpose:</p>
<p>Take note of the input nodes and output nodes in the above code. Our graph only has one input node named I, and one output node named O. These names correspond to the names you use when you define your tensors. You should adjust these based on your graph in case you are using a different one.</p>
<p>Now we have a binary file called optimized_tfdroid.pb. Now we are ready to build our Android app.</p>
<h2 id="Creating-the-Android-App"><a href="#Creating-the-Android-App" class="headerlink" title="Creating the Android App"></a>Creating the Android App</h2><p>We need to get the tensorflow libraries for Android, create an Android app and configure it to use these libraries, and then invoke the tensorflow model inside the app.</p>
<h2 id="Getting-the-TF-Libraries"><a href="#Getting-the-TF-Libraries" class="headerlink" title="Getting the TF Libraries"></a>Getting the TF Libraries</h2><p>Although you can compile the Tensorflow libraries from scratch, it’s easier to use the prebuilt libraries that are provided in nightly android builds.</p>
<p>For this tutorial, I’m using the lastest successful build at the time of this writing, Build #44 (Feb 17, 2017 12:05:00 AM), which you can download from:</p>
<p><a href="https://ci.tensorflow.org/view/Nightly/job/nightly-android/44/artifact/" target="_blank" rel="external">https://ci.tensorflow.org/view/Nightly/job/nightly-android/44/artifact/</a></p>
<p>Inside the nightly android builds, will find the installable package (.apk) for the official demo apps, the Java library (.jar), and the native shared libraries (.so) for different architectures.</p>
<h2 id="Creating-an-Empty-APP"><a href="#Creating-an-Empty-APP" class="headerlink" title="Creating an Empty APP"></a>Creating an Empty APP</h2><p>I used Android Studio to create an Android project with an empty activity.</p>
<h2 id="Add-the-TF-Libraries-to-Your-Project"><a href="#Add-the-TF-Libraries-to-Your-Project" class="headerlink" title="Add the TF Libraries to Your Project"></a>Add the TF Libraries to Your Project</h2><p>Once you have all the output artifacts from the nightly build, you need to add some of them to your project and let your build system know that you are going to use them. For this example, these include the Java and libtensorflow_inference native library.</p>
<p>Copy the libandroid_tensorflow_inference_java.jar and the architecture folders inside of the libtensorflow_inference.so folder to app/libs/. The libs/ folder should look like:</p>
<p>libs<br>|<strong><strong>arm64-v8a<br>| |</strong></strong>libtensorflow_inference.so<br>|<strong><strong>armeabi-v7a<br>| |</strong></strong>libtensorflow_inference.so<br>|<strong><strong>libandroid_tensorflow_inference_java.jar<br>|</strong></strong>x86<br>| |<strong><strong>libtensorflow_inference.so<br>|</strong></strong>x86_64<br>| |____libtensorflow_inference.so<br>You need to let your build system know where these libraries are located by putting the following lines inside of the android block in app/build.gradle:</p>
<h2 id="Copying-the-TF-Model"><a href="#Copying-the-TF-Model" class="headerlink" title="Copying the TF Model"></a>Copying the TF Model</h2><p>Create an Android Asset Folder for the app and put the optimized_tfdroid.pb that we just created inside (app/src/main/assets/).</p>
<h2 id="Add-Some-GUI"><a href="#Add-Some-GUI" class="headerlink" title="Add Some GUI"></a>Add Some GUI</h2><p>We can add some basic GUI so that we can enter different numbers as input. Here is what it could look like:</p>
<p><img src="https://omid.al/img/tfandroid/HelloTensorGUI.png" alt=""></p>
<h2 id="Accessing-the-TF-Inference-Interface"><a href="#Accessing-the-TF-Inference-Interface" class="headerlink" title="Accessing the TF Inference Interface"></a>Accessing the TF Inference Interface</h2><p>Inside of the MainActivity.java, we first import the TensorFlowInferenceInterface package:</p>
<p>And load the tensorflow_inference native library:</p>
<p>We use some constants to specify the path to the model file, the names of the input and output nodes in the computation graph, and the size of the input data as follows:</p>
<p>And create a TensorFlowInferenceInterface instance that we use to make inferences on the graph throughout the app:</p>
<p>We then initialize the inferenceInterface it and load the model file inside of the onCreate event of the MainActivity:</p>
<p>Now we are ready to perform an inference anywhere in the app.</p>
<h2 id="Perform-Inference"><a href="#Perform-Inference" class="headerlink" title="Perform Inference"></a>Perform Inference</h2><p>We perform inference by first filling the input nodes with our desired values (as we would do with feed_dict in Python):</p>
<p>And calling the runInference() method for the OUTPUT_NODE (similar to sess.run()):</p>
<p>Once the inference is done, we can read the value of the output node:</p>
<h2 id="Complete-Srouce-Code"><a href="#Complete-Srouce-Code" class="headerlink" title="Complete Srouce Code"></a>Complete Srouce Code</h2><p>You can look at/download/clone/fork the complete working example for the Android app here on Github.</p>
<p>The code snippets for creating and preparing the model can also be found here.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://omid.al/posts/2017-02-20-Tutorial-Build-Your-First-Tensorflow-Android-App.html&quot;&gt;Article Source&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A step-by-step tutorial on how to use a Tensorflow model inside an Android app&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://omid.al/img/tf_android.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="TensorFlow" scheme="http://aisee.me/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Awesome Android  Tips</title>
    <link href="http://aisee.me/2017/04/27/Program/Android/android-tips/"/>
    <id>http://aisee.me/2017/04/27/Program/Android/android-tips/</id>
    <published>2017-04-27T12:42:06.000Z</published>
    <updated>2017-04-27T12:45:46.087Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/activityStateDiagram.jpeg" alt=""></p>
<p><a href="https://github.com/jiang111/awesome-android-tips" target="_blank" rel="external">source</a></p>
<p>A picture is worth a thousand words</p>
<a id="more"></a>
<p><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/title.png" alt=""> <br><br><br><a href="https://github.com/jiang111/awesome-android-tips" target="_blank" rel="external"><img src="https://jiang111.github.io/images/awesome.svg" alt="jiang111/image"></a>  <br></p>
<p>值得收藏的AS插件 -&gt;_-&gt;:<a href="https://github.com/jiang111/awesome-androidstudio-plugins" target="_blank" rel="external">https://github.com/jiang111/awesome-androidstudio-plugins</a> <br></p>
<p>这里收集了大家常用的一些Android代码,持续更新中,内容来自自己的平时积累和网络上看到的文章，部分原文地址在最下方。如有错误欢迎指正,如有侵权,请联系我删除。里面可能会有重复内容,请忽略或者提醒我删除。<br><br></p>
<h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/toc.png" alt="Table of Contents"></h1><ul>
<li><p>setBackgroundResource(0) 可以移除 View 的背景色</p>
</li>
<li><p>Resources.getSystem().getDisplayMetrics().density 可以不用 Context 也能获取屏幕密度哦</p>
</li>
<li><p>通过重载 ViewGroup 的 dispatchDraw 可以实现一个简单的蒙版效果。 例如下拉刷新时，可以在 contentView 上加一层遮罩。 canvas.drawRect(0, mContentView.getTranslationY(), getWidth(), getHeight(), mMaskPaint);</p>
</li>
<li><p>new 出来的 View 可以用 View.generateViewId() （API 17 以上可用）   生成 id，系统保证唯一</p>
</li>
<li><p>使用 GridView时 android:padding 和 android:clipToPadding=”false” 配合使用效果更好哦。</p>
</li>
<li><p>在布局文件中，如果只是为了占位，可以用 Space 来取代 View。 最棒的一点是Space可以跳过 Draw 这个过程。</p>
</li>
<li><p>TypedValue.applyDimension(int unit, float value, DisplayMetrics metrics) 方便dp, px, sp 之间的转换。</p>
</li>
<li><p>Activity.startActivities() 这个方法最直接的理解就是使用intent开启多个Activity</p>
</li>
<li><p>TextUtils.isEmpty() 如果传入的String 为NULL或者Length为0的话就返回 true。</p>
</li>
<li><p>Html.fromHtml() 如果你对Html熟悉的话，可以很迅速通过这个方法处理一些富文本操作。比如超链接和图文排版等处理。</p>
</li>
<li><p>TextView.setError() 设置文本框错误提醒</p>
</li>
<li><p>Build.VERSION_CODES 有些时候我们的app需要根据不同的SDK版本进行执行不同的操作</p>
</li>
<li><p>PhoneNumberUtils.convertKeypadLettersToDigits 这个方法简单粗暴，会将输入的字母根据键盘上的映射转换为数字。</p>
</li>
<li><p>ArgbEvaluator ArgbEvaluator.evaluate(float fraction, Object startValue, Object endValue);根据一个起始颜色值和一个结束颜色值以及一个偏移量生成一个新的颜色，分分钟实现类似于微信底部栏滑动颜色渐变。</p>
</li>
<li><p>ValueAnimator.reverse() 顺畅的取消动画效果</p>
</li>
<li><p>DateUtils.formatDateTime()) 这个方法可以输出相应格式化的时间或者日期</p>
</li>
</ul>
<ul>
<li><p>Pair 这个类 可以用来存储存储一”组”数据。但不是key和value的关系。</p>
</li>
<li><p>SparseArray 目前有很多地方从性能优化方说使用SparseArray来替换hashMap，来节省内存，提高性能。</p>
</li>
<li><p>Linkify.addLinks() 这个类可以更方便的为文本添加超链接。</p>
</li>
<li><p>android.media.ThumbnailUtils这个类主要是用来处理缩略图相关的工作,比如:用来获取媒体（图片、视频）的缩略图</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">createVideoThumbnail(String filePath, int kind)</div><div class="line">extractThumbnail(Bitmap source, int width, int height)</div></pre></td></tr></table></figure>
</li>
<li><p>Bitmap.extractAlpha ();返回一个新的Bitmap，capture原始图片的alpha值。有的时候我们需要动态的修改一个元素的背景图片又不希望使用多张图片的时候，通过这个方法，结合Canvas和Paint可以动态的修改一个纯色Bitmap的颜色。</p>
</li>
<li><p>模块间有消息需要传递时，使用LocalBroadcastManager替代Listener进行模块解耦。除了解耦，这样发送消息和执行消息差一个线程循环，可以减小方法的调用链，我这就碰到一次方法调用链太长导致StackOverflow的问题。</p>
</li>
<li><p>静态变量不要直接或者间接引用Activity、Service等。这会使用Activity以及它所引用的所有对象无法释放，然后，用户操作时间一长，内存就会狂升。</p>
</li>
<li><p>Handler机制有一个特点是不会随着Activity、Service的生命周期结束而结束。也就是说，如果你Post了一个Delay的Runnable，然后在Runnable执行之前退出了Activity，Runnable到时间之后还是要执行的。如果Runnable里面包含更新View的操作，程序崩溃了。</p>
</li>
<li><p>不少人在子线程中更新View时喜欢使用Context.runOnUiThread，这个方法有个缺点，就是一但Context生命周期结束，比如Activity已经销毁时，一调用就会崩溃。</p>
</li>
<li><p>SharedPreferences.Editor.commit这个方法是同步的，一直到把数据同步到Flash上面之后才会返回，由IO操作的不可控，尽量使用apply方法代替。apply只在API Level&gt;=9才会支持，需要做兼容。不过，最新的 <code>support v4</code> 包已经为我们做好了处理，使用  <code>SharedPreferencesCompat.EditorCompat.getInstance().apply(editor)</code> 即可。</p>
</li>
<li><p>PackageManager.getInstalledPackages这个方法经常使用，你可能不知道，当获取的结果数量比较多的时候，在某些机型上面调用它花费的时间可能秒级的，所以尽量在子线程中使用。另外，如果结果太多，超过系统设置的Binder数据最大传输量的上限，则会发生TransactionException，如果你使用这个方法获取机器上的己安装应用列表，最好做一下预防。</p>
</li>
<li><p>如果使用Context.startActivity启动外部应用，最好做一下异常预防，因为寻找不到对应的应用时，会抛出异常。如果你要打开的是应用内的Activity，不防使用显式Intent，这样能提高系统搜索目标Activity的效率。</p>
</li>
<li><p>Application的生命周期就是进程的生命周期。只有进程被干掉时，Application才会销毁。哪怕是没有Activity、Service在运行，Application也会存在。所以，为了减少内存压力，尽量不要在Application里面引用大对象、Context等。</p>
</li>
<li><p>设置全屏方法有2种:1.通过代码设置，2通过manifest文件设置。用代码设置全屏时app在我们应用运行后，可能会看到短暂的状态栏，然后才全屏，而第二种方法是不会有这种情况的,所以推荐第二种。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//方法1:</div><div class="line">//无title   </div><div class="line">requestWindowFeature(Window.FEATURE_NO_TITLE);    </div><div class="line">getWindow().setFlags(WindowManager.LayoutParams. FLAG_FULLSCREEN,WindowManager.LayoutParams. FLAG_FULLSCREEN);   </div><div class="line">//必须在setContentView()之前调用</div><div class="line">setContentView(R.layout.main);  </div><div class="line">//方法2:</div><div class="line">&lt;activity android:name=&quot;.&quot;</div><div class="line">    android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot; //全屏主题</div><div class="line">    android:label=&quot;@string/app_name&quot; /&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>viewpager 的 setCurrentItem 一定要在 setAdapter 方法之后调用才会有效果.</p>
</li>
<li><p>判断手机是不是飞行模式  boolean isEnabled = Settings.System.getInt(context.getContentResolver(), Settings.System.AIRPLANE_MODE_ON, 0) == 1;</p>
</li>
<li><p>TabLayout 修改字体的方法<br>官方的 TabLayout 没有提供修改 TextView size 的方法，可以新建一个 style CustomTabLayoutTextAppearance 继承 TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse ，然后增加 item ，设置 android:textAllCaps 为 true ，再设置 android:textSize 为你想设置的大小。<br><img src="http://ww1.sinaimg.cn/large/640f03afjw1ex0t17aj67j20uk0580uf.jpg" alt=""><br>再在 TabLayout 的布局文件里设置 app:tabTextAppearance=”@style/CustomTabLayoutTextAppearance” 即可。<br><img src="http://ww1.sinaimg.cn/large/640f03afjw1ex0t1gub93j20ru0a477q.jpg" alt=""></p>
</li>
<li><p>遍历HashMap的最佳方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMap</span><span class="params">(Map mp)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (Map.Entry m : mp.entrySet()) &#123;</div><div class="line">            System.out.println(m.getKey() + <span class="string">":"</span> + m.getValue());</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用Java在一个区间内产生随机整数数</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">randInt</span><span class="params">(<span class="keyword">int</span> min, <span class="keyword">int</span> max)</span> </span>&#123;</div><div class="line">    Random rand = <span class="keyword">new</span> Random();</div><div class="line">    <span class="keyword">int</span> randomNum = rand.nextInt((max - min) + <span class="number">1</span>) + min;</div><div class="line">    <span class="keyword">return</span> randomNum;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>如果子类实现Serializable接口而父类未实现时，父类不会被序列化，但此时父类必须有个无参构造方法，否则会抛InvalidClassException异常。</p>
</li>
<li><p>transient关键字修饰变量可以限制序列化。</p>
</li>
<li><p>当使用JakeWharton的TabPageIndicator时，如果需要先做一些耗时的操作，然后再展示TabPageIndicator的话，需要先设置mIndirector.setVisibility(View.GONE);然后耗时任务结束以后再mIndirector.setVisibility(View.VISIBLE);否则会报错</p>
</li>
<li><p>类继承之间的调用顺序 父类static成员 -&gt; 子类static成员 -&gt; 父类普通成员初始化和初始化块 -&gt; 父类构造方法 -&gt; 子类普通成员初始化和初始化块 -&gt; 子类构造方法</p>
</li>
<li><p>华为手机无法显示log解决方案,.拨号界面输入(*#*#2846579#*#*) Service menu will appear.Go to “ProjectMenu” -&gt; “Background Setting” -&gt; “Log Setting”Open “Log switch” and set it to ON.Open “Log level setting” and set the log level you wish.</p>
</li>
<li><p>后台service经常因为重启之类的出现onStartCommand()中的Intent传递的参数为null， 通过在onStartCommand()中的返回值改成return super.onStartCommand(intent, Service.START_REDELIVER_INTENT, startId); 可以解决问题。下面介绍几个flag的意思<br></p>
</li>
<li><p>| flag        | 解释       |<br>| ————- |:————-:|<br>| START_STICKY | 如果service进程被kill掉，保留service的状态为开始状态，但不保留递送的intent对象。随后系统会尝试重新创建service，由于服务状态为开始状态，所以创建服务后一定会调用onStartCommand(Intent,int,int)方法。如果在此期间没有任何启动命令被传递到service，那么参数Intent将为null。 |<br>| START_NOT_STICKY | “非粘性的”。使用这个返回值时，如果在执行完onStartCommand后，服务被异常kill掉，系统不会自动重启该服务。 |<br>|START_REDELIVER_INTENT|重传Intent。使用这个返回值时，如果在执行完onStartCommand后，服务被异常kill掉，系统会自动重启该服务，并将Intent的值传入。|<br>|START_STICKY_COMPATIBILITY|START_STICKY的兼容版本，但不保证服务被kill后一定能重启。  |</p>
</li>
<li><p>不能在Activity没有完全显示时显示PopupWindow和Dialog</p>
</li>
<li><p>在多进程之间不要用SharedPreferences共享数据，虽然可以（MODE_MULTI_PROCESS），但极不稳定</p>
</li>
<li><p>有些时候不能使用Application的Context，不然会报错（比如启动Activity，显示Dialog等）<br><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/context_usage.png" alt=""></p>
</li>
</ul>
<blockquote>
<p>*备注：大家注意看到有一些NO上添加了一些数字，其实这些从能力上来说是YES，但是为什么说是NO呢？下面一个一个解释：</p>
<ol>
<li>数字1：启动Activity在这些类中是可以的，但是需要创建一个新的task，一般情况不推荐；</li>
<li>数字2：在这些类中去layout inflate是合法的，但是会使用系统默认的主题样式，如果你自定义了某些样式可能不会被使用；</li>
<li>数字3：在Receiver为null时允许，在4.2或以上的版本中，用于获取黏性广播的当前值。（可以无视）；</li>
<li>ContentProvider、BroadcastReceiver之所以在上述表格中，是因为在其内部方法中都有一个context用于使用。</li>
</ol>
</blockquote>
<ul>
<li>谨慎使用Android的透明主题，透明主题会导致很多问题，比如：如果新的Activity采用了透明主题，那么当前Activity的onStop方法不会被调用；在设置为透明主题的Activity界面按Home键时，可能会导致刷屏不干净的问题；进入主题为透明主题的界面会有明显的延时感</li>
<li><p>不要在非UI线程中初始化ViewStub，否则会返回null</p>
</li>
<li><p>尽量不要通过Application缓存数据，这不稳定</p>
</li>
<li><p>华为手机无法打开USB调试的问题，</p>
</li>
</ul>
<ol>
<li>插好数据线,拨号界面 输入 <em>#</em>#2846579#<em>#</em> 进入工程模式</li>
<li>projectmenu→3后台设置→4USB端口配置→Balong调试模式,点确定</li>
<li>不要拔线,退出工程模式,直接重启手机,电脑中显示可移动磁盘(若仍未出现,重复步骤1、2)</li>
<li>这个是关闭USB调试的情况下电脑中使用手机的可移动磁盘的方法，使用后下拉菜单中usb选项也回来了。</li>
</ol>
<ul>
<li><p>android listview中的消息被软键盘遮挡了,在设置listview的时候加上android:transcriptMode=”normal”就好了</p>
</li>
<li><p>TextUtils 是一个非常好用的工具类，把 List<string> 转成字符串，逗号分隔，逗号分隔的 String 字符串，切割成 List<string> ，分别可以用 TextUtils 的 join 和 split 方法。如果要对 List 去重，则可以用 Collection 的 frequency 方法。</string></string></p>
</li>
<li><p>在activity中调用 moveTaskToBack (boolean nonRoot)方法即可将activity 退到后台，注意不是finish()退出。</p>
</li>
<li><p>activity中的runOnUiThrea(Runnable action)方法可以直接回到主线程</p>
</li>
<li><p>listview有个footerDividersEnabled和headerDividersEnabled方法可以设置listview的顶部和底部divide，但是必须保证你设置了headview和footview才会有效果</p>
</li>
<li><p>Throwable类中的getStackTrace()方法，根据这个方法可以得到函数的逐层调用地址，其返回值为StackTraceElement[]；</p>
</li>
<li><p>StackTraceElement类，其中四个方法getClassName()，getFileName()，getLineNumber()，getMethodName()在调试程序打印Log时非常有用；</p>
</li>
<li><p>UncaughtExceptionHandler接口，再好的代码异常难免，利用此接口可以对未捕获的异常善后</p>
</li>
<li><p>Resources类中的getIdentifier(name, defType, defPackage)方法，根据资源名称获取其ID，做UI时经常用到；</p>
</li>
<li><p>view的isShown方法，只有当view本身以及它的所有祖先们都是visible时，isShown（）才返回TRUE。而平常我们调用if(view.getVisibility() == View.VISIBLE)只是对view本身而不对祖先的可见性进行判断。</p>
</li>
<li><p>Arrays类中的一系列关于数组操作的工具方法：binarySearch()，asList()，equals()，sort()，toString()，copyOfRange()等；Collections类中的一系列关于集合操作的工具方法：sort()，reverse()等；</p>
</li>
<li><p>TextView类中的append(CharSequence)方法，添加文本。一些特殊文本直接用+连接会变成String；</p>
</li>
<li><p>System类中的arraycopy(src, srcPos, dest, destPos, length)方法，用来copy数组；</p>
</li>
<li><p>Fragment类中的onHiddenChanged(boolean)方法，使用FragmentTransaction中的hide()，show()时只会调用Fragment中的show和hidden状态,其他生命周期不会调用。</p>
</li>
<li><p>Activity类中的onWindowFocusChanged(boolean)，onNewIntent(intent)等回调方法；</p>
</li>
<li><p>TextView类中的setTransformationMethod(TransformationMethod)方法，可用来实现“显示密码”功能</p>
</li>
<li><p>PageTransformer接口，用来自定义ViewPager页面切换动画，用setPageTransformer(boolean, PageTransformer)方法来进行设置；</p>
</li>
<li><p>apache提供的一系列jar包：commons-lang.jar，commons-collections.jar，commons-beanutils.jar等，里面很多方法可能是你曾经用几十几百行代码实现过的，但是执行效率或许要差很多，比如：ArrayUtils，StringUtils……；</p>
</li>
<li><p>ActivityLifecycleCallbacks接口，用于在Application类中监听各Activity的状态变化 <a href="http://mp.weixin.qq.com/s?__biz=MzA3ODkzNzM3NQ==&amp;mid=401277907&amp;idx=1&amp;sn=0b2246f5178292596fc3a8295283359c#rd" target="_blank" rel="external">阅读地址点我</a></p>
</li>
<li><p>ActionBar.hide()/.show() 顾名思义，隐藏和显示ActionBar，可以优雅地在全屏和带Actionbar之间转换。</p>
</li>
<li><p>SystemClock.sleep() 这个方法在保证一定时间的 sleep 时很方便，通常我用来进行 debug 和模拟网络延时。</p>
</li>
<li><p>UrlQuerySanitizer——使用这个工具可以方便对 URL 进行检查。</p>
</li>
<li><p>ActivityOptions ——方便的定义两个Activity切换的动画。 使用ActivityOptionsCompat 可以很好解决旧版本的兼容问题。</p>
</li>
<li><p>getParent().requestDisallowInterceptTouchEvent(true);剥夺父view对touch事件的处理权，谁用谁知道。</p>
</li>
<li><p>HandlerThread，代替不停new Thread开子线程的重复体力写法。</p>
</li>
<li><p>IntentService,一个可以干完活后自己去死且不需要我们去管理子线程的Service</p>
</li>
<li><p>Executors. newSingleThreadExecutor();这个是java的，之前不知道它，自己花很大功夫去研究了单线程顺序执行的任务队列</p>
</li>
<li><p>android:animateLayoutChanges=”true”，LinearLayout中添加View的动画的办法，支持通过setLayoutTransition()自定义动画。</p>
</li>
<li><p>AsyncQueryHandler，如果做系统工具类的开发，比如联系人短信辅助工具等，肯定免不了和ContentProvider打交道，如果数据量不是很大的情况下，随便搞，如果数据量大的情况下，了解下这个类是很有必要的，需要注意的是，这玩意儿吃异常..</p>
</li>
<li><p>ViewFlipper，实现多个view的切换(循环)，可自定义动画效果，且可针对单个切换指定动画。</p>
</li>
<li><p>android util包中的Pair类，可以方便的用来存储一”组”数据。注意不是key value</p>
</li>
<li><p>android:descendantFocusability，ListView的item中CheckBox等元素抢焦点导致item点击事件无法响应时，除了给对应的元素设置 focusable,更简单的是在item根布局加上android:descendantFocusability=”blocksDescendants”</p>
</li>
<li><p>includeFontPadding=”false”，TextView默认上下是有一定的padding的，有时候我们可能不需要上下这部分留白，加上它即可。</p>
</li>
<li><p>Messenger，面试的时候通常都会被问到进程间通信，一般情况下大家都是开始背书，AIDL巴拉巴拉。。有一天在鸿神的博客看到这个，嗯，如他所说，又可以装一下了。</p>
</li>
<li><p>EditTxt.setImeOptions， 使用EditText弹出软键盘时，修改回车键的显示内容(一直很讨厌用回车键来交互，所以之前一直不知道这玩意儿)</p>
</li>
<li><p>java8中新增的LocalDate和LocalTime接口，Date虽然是个万能接口，但是它真的不好用，有了这俩，终于可以愉快的处理日期时间了。</p>
</li>
<li><p>WeakHashMap，直接使用HashMap有时候会带来内存溢出的风险，使用WaekHashMap实例化Map。当使用者不再有对象引用的时候，WeakHashMap将自动被移除对应Key值的对象。</p>
</li>
<li><p>使用SnackBar的时候，不要使用view.getRootView()作为snackbar的view,华为荣耀7 会出问题。</p>
</li>
<li><p>设置TextView单行显示的时候不要用Lines=1,而要用singleLine=”true” ,因为魅族部分手机在设置Lines=1的时候，然后TextView的值全为数字的时候， 你就会懵逼了.</p>
</li>
<li><p>TouchDelegate可用于更改View的触摸区域。场景：比如在RecyclerView的ItemView里包含了CheckBox组件, 然后想实现点击ItemView的时候，也可以触发CheckBox，就可以使用此类</p>
</li>
<li><p>ArgbEvaluator可用于计算不同颜色值之间的插值，配合ValueAnimator.ofObject或者ViewPager.PageTransformer使用，可以实现不同颜色之间的平滑过渡。</p>
</li>
<li><p>Palette可用于提取一张图片的颜色。</p>
</li>
<li><p>ViewDragHelper,做过自定义ViewGroup的童鞋都应该知道这个东西吧，用来处理触摸事件的神器，妈妈再也不用担心我自定义控件了。</p>
</li>
<li><p>PageTransformer用于定义ViewPager页面切换时的动画效果（淡入淡出，放大缩小神马的…）官方有例子，直接看吧。</p>
</li>
<li><p>Formatter.formatFileSize() 这个方法会格式化数据的大小，根据输入的字节大小，返回 B KB MB GB 等等（最大支持到 PB）。当然要注意的是输入的最大值是 Long.MAX_VALUE.</p>
</li>
<li><p>Activity.recreate重新创建Activity。有什么用呢？可以在程序更换主题后，立马刷新当前Activity，而不会有明显的重启Activity的动画。</p>
</li>
<li><p>View.getContext顾名思义，就不用解释了吧…以前在写RecyclerView的Adapter的时候，为了使用LayoutInflater，经常傻乎乎地在构造函数中传入一个外部的context….是不是只有我不知道而已（笑cry脸）</p>
</li>
<li><p>View.post方便在非UI线程对界面进行修改，与Handler的作用类似。并且由于post的Runnable会保证在该View绘制完成的前提下才调用，所以一般也可以用于获取View的宽高。</p>
</li>
<li><p>Activity.runOnUiThread与View.post类似，方便在非UI线程中对界面进行修改。</p>
</li>
<li><p>Fragment在配合PagerAdapter使用的时候可以重写setUserVisibleHintFragment()方法，然后根据参数的布尔值（true的话表示当前Fragment对用户可见),来执行一些逻辑。</p>
</li>
<li><p>android:animateLayoutChanges 这是一个非常酷炫的属性。在父布局加上 android:animateLayoutChanges=”true” 后，如果触发了layout方法（比如它的子View设置为GONE），系统就会自动帮你加上布局改变时的动画特效！！</p>
</li>
<li><p>android:clipToPadding 设置父view是否允许其子view在它的padding（这里指的是父View的padding）中绘制。是不是有点绕？举个实际场景吧：假如有个ListView，我们想要在初始位置时，第一项Item离顶部有10dp的距离，就可以在ListView的布局中加入android:clipToPadding=”false” android:paddingTop=”10dp”即可。是不是很方便呢？</p>
</li>
<li><p>rv 的 Layoutmanager 可以直接申明在 xml 中,具体代码可查看RecyclerView.createLayoutManager 方法.<br><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/recycler_1.jpeg" alt=""><br><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/recycler_2.jpeg" alt=""></p>
</li>
<li><p>RecyclerView在23.2.+的版本中新增了自动测量的功能，由于新增了自动测量，那么它的item的根布局在需要测量的方向上就不能写match_parent了，需要改成wrap_content</p>
</li>
<li><p>getParent().requestDisallowInterceptTouchEvent(true);剥夺父view对touch事件的处理权，谁用谁知道。</p>
</li>
<li><p>Canvas中clipRect、clipPath和clipRegion剪切区域的API。</p>
</li>
<li><p>GradientDrawable 有个阴影效果还不错，以为是切的图片，一看代码，什么鬼= =！</p>
</li>
<li><p>有朋友提到了在自定义View时有些方法在开启硬件加速的时候没有效果的问题，在API16之后确实有很多方法不支持硬件加速，通常我们关闭硬件加速都是在清单文件中通过<application android:hardwareaccelerated="false" ...="">，其实android也提供了针对特定View关闭硬件加速的方法,调用View.setLayerType(View.LAYER_TYPE_SOFTWARE, null);即可。</application></p>
</li>
<li><p>PointF，graphics包中的一个类，我们经常见到在处理Touch事件的时候分别定义一个downX，一个downY用来存储一个坐标，如果坐标少还好，如果要记录的坐标过多那代码就不好看了。用PointF(float x, float y);来描述一个坐标点会清楚很多。</p>
</li>
<li><p>StateListDrawable，定义Selector通常的办法都是xml文件，但是有的时候我们的图片资源可能是从服务器动态获取的，比如很多app所谓的皮肤，这种时候就只能通StateListDrawable来完成了，各种addState即可。</p>
</li>
<li><p>android:duplicateParentState=”true”，让子View跟随其Parent的状态，如pressed等。常见的使用场景是某些时候一个按钮很小，我们想要扩大其点击区域的时候通常会再给其包裹一层布局，将点击事件写到Parent上，这时候如果希望被包裹按钮的点击效果对应的Selector继续生效的话，这时候duplicateParentState就派上用场了。</p>
</li>
<li><p>ViewConfiguration.getScaledTouchSlop();触发移动事件的最小距离，自定义View处理touch事件的时候，有的时候需要判断用户是否真的存在movie，系统提供了这样的方法。</p>
</li>
<li><p>ViewStub，有的时候一块区域需要根据情况显示不同的布局，通常我们都会通过setVisibility的方法来显示和隐藏不同的布局，但是这样默认是全部加载的，用ViewStub可以更好的提升性能。</p>
</li>
<li><p>onTrimMemory，在Activity中重写此方法，会在内存紧张的时候回调（支持多个级别），便于我们主动的进行资源释放，避免OOM。</p>
</li>
<li><p>TextView.setCompoundDrawablePadding，代码设置TextView的drawable padding。</p>
</li>
<li><p>ImageSwitcher，可以用来做图片切换的一个类，类似于幻灯片。</p>
</li>
<li><p>在自定义控件的时候,能用drawable来绘制圆，或者其他样式的时候,尽量用drawable,因为drawable的效果要远胜于canvas.drawXXX().</p>
</li>
<li><p>如果想要自定义View支持SwipeRefreshLayout，只需要声明并实现ScrollingView接口即可，RecyclerView和NestedScrollView已经实现此接口。</p>
</li>
<li><p>AtomicFile——通过使用备份文件进行文件的原子化操作。这个知识点之前我也写过，不过最好还是有出一个官方的版本比较好。</p>
</li>
<li><p>DatabaseUtils——一个包含各种数据库操作的使用工具。</p>
</li>
<li><p>Activity.isChangingConfigurations ()——如果在 Activity 中 configuration 会经常改变的话，使用这个方法就可以不用手动做保存状态的工作了。</p>
</li>
<li><p>SearchRecentSuggestionsProvider——可以创建最近提示效果的 provider，是一个简单快速的方法。</p>
</li>
<li><p>android:clipChildren (ViewGroup)——如果此属性设置为不可用，那么 ViewGroup 的子 View 在绘制的时候会超出它的范围，在做动画的时候需要用到。</p>
</li>
<li><p>android:fillViewport (ScrollView)——在这片文章中有详细介绍文章链接，可以解决在 ScrollView 中当内容不足的时候填不满屏幕的问题。</p>
</li>
<li><p>android:tileMode (BitmapDrawable)——可以指定图片使用重复填充的模式。</p>
</li>
<li><p>android:enterFadeDuration/android:exitFadeDuration (Drawables)——此属性在 Drawable 具有多种状态的时候，可以定义它展示前的淡入淡出效果。</p>
</li>
<li><p>Log.wtf()的意思是What a Terrible Failure,而不是What The Fuck!</p>
</li>
<li><p>使用RenderScript虚化图片效果。如果你的app的minSDK为16或者更低，你需要使用support模式，因为很多方法都是在API 17之后添加的。renderscriptTargetApi最高到23，但是你应该把它设置到能保持脚本中使用到的功能完整的最低API。如果你想在support模式下target API 21+你必须使用gradle-plugin 2.1.0 和 buildToolsVersion “23.0.3” 或者以上。需要在gradle中添加renderscriptTargetApi 18,renderscriptSupportModeEnabled true 这两句话</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">blurBitmap</span><span class="params">(Context context, Bitmap src, <span class="keyword">int</span> radius)</span> </span>&#123;</div><div class="line">        Bitmap dest = src.copy(src.getConfig(), <span class="keyword">true</span>);</div><div class="line">        RenderScript rs = RenderScript.create(context);</div><div class="line">        Allocation allocation = Allocation.createFromBitmap(rs, src);</div><div class="line">        Type t = allocation.getType();</div><div class="line">        Allocation blurredAllocation = Allocation.createTyped(rs, t);</div><div class="line">        ScriptIntrinsicBlur blurScript = ScriptIntrinsicBlur.create(rs, Element.U8_4(rs));</div><div class="line">        blurScript.setRadius(radius);</div><div class="line">        blurScript.setInput(allocation);</div><div class="line">        blurScript.forEach(blurredAllocation);</div><div class="line">        blurredAllocation.copyTo(dest);</div><div class="line">        allocation.destroy();</div><div class="line">        blurredAllocation.destroy();</div><div class="line">        blurScript.destroy();</div><div class="line">        t.destroy();</div><div class="line">        rs.destroy();</div><div class="line">        <span class="keyword">return</span> dest;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>如果想把一个view保存为Bitmap，正常情况下用第一种方法就可以了，但是如果是ScrollView，则必须采用第二种方法。 <br><br><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/capture_view_1.jpg" alt=""><br><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/capture_view_2.jpg" alt=""></p>
</li>
<li><p>当Activity LauncherMode 为singleTask singleInstance时,使用startActivityForResult会立马返回，不能正常调用。具体请看<a href="http://www.360doc.com/content/15/0123/14/12928831_443085580.shtml" target="_blank" rel="external">http://www.360doc.com/content/15/0123/14/12928831_443085580.shtml</a></p>
</li>
<li><p>当PopupWindow中有EditText控件时,因为Popupwindow 默认没有获取到焦点，需要手动设置焦点，这样子view才能获取到事件的监听。所以你需要在创建完popwindow后设置他的焦点，popupWindow.setFocusable(true);就可以让EditText获取焦点。</p>
</li>
<li><p>PopupWindow默认点击外部的时候不消失，需要对PopupWindow 设置一个背景图popWindow.setBackgroundDrawable(new BitmapDrawable());要创建一个空对象，设置为null是不行的，或者就创建一个全透明的背景图。</p>
</li>
<li><p>android中的序列化官方推荐Parceble,其实Parceble最好用于内存之间数据的交换,如果要把数据写入硬盘的话,推荐实现Serializable</p>
</li>
<li><p>tools标签可以很好的帮助开发者实时预览xml的效果,通过tools:background可以预览控件所占的控件,tools:visibility可以把一个gone的控件在预览的时候展示出来,并且运行以后tools标签的内容不会展示出来.例如:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">tools:background</span>=<span class="string">"#FF00FF"</span></div><div class="line">    <span class="attr">tools:visibility</span>=<span class="string">"visible"</span></div><div class="line">    <span class="attr">tools:text</span>=<span class="string">"这段话只在预览时能看到,运行以后就看不到了"</span> /&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>android studio 2.1起已经支持jdk8了,使用的时候要在gradle中加上,需要把buildToolsVersion更新到24以上的版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    defaultConfig &#123;</div><div class="line">    ...</div><div class="line">            jackOptions &#123;</div><div class="line">                enabled true</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">   ...</div><div class="line">    compileOptions &#123;</div><div class="line">        targetCompatibility 1.8</div><div class="line">        sourceCompatibility 1.8</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>6.0之后getResources().getColor()方法被废弃了，大家可以用ContextCompat.getColor(context, R.color.color_name)替换，ContextCompat 是 v4 包里的，请放心使用，另外还有getDrawable()等方法</p>
</li>
<li><p>图片的资源文件官方推荐只把launcher放在mipmap文件夹下面，而app用到的资源文件建议放在drawable下面。</p>
</li>
<li><p>SharedPreference.Editor的apply是异步操作，不会返回成功的状态，而commit是同步操作，因此，在多个并发的提交commit的时候，他们会等待正在处理的commit保存到磁盘后再操作下一个数据，从而降低了效率。</p>
</li>
<li><p>如果你在 manifest 中把一个 activity 设置成 android:windowSoftInputMode=”adjustResize”，那么 ScrollView（或者其它可伸缩的 ViewGroups）会缩小，从而为软键盘腾出空间。但是，如果你在 activity 的主题中设置了 android:windowFullscreen=”true”，那么 ScrollView 不会缩小。这是因为该属性强制 ScrollView 全屏显示。然而在主题中设置 android:fitsSystemWindows=”false” 也会导致 adjustResize 不起作用</p>
</li>
<li><p>在Android 4.0以后，在Manifest.xml中静态注册的广播，程序安装后必须启动一次才能接收到广播，比如你的应用监听开机启动的广播，必须要你的程序被运行过才能监听到</p>
</li>
<li><p>Activity的onDestory方法调用时机是不确定的（有时候离开界面很久之后才会调用onDestory方法），应该避免指望通过onDestory方法去释放与Activity相关的资源，否则会导致一些随机bug</p>
</li>
<li><p>2.X时代Bitmap对象虽然存储在堆内存中，但是用了一个byte数组存储其像素信息。通过计数器来记录该像素信息被引用的个数。有人认为这个byte数组在native堆中，但事实上它也在堆中。只有在使用者调用recycle()后，Bitmap对象才会释放像素信息，才会在失去引用后被垃圾回收机制销毁。再加上DVM的heap size有严格的阀值，所以在使用大量图片资源的时候，及其容易发生OOM。解决办法一般都是，用一个哈希表存储Bitmap对象的软引用，作为内存缓存，并在适当时机掉用其recycle()。3.0以上版本Bitmap对象可以通过垃圾回收机制完全销毁，理论上不用再调用recycle()。</p>
</li>
<li><p>.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git rm -r --cached .</div><div class="line">git add .</div><div class="line">git commit -m &apos;update .gitignore&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>时间戳请使用long或者String类型接收，遇到的坑,由于项目中的model好多都是通过GsonFormat生成的，服务器给的json中的时间戳都是10位的，导致了GsonFormat自动解析成了int, 当测试人员选择时间为2100年的时候时间戳是4开头的十位 用int类型接收越界了,导致报错</p>
</li>
<li><p>为你的app添加默认布局样式,比如:每一个控件都需要写width和height属性,然而很多的控件的宽高属性都是wrap_content,那么我们可以通过在style文件添加如下样式:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;style name=&quot;Theme.YourApp&quot; parent=&quot;android:style/Theme.Light&quot;&gt;</div><div class="line">    &lt;item name=&quot;android:layout_width&quot;&gt;wrap_content&lt;/item&gt;</div><div class="line">    &lt;item name=&quot;android:layout_height&quot;&gt;wrap_content&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>这样,控件的宽高默认都是wrap_content样式啦。</p>
<ul>
<li><p>在style中写的样式通过视同parent标签来扩展你的样式,这样更高效,这里官方的建议是，只有Android自带的style才用parent标签，如果是自定义的style，直接用.符号来连接就行。如Fill.Height。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;style name=&quot;Fill&quot;&gt;</div><div class="line">    &lt;item name=&quot;android:layout_width&quot;&gt;fill_parent&lt;/item&gt;</div><div class="line">    &lt;item name=&quot;android:layout_height&quot;&gt;fill_parent&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;style name=&quot;Fill.Height&quot; &gt;</div><div class="line">    &lt;item name=&quot;android:orientation&quot;&gt;vertical&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>Android上的应用切换按钮列出的其实不是应用而是Task，所以你会看到有的应用在切换视图里有多个任务。如果你的应用中有逻辑上相互独立的部分，或者想在多窗口环境下并排显示应用的两个不同部分，这种情况就适合多任务了。使用manifest属性(静态)或者 intent flags(动态)可以实现这一点,详见视频: <a href="http://v.youku.com/v_show/id_XMTU2ODk4NDg2NA==.html?f=26587294" target="_blank" rel="external">http://v.youku.com/v_show/id_XMTU2ODk4NDg2NA==.html?f=26587294</a></p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/multy_task1.jpg" width="50%" height="300px"><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/multy_task2.jpg" width="50%" height="300px"></p>
<ul>
<li><p>当app的theme用的是NoActionBar,但是在layout中仍然用到toolbar的时候,不要在style文件中加fitsSystemWindows属性,而是在用到toolbar的layout最外层加fitsSystemWindows,否则当你使用EditText,在小米手机上长按EditText调出系统粘贴功能的时候,粘贴的layout的布局会错位.</p>
</li>
<li><p>当WebView与ScrollView嵌套使用,并且WebView有字体放大缩小的功能时,当切换webview的字体后,webview的高度并不能很好的计算出来,这时候可以通过注入的方式,让js算出高度,经测试,这样是最可靠的,代码地址:<a href="http://blog.csdn.net/jys1115/article/details/43525979" target="_blank" rel="external">http://blog.csdn.net/jys1115/article/details/43525979</a></p>
</li>
<li><p>Context类中的createPackageContext(packageName, flags)方法，可用来获取指定包名应用程序的Context对象。</p>
</li>
<li><p>TextView类的setKeyListener(KeyListener)方法；<br>其中DigitsKeyListener类，使用getInstance(String accepted)方法即可指定EditText可输入字符集；</p>
</li>
<li><p>View类中的getLocationInWindow(int[])方法和getLocationOnScreen(int[])方法，获取View在窗口/屏幕中的位置；</p>
</li>
<li><p>Context.getCacheDir() - 可以获取到app默认的缓存路径。</p>
</li>
<li><p>StaticLayout 在自定义控件绘制文本的时候很有用。</p>
</li>
<li><p>Android中的四大组件千万不要通过new的方式创建出来。</p>
</li>
<li><p>测试app的时候,我们大都想要将debug和release版本同时安装到手机里,可以通过在gradle中修改applicationid来实现:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    buildTypes &#123;</div><div class="line">        debug &#123;</div><div class="line">            applicationIdSuffix &apos;.debug&apos;</div><div class="line">            versionNameSuffix &apos;-DEBUG&apos;</div><div class="line">        &#125;</div><div class="line">        release &#123;</div><div class="line">            //...</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>在大多数的登陆界面中，都提供了用户是否让密码可见的选项，Support Library 24.2.0 提供了官方的实现，TextInputLayout 中添加了 passwordToggleEnabled 属性来开启此功能，并且可以通过 passwordToggleDrawable 设置图标。(摘自:Android笔记的微博)</p>
</li>
<li><p>同样,在Support Library 24.2.0中增加RecyclerView 在快速滚动时的回调接口,SnapHelper是官方的一个实现OnFlingListener 的 一个抽象类,LinearSnapHelper 则是一个完整的实现.LinearSnapHelper默认实现的功能是类似ViewPager,在滚动结束后,会选择列表某一条居中展示(这里有开始位置展示,或者结束位置显示<a href="https://github.com/rubensousa/RecyclerViewSnap" target="_blank" rel="external">点我</a>).例如:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);</div><div class="line">recyclerView.setLayoutManager(linearLayoutManager);</div><div class="line">LinearSnapHelper snapHelper = new LinearSnapHelper();</div><div class="line">snapHelper.attachToRecyclerView(recyclerView);</div></pre></td></tr></table></figure>
</li>
<li><p>Android中推荐使用的数据结构 :</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ArrayMap&lt;K,V&gt; in place of HashMap&lt;K,V&gt;</div><div class="line">ArraySet&lt;K,V&gt; in place of HashSet&lt;K,V&gt;</div><div class="line">SparseArray&lt;V&gt; in place of HashMap&lt;Integer,V&gt;</div><div class="line">SparseBooleanArray in place of HashMap&lt;Integer,Boolean&gt;</div><div class="line">SparseIntArray in place of HashMap&lt;Integer,Integer&gt;  </div><div class="line">SparseLongArray in place of HashMap&lt;Integer,Long&gt;  </div><div class="line">LongSparseArray&lt;V&gt; in place of HashMap&lt;Long,V&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>生成GUID(由于java中只能生成UUID,所以这里要转换一下):</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">return UUID.randomUUID().toString().toUpperCase().replaceAll(&quot;-&quot;, &quot;&quot;);</div></pre></td></tr></table></figure>
</li>
<li><p>业务场景：需要定时后台扫描数据库，上传本地照片至云端，定时任务采用何种模式:<br>1.Handler或者Timer定时一般为秒级别的任务,Timer会启动额外线程，而Handler可以不用。<br>2.无论是Handler还是Timer都需要依赖于进程存活<br>3.利用Handler实现定时任务的类:HandlerTimer<br>4.如果时间较长，则需要使用AlarmManager<br>5.另外，我们对于这种业务应该优先考虑是否可以基于事件通知。<br>6.如果是加入媒体库的文件，我们可以使用registerContentObserver监听媒体库文件变化。</p>
</li>
<li><p>把Activity作为参数传给一个静态方法,会影响这个Activity的正常销毁吗?<br>1.内存泄露与方法是否是静态与否无关，与内部的方法体实现有关系。<br>2.内存泄露可以简单理解成：生命周期长的对象不正确持有了持有了生命周期短的对象，导致生命周期短的对象无法回收。<br>3.比如Activity实例被Application对象持有，Activity实例被静态变量持有。</p>
</li>
<li><p>在assert文件夹下存放单个文件的大小不能超过1M，如果读取超过1M的文件会报 “Data exceeds UNCOMPRESS_DATA_MAX (1314625 vs 1048576)” 的IOException。如果一定要存储，可以分割文件，再去合并文件</p>
</li>
<li><p>在Android library中不能使用switch-case语句访问资源ID，因为case分支后面跟的参数必须是常数，而library中的每一个资源ID都没有被声明为final。</p>
</li>
<li><p>当前Activity的onPause方法执行结束后才会执行下一个Activity的onCreate方法，所以在onPause方法中不适合做耗时较长的工作，这会影响到页面之间的跳转效率；</p>
</li>
<li><p>不要通过Bundle传递大块的数据，否则会报TransactionTooLargeException异常</p>
</li>
<li><p>（AnimationDrawable在Android5.0及以上的版本已有明显的优化）尽量不要使用AnimationDrawable，它在初始化的时候就将所有图片加载到内存中，特别占内存，并且还不能释放，释放之后下次进入再次加载时会报错；</p>
</li>
<li><p>.9图不能通过tinypng压缩，不然会有问题；</p>
</li>
<li><p>genymotion模拟器快是因为它是基于x86架构的，如果你的应用中用到了so，但没有x86架构的so，只能放弃使用它；Android Studio的模拟器也一样；</p>
</li>
<li><p>使用Toast时，建议定义一个全局的Toast对象，这样可以避免连续显示Toast时不能取消上一次Toast消息的情况（如果你有连续弹出Toast的情况，避免使用Toast.makeText）；</p>
</li>
<li><p>尽量避免给window和Activity同时都设置了背景，这样会造成过渡绘制，可以通过在给Activity设置主题时，去掉windowBackground背景的方式减少一层过渡绘制，有时候为了避免进入Activity时会黑屏或者白屏（和主题有关），会在给Activity设置主题的时候给window设置背景，如果这种情况下给Activity也设置了背景，是会增加一倍内存的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;item name=&quot;android:windowBackground&quot;&gt;@null&lt;/item&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>设置中更改字体为特大之类的会影响到app的字体样式，解决方法有: 1.将所有字体使用的单位换成dp，不再使用sp.这样不是很靠谱，并不是所有人都能做到。<br>2.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Configuration configuration = getResources().getConfiguration();</div><div class="line"> configuration.fontScale = (float) 1;</div><div class="line"> //0.85 小, 1 标准大小, 1.15 大，1.3 超大 ，1.45 特大</div><div class="line"> DisplayMetrics metrics = new DisplayMetrics();</div><div class="line"> getWindowManager().getDefaultDisplay().getMetrics(metrics);</div><div class="line"> metrics.scaledDensity = configuration.fontScale * metrics.density;</div><div class="line"> getBaseContext().getResources().updateConfiguration(configuration, metrics);</div><div class="line"> //（ps:dialog popupwindow 除外,这两种需要在控件中重新设置fontScale)</div></pre></td></tr></table></figure>
</li>
<li><p>Android中新引入的替代枚举的注解有IntDef和StringDef,这里以IntDef做例子说明一下.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">public class Colors &#123;</div><div class="line">    @IntDef(&#123;RED, GREEN, YELLOW&#125;)</div><div class="line">    //声明必要的int常量,使用@IntDef修饰LightColors,参数设置为待枚举的集合</div><div class="line">    @Retention(RetentionPolicy.SOURCE)</div><div class="line">    //使用@Retention(RetentionPolicy.SOURCE)指定注解仅存在与源码中,不加入到class文件中</div><div class="line">    public @interface LightColors&#123;&#125;</div><div class="line">    //声明一个注解为LightColors</div><div class="line">    public static final int RED = 0;</div><div class="line">    public static final int GREEN = 1;</div><div class="line">    public static final int YELLOW = 2;</div><div class="line">&#125;</div><div class="line">//用法</div><div class="line">private void setColor(@Colors.LightColors int color) &#123;</div><div class="line">        Log.d(&quot;MainActivity&quot;, &quot;setColor color=&quot; + color);</div><div class="line">&#125;</div><div class="line">//调用的该方法的时候</div><div class="line">setColor(Colors.GREEN);</div></pre></td></tr></table></figure>
</li>
<li><p>PathInterpolatorCompat 很方便的使用它来创建各种插值曲线，举个非常简单的例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Path path = new Path();</div><div class="line">path.cubicTo(0.2f, 0f, 0.1f, 1f, 0.5f, 1f);</div><div class="line">path.lineTo(1f, 1f);</div><div class="line">ObjectAnimator animator = ObjectAnimator.ofFloat(view, View.TRANSLATION_X, 500);</div><div class="line">animator.setInterpolator(PathInterpolatorCompat.create(path));</div><div class="line">animator.start();</div></pre></td></tr></table></figure>
</li>
<li><p>检测当前网络能否访问远程服务器(国内通过ping百度来检测)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public static boolean isNetWorkAvailable(final Context context) &#123;</div><div class="line">        try &#123;</div><div class="line">            Runtime runtime = Runtime.getRuntime();</div><div class="line">            Process pingProcess = runtime.exec(&quot;/system/bin/ping -c 1 www.baidu.com&quot;);</div><div class="line">            int exitCode = pingProcess.waitFor(); //0 代表连通，2代表不通</div><div class="line">            return (exitCode == 0);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>拦截系统返回键(onBackPressed())，使App不退出，而是进入后台运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">  public void onBackPressed() &#123;</div><div class="line">    moveTaskToBack(false);</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>view.performClick() 自动调用 View 点击事件。通常按钮等控件只有在用户点击时才能触发其点击事件，该方法可以由某些特殊条件触发模拟用户点击行为。类似的还有 performLongClick() 方法。</p>
</li>
<li><p>Linkify.addLinks() 通过 android:autoLink 属性可以为其添加诸如 web、phone 等固定模版的超链接点击事件。但毕竟系统模版有限，而利用 Linkify.addLinks() 方法可以添加一些应用内自定义模版，比如新浪微博中的 “@XXX” 格式的超链接跳转等，都可以通过自定义正则表达式来匹配处理。</p>
</li>
<li><p>getWindow().addFlags(WindowManager.LayoutParams.FLAG_SECURE) 设置安全窗口，禁用系统截屏。防止 App 中的一些界面被截屏，并显示在其他设备中造成信息泄漏。（常见手机设备系统截屏操作方式为：同时按下电源键和音量键。）</p>
</li>
<li><p>activity生命周期(<a href="https://www.bignerdranch.com/blog/android-activity-lifecycle-onStop/" target="_blank" rel="external">Ref Link</a>)<br><img src="https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/activityStateDiagram.jpeg" alt=""></p>
</li>
</ul>
<h4 id="摘自如下地址"><a href="#摘自如下地址" class="headerlink" title="摘自如下地址"></a>摘自<a href="https://github.com/jiang111/awesome-android-tips/blob/master/Authors.md" target="_blank" rel="external">如下地址</a></h4><h3 id="捐赠"><a href="#捐赠" class="headerlink" title="捐赠"></a>捐赠</h3><p>如果您觉得本项目对您有帮助，欢迎请作者一杯咖啡 <br><br><br><img src="https://raw.githubusercontent.com/jiang111/RxJavaApp/master/qrcode/wechat_alipay.png" alt=""></p>
<h3 id="License"><a href="#License" class="headerlink" title="License"></a>License</h3><pre><code>Copyright 2016 NewTab

Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/jiang111/awesome-android-tips/master/img/activityStateDiagram.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jiang111/awesome-android-tips&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A picture is worth a thousand words&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Tip" scheme="http://aisee.me/tags/Tip/"/>
    
  </entry>
  
  <entry>
    <title>Some Thoughts of Life</title>
    <link href="http://aisee.me/2017/04/27/MyView/Original/some-thoughts-of-life/"/>
    <id>http://aisee.me/2017/04/27/MyView/Original/some-thoughts-of-life/</id>
    <published>2017-04-27T10:13:18.000Z</published>
    <updated>2017-04-27T11:36:21.826Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://omj173lhw.bkt.clouddn.com/life.jpg" alt=""></p>
<blockquote>
<p>Whether it is Fast or Slow,<br>Whether it is Easy or Tired<br>Don’t forget Why Start Off</p>
</blockquote>
<p>Learn by using, Deepen by using</p>
<p>When you are tired or confused, you should learn to be motivated by your future vision.</p>
<a id="more"></a>
<h2 id="Health"><a href="#Health" class="headerlink" title="Health"></a>Health</h2><p>No matter how frustrating, do not toss the body.<br>Adhere to a healthy and sustainable development model.</p>
<ol>
<li>Go to sleep before 23:00</li>
<li>Take a Noon break</li>
<li>Ten thousand steps a day</li>
<li>Keep habit of  deep Thinking</li>
</ol>
<h2 id="Basics"><a href="#Basics" class="headerlink" title="Basics"></a>Basics</h2><ol>
<li>Proceed in an orderly way and step by step</li>
<li>Consider the past you shall know the future</li>
</ol>
<h2 id="Depth"><a href="#Depth" class="headerlink" title="Depth"></a>Depth</h2><ol>
<li>Poor people lack of money on the surface, in fact, the lack of deep knowledge</li>
<li>Extreme care is due to extreme lack</li>
<li>The origin of the tragedy is presumptuous</li>
</ol>
<h2 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h2><p><strong>Innovation</strong><br>We try to find the best solution for the following two questions, in order to bring you a wonderful experience of innovation</p>
<ol>
<li>how to find out your best control position</li>
<li>how to figure out your next most likely operation</li>
</ol>
<p><strong>Smart</strong><br>Through the SmartAI machine learning engine to achieve dynamic SmartUI,to bring you a quick and intelligent innovation experience</p>
<p><strong>Efficient</strong><br>Whether it is smartAI, or smartUI,the ultimate goal is to pursue the intelligent, convenient and efficient  experience for you.</p>
<h3 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h3><ol>
<li>Collect data<ul>
<li>Machine Info</li>
<li>Contact</li>
<li>SMS</li>
<li>RSS</li>
<li>Translator</li>
<li>Web Crawler</li>
</ul>
</li>
<li>Clean data<ul>
<li>Structure</li>
<li>Data base</li>
</ul>
</li>
<li>Analyze data<ul>
<li>Build Model</li>
<li>AI Algorithm</li>
</ul>
</li>
<li>Use data<ul>
<li>UE Innovation</li>
</ul>
</li>
</ol>
<h3 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h3><pre><code>1. Controls
2. Colors
3. Images
4. Animation
5. Fast
    - Net
    - DB
    - RxJava/Android
</code></pre><h3 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h3><pre><code>1. Git
    - Github
2. AndroidStudio
    - Gradle
    - Plugs
    - Static Codes Inspect Tools
    - Dynamic Debug Methods
    - Running Analyze Tools
3. Server
    - Qiniu
    - Juhe
    - Baidu
</code></pre><h3 id="Skills"><a href="#Skills" class="headerlink" title="Skills"></a>Skills</h3><pre><code>1. Java
2. Android
3. DesignPattern
4. Network
5. DataBase
6. MultiMedia
7. UE
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://omj173lhw.bkt.clouddn.com/life.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whether it is Fast or Slow,&lt;br&gt;Whether it is Easy or Tired&lt;br&gt;Don’t forget Why Start Off&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Learn by using, Deepen by using&lt;/p&gt;
&lt;p&gt;When you are tired or confused, you should learn to be motivated by your future vision.&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>SEMILAR —— A Semantic Similarity Toolkit</title>
    <link href="http://aisee.me/2017/04/26/Program/Android/MyApp/semantic-similarity/"/>
    <id>http://aisee.me/2017/04/26/Program/Android/MyApp/semantic-similarity/</id>
    <published>2017-04-26T02:28:06.000Z</published>
    <updated>2017-04-26T10:47:51.991Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://deeptutor2.memphis.edu/Semilar-Web/public/semilar-app_files/ProjectView.PNG" alt=""></p>
<a id="more"></a>
<h2 id="Introducing-SEMILAR"><a href="#Introducing-SEMILAR" class="headerlink" title="Introducing SEMILAR"></a>Introducing SEMILAR</h2><p>The SEMILAR software environment offers users, researchers, and developers, easy access to fully-implemented semantic similarity methods in one place through both a GUI-based interface and a library. Besides productivity advantages, SEMILAR provides a framework for the systematic comparison of various semantic similarity methods.</p>
<p>The automated methods offered by SEMILAR range from simple lexical overlap methods to methods that rely on word-to-word similarity metrics to more sophisticated methods that rely on fully unsupervised methods to derive the meaning of words and sentences such as Latent Semantic Analysis and Latent Dirichlet Allocation to kernel-based methods for assessing similarity.</p>
<p>Besides automated ways for assessing the semantic similarity of texts, the toolkit offers facilities for manual assessment by experts. The manual assessment and annotation component offers GUI-based facilities for experts to assess and annotate the semantic similarity of texts. This component is called SEMILAT, the SEMantic simILarity Annotation Tool. SEMILAT is available for download. The SEMILAR corpus built by our research group is also available for download. The SEMILAR corpus offers word-level similarity qualitative judgments by human experts which can be used to further the understanding of the various word-to-word semantic similarity methods and their impact on the similarity of larger texts, e.g. sentences or paragraphs.</p>
<p>Some of the most important features of SEMILAR are listed below:</p>
<ol>
<li>Easy GUI interface</li>
<li>Data management</li>
<li>Preprocessing</li>
<li>Lexical and syntactic feature extraction</li>
<li>Visualization</li>
<li>GUI-based data assessment and annotation (SEMILAT: The SEMantic simiLArity Annotation Tool)</li>
<li>Performance reports (if data is accompanied by expert judgments)</li>
</ol>
<h2 id="Why-The-SEMILAR-Project"><a href="#Why-The-SEMILAR-Project" class="headerlink" title="Why The SEMILAR Project?"></a>Why The SEMILAR Project?</h2><p>The goal of the SEMantic simILARity software toolkit (SEMILAR; pronounced the same way as the word ‘similar’) is to promote productive, fair, and rigorous research advancements in the area of semantic similarity.</p>
<p>Semantic similarity is the practical, widely used approach to address the natural language understanding issue in many core NLP tasks such as paraphrase identification, Question Answering, Natural Language Generation, and Intelligent Tutoring Systems. The full understanding approach, which is the other approach to language understanding, is desirable. However, because full language understanding requires world knowledge, it is more challenging and presently less practical for large scale use and real world applications.</p>
<p>In the semantic similarity approach, the meaning of a target text is inferred by assessing how similar it is to another text, called the benchmark text, whose meaning is known. If the two texts are similar enough, according to some measure of semantic similarity, the meaning of the target text is deemed similar to the meaning of the benchmark text. For instance, in dialogue-based Intelligent Tutoring Systems in which learners interact with a tutoring system through dialogue, students’ natural language answers to, say, science problems are assessed by comparing them to ideal responses provided by experts. The students’ answers are deemed correct if they are similar enough to experts’ responses, which are deemed correct.</p>
<p>The development of SEMILAR has been motivated by the lack of an integrated environment that would provide</p>
<ol>
<li>Easy access to the various implementations of the semantic similarity approach from the same interface and/or library</li>
<li>Easy access to semantic similarity methods that work at different levels of text granularity: word-to-word, sentence-to-sentence, paragraph-to-paragraph, 3. document-to-document, or a combination of the various granularities such as word-to-sentence, sentence-to-paragraph, etc.</li>
<li>A common environment for the systematic comparison of the various semantic similarity methods</li>
</ol>
<h2 id="SEMILAR-Application-Screenshots"><a href="#SEMILAR-Application-Screenshots" class="headerlink" title="SEMILAR Application Screenshots"></a>SEMILAR Application Screenshots</h2><p>In the project folder you can load datasets or previously save projects.<br><img src="http://deeptutor2.memphis.edu/Semilar-Web/public/semilar-app_files/DataView.PNG" alt=""></p>
<p>The DataView tab allows you to view the data and the various similarity metrics that were selected to generate in other tabs.<br><img src="http://deeptutor2.memphis.edu/Semilar-Web/public/semilar-app_files/SimilaritiesView.PNG" alt=""><br>From the Similarity Methods, you can choose similarity methods and their configuration parameters.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="https://en.wikipedia.org/wiki/Semantic_similarity" target="_blank" rel="external">Semantic similarity</a><br>[2]<a href="http://semanticsimilarity.org/" target="_blank" rel="external">SEMILAR: A Semantic Similarity Toolkit</a><br>[3]<a href="http://deeptutor2.memphis.edu/Semilar-Web/public/demo.jsp" target="_blank" rel="external">Online demo</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://deeptutor2.memphis.edu/Semilar-Web/public/semilar-app_files/ProjectView.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="SEMILAR" scheme="http://aisee.me/tags/SEMILAR/"/>
    
      <category term="Semantic Similarity" scheme="http://aisee.me/tags/Semantic-Similarity/"/>
    
  </entry>
  
  <entry>
    <title>WikiBrain</title>
    <link href="http://aisee.me/2017/04/26/Program/Android/MyApp/wiki-brain/"/>
    <id>http://aisee.me/2017/04/26/Program/Android/MyApp/wiki-brain/</id>
    <published>2017-04-26T02:18:06.000Z</published>
    <updated>2017-04-26T02:53:01.095Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://shilad.github.io/wikibrain/images/summer2013.jpg" alt=""><br>Macalester WikiBrain development team, Summer 2013</p>
<h2 id="Brief-Introduction"><a href="#Brief-Introduction" class="headerlink" title="Brief Introduction"></a>Brief Introduction</h2><p>WikiBrain’s busy thinking up its first public release. Please be patient while we fine tune our APIs and complete our documentation. Ask us questions at the WikiBrain google group!</p>
<p>The WikiBrain Java library enables researchers and developers to incorporate state-of-the-art Wikipedia-based algorithms and technologies in a few lines of code.</p>
<p>If you’d like to cite WikiBrain, please use: Sen, Shilad, Toby Jia-Jun Li, WikiBrain Team, and Brent Hecht. “WikiBrain: Democratizing computation on Wikipedia.” In Proceedings of The International Symposium on Open Collaboration, p. 27. ACM, 2014. [pdf]</p>
<a id="more"></a>
<h2 id="WikiBrain-Features"><a href="#WikiBrain-Features" class="headerlink" title="WikiBrain Features"></a>WikiBrain Features</h2><p><strong>WikiBrain is easy to use</strong>. Wikipedia data can be downloaded, parsed, and imported into a database by running a single command. WikiBrain allows you to incorporate state-of-the art algorithms in your Java projects in just a few lines of code.</p>
<p><strong>WikiBrain is multi-lingual</strong>. WikiBrain supports all 267 Wikipedia language editions, and builds a concept-map that connects an article in one language to the same article in another langauge.</p>
<p><strong>WikiBrain is fast</strong>.WikiBrain uses single-machine parallelization (i.e. multi-threading) for all computationally intensive features. While it imports data into standard SQL databases (h2 or Postgres), it builds optimized local caches for critical data.</p>
<p>WikiBrain integrates a variety of specific algorithms and datasets in one framework, including:</p>
<p><strong>Semantic-relatedness algorithms</strong> that measure the strength of association between two concepts such as “racecar” and “engine.”<br><strong>GeoSpatial algorithms</strong> for spatial Wikipedia pages like Minnesota and the Eiffel Tower.<br>Wikidata: Support for structured Wikidata “facts” about articles.<br><strong>Pageviews</strong>: Public data about how often Wikipedia pages are viewed with hourly precision.</p>
<h2 id="An-example-program"><a href="#An-example-program" class="headerlink" title="An example program"></a>An example program</h2><p>Once you have imported data, you can write programs that analyze Wikipedia. Here’s a simple example you can find in the Cookbook:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Prepare the environment</span></div><div class="line">Env env = EnvBuilder.envFromArgs(args);</div><div class="line"></div><div class="line"><span class="comment">// Get the configurator that creates components and a phraze analyzer from it</span></div><div class="line">Configurator configurator = env.getConfigurator();</div><div class="line">PhraseAnalyzer pa = configurator.get(PhraseAnalyzer.class, <span class="string">"anchortext"</span>);</div><div class="line">LocalPageDao pageDao = configurator.get(LocalPageDao.class);</div><div class="line"></div><div class="line"><span class="comment">// get the most common phrases in simple</span></div><div class="line">LinkedHashMap&lt;LocalId, Float&gt; resolution = pa.resolve(Language.SIMPLE, <span class="string">"Apple"</span>, <span class="number">20</span>);</div><div class="line"></div><div class="line"><span class="comment">// show the closest pages</span></div><div class="line">System.out.println(<span class="string">"resolution of apple"</span>);</div><div class="line"><span class="keyword">if</span> (resolution == <span class="keyword">null</span>) &#123;</div><div class="line">    System.out.println(<span class="string">"\tno resolution !"</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">for</span> (LocalId p : resolution.keySet()) &#123;</div><div class="line">        Title title = pageDao.getById(p).getTitle();</div><div class="line">        System.out.println(<span class="string">"\t"</span> + title + <span class="string">": "</span> + resolution.get(p));</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>When you run this program, you’ll see output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">resolution of apple</div><div class="line">    LocalPage&#123;nameSpace=ARTICLE, title=Apple, localId=39, language=Simple English&#125;: 0.070175424</div><div class="line">    LocalPage&#123;nameSpace=ARTICLE, title=Apple juice, localId=19351, language=Simple English&#125;: 0.043859642</div><div class="line">    LocalPage&#123;nameSpace=ARTICLE, title=Apple Macintosh, localId=517, language=Simple English&#125;: 0.043859642</div><div class="line">    LocalPage&#123;nameSpace=ARTICLE, title=Apple Inc., localId=7111, language=Simple English&#125;: 0.043859642</div><div class="line">    LocalPage&#123;nameSpace=ARTICLE, title=Apple A4, localId=251288, language=Simple English&#125;: 0.043859642</div></pre></td></tr></table></figure>
<h2 id="Developer"><a href="#Developer" class="headerlink" title="Developer"></a>Developer</h2><p>WikiBrain development is led by Shilad Sen at Macalester College and Brent Hecht at the University of Minnesota. WikiBrain has been generously supported by the National Science Foundation, Macalester College, the Howard Hughes Medical Institute, and the University of Minnesota. WikiBrain is licensed under the Apache License, version 2.</p>
<p>WikiBrain has been made possible through substantial contributions by many students, including: Alan Morales Blanco, Margaret Giesel, Rebecca Gold, Becca Harper, Ben Hillman, Sam Horlbeck, Aaron Jiang, Matthew Lesicko, Toby Li, Yulun Li, Huy Mai, Ben Mathers, Sam Naden, Jesse Russell, Laura Sousa Vonessen, Zixiao Wang, and Ari Weilland</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://shilad.github.io/wikibrain/" target="_blank" rel="external">WikiBrain</a><br>[2]<a href="https://en.wikipedia.org/wiki/Semantic_similarity" target="_blank" rel="external">Semantic similarity</a><br>[3]<a href="http://www.semantic-measures-library.org/sml/" target="_blank" rel="external">Semantic Measures Library &amp; ToolKit</a><br>[4]<a href="http://wn-similarity.sourceforge.net/" target="_blank" rel="external">WordNet::Similarity</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://shilad.github.io/wikibrain/images/summer2013.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;Macalester WikiBrain development team, Summer 2013&lt;/p&gt;
&lt;h2 id=&quot;Brief-Introduction&quot;&gt;&lt;a href=&quot;#Brief-Introduction&quot; class=&quot;headerlink&quot; title=&quot;Brief Introduction&quot;&gt;&lt;/a&gt;Brief Introduction&lt;/h2&gt;&lt;p&gt;WikiBrain’s busy thinking up its first public release. Please be patient while we fine tune our APIs and complete our documentation. Ask us questions at the WikiBrain google group!&lt;/p&gt;
&lt;p&gt;The WikiBrain Java library enables researchers and developers to incorporate state-of-the-art Wikipedia-based algorithms and technologies in a few lines of code.&lt;/p&gt;
&lt;p&gt;If you’d like to cite WikiBrain, please use: Sen, Shilad, Toby Jia-Jun Li, WikiBrain Team, and Brent Hecht. “WikiBrain: Democratizing computation on Wikipedia.” In Proceedings of The International Symposium on Open Collaboration, p. 27. ACM, 2014. [pdf]&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="Java" scheme="http://aisee.me/tags/Java/"/>
    
      <category term="WikiBrain" scheme="http://aisee.me/tags/WikiBrain/"/>
    
  </entry>
  
  <entry>
    <title>Countly——360° Web and Mobile Analytics</title>
    <link href="http://aisee.me/2017/04/25/Program/Android/MyApp/countly/"/>
    <id>http://aisee.me/2017/04/25/Program/Android/MyApp/countly/</id>
    <published>2017-04-24T23:38:06.000Z</published>
    <updated>2017-04-24T23:54:23.093Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/1.png" alt=""></p>
<p>End-to-end platform for web,<br>mobile applications and game analytics</p>
<a id="more"></a>
<h2 id="COUNTLY"><a href="#COUNTLY" class="headerlink" title="COUNTLY"></a>COUNTLY</h2><p>Countly is world’s leading open source, enterprise mobile and web analytics &amp; marketing platform. Countly software is provided in two editions; self-hosted or private cloud Enterprise Edition with support and SLA coverage, and Community Edition with a free-to-use non-commercial license.</p>
<h2 id="Push-Notifications"><a href="#Push-Notifications" class="headerlink" title="Push Notifications"></a>Push Notifications</h2><p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2016/09/push_notifications-1.svg" alt=""><br>Send targeted notifications to your users to increase retention and loyalty.</p>
<p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/2.png" alt=""></p>
<h2 id="Crash-Reports"><a href="#Crash-Reports" class="headerlink" title="Crash Reports"></a>Crash Reports</h2><p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2016/09/crash_reports-1.svg" alt=""><br>See which users are affected by crashes and exceptions, and take necessary precautions.</p>
<p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/4.png" alt=""></p>
<h2 id="User-Profiles"><a href="#User-Profiles" class="headerlink" title="User Profiles"></a>User Profiles</h2><p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2016/09/user_profiles.svg" alt=""><br>Understand what users do individually, by examining profiles, purchase history and sessions.</p>
<h2 id="Attribution-Tracking"><a href="#Attribution-Tracking" class="headerlink" title="Attribution Tracking"></a>Attribution Tracking</h2><p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2016/09/attribution-1.svg" alt=""><br>Learn where your users are referred from and track your mobile and web campaigns.</p>
<p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/3.png" alt=""></p>
<h2 id="Segmentation"><a href="#Segmentation" class="headerlink" title="Segmentation"></a>Segmentation</h2><p><img src="https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2016/09/funnels-1.svg" alt=""><br>Easily answer complex and interactive questions by drilling down to granular data.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="https://count.ly/" target="_blank" rel="external">COUNTLY</a><br>[2]<a href="https://github.com/cobub/razor" target="_blank" rel="external">Cobub Razor - Open Source Mobile Analytics Solution</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://47s0a63u864g42xntj2cg92q-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;End-to-end platform for web,&lt;br&gt;mobile applications and game analytics&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="Countly" scheme="http://aisee.me/tags/Countly/"/>
    
  </entry>
  
  <entry>
    <title>The Growing Road of Master</title>
    <link href="http://aisee.me/2017/04/24/Program/Android/MyApp/the-growing-road-of-master/"/>
    <id>http://aisee.me/2017/04/24/Program/Android/MyApp/the-growing-road-of-master/</id>
    <published>2017-04-24T13:39:06.000Z</published>
    <updated>2017-04-24T13:52:39.729Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/facebook-share.png" alt=""></p>
<blockquote>
<p>Look like a Master, Think like a Master, Act like a Master, Become a Real Master at last.</p>
</blockquote>
 <a id="more"></a>
<h2 id="Look"><a href="#Look" class="headerlink" title="Look"></a>Look</h2><h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><h3 id="Styles"><a href="#Styles" class="headerlink" title="Styles"></a>Styles</h3><h3 id="Blogs"><a href="#Blogs" class="headerlink" title="Blogs"></a>Blogs</h3><h2 id="Think"><a href="#Think" class="headerlink" title="Think"></a>Think</h2><h3 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h3><h2 id="Act"><a href="#Act" class="headerlink" title="Act"></a>Act</h2><h3 id="Read-the-F-ck-Manual"><a href="#Read-the-F-ck-Manual" class="headerlink" title="Read the F*ck Manual"></a>Read the F*ck Manual</h3><h3 id="Read-the-F-ck-Codes"><a href="#Read-the-F-ck-Codes" class="headerlink" title="Read the F*ck Codes"></a>Read the F*ck Codes</h3><h3 id="Search-the-F-ck-Web"><a href="#Search-the-F-ck-Web" class="headerlink" title="Search the F*ck Web"></a>Search the F*ck Web</h3><h3 id="Write-beautiful-Code"><a href="#Write-beautiful-Code" class="headerlink" title="Write beautiful Code"></a>Write beautiful Code</h3><h3 id="Share-Your-Code"><a href="#Share-Your-Code" class="headerlink" title="Share Your Code"></a>Share Your Code</h3><h2 id="Become"><a href="#Become" class="headerlink" title="Become"></a>Become</h2><h3 id="Practice"><a href="#Practice" class="headerlink" title="Practice"></a>Practice</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/facebook-share.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Look like a Master, Think like a Master, Act like a Master, Become a Real Master at last.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Android" scheme="http://aisee.me/tags/Android/"/>
    
      <category term="RxJava" scheme="http://aisee.me/tags/RxJava/"/>
    
      <category term="RxAndroid" scheme="http://aisee.me/tags/RxAndroid/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of RxJava</title>
    <link href="http://aisee.me/2017/04/24/Program/Java/rxjava/"/>
    <id>http://aisee.me/2017/04/24/Program/Java/rxjava/</id>
    <published>2017-04-24T03:10:06.000Z</published>
    <updated>2017-04-27T13:16:07.616Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/amitshekhariitbhu/RxJava2-Android-Samples/master/assets/rxjava2.png" alt=""></p>
<blockquote>
<p>RxJava 到底是什么？ 一个词：异步。</p>
</blockquote>
<p>RxJava 在 GitHub 主页上的自我介绍是 “a library for composing asynchronous and event-based programs using observable sequences for the Java VM”（一个在 Java VM 上使用可观测的序列来组成异步的、基于事件的程序的库）。这就是 RxJava ，概括得非常精准。</p>
<blockquote>
<p>RxJava 好在哪？ 一个词：简洁。</p>
</blockquote>
 <a id="more"></a>
<h2 id="给-Android-开发者的-RxJava-详解"><a href="#给-Android-开发者的-RxJava-详解" class="headerlink" title="给 Android 开发者的 RxJava 详解"></a>给 Android 开发者的 RxJava 详解</h2><p> RxJava 的本质可以压缩为异步这一个词。说到根上，它就是一个实现异步操作的库，而别的定语都是基于这之上的。</p>
<p> 异步操作很关键的一点是程序的简洁性，因为在调度过程比较复杂的情况下，异步代码经常会既难写也难被读懂。 Android 创造的 AsyncTask 和Handler ，其实都是为了让异步代码更加简洁。RxJava 的优势也是简洁，但它的简洁的与众不同之处在于，随着程序逻辑变得越来越复杂，它依然能够保持简洁。</p>
<p> RxJava 的异步实现，是通过一种扩展的观察者模式来实现的。</p>
<h3 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h3><p> 观察者模式面向的需求是：A 对象（观察者）对 B 对象（被观察者）的某种变化高度敏感，需要在 B 变化的一瞬间做出反应。举个例子，新闻里喜闻乐见的警察抓小偷，警察需要在小偷伸手作案的时候实施抓捕。在这个例子里，警察是观察者，小偷是被观察者，警察需要时刻盯着小偷的一举一动，才能保证不会漏过任何瞬间。程序的观察者模式和这种真正的『观察』略有不同，观察者不需要时刻盯着被观察者（例如 A 不需要每过 2ms 就检查一次 B 的状态），而是采用注册(Register)或者称为订阅(Subscribe)的方式，告诉被观察者：我需要你的某某状态，你要在它变化的时候通知我。 Android 开发中一个比较典型的例子是点击监听器 OnClickListener 。对设置 OnClickListener 来说， View 是被观察者， OnClickListener 是观察者，二者通过 setOnClickListener() 方法达成订阅关系。订阅之后用户点击按钮的瞬间，Android Framework 就会将点击事件发送给已经注册的 OnClickListener 。采取这样被动的观察方式，既省去了反复检索状态的资源消耗，也能够得到最高的反馈速度。当然，这也得益于我们可以随意定制自己程序中的观察者和被观察者，而警察叔叔明显无法要求小偷『你在作案的时候务必通知我』。</p>
<p> OnClickListener 的模式大致如下图：<br> <img src="http://ww4.sinaimg.cn/mw1024/52eb2279jw1f2rx42h1wgj20fz03rglt.jpg" alt=""></p>
<p> 如图所示，通过 setOnClickListener() 方法，Button 持有 OnClickListener 的引用（这一过程没有在图上画出）；当用户点击时，Button 自动调用 OnClickListener 的 onClick() 方法。另外，如果把这张图中的概念抽象出来（Button -&gt; 被观察者、OnClickListener -&gt; 观察者、setOnClickListener() -&gt; 订阅，onClick() -&gt; 事件），就由专用的观察者模式（例如只用于监听控件点击）转变成了通用的观察者模式。如下图：</p>
<p> <img src="http://ww3.sinaimg.cn/mw1024/52eb2279jw1f2rx4446ldj20ga03p74h.jpg" alt=""></p>
<h3 id="RxJava-的观察者模式"><a href="#RxJava-的观察者模式" class="headerlink" title="RxJava 的观察者模式"></a>RxJava 的观察者模式</h3><p>RxJava 有四个基本概念：</p>
<ol>
<li>Observable (可观察者，即被观察者)</li>
<li>Observer (观察者)</li>
<li>subscribe (订阅)</li>
<li>事件</li>
</ol>
<p>Observable 和 Observer 通过 subscribe() 方法实现订阅关系，从而 Observable 可以在需要的时候发出事件来通知 Observer。</p>
<p>与传统观察者模式不同， RxJava 的事件回调方法除了普通事件 onNext() （相当于 onClick() / onEvent()）之外，还定义了两个特殊的事件：onCompleted() 和 onError()。</p>
<ol>
<li><p>onCompleted(): 事件队列完结。RxJava 不仅把每个事件单独处理，还会把它们看做一个队列。RxJava 规定，当不会再有新的 onNext() 发出时，需要触发 onCompleted() 方法作为标志。</p>
</li>
<li><p>onError(): 事件队列异常。在事件处理过程中出异常时，onError() 会被触发，同时队列自动终止，不允许再有事件发出。</p>
</li>
</ol>
<p>在一个正确运行的事件序列中, onCompleted() 和 onError() 有且只有一个，并且是事件序列中的最后一个。需要注意的是，onCompleted() 和 onError() 二者也是互斥的，即在队列中调用了其中一个，就不应该再调用另一个。</p>
<p>RxJava 的观察者模式大致如下图：<br><img src="http://ww3.sinaimg.cn/mw1024/52eb2279jw1f2rx46dspqj20gn04qaad.jpg" alt=""></p>
<h3 id="基本实现"><a href="#基本实现" class="headerlink" title="基本实现"></a>基本实现</h3><p>基于以上的概念， RxJava 的基本实现主要有三点：</p>
<h4 id="1-创建-Observer"><a href="#1-创建-Observer" class="headerlink" title="1) 创建 Observer"></a>1) 创建 Observer</h4><p>Observer 即观察者，它决定事件触发的时候将有怎样的行为。 RxJava 中的 Observer 接口的实现方式：</p>
<p>除了 Observer 接口之外，RxJava 还内置了一个实现了 Observer 的抽象类：Subscriber。 Subscriber 对 Observer 接口进行了一些扩展，但他们的基本使用方式是完全一样的：</p>
<p>不仅基本使用方式一样，实质上，在 RxJava 的 subscribe 过程中，Observer 也总是会先被转换成一个 Subscriber 再使用。所以如果你只想使用基本功能，选择 Observer 和 Subscriber 是完全一样的。它们的区别对于使用者来说主要有两点：</p>
<ol>
<li><p>onStart(): 这是 Subscriber 增加的方法。它会在 subscribe 刚开始，而事件还未发送之前被调用，可以用于做一些准备工作，例如数据的清零或重置。这是一个可选方法，默认情况下它的实现为空。需要注意的是，如果对准备工作的线程有要求（例如弹出一个显示进度的对话框，这必须在主线程执行）， onStart() 就不适用了，因为它总是在 subscribe 所发生的线程被调用，而不能指定线程。要在指定的线程来做准备工作，可以使用 doOnSubscribe() 方法，具体可以在后面的文中看到。</p>
</li>
<li><p>unsubscribe(): 这是 Subscriber 所实现的另一个接口 Subscription 的方法，用于取消订阅。在这个方法被调用后，Subscriber 将不再接收事件。一般在这个方法调用前，可以使用 isUnsubscribed() 先判断一下状态。 unsubscribe() 这个方法很重要，因为在 subscribe() 之后， Observable 会持有 Subscriber 的引用，这个引用如果不能及时被释放，将有内存泄露的风险。所以最好保持一个原则：要在不再使用的时候尽快在合适的地方（例如 onPause() onStop() 等方法中）调用 unsubscribe() 来解除引用关系，以避免内存泄露的发生。</p>
</li>
</ol>
<h4 id="2-创建-Observable"><a href="#2-创建-Observable" class="headerlink" title="2) 创建 Observable"></a>2) 创建 Observable</h4><p>Observable 即被观察者，它决定什么时候触发事件以及触发怎样的事件。 RxJava 使用 create() 方法来创建一个 Observable ，并为它定义事件触发规则：</p>
<h2 id="深入浅出RxJava"><a href="#深入浅出RxJava" class="headerlink" title="深入浅出RxJava"></a>深入浅出RxJava</h2><p> RxJava最核心的两个东西是Observables（被观察者，事件源）和Subscribers（观察者）。Observables发出一系列事件，Subscribers处理这些事件。这里的事件可以是任何你感兴趣的东西（触摸事件，web接口调用返回的数据…）一个Observable可以发出零个或者多个事件，知道结束或者出错。每发出一个事件，就会调用它的Subscriber的onNext方法，最后调用Subscriber.onNext()或者Subscriber.onError()结束。<br> Rxjava的看起来很想设计模式中的观察者模式，但是有一点明显不同，那就是如果一个Observerble没有任何的的Subscriber，那么这个Observable是不会发出任何事件的。</p>
<h2 id="Learning-RxJava-2-for-Android-by-example"><a href="#Learning-RxJava-2-for-Android-by-example" class="headerlink" title="Learning RxJava 2 for Android by example"></a>Learning RxJava 2 for Android by example</h2><p>RxJava 2.0 has been completely rewritten from scratch on top of the Reactive-Streams specification. The specification itself has evolved out of RxJava 1.x and provides a common baseline for reactive systems and libraries.</p>
<p>Because Reactive-Streams has a different architecture, it mandates changes to some well known RxJava types.</p>
<h3 id="RxJava1-gt-RxJava2"><a href="#RxJava1-gt-RxJava2" class="headerlink" title="RxJava1 -&gt; RxJava2"></a>RxJava1 -&gt; RxJava2</h3><p>Quick Look on few changes done in RxJava2 over RxJava1</p>
<ol>
<li>onCompleted -&gt; onComplete - without the trailing d</li>
<li>Func1 -&gt; Function</li>
<li>Func2 -&gt; BiFunction</li>
<li>CompositeSubscription -&gt; CompositeDisposable</li>
<li>limit operator has been removed - Use take in RxJava2<br>and much more.</li>
</ol>
<h3 id="Operators"><a href="#Operators" class="headerlink" title="Operators :"></a>Operators :</h3><p>Map -&gt; transform the items emitted by an Observable by applying a function to each item</p>
<p>Zip -&gt; combine the emissions of multiple Observables together via a specified function and emit single items for each combination based on the results of this function</p>
<p>Filter -&gt; emit only those items from an Observable that pass a predicate test</p>
<p>FlatMap -&gt; transform the items emitted by an Observable into Observables, then flatten the emissions from those into a single Observable</p>
<p>Take -&gt; emit only the first n items emitted by an Observable</p>
<p>Reduce -&gt; apply a function to each item emitted by an Observable, sequentially, and emit the final value<br>Skip -&gt; suppress the first n items emitted by an Observable</p>
<p>Buffer -&gt; periodically gather items emitted by an Observable into bundles and emit these bundles rather than emitting the items one at a time</p>
<p>Concat -&gt; emit the emissions from two or more Observables without interleaving them</p>
<p>Replay -&gt; ensure that all observers see the same sequence of emitted items, even if they subscribe after the Observable has begun emitting items</p>
<p>Merge -&gt; combine multiple Observables into one by merging their emissions</p>
<h2 id="Reactive-Programming"><a href="#Reactive-Programming" class="headerlink" title="Reactive Programming"></a>Reactive Programming</h2><p>Rx概念介绍 Reactive是一种编程思想 Reactive编程就是异步数据流的编程，基于事件的编程</p>
<h3 id="一切皆流"><a href="#一切皆流" class="headerlink" title="一切皆流"></a>一切皆流</h3><p>一个流是将要发生的有序序列事件的一部分。<br>你可以创建任何事物的数据流。任何事物都可以是流：变量，用户输入，属性 ，缓存，数据结构等等</p>
<p>它可以发出三种不同的事件：value，error或者completed</p>
<p>流（Observable）是被观察的对象。对于流的监听被称作订阅。我们定义的函数被称作观察者。</p>
<p>Rx扩展(Rxjava,RxJs,RxScala)提供了一个用于创建，变换，连接，过滤任何流的函数库。不仅某个流可以用于另一个流的输入，多个流同样可以作为其它流的输入。你也可以合并两个流。如果你对某些事件感兴趣，也可以通过对一个流的过滤获得另一个目标流。也可以将一个流中的数据映射到一个新的数据流。</p>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>简洁<br>抽象层次高，你可以聚焦于定义业务逻辑的事件依赖，而不是大量的实现细节<br>有效避免callback hell，更少的中间状态变量</p>
<p>###缺点</p>
<p>代码抽象层次高，真正使用Rx思想解决问题需要一个过程<br>对于android来说，包比较大，方法数也不少</p>
<h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><p>异步 ？ 线程切换 ？ 事件组合？（多个请求和UI操作组合）</p>
<h3 id="EveryWhere"><a href="#EveryWhere" class="headerlink" title="EveryWhere"></a>EveryWhere</h3><p>Rx是一种思想，这里的一切都是流，你可以定义任何事物的流，可以是事件，可以是数据结构，任意发挥你的想象，通过Rx的方式来解决问题。（Twitter suggestion的实现）</p>
<h3 id="Callback-Hell"><a href="#Callback-Hell" class="headerlink" title="Callback Hell"></a>Callback Hell</h3><p>比如有一个链式请求调用，你首先需要根据第一个请求的结果去判断下一步的操作。那么就要处理多个请求的回调。不管是正确还是错误，你总需要通过callback处理。无形中多了不少代码量，创建了变量，浪费了内存，同时增加了错误的可能性。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p> [1]<a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">给 Android 开发者的 RxJava 详解</a><br> [2]<a href="http://blog.csdn.net/lzyzsd/article/details/41833541" target="_blank" rel="external">深入浅出RxJava（一：基础篇）</a><br> [3]<a href="https://github.com/amitshekhariitbhu/RxJava2-Android-Samples" target="_blank" rel="external">RxJava2-Android-Samples</a><br> [4]<a href="https://github.com/Androooid/treasure/blob/master/source/lightsky/posts/reactive-programming.md" target="_blank" rel="external">Reactive Programming</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/amitshekhariitbhu/RxJava2-Android-Samples/master/assets/rxjava2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RxJava 到底是什么？ 一个词：异步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;RxJava 在 GitHub 主页上的自我介绍是 “a library for composing asynchronous and event-based programs using observable sequences for the Java VM”（一个在 Java VM 上使用可观测的序列来组成异步的、基于事件的程序的库）。这就是 RxJava ，概括得非常精准。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RxJava 好在哪？ 一个词：简洁。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Android" scheme="http://aisee.me/tags/Android/"/>
    
      <category term="RxJava" scheme="http://aisee.me/tags/RxJava/"/>
    
      <category term="RxAndroid" scheme="http://aisee.me/tags/RxAndroid/"/>
    
  </entry>
  
  <entry>
    <title>Using Python and K-means to Find the Dominant Colors in Images</title>
    <link href="http://aisee.me/2017/04/22/Program/Tools/Python/using-python-and-k-means-to-find-the-dominant-colors-in-images/"/>
    <id>http://aisee.me/2017/04/22/Program/Tools/Python/using-python-and-k-means-to-find-the-dominant-colors-in-images/</id>
    <published>2017-04-22T12:29:06.000Z</published>
    <updated>2017-04-22T12:34:20.772Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://m.charlesleifer.com/t/800x-/blog/photos/k-means_result.gif?key=M_hIqkUPMMtX6l41haEjYw" alt=""></p>
<p>I’m working on a little photography website for my Dad and thought it would be neat to extract color information from photographs. I tried a couple of different approaches before finding one that works pretty well. This approach uses k-means clustering to cluster the pixels in groups based on their color. The center of those resulting clusters are then the “dominant” colors. k-means is a great fit for this problem because it is (usually) fast. It has the caveat of requiring you to specify up-front how many clusters you want – I found that it works well when I specified around 3.</p>
<a id="more"></a>
<h2 id="A-warning"><a href="#A-warning" class="headerlink" title="A warning"></a>A warning</h2><p>I’m no expert on data-mining – almost all my experience comes from reading Toby Segaran’s excellent book Programming Collective Intelligence. In one of the first chapters Toby covers clustering algorithms, including a nice treatment of k-means, so if you want to really learn from an expert I’d suggest picking up a copy. You won’t be disappointed.</p>
<h2 id="How-it-works"><a href="#How-it-works" class="headerlink" title="How it works"></a>How it works</h2><p>The way I understand it to work is you start with a bunch of data points. For simplicity let’s say they’re numbers on a number-line. You want to group the numbers into “k” clusters, so pick “k” points randomly from the data to use as your “clusters”.</p>
<p>Now loop over every point in the data and calculate its distance to each of the “k” clusters. Find the nearest cluster and associate that point with the cluster. When you’ve looped over all the points they should all be assigned to one of the “k” clusters. Now, for each cluster recalculate its center by averaging the distances of all the associated points and start over.</p>
<p>When the centers stop moving very much you can stop looping. You will end up with something like this – the points are colored based on what “cluster” they are in and the dark-black circles indicate the centers of each cluster.</p>
<p><img src="http://m.charlesleifer.com/t/800x-/blog/photos/k-means_result.gif?key=M_hIqkUPMMtX6l41haEjYw" alt=""></p>
<h2 id="K-Means"><a href="#K-Means" class="headerlink" title="K-Means"></a>K-Means</h2><p>Applying it to photographs</p>
<p>The neat thing about this algorithm is, since it relies only on a simple distance calculation, you can extend it out to multi-dimensional data. Color is often represented using 3 channels, Red, Green, and Blue. So what I did was treat all the pixels in the image like points on a 3-dimensional space. That’s all there was to it!</p>
<p>I made a few optimizations along the way:</p>
<p>resize the image down to 200x200 or so using PIL<br>instead of storing “duplicate” points, store a count with each – saves on calculations<br>Looking at some results</p>
<p><img src="http://m.charlesleifer.com/t/800x-/blog/photos/akira.jpg?key=pE0at1KYRCDKzK8sIMq-mg" alt=""><br>Akira motorcycles</p>
<p>The results:<br><img src="http://m.charlesleifer.com/t/800x-/blog/photos/akira-cycle-2.png?key=UjCkeYMPkmpbeJkt7KVe2Q" alt=""><br>Akira motorcycles 2</p>
<p>The results:<br><img src="http://m.charlesleifer.com/t/800x-/blog/photos/akira-neo-tokyo-6.png?key=Z9KKFjtzl1cHZUdXDsNVtQ" alt=""><br>Akira 3</p>
<p>The results:<br><img src="http://m.charlesleifer.com/t/800x-/blog/photos/akira-neo-tokyo-7.png?key=SMr6DpSKC6VPeGLlcYacUA" alt=""><br>Akira 4</p>
<p>The results:                                 </p>
<h2 id="The-source-code"><a href="#The-source-code" class="headerlink" title="The source code"></a>The source code</h2><p>Below is the source code. It requires PIL to resize the image down to 200x200 and to extract the colors/counts. The “colorz” function is the one that returns the actual color codes for a filename.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">from collections import namedtuple</div><div class="line">from math import sqrt</div><div class="line">import random</div><div class="line">try:</div><div class="line">    import Image</div><div class="line">except ImportError:</div><div class="line">    from PIL import Image</div><div class="line"></div><div class="line">Point = namedtuple(&apos;Point&apos;, (&apos;coords&apos;, &apos;n&apos;, &apos;ct&apos;))</div><div class="line">Cluster = namedtuple(&apos;Cluster&apos;, (&apos;points&apos;, &apos;center&apos;, &apos;n&apos;))</div><div class="line"></div><div class="line">def get_points(img):</div><div class="line">    points = []</div><div class="line">    w, h = img.size</div><div class="line">    for count, color in img.getcolors(w * h):</div><div class="line">        points.append(Point(color, 3, count))</div><div class="line">    return points</div><div class="line"></div><div class="line">rtoh = lambda rgb: &apos;#%s&apos; % &apos;&apos;.join((&apos;%02x&apos; % p for p in rgb))</div><div class="line"></div><div class="line">def colorz(filename, n=3):</div><div class="line">    img = Image.open(filename)</div><div class="line">    img.thumbnail((200, 200))</div><div class="line">    w, h = img.size</div><div class="line"></div><div class="line">    points = get_points(img)</div><div class="line">    clusters = kmeans(points, n, 1)</div><div class="line">    rgbs = [map(int, c.center.coords) for c in clusters]</div><div class="line">    return map(rtoh, rgbs)</div><div class="line"></div><div class="line">def euclidean(p1, p2):</div><div class="line">    return sqrt(sum([</div><div class="line">        (p1.coords[i] - p2.coords[i]) ** 2 for i in range(p1.n)</div><div class="line">    ]))</div><div class="line"></div><div class="line">def calculate_center(points, n):</div><div class="line">    vals = [0.0 for i in range(n)]</div><div class="line">    plen = 0</div><div class="line">    for p in points:</div><div class="line">        plen += p.ct</div><div class="line">        for i in range(n):</div><div class="line">            vals[i] += (p.coords[i] * p.ct)</div><div class="line">    return Point([(v / plen) for v in vals], n, 1)</div><div class="line"></div><div class="line">def kmeans(points, k, min_diff):</div><div class="line">    clusters = [Cluster([p], p, p.n) for p in random.sample(points, k)]</div><div class="line"></div><div class="line">    while 1:</div><div class="line">        plists = [[] for i in range(k)]</div><div class="line"></div><div class="line">        for p in points:</div><div class="line">            smallest_distance = float(&apos;Inf&apos;)</div><div class="line">            for i in range(k):</div><div class="line">                distance = euclidean(p, clusters[i].center)</div><div class="line">                if distance &lt; smallest_distance:</div><div class="line">                    smallest_distance = distance</div><div class="line">                    idx = i</div><div class="line">            plists[idx].append(p)</div><div class="line"></div><div class="line">        diff = 0</div><div class="line">        for i in range(k):</div><div class="line">            old = clusters[i]</div><div class="line">            center = calculate_center(plists[i], old.n)</div><div class="line">            new = Cluster(plists[i], center, old.n)</div><div class="line">            clusters[i] = new</div><div class="line">            diff = max(diff, euclidean(old.center, new.center))</div><div class="line"></div><div class="line">        if diff &lt; min_diff:</div><div class="line">            break</div><div class="line"></div><div class="line">    return clusters</div></pre></td></tr></table></figure>
<h2 id="Playing-with-it-in-the-browser"><a href="#Playing-with-it-in-the-browser" class="headerlink" title="Playing with it in the browser"></a>Playing with it in the browser</h2><p>I ported the code over to JavaScript – let me tell you, its pretty rough, but it works and is fast. If you’d like to take a look at a live example, check out:</p>
<p><a href="http://charlesleifer.com/static/colors/" target="_blank" rel="external">http://charlesleifer.com/static/colors/</a> – you can view the source to see the js version, but basically it is just using the HTML5 canvas and its getImageData method.</p>
<h2 id="Thanks-for-reading"><a href="#Thanks-for-reading" class="headerlink" title="Thanks for reading"></a>Thanks for reading</h2><p>Thanks for reading, I hope you found this post interesting. I am sure this is not the only approach so if you have other ideas please feel free to leave a comment or contact me directly.</p>
<h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><p>A commenter on reddit posted this gist, showing how he used the script to generate console color themes and more using the methods outlined in this post: <a href="https://gist.github.com/3946121" target="_blank" rel="external">https://gist.github.com/3946121</a><br>Another commenter on reddit posted a link to scipy, which has built-in support for kmeans: <a href="http://docs.scipy.org/doc/scipy/reference/cluster.vq.html" target="_blank" rel="external">http://docs.scipy.org/doc/scipy/reference/cluster.vq.html</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://charlesleifer.com/blog/using-python-and-k-means-to-find-the-dominant-colors-in-images/" target="_blank" rel="external">Using python and k-means to find the dominant colors in images</a><br>[2]<a href="https://github.com/jfeinstein10/DominantColors" target="_blank" rel="external">DominantColors</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://m.charlesleifer.com/t/800x-/blog/photos/k-means_result.gif?key=M_hIqkUPMMtX6l41haEjYw&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;I’m working on a little photography website for my Dad and thought it would be neat to extract color information from photographs. I tried a couple of different approaches before finding one that works pretty well. This approach uses k-means clustering to cluster the pixels in groups based on their color. The center of those resulting clusters are then the “dominant” colors. k-means is a great fit for this problem because it is (usually) fast. It has the caveat of requiring you to specify up-front how many clusters you want – I found that it works well when I specified around 3.&lt;/p&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="Python" scheme="http://aisee.me/tags/Python/"/>
    
      <category term="K-means" scheme="http://aisee.me/tags/K-means/"/>
    
  </entry>
  
  <entry>
    <title>AiSee</title>
    <link href="http://aisee.me/2017/04/22/Program/Android/MyApp/aisee/"/>
    <id>http://aisee.me/2017/04/22/Program/Android/MyApp/aisee/</id>
    <published>2017-04-22T10:18:06.000Z</published>
    <updated>2017-04-22T12:23:10.326Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/welcome.jpg" alt=""></p>
<blockquote>
<p>From zero to One<br>From 1 to 2,3,…<br>Innovation, Smart, Efficient</p>
</blockquote>
<p>In AI’s eye, there are no apps but positions and intents…<br>Fetch data–&gt;Analyze data–&gt;Create data</p>
<p>visit <a href="aisee.me">aisee.me</a> , know more…</p>
<a id="more"></a>
<p><img src="http://om8nmvpn9.bkt.clouddn.com/i.jpg" alt=""></p>
<p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170422-193028.png" alt=""></p>
<p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170422-193107.png" alt=""></p>
<p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170422-193213.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/welcome.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From zero to One&lt;br&gt;From 1 to 2,3,…&lt;br&gt;Innovation, Smart, Efficient&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In AI’s eye, there are no apps but positions and intents…&lt;br&gt;Fetch data–&amp;gt;Analyze data–&amp;gt;Create data&lt;/p&gt;
&lt;p&gt;visit &lt;a href=&quot;aisee.me&quot;&gt;aisee.me&lt;/a&gt; , know more…&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="SmartUI" scheme="http://aisee.me/tags/SmartUI/"/>
    
      <category term="SmartAI" scheme="http://aisee.me/tags/SmartAI/"/>
    
  </entry>
  
  <entry>
    <title>The Domain Names of Blog</title>
    <link href="http://aisee.me/2017/04/21/MyView/Original/domain-name/"/>
    <id>http://aisee.me/2017/04/21/MyView/Original/domain-name/</id>
    <published>2017-04-21T01:33:18.000Z</published>
    <updated>2017-04-21T01:42:04.809Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/myblog.jpg" alt=""></p>
<blockquote>
<p>Short, Unforgettable, Meaningful</p>
</blockquote>
<ol>
<li>aisee.me</li>
<li>ipcreator.me</li>
<li>ipcreator.org</li>
<li>deepcreator.com</li>
<li>smartai.me</li>
</ol>
<a id="more"></a>
<h2 id="Step-One-Own-your-Web-Space"><a href="#Step-One-Own-your-Web-Space" class="headerlink" title="Step One: Own your Web Space"></a>Step One: Own your Web Space</h2><p>save your content , such as imges, articles etc<br><img src="http://okkntqe2h.bkt.clouddn.com/2017-04-11_190009.jpg" alt=""></p>
<h2 id="Step-Two-Buy-a-Domain-Name"><a href="#Step-Two-Buy-a-Domain-Name" class="headerlink" title="Step Two: Buy a Domain Name"></a>Step Two: Buy a Domain Name</h2><p>by Goddy or Wan Wang</p>
<h2 id="Step-Three-Link-your-web-space-and-your-domain-name"><a href="#Step-Three-Link-your-web-space-and-your-domain-name" class="headerlink" title="Step Three: Link your web space and your domain name"></a>Step Three: Link your web space and your domain name</h2><h3 id="Domain-Name-Server"><a href="#Domain-Name-Server" class="headerlink" title="Domain Name Server"></a>Domain Name Server</h3><p>Set your domain name point to your space web</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ ping ipcreator.github.io</div><div class="line"></div><div class="line">Pinging github.<span class="built_in">map</span>.fastly.net [<span class="number">151.101</span><span class="number">.72</span><span class="number">.133</span>] with <span class="number">32</span> bytes of data:</div><div class="line">Reply from <span class="number">151.101</span><span class="number">.72</span><span class="number">.133</span>: bytes=<span class="number">32</span> time=<span class="number">177</span>ms TTL=<span class="number">51</span></div><div class="line">Reply from <span class="number">151.101</span><span class="number">.72</span><span class="number">.133</span>: bytes=<span class="number">32</span> time=<span class="number">177</span>ms TTL=<span class="number">51</span></div><div class="line">Reply from <span class="number">151.101</span><span class="number">.72</span><span class="number">.133</span>: bytes=<span class="number">32</span> time=<span class="number">176</span>ms TTL=<span class="number">51</span></div><div class="line">Reply from <span class="number">151.101</span><span class="number">.72</span><span class="number">.133</span>: bytes=<span class="number">32</span> time=<span class="number">177</span>ms TTL=<span class="number">51</span></div><div class="line"></div><div class="line">Ping statistics <span class="keyword">for</span> <span class="number">151.101</span><span class="number">.72</span><span class="number">.133</span>:</div><div class="line">    Packets: Sent = <span class="number">4</span>, Received = <span class="number">4</span>, Lost = <span class="number">0</span> (<span class="number">0</span>% loss),</div><div class="line">Approximate round trip times in milli-seconds:</div><div class="line">    Minimum = <span class="number">176</span>ms, Maximum = <span class="number">177</span>ms, Average = <span class="number">176</span>ms</div></pre></td></tr></table></figure>
<p><img src="http://okkntqe2h.bkt.clouddn.com/2017-04-11_190337.jpg" alt=""></p>
<h3 id="Web-Space-Server"><a href="#Web-Space-Server" class="headerlink" title="Web Space Server"></a>Web Space Server</h3><p>Set your CNAME file<br><img src="http://okkntqe2h.bkt.clouddn.com/2017-04-11_190108.jpg" alt=""></p>
<blockquote>
<p>那么多人都要在github上搞博客，还要自定义域名。github哪来这么多ip给你们用？所以办法就是仅仅提供一个ip，这样必然导致这个服务器上发着所有人的博客文件，那么如何区分特定的域名应该展示谁的博客呢？答案就是在仓库里面新建一个CNAME文件，里面写上你博客想用的域名，github的服务器会根据当前http请求的Host头部（即域名），查找对应的包含相同的CNAME内容的目录，从而显示其中的页面。这就是为什么要在仓库里面创建一个CNAME原因。不过，事情还没完，一个ip的问题是世界各地不同地点的访问速度不同，有些地方可能很慢，所以需要一组ip来分担一下。最早github好像只有2个ip，后来ip变多了。再后来，github支持域名解析的时候，通过alias来。比如在域名商那边设置成www.tengj.com —&gt; tengj.github.io，由于github无法控制你如何配置域名和ip的关系，但他可以控制tengj.github.io的最终ip解析，所以github推荐大家使用alias解析，可以为博主提供就近ip访问。这就是你在域名商那边配置CNAME或者alias的原理。</p>
</blockquote>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://www.jianshu.com/p/169aa8765b3f" target="_blank" rel="external">手把手，静态博客搭起来！！从未这么细过（GitHub Pages + Hexo）</a><br>[2]<a href="http://xiaopingblog.cn/2016/04/08/untitled-1460084538799/" target="_blank" rel="external">我的博客是如何搭建的（github pages + HEXO + 域名绑定）</a><br>[3]<a href="http://www.imooc.com/article/3423" target="_blank" rel="external">如何使用10个小时搭建出个人域名而又Geek的独立博客？</a><br>[4]<a href="https://segmentfault.com/q/1010000004557073/a-1020000004561322" target="_blank" rel="external">个人域名如何同时绑定 github 和 coding 上的博客</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/myblog.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Short, Unforgettable, Meaningful&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;aisee.me&lt;/li&gt;
&lt;li&gt;ipcreator.me&lt;/li&gt;
&lt;li&gt;ipcreator.org&lt;/li&gt;
&lt;li&gt;deepcreator.com&lt;/li&gt;
&lt;li&gt;smartai.me&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
      <category term="Domain Name" scheme="http://aisee.me/tags/Domain-Name/"/>
    
  </entry>
  
  <entry>
    <title>What a Beautiful Day</title>
    <link href="http://aisee.me/2017/04/16/Program/Android/MyApp/what-a-beautiful-day/"/>
    <id>http://aisee.me/2017/04/16/Program/Android/MyApp/what-a-beautiful-day/</id>
    <published>2017-04-16T13:36:18.000Z</published>
    <updated>2017-04-16T14:58:03.053Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/torvalds.png" alt=""></p>
<blockquote>
<p>Talk is cheap, Show me the Code.<br>Programmers can be great  code artists, just like Pianist and wonderful music.</p>
</blockquote>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">user<span class="meta">@LAPTOP</span>-<span class="number">082</span>RQVIH MINGW64 /d/AndroidSDK/Dev/ui (master)</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Your branch is up-to-date with <span class="string">'origin/master'</span>.</div><div class="line">Changes not staged <span class="keyword">for</span> commit:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</div><div class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes in working directory)</div><div class="line"></div><div class="line">        modified:   app/build.gradle</div><div class="line">        modified:   app/src/main/AndroidManifest.xml</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/MainActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/BMIActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/appusage/AppUsageAct                                                                                                                                  ivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/bigbang/ui/BigBangMa                                                                                                                                  inActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/calllog/CallLogActiv                                                                                                                                  ity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/contact/ui/ContactAc                                                                                                                                  tivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/contact/ui/ContactDe                                                                                                                                  moActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/contact/ui/ContactLi                                                                                                                                  stActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/coolweather/db/Utili                                                                                                                                  ty.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/coolweather/ui/Choos                                                                                                                                  eAreaFragment.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/coolweather/ui/CoolW                                                                                                                                  eatherActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/coolweather/ui/Weath                                                                                                                                  erActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/gallery/GalleryActiv                                                                                                                                  ity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/image/ImageActivity.                                                                                                                                  java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/joke/JokeActivity.ja                                                                                                                                  va</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/juhe/JuheActivity.ja                                                                                                                                  va</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/juhe/server/JuheServ                                                                                                                                  er.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/musicplayer/MusicPla                                                                                                                                  yerActivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/newsflow/NewsFlowAct                                                                                                                                  ivity.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/apps/sms/ui/SMSActivity.j                                                                                                                                  ava</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/usage/ActivityAdapter.jav                                                                                                                                  a</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/utils/AppUtils.java</div><div class="line">        modified:   app/src/main/java/org/ipcreator/ui/utils/Constant.java</div><div class="line">        modified:   app/src/main/res/layout/activity_gallery.xml</div><div class="line">        modified:   app/src/main/res/layout/activity_item.xml</div><div class="line">        modified:   app/src/main/res/layout/activity_main.xml</div><div class="line">        modified:   app/src/main/res/values/strings.xml</div><div class="line">        modified:   app/src/main/res/values/styles.xml</div><div class="line">        modified:   config/buildsystem/dependencies.gradle</div><div class="line">        modified:   uicore/build.gradle</div><div class="line">        modified:   uicore/src/main/assets/litepal.xml</div><div class="line">        modified:   uicore/src/main/java/org/ipcreator/uicore/AppUsage.java</div><div class="line">        modified:   uicore/src/main/java/org/ipcreator/uicore/UIActivity.java</div><div class="line">        modified:   uicore/src/main/java/org/ipcreator/uicore/UIActivityCollecto                                                                                                                                  r.java</div><div class="line">        modified:   uicore/src/main/java/org/ipcreator/uicore/UIApplication.java</div><div class="line">        modified:   uicore/src/main/java/org/ipcreator/uicore/UIRecordOp.java</div><div class="line">        modified:   utils/build.gradle</div><div class="line">        modified:   utils/src/main/java/org/ipcreator/utils/ImageUtils.java</div><div class="line">        modified:   utils/src/main/java/org/ipcreator/utils/MessageEvent.java</div><div class="line">        modified:   utils/src/main/java/org/ipcreator/utils/StrUtils.java</div><div class="line">        modified:   utils/src/main/java/org/ipcreator/utils/ViewUtils.java</div><div class="line">        modified:   view/src/main/java/org/ipcreator/ui/floatwindow/FloatWindowM                                                                                                                                  anager.java</div><div class="line"></div><div class="line">Untracked files:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include in what will be committed)</div><div class="line"></div><div class="line">        app/src/main/java/org/ipcreator/ui/apps/chart/</div><div class="line">        app/src/main/res/drawable/bg_chart.xml</div><div class="line">        app/src/main/res/layout/activity_chart.xml</div><div class="line">        app/src/main/res/layout/adapter_popup_window.xml</div><div class="line">        app/src/main/res/layout/content_bottom_dialog.xml</div><div class="line">        app/src/main/res/layout/layout_popup_window.xml</div><div class="line">        app/src/main/res/menu/main_toolbar.xml</div><div class="line">        app/src/main/res/menu/menu_grid.xml</div><div class="line">        app/src/main/res/menu/menu_main.xml</div><div class="line">        app/src/main/res/menu/menu_share.xml</div><div class="line">        app/src/main/res/mipmap-xxhdpi/about.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/bg_popup_window.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/chart.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_action_action_bug_report.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_action_action_delete.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_action_content_add.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_action_social_share.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_arrow.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_github.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_launcher.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_share_moments.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_share_qq.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_share_qzone.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_share_wechat.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/ic_share_weibo.png</div><div class="line">        app/src/main/res/mipmap-xxhdpi/setting.png</div><div class="line">        uicore/src/main/java/org/ipcreator/uicore/FloatViewMessage.java</div><div class="line">        uicore/src/main/java/org/ipcreator/uicore/FloatViewRecord.java</div><div class="line">        uicore/src/main/java/org/ipcreator/uicore/FloatViewRecordOp.<span class="function">java</span></div><div class="line"></div><div class="line">no changes added to <span class="title">commit</span> <span class="params">(use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span></div><div class="line"></div><div class="line">user@LAPTOP-082RQVIH MINGW64 /d/AndroidSDK/Dev/<span class="title">ui</span> <span class="params">(master)</span></div><div class="line">$ git add .</div><div class="line">warning: LF will be replaced by CRLF in app/src/main/res/layout/content_bottom_dialog.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in app/src/main/res/menu/main_toolbar.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in app/src/main/res/menu/menu_grid.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in app/src/main/res/menu/menu_main.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in app/src/main/res/menu/menu_share.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line"></div><div class="line">user@LAPTOP-082RQVIH MINGW64 /d/AndroidSDK/Dev/<span class="title">ui</span> <span class="params">(master)</span></div><div class="line">$ git commit -m "add app usage statistics"</div><div class="line">[master 19b1b54] add app usage statistics</div><div class="line"> 77 files changed, 2257 <span class="title">insertions</span><span class="params">(+)</span>, 292 <span class="title">deletions</span><span class="params">(-)</span></div><div class="line"> create mode 100644 app/src/main/java/org/ipcreator/ui/apps/chart/adapter/PopupWindowAdapter.java</div><div class="line"> create mode 100644 app/src/main/java/org/ipcreator/ui/apps/chart/adapter/PopupWindowManager.java</div><div class="line"> create mode 100644 app/src/main/java/org/ipcreator/ui/apps/chart/data/ChartData.java</div><div class="line"> create mode 100644 app/src/main/java/org/ipcreator/ui/apps/chart/ui/ChartActivity.java</div><div class="line"> create mode 100644 app/src/main/java/org/ipcreator/ui/apps/chart/ui/ChatAnimation.java</div><div class="line"> create mode 100644 app/src/main/res/drawable/bg_chart.xml</div><div class="line"> create mode 100644 app/src/main/res/layout/activity_chart.xml</div><div class="line"> create mode 100644 app/src/main/res/layout/adapter_popup_window.xml</div><div class="line"> create mode 100644 app/src/main/res/layout/content_bottom_dialog.xml</div><div class="line"> create mode 100644 app/src/main/res/layout/layout_popup_window.xml</div><div class="line"> create mode 100644 app/src/main/res/menu/main_toolbar.xml</div><div class="line"> create mode 100644 app/src/main/res/menu/menu_grid.xml</div><div class="line"> create mode 100644 app/src/main/res/menu/menu_main.xml</div><div class="line"> create mode 100644 app/src/main/res/menu/menu_share.xml</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/about.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/bg_popup_window.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/chart.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_action_action_bug_report.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_action_action_delete.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_action_content_add.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_action_social_share.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_arrow.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_github.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_launcher.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_share_moments.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_share_qq.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_share_qzone.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_share_wechat.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/ic_share_weibo.png</div><div class="line"> create mode 100644 app/src/main/res/mipmap-xxhdpi/setting.png</div><div class="line"> create mode 100644 uicore/src/main/java/org/ipcreator/uicore/FloatViewMessage.java</div><div class="line"> create mode 100644 uicore/src/main/java/org/ipcreator/uicore/FloatViewRecord.java</div><div class="line"> create mode 100644 uicore/src/main/java/org/ipcreator/uicore/FloatViewRecordOp.java</div><div class="line"></div><div class="line">user@LAPTOP-082RQVIH MINGW64 /d/AndroidSDK/Dev/<span class="title">ui</span> <span class="params">(master)</span></div><div class="line">$ git push</div><div class="line">Counting objects: 141, done.</div><div class="line">Delta compression using up to 8 threads.</div><div class="line">Compressing objects: 100% <span class="params">(<span class="number">125</span>/<span class="number">125</span>)</span>, done.</div><div class="line">Writing objects: 100% <span class="params">(<span class="number">141</span>/<span class="number">141</span>)</span>, 79.00 KiB | 0 bytes/s, done.</div><div class="line">Total 141 <span class="params">(delta <span class="number">62</span>)</span>, reused 0 <span class="params">(delta <span class="number">0</span>)</span></div><div class="line">To git.coding.net:ipcreator/ui.git</div><div class="line">   096709a..19b1b54  master -&gt; master</div><div class="line"></div><div class="line">user@LAPTOP-082RQVIH MINGW64 /d/AndroidSDK/Dev/<span class="title">ui</span> <span class="params">(master)</span></div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Your branch is up-to-date with 'origin/master'.</div><div class="line">nothing to commit, working tree clean</div><div class="line"></div><div class="line">user@LAPTOP-082RQVIH MINGW64 /d/AndroidSDK/Dev/<span class="title">ui</span> <span class="params">(master)</span></div><div class="line">$</div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div><div class="line">1029</div><div class="line">1030</div><div class="line">1031</div><div class="line">1032</div><div class="line">1033</div><div class="line">1034</div><div class="line">1035</div><div class="line">1036</div><div class="line">1037</div><div class="line">1038</div><div class="line">1039</div><div class="line">1040</div><div class="line">1041</div><div class="line">1042</div><div class="line">1043</div><div class="line">1044</div><div class="line">1045</div><div class="line">1046</div><div class="line">1047</div><div class="line">1048</div><div class="line">1049</div><div class="line">1050</div><div class="line">1051</div><div class="line">1052</div><div class="line">1053</div><div class="line">1054</div><div class="line">1055</div><div class="line">1056</div><div class="line">1057</div><div class="line">1058</div><div class="line">1059</div><div class="line">1060</div><div class="line">1061</div><div class="line">1062</div><div class="line">1063</div><div class="line">1064</div><div class="line">1065</div><div class="line">1066</div><div class="line">1067</div><div class="line">1068</div><div class="line">1069</div><div class="line">1070</div><div class="line">1071</div><div class="line">1072</div><div class="line">1073</div><div class="line">1074</div><div class="line">1075</div><div class="line">1076</div><div class="line">1077</div><div class="line">1078</div><div class="line">1079</div><div class="line">1080</div><div class="line">1081</div><div class="line">1082</div><div class="line">1083</div><div class="line">1084</div><div class="line">1085</div><div class="line">1086</div><div class="line">1087</div><div class="line">1088</div><div class="line">1089</div><div class="line">1090</div><div class="line">1091</div><div class="line">1092</div><div class="line">1093</div><div class="line">1094</div><div class="line">1095</div><div class="line">1096</div><div class="line">1097</div><div class="line">1098</div><div class="line">1099</div><div class="line">1100</div><div class="line">1101</div><div class="line">1102</div><div class="line">1103</div><div class="line">1104</div><div class="line">1105</div><div class="line">1106</div><div class="line">1107</div><div class="line">1108</div><div class="line">1109</div><div class="line">1110</div><div class="line">1111</div><div class="line">1112</div><div class="line">1113</div><div class="line">1114</div><div class="line">1115</div><div class="line">1116</div><div class="line">1117</div><div class="line">1118</div><div class="line">1119</div><div class="line">1120</div><div class="line">1121</div><div class="line">1122</div><div class="line">1123</div><div class="line">1124</div><div class="line">1125</div><div class="line">1126</div><div class="line">1127</div><div class="line">1128</div><div class="line">1129</div><div class="line">1130</div><div class="line">1131</div><div class="line">1132</div><div class="line">1133</div><div class="line">1134</div><div class="line">1135</div><div class="line">1136</div><div class="line">1137</div><div class="line">1138</div><div class="line">1139</div><div class="line">1140</div><div class="line">1141</div><div class="line">1142</div><div class="line">1143</div><div class="line">1144</div><div class="line">1145</div><div class="line">1146</div><div class="line">1147</div><div class="line">1148</div><div class="line">1149</div><div class="line">1150</div><div class="line">1151</div><div class="line">1152</div><div class="line">1153</div><div class="line">1154</div><div class="line">1155</div><div class="line">1156</div><div class="line">1157</div><div class="line">1158</div><div class="line">1159</div><div class="line">1160</div><div class="line">1161</div><div class="line">1162</div><div class="line">1163</div><div class="line">1164</div><div class="line">1165</div><div class="line">1166</div><div class="line">1167</div><div class="line">1168</div><div class="line">1169</div><div class="line">1170</div><div class="line">1171</div><div class="line">1172</div><div class="line">1173</div><div class="line">1174</div><div class="line">1175</div><div class="line">1176</div><div class="line">1177</div><div class="line">1178</div><div class="line">1179</div><div class="line">1180</div><div class="line">1181</div><div class="line">1182</div><div class="line">1183</div><div class="line">1184</div><div class="line">1185</div><div class="line">1186</div><div class="line">1187</div><div class="line">1188</div><div class="line">1189</div><div class="line">1190</div><div class="line">1191</div><div class="line">1192</div><div class="line">1193</div><div class="line">1194</div><div class="line">1195</div><div class="line">1196</div><div class="line">1197</div><div class="line">1198</div><div class="line">1199</div><div class="line">1200</div><div class="line">1201</div><div class="line">1202</div><div class="line">1203</div><div class="line">1204</div><div class="line">1205</div><div class="line">1206</div><div class="line">1207</div><div class="line">1208</div><div class="line">1209</div><div class="line">1210</div><div class="line">1211</div><div class="line">1212</div><div class="line">1213</div><div class="line">1214</div><div class="line">1215</div><div class="line">1216</div><div class="line">1217</div><div class="line">1218</div><div class="line">1219</div><div class="line">1220</div><div class="line">1221</div><div class="line">1222</div><div class="line">1223</div><div class="line">1224</div><div class="line">1225</div><div class="line">1226</div><div class="line">1227</div><div class="line">1228</div><div class="line">1229</div><div class="line">1230</div><div class="line">1231</div><div class="line">1232</div><div class="line">1233</div><div class="line">1234</div><div class="line">1235</div><div class="line">1236</div><div class="line">1237</div><div class="line">1238</div><div class="line">1239</div><div class="line">1240</div><div class="line">1241</div><div class="line">1242</div><div class="line">1243</div><div class="line">1244</div><div class="line">1245</div><div class="line">1246</div><div class="line">1247</div><div class="line">1248</div><div class="line">1249</div><div class="line">1250</div><div class="line">1251</div><div class="line">1252</div><div class="line">1253</div><div class="line">1254</div><div class="line">1255</div><div class="line">1256</div><div class="line">1257</div><div class="line">1258</div><div class="line">1259</div><div class="line">1260</div><div class="line">1261</div><div class="line">1262</div><div class="line">1263</div><div class="line">1264</div><div class="line">1265</div><div class="line">1266</div><div class="line">1267</div><div class="line">1268</div><div class="line">1269</div><div class="line">1270</div><div class="line">1271</div><div class="line">1272</div><div class="line">1273</div><div class="line">1274</div><div class="line">1275</div><div class="line">1276</div><div class="line">1277</div><div class="line">1278</div><div class="line">1279</div><div class="line">1280</div><div class="line">1281</div><div class="line">1282</div><div class="line">1283</div><div class="line">1284</div><div class="line">1285</div><div class="line">1286</div><div class="line">1287</div><div class="line">1288</div><div class="line">1289</div><div class="line">1290</div><div class="line">1291</div><div class="line">1292</div><div class="line">1293</div><div class="line">1294</div><div class="line">1295</div><div class="line">1296</div><div class="line">1297</div><div class="line">1298</div><div class="line">1299</div><div class="line">1300</div><div class="line">1301</div><div class="line">1302</div><div class="line">1303</div><div class="line">1304</div><div class="line">1305</div><div class="line">1306</div><div class="line">1307</div><div class="line">1308</div><div class="line">1309</div><div class="line">1310</div><div class="line">1311</div><div class="line">1312</div><div class="line">1313</div><div class="line">1314</div><div class="line">1315</div><div class="line">1316</div><div class="line">1317</div><div class="line">1318</div><div class="line">1319</div><div class="line">1320</div><div class="line">1321</div><div class="line">1322</div><div class="line">1323</div><div class="line">1324</div><div class="line">1325</div><div class="line">1326</div><div class="line">1327</div><div class="line">1328</div><div class="line">1329</div><div class="line">1330</div><div class="line">1331</div><div class="line">1332</div><div class="line">1333</div><div class="line">1334</div><div class="line">1335</div><div class="line">1336</div><div class="line">1337</div><div class="line">1338</div><div class="line">1339</div><div class="line">1340</div><div class="line">1341</div><div class="line">1342</div><div class="line">1343</div><div class="line">1344</div><div class="line">1345</div><div class="line">1346</div><div class="line">1347</div><div class="line">1348</div><div class="line">1349</div><div class="line">1350</div><div class="line">1351</div><div class="line">1352</div><div class="line">1353</div><div class="line">1354</div><div class="line">1355</div><div class="line">1356</div><div class="line">1357</div><div class="line">1358</div><div class="line">1359</div><div class="line">1360</div><div class="line">1361</div><div class="line">1362</div><div class="line">1363</div><div class="line">1364</div><div class="line">1365</div><div class="line">1366</div><div class="line">1367</div><div class="line">1368</div><div class="line">1369</div><div class="line">1370</div><div class="line">1371</div><div class="line">1372</div><div class="line">1373</div><div class="line">1374</div><div class="line">1375</div><div class="line">1376</div><div class="line">1377</div><div class="line">1378</div><div class="line">1379</div><div class="line">1380</div><div class="line">1381</div><div class="line">1382</div><div class="line">1383</div><div class="line">1384</div><div class="line">1385</div><div class="line">1386</div><div class="line">1387</div><div class="line">1388</div><div class="line">1389</div><div class="line">1390</div><div class="line">1391</div><div class="line">1392</div><div class="line">1393</div><div class="line">1394</div><div class="line">1395</div><div class="line">1396</div><div class="line">1397</div><div class="line">1398</div><div class="line">1399</div><div class="line">1400</div><div class="line">1401</div><div class="line">1402</div><div class="line">1403</div><div class="line">1404</div><div class="line">1405</div><div class="line">1406</div><div class="line">1407</div><div class="line">1408</div><div class="line">1409</div><div class="line">1410</div><div class="line">1411</div><div class="line">1412</div><div class="line">1413</div><div class="line">1414</div><div class="line">1415</div><div class="line">1416</div><div class="line">1417</div><div class="line">1418</div><div class="line">1419</div><div class="line">1420</div><div class="line">1421</div><div class="line">1422</div><div class="line">1423</div><div class="line">1424</div><div class="line">1425</div><div class="line">1426</div><div class="line">1427</div><div class="line">1428</div><div class="line">1429</div><div class="line">1430</div><div class="line">1431</div><div class="line">1432</div><div class="line">1433</div><div class="line">1434</div><div class="line">1435</div><div class="line">1436</div><div class="line">1437</div><div class="line">1438</div><div class="line">1439</div><div class="line">1440</div><div class="line">1441</div><div class="line">1442</div><div class="line">1443</div><div class="line">1444</div><div class="line">1445</div><div class="line">1446</div><div class="line">1447</div><div class="line">1448</div><div class="line">1449</div><div class="line">1450</div><div class="line">1451</div><div class="line">1452</div><div class="line">1453</div><div class="line">1454</div><div class="line">1455</div><div class="line">1456</div><div class="line">1457</div><div class="line">1458</div><div class="line">1459</div><div class="line">1460</div><div class="line">1461</div><div class="line">1462</div><div class="line">1463</div><div class="line">1464</div><div class="line">1465</div><div class="line">1466</div><div class="line">1467</div><div class="line">1468</div><div class="line">1469</div><div class="line">1470</div><div class="line">1471</div><div class="line">1472</div><div class="line">1473</div><div class="line">1474</div><div class="line">1475</div><div class="line">1476</div><div class="line">1477</div><div class="line">1478</div><div class="line">1479</div><div class="line">1480</div><div class="line">1481</div><div class="line">1482</div><div class="line">1483</div><div class="line">1484</div><div class="line">1485</div><div class="line">1486</div><div class="line">1487</div><div class="line">1488</div><div class="line">1489</div><div class="line">1490</div><div class="line">1491</div><div class="line">1492</div><div class="line">1493</div><div class="line">1494</div><div class="line">1495</div><div class="line">1496</div><div class="line">1497</div><div class="line">1498</div><div class="line">1499</div><div class="line">1500</div><div class="line">1501</div><div class="line">1502</div><div class="line">1503</div><div class="line">1504</div><div class="line">1505</div><div class="line">1506</div><div class="line">1507</div><div class="line">1508</div><div class="line">1509</div><div class="line">1510</div><div class="line">1511</div><div class="line">1512</div><div class="line">1513</div><div class="line">1514</div><div class="line">1515</div><div class="line">1516</div><div class="line">1517</div><div class="line">1518</div><div class="line">1519</div><div class="line">1520</div><div class="line">1521</div><div class="line">1522</div><div class="line">1523</div><div class="line">1524</div><div class="line">1525</div><div class="line">1526</div><div class="line">1527</div><div class="line">1528</div><div class="line">1529</div><div class="line">1530</div><div class="line">1531</div><div class="line">1532</div><div class="line">1533</div><div class="line">1534</div><div class="line">1535</div><div class="line">1536</div><div class="line">1537</div><div class="line">1538</div><div class="line">1539</div><div class="line">1540</div><div class="line">1541</div><div class="line">1542</div><div class="line">1543</div><div class="line">1544</div><div class="line">1545</div><div class="line">1546</div><div class="line">1547</div><div class="line">1548</div><div class="line">1549</div><div class="line">1550</div><div class="line">1551</div><div class="line">1552</div><div class="line">1553</div><div class="line">1554</div><div class="line">1555</div><div class="line">1556</div><div class="line">1557</div><div class="line">1558</div><div class="line">1559</div><div class="line">1560</div><div class="line">1561</div><div class="line">1562</div><div class="line">1563</div><div class="line">1564</div><div class="line">1565</div><div class="line">1566</div><div class="line">1567</div><div class="line">1568</div><div class="line">1569</div><div class="line">1570</div><div class="line">1571</div><div class="line">1572</div><div class="line">1573</div><div class="line">1574</div><div class="line">1575</div><div class="line">1576</div><div class="line">1577</div><div class="line">1578</div><div class="line">1579</div><div class="line">1580</div><div class="line">1581</div><div class="line">1582</div><div class="line">1583</div><div class="line">1584</div><div class="line">1585</div><div class="line">1586</div><div class="line">1587</div><div class="line">1588</div><div class="line">1589</div><div class="line">1590</div><div class="line">1591</div><div class="line">1592</div><div class="line">1593</div><div class="line">1594</div><div class="line">1595</div><div class="line">1596</div><div class="line">1597</div><div class="line">1598</div><div class="line">1599</div><div class="line">1600</div><div class="line">1601</div><div class="line">1602</div><div class="line">1603</div><div class="line">1604</div><div class="line">1605</div><div class="line">1606</div><div class="line">1607</div><div class="line">1608</div><div class="line">1609</div><div class="line">1610</div><div class="line">1611</div><div class="line">1612</div><div class="line">1613</div><div class="line">1614</div><div class="line">1615</div><div class="line">1616</div><div class="line">1617</div><div class="line">1618</div><div class="line">1619</div><div class="line">1620</div><div class="line">1621</div><div class="line">1622</div><div class="line">1623</div><div class="line">1624</div><div class="line">1625</div><div class="line">1626</div><div class="line">1627</div><div class="line">1628</div><div class="line">1629</div><div class="line">1630</div><div class="line">1631</div><div class="line">1632</div><div class="line">1633</div><div class="line">1634</div><div class="line">1635</div><div class="line">1636</div><div class="line">1637</div><div class="line">1638</div><div class="line">1639</div><div class="line">1640</div><div class="line">1641</div><div class="line">1642</div><div class="line">1643</div><div class="line">1644</div><div class="line">1645</div><div class="line">1646</div><div class="line">1647</div><div class="line">1648</div><div class="line">1649</div><div class="line">1650</div><div class="line">1651</div><div class="line">1652</div><div class="line">1653</div><div class="line">1654</div><div class="line">1655</div><div class="line">1656</div><div class="line">1657</div><div class="line">1658</div><div class="line">1659</div><div class="line">1660</div><div class="line">1661</div><div class="line">1662</div><div class="line">1663</div><div class="line">1664</div><div class="line">1665</div><div class="line">1666</div><div class="line">1667</div><div class="line">1668</div><div class="line">1669</div><div class="line">1670</div><div class="line">1671</div><div class="line">1672</div><div class="line">1673</div><div class="line">1674</div><div class="line">1675</div><div class="line">1676</div><div class="line">1677</div><div class="line">1678</div><div class="line">1679</div><div class="line">1680</div><div class="line">1681</div><div class="line">1682</div><div class="line">1683</div><div class="line">1684</div><div class="line">1685</div><div class="line">1686</div><div class="line">1687</div><div class="line">1688</div><div class="line">1689</div><div class="line">1690</div><div class="line">1691</div><div class="line">1692</div><div class="line">1693</div><div class="line">1694</div><div class="line">1695</div><div class="line">1696</div><div class="line">1697</div><div class="line">1698</div><div class="line">1699</div><div class="line">1700</div><div class="line">1701</div><div class="line">1702</div><div class="line">1703</div><div class="line">1704</div><div class="line">1705</div><div class="line">1706</div><div class="line">1707</div><div class="line">1708</div><div class="line">1709</div><div class="line">1710</div><div class="line">1711</div><div class="line">1712</div><div class="line">1713</div><div class="line">1714</div><div class="line">1715</div><div class="line">1716</div><div class="line">1717</div><div class="line">1718</div><div class="line">1719</div><div class="line">1720</div><div class="line">1721</div><div class="line">1722</div><div class="line">1723</div><div class="line">1724</div><div class="line">1725</div><div class="line">1726</div><div class="line">1727</div><div class="line">1728</div><div class="line">1729</div><div class="line">1730</div><div class="line">1731</div><div class="line">1732</div><div class="line">1733</div><div class="line">1734</div><div class="line">1735</div><div class="line">1736</div><div class="line">1737</div><div class="line">1738</div><div class="line">1739</div><div class="line">1740</div><div class="line">1741</div><div class="line">1742</div><div class="line">1743</div><div class="line">1744</div><div class="line">1745</div><div class="line">1746</div><div class="line">1747</div><div class="line">1748</div><div class="line">1749</div><div class="line">1750</div><div class="line">1751</div><div class="line">1752</div><div class="line">1753</div><div class="line">1754</div><div class="line">1755</div><div class="line">1756</div><div class="line">1757</div><div class="line">1758</div><div class="line">1759</div><div class="line">1760</div><div class="line">1761</div><div class="line">1762</div><div class="line">1763</div><div class="line">1764</div><div class="line">1765</div><div class="line">1766</div><div class="line">1767</div><div class="line">1768</div><div class="line">1769</div><div class="line">1770</div><div class="line">1771</div><div class="line">1772</div><div class="line">1773</div><div class="line">1774</div><div class="line">1775</div><div class="line">1776</div><div class="line">1777</div><div class="line">1778</div><div class="line">1779</div><div class="line">1780</div><div class="line">1781</div><div class="line">1782</div><div class="line">1783</div><div class="line">1784</div><div class="line">1785</div><div class="line">1786</div><div class="line">1787</div><div class="line">1788</div><div class="line">1789</div><div class="line">1790</div><div class="line">1791</div><div class="line">1792</div><div class="line">1793</div><div class="line">1794</div><div class="line">1795</div><div class="line">1796</div><div class="line">1797</div><div class="line">1798</div><div class="line">1799</div><div class="line">1800</div><div class="line">1801</div><div class="line">1802</div><div class="line">1803</div><div class="line">1804</div><div class="line">1805</div><div class="line">1806</div><div class="line">1807</div><div class="line">1808</div><div class="line">1809</div><div class="line">1810</div><div class="line">1811</div><div class="line">1812</div><div class="line">1813</div><div class="line">1814</div><div class="line">1815</div><div class="line">1816</div><div class="line">1817</div><div class="line">1818</div><div class="line">1819</div><div class="line">1820</div><div class="line">1821</div><div class="line">1822</div><div class="line">1823</div><div class="line">1824</div><div class="line">1825</div><div class="line">1826</div><div class="line">1827</div><div class="line">1828</div><div class="line">1829</div><div class="line">1830</div><div class="line">1831</div><div class="line">1832</div><div class="line">1833</div><div class="line">1834</div><div class="line">1835</div><div class="line">1836</div><div class="line">1837</div><div class="line">1838</div><div class="line">1839</div><div class="line">1840</div><div class="line">1841</div><div class="line">1842</div><div class="line">1843</div><div class="line">1844</div><div class="line">1845</div><div class="line">1846</div><div class="line">1847</div><div class="line">1848</div><div class="line">1849</div><div class="line">1850</div><div class="line">1851</div><div class="line">1852</div><div class="line">1853</div><div class="line">1854</div><div class="line">1855</div><div class="line">1856</div><div class="line">1857</div><div class="line">1858</div><div class="line">1859</div><div class="line">1860</div><div class="line">1861</div><div class="line">1862</div><div class="line">1863</div><div class="line">1864</div><div class="line">1865</div><div class="line">1866</div><div class="line">1867</div><div class="line">1868</div><div class="line">1869</div><div class="line">1870</div><div class="line">1871</div><div class="line">1872</div><div class="line">1873</div><div class="line">1874</div><div class="line">1875</div><div class="line">1876</div><div class="line">1877</div><div class="line">1878</div><div class="line">1879</div><div class="line">1880</div><div class="line">1881</div><div class="line">1882</div><div class="line">1883</div><div class="line">1884</div><div class="line">1885</div><div class="line">1886</div><div class="line">1887</div><div class="line">1888</div><div class="line">1889</div><div class="line">1890</div><div class="line">1891</div><div class="line">1892</div><div class="line">1893</div><div class="line">1894</div><div class="line">1895</div><div class="line">1896</div><div class="line">1897</div><div class="line">1898</div><div class="line">1899</div><div class="line">1900</div><div class="line">1901</div><div class="line">1902</div><div class="line">1903</div><div class="line">1904</div><div class="line">1905</div><div class="line">1906</div><div class="line">1907</div><div class="line">1908</div><div class="line">1909</div><div class="line">1910</div><div class="line">1911</div><div class="line">1912</div><div class="line">1913</div><div class="line">1914</div><div class="line">1915</div><div class="line">1916</div><div class="line">1917</div><div class="line">1918</div><div class="line">1919</div><div class="line">1920</div><div class="line">1921</div><div class="line">1922</div><div class="line">1923</div><div class="line">1924</div><div class="line">1925</div><div class="line">1926</div><div class="line">1927</div><div class="line">1928</div><div class="line">1929</div><div class="line">1930</div><div class="line">1931</div><div class="line">1932</div><div class="line">1933</div><div class="line">1934</div><div class="line">1935</div><div class="line">1936</div><div class="line">1937</div><div class="line">1938</div><div class="line">1939</div><div class="line">1940</div><div class="line">1941</div><div class="line">1942</div><div class="line">1943</div><div class="line">1944</div><div class="line">1945</div><div class="line">1946</div><div class="line">1947</div><div class="line">1948</div><div class="line">1949</div><div class="line">1950</div><div class="line">1951</div><div class="line">1952</div><div class="line">1953</div><div class="line">1954</div><div class="line">1955</div><div class="line">1956</div><div class="line">1957</div><div class="line">1958</div><div class="line">1959</div><div class="line">1960</div><div class="line">1961</div><div class="line">1962</div><div class="line">1963</div><div class="line">1964</div><div class="line">1965</div><div class="line">1966</div><div class="line">1967</div><div class="line">1968</div><div class="line">1969</div><div class="line">1970</div><div class="line">1971</div><div class="line">1972</div><div class="line">1973</div><div class="line">1974</div><div class="line">1975</div><div class="line">1976</div><div class="line">1977</div><div class="line">1978</div><div class="line">1979</div><div class="line">1980</div><div class="line">1981</div><div class="line">1982</div><div class="line">1983</div><div class="line">1984</div><div class="line">1985</div><div class="line">1986</div><div class="line">1987</div><div class="line">1988</div><div class="line">1989</div><div class="line">1990</div><div class="line">1991</div><div class="line">1992</div><div class="line">1993</div><div class="line">1994</div><div class="line">1995</div><div class="line">1996</div><div class="line">1997</div><div class="line">1998</div><div class="line">1999</div><div class="line">2000</div><div class="line">2001</div><div class="line">2002</div><div class="line">2003</div><div class="line">2004</div><div class="line">2005</div><div class="line">2006</div><div class="line">2007</div><div class="line">2008</div><div class="line">2009</div><div class="line">2010</div><div class="line">2011</div><div class="line">2012</div><div class="line">2013</div><div class="line">2014</div><div class="line">2015</div><div class="line">2016</div><div class="line">2017</div><div class="line">2018</div><div class="line">2019</div><div class="line">2020</div><div class="line">2021</div><div class="line">2022</div><div class="line">2023</div><div class="line">2024</div><div class="line">2025</div><div class="line">2026</div><div class="line">2027</div><div class="line">2028</div><div class="line">2029</div><div class="line">2030</div><div class="line">2031</div><div class="line">2032</div><div class="line">2033</div><div class="line">2034</div><div class="line">2035</div><div class="line">2036</div><div class="line">2037</div><div class="line">2038</div><div class="line">2039</div><div class="line">2040</div><div class="line">2041</div><div class="line">2042</div><div class="line">2043</div><div class="line">2044</div><div class="line">2045</div><div class="line">2046</div><div class="line">2047</div><div class="line">2048</div><div class="line">2049</div><div class="line">2050</div><div class="line">2051</div><div class="line">2052</div><div class="line">2053</div><div class="line">2054</div><div class="line">2055</div><div class="line">2056</div><div class="line">2057</div><div class="line">2058</div><div class="line">2059</div><div class="line">2060</div><div class="line">2061</div><div class="line">2062</div><div class="line">2063</div><div class="line">2064</div><div class="line">2065</div><div class="line">2066</div><div class="line">2067</div><div class="line">2068</div><div class="line">2069</div><div class="line">2070</div><div class="line">2071</div><div class="line">2072</div><div class="line">2073</div><div class="line">2074</div><div class="line">2075</div><div class="line">2076</div><div class="line">2077</div><div class="line">2078</div><div class="line">2079</div><div class="line">2080</div><div class="line">2081</div><div class="line">2082</div><div class="line">2083</div><div class="line">2084</div><div class="line">2085</div><div class="line">2086</div><div class="line">2087</div><div class="line">2088</div><div class="line">2089</div><div class="line">2090</div><div class="line">2091</div><div class="line">2092</div><div class="line">2093</div><div class="line">2094</div><div class="line">2095</div><div class="line">2096</div><div class="line">2097</div><div class="line">2098</div><div class="line">2099</div><div class="line">2100</div><div class="line">2101</div><div class="line">2102</div><div class="line">2103</div><div class="line">2104</div><div class="line">2105</div><div class="line">2106</div><div class="line">2107</div><div class="line">2108</div><div class="line">2109</div><div class="line">2110</div><div class="line">2111</div><div class="line">2112</div><div class="line">2113</div><div class="line">2114</div><div class="line">2115</div><div class="line">2116</div><div class="line">2117</div><div class="line">2118</div><div class="line">2119</div><div class="line">2120</div><div class="line">2121</div><div class="line">2122</div><div class="line">2123</div><div class="line">2124</div><div class="line">2125</div><div class="line">2126</div><div class="line">2127</div><div class="line">2128</div><div class="line">2129</div><div class="line">2130</div><div class="line">2131</div><div class="line">2132</div><div class="line">2133</div><div class="line">2134</div><div class="line">2135</div><div class="line">2136</div><div class="line">2137</div><div class="line">2138</div><div class="line">2139</div><div class="line">2140</div><div class="line">2141</div><div class="line">2142</div><div class="line">2143</div><div class="line">2144</div><div class="line">2145</div><div class="line">2146</div><div class="line">2147</div><div class="line">2148</div><div class="line">2149</div><div class="line">2150</div><div class="line">2151</div><div class="line">2152</div><div class="line">2153</div><div class="line">2154</div><div class="line">2155</div><div class="line">2156</div><div class="line">2157</div><div class="line">2158</div><div class="line">2159</div><div class="line">2160</div><div class="line">2161</div><div class="line">2162</div><div class="line">2163</div><div class="line">2164</div><div class="line">2165</div><div class="line">2166</div><div class="line">2167</div><div class="line">2168</div><div class="line">2169</div><div class="line">2170</div><div class="line">2171</div><div class="line">2172</div><div class="line">2173</div><div class="line">2174</div><div class="line">2175</div><div class="line">2176</div><div class="line">2177</div><div class="line">2178</div><div class="line">2179</div><div class="line">2180</div><div class="line">2181</div><div class="line">2182</div><div class="line">2183</div><div class="line">2184</div><div class="line">2185</div><div class="line">2186</div><div class="line">2187</div><div class="line">2188</div><div class="line">2189</div><div class="line">2190</div><div class="line">2191</div><div class="line">2192</div><div class="line">2193</div><div class="line">2194</div><div class="line">2195</div><div class="line">2196</div><div class="line">2197</div><div class="line">2198</div><div class="line">2199</div><div class="line">2200</div><div class="line">2201</div><div class="line">2202</div><div class="line">2203</div><div class="line">2204</div><div class="line">2205</div><div class="line">2206</div><div class="line">2207</div><div class="line">2208</div><div class="line">2209</div><div class="line">2210</div><div class="line">2211</div><div class="line">2212</div><div class="line">2213</div><div class="line">2214</div><div class="line">2215</div><div class="line">2216</div><div class="line">2217</div><div class="line">2218</div><div class="line">2219</div><div class="line">2220</div><div class="line">2221</div><div class="line">2222</div><div class="line">2223</div><div class="line">2224</div><div class="line">2225</div><div class="line">2226</div><div class="line">2227</div><div class="line">2228</div><div class="line">2229</div><div class="line">2230</div><div class="line">2231</div><div class="line">2232</div><div class="line">2233</div><div class="line">2234</div><div class="line">2235</div><div class="line">2236</div><div class="line">2237</div><div class="line">2238</div><div class="line">2239</div><div class="line">2240</div><div class="line">2241</div><div class="line">2242</div><div class="line">2243</div><div class="line">2244</div><div class="line">2245</div><div class="line">2246</div><div class="line">2247</div><div class="line">2248</div><div class="line">2249</div><div class="line">2250</div><div class="line">2251</div><div class="line">2252</div><div class="line">2253</div><div class="line">2254</div><div class="line">2255</div><div class="line">2256</div><div class="line">2257</div><div class="line">2258</div><div class="line">2259</div><div class="line">2260</div><div class="line">2261</div><div class="line">2262</div><div class="line">2263</div><div class="line">2264</div><div class="line">2265</div><div class="line">2266</div><div class="line">2267</div><div class="line">2268</div><div class="line">2269</div><div class="line">2270</div><div class="line">2271</div><div class="line">2272</div><div class="line">2273</div><div class="line">2274</div><div class="line">2275</div><div class="line">2276</div><div class="line">2277</div><div class="line">2278</div><div class="line">2279</div><div class="line">2280</div><div class="line">2281</div><div class="line">2282</div><div class="line">2283</div><div class="line">2284</div><div class="line">2285</div><div class="line">2286</div><div class="line">2287</div><div class="line">2288</div><div class="line">2289</div><div class="line">2290</div><div class="line">2291</div><div class="line">2292</div><div class="line">2293</div><div class="line">2294</div><div class="line">2295</div><div class="line">2296</div><div class="line">2297</div><div class="line">2298</div><div class="line">2299</div><div class="line">2300</div><div class="line">2301</div><div class="line">2302</div><div class="line">2303</div><div class="line">2304</div><div class="line">2305</div><div class="line">2306</div><div class="line">2307</div><div class="line">2308</div><div class="line">2309</div><div class="line">2310</div><div class="line">2311</div><div class="line">2312</div><div class="line">2313</div><div class="line">2314</div><div class="line">2315</div><div class="line">2316</div><div class="line">2317</div><div class="line">2318</div><div class="line">2319</div><div class="line">2320</div><div class="line">2321</div><div class="line">2322</div><div class="line">2323</div><div class="line">2324</div><div class="line">2325</div><div class="line">2326</div><div class="line">2327</div><div class="line">2328</div><div class="line">2329</div><div class="line">2330</div><div class="line">2331</div><div class="line">2332</div><div class="line">2333</div><div class="line">2334</div><div class="line">2335</div><div class="line">2336</div><div class="line">2337</div><div class="line">2338</div><div class="line">2339</div><div class="line">2340</div><div class="line">2341</div><div class="line">2342</div><div class="line">2343</div><div class="line">2344</div><div class="line">2345</div><div class="line">2346</div><div class="line">2347</div><div class="line">2348</div><div class="line">2349</div><div class="line">2350</div><div class="line">2351</div><div class="line">2352</div><div class="line">2353</div><div class="line">2354</div><div class="line">2355</div><div class="line">2356</div><div class="line">2357</div><div class="line">2358</div><div class="line">2359</div><div class="line">2360</div><div class="line">2361</div><div class="line">2362</div><div class="line">2363</div><div class="line">2364</div><div class="line">2365</div><div class="line">2366</div><div class="line">2367</div><div class="line">2368</div><div class="line">2369</div><div class="line">2370</div><div class="line">2371</div><div class="line">2372</div><div class="line">2373</div><div class="line">2374</div><div class="line">2375</div><div class="line">2376</div><div class="line">2377</div><div class="line">2378</div><div class="line">2379</div><div class="line">2380</div><div class="line">2381</div><div class="line">2382</div><div class="line">2383</div><div class="line">2384</div><div class="line">2385</div><div class="line">2386</div><div class="line">2387</div><div class="line">2388</div><div class="line">2389</div><div class="line">2390</div><div class="line">2391</div><div class="line">2392</div><div class="line">2393</div><div class="line">2394</div><div class="line">2395</div><div class="line">2396</div><div class="line">2397</div><div class="line">2398</div><div class="line">2399</div><div class="line">2400</div><div class="line">2401</div><div class="line">2402</div><div class="line">2403</div><div class="line">2404</div><div class="line">2405</div><div class="line">2406</div><div class="line">2407</div><div class="line">2408</div><div class="line">2409</div><div class="line">2410</div><div class="line">2411</div><div class="line">2412</div><div class="line">2413</div><div class="line">2414</div><div class="line">2415</div><div class="line">2416</div><div class="line">2417</div><div class="line">2418</div><div class="line">2419</div><div class="line">2420</div><div class="line">2421</div><div class="line">2422</div><div class="line">2423</div><div class="line">2424</div><div class="line">2425</div><div class="line">2426</div><div class="line">2427</div><div class="line">2428</div><div class="line">2429</div><div class="line">2430</div><div class="line">2431</div><div class="line">2432</div><div class="line">2433</div><div class="line">2434</div><div class="line">2435</div><div class="line">2436</div><div class="line">2437</div><div class="line">2438</div><div class="line">2439</div><div class="line">2440</div><div class="line">2441</div><div class="line">2442</div><div class="line">2443</div><div class="line">2444</div><div class="line">2445</div><div class="line">2446</div><div class="line">2447</div><div class="line">2448</div><div class="line">2449</div><div class="line">2450</div><div class="line">2451</div><div class="line">2452</div><div class="line">2453</div><div class="line">2454</div><div class="line">2455</div><div class="line">2456</div><div class="line">2457</div><div class="line">2458</div><div class="line">2459</div><div class="line">2460</div><div class="line">2461</div><div class="line">2462</div><div class="line">2463</div><div class="line">2464</div><div class="line">2465</div><div class="line">2466</div><div class="line">2467</div><div class="line">2468</div><div class="line">2469</div><div class="line">2470</div><div class="line">2471</div><div class="line">2472</div><div class="line">2473</div><div class="line">2474</div><div class="line">2475</div><div class="line">2476</div><div class="line">2477</div><div class="line">2478</div><div class="line">2479</div><div class="line">2480</div><div class="line">2481</div><div class="line">2482</div><div class="line">2483</div><div class="line">2484</div><div class="line">2485</div><div class="line">2486</div><div class="line">2487</div><div class="line">2488</div><div class="line">2489</div><div class="line">2490</div><div class="line">2491</div><div class="line">2492</div><div class="line">2493</div><div class="line">2494</div><div class="line">2495</div><div class="line">2496</div><div class="line">2497</div><div class="line">2498</div><div class="line">2499</div><div class="line">2500</div><div class="line">2501</div><div class="line">2502</div><div class="line">2503</div><div class="line">2504</div><div class="line">2505</div><div class="line">2506</div><div class="line">2507</div><div class="line">2508</div><div class="line">2509</div><div class="line">2510</div><div class="line">2511</div><div class="line">2512</div><div class="line">2513</div><div class="line">2514</div><div class="line">2515</div><div class="line">2516</div><div class="line">2517</div><div class="line">2518</div><div class="line">2519</div><div class="line">2520</div><div class="line">2521</div><div class="line">2522</div><div class="line">2523</div><div class="line">2524</div><div class="line">2525</div><div class="line">2526</div><div class="line">2527</div><div class="line">2528</div><div class="line">2529</div><div class="line">2530</div><div class="line">2531</div><div class="line">2532</div><div class="line">2533</div><div class="line">2534</div><div class="line">2535</div><div class="line">2536</div><div class="line">2537</div><div class="line">2538</div><div class="line">2539</div><div class="line">2540</div><div class="line">2541</div><div class="line">2542</div><div class="line">2543</div><div class="line">2544</div><div class="line">2545</div><div class="line">2546</div><div class="line">2547</div><div class="line">2548</div><div class="line">2549</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">user@LAPTOP<span class="number">-082</span>RQVIH MINGW64 /d/IPCreatorBlog</div><div class="line">$ hexo s</div><div class="line">INFO  Start processing</div><div class="line">INFO  Hexo is running at http:<span class="comment">//localhost:4000/. Press Ctrl+C to stop.</span></div><div class="line"></div><div class="line"></div><div class="line">user@LAPTOP<span class="number">-082</span>RQVIH MINGW64 /d/IPCreatorBlog</div><div class="line">$ hexo d -g</div><div class="line">INFO  Start processing</div><div class="line">INFO  Files loaded in <span class="number">3.7</span> s</div><div class="line">INFO  Generated: feed.json</div><div class="line">INFO  Generated: baidusitemap.xml</div><div class="line">INFO  Generated: about/index.html</div><div class="line">INFO  Generated: sitemap.xml</div><div class="line">INFO  Generated: atom.xml</div><div class="line">INFO  Generated: search.xml</div><div class="line">INFO  Generated: content.json</div><div class="line">INFO  Generated: categories/index.html</div><div class="line">INFO  Generated: tags/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">12</span>/Program/Tools/Computer/foobar/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/English/basic-concept-of-grammar/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">12</span>/Program/Android/MyApp/bigbang/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/English/my-<span class="keyword">using</span>-of-english/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/Meta Skill/meta-skill-deliberately-practice/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/Program/Android/MyApp/search-my-blog/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">10</span>/Program/Android/analysis-of-debug-problem/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/MyView/Original/domain-name/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">10</span>/Program/Android/MyApp/ui/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/MyView/to-be-the-master-of-yourself/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Linux/the-basic-concepts-of-linux-serv                                                                                                                                  er/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">08</span>/MyView/Movie/life-of-pi/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Computer/the-basic-concepts-of-memory/                                                                                                                                  index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/C&amp;C++/the-basic-concepts-of-c-compiler                                                                                                                                  /index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Linux/the-basic-concepts-of-linux/inde                                                                                                                                  x.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">07</span>/MyView/it-happens-to-me-by-accident/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/English/basic-concept-of-spelling/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">07</span>/AI/Business/views-of-zhouhongyi-on-ai/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/Program/Java/basic-concept-of-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/English/basic-concept-of-vocabulary/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/readme/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Meta Skill/meta-skill-innovation/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Meta Skill/meta-skill-english/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/MyView/Original/watch your attention/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Meta Skill/meta-skill-retrieve/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Python/the-basic-concepts-of-python/in                                                                                                                                  dex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Program/Tools/Linux/linux-trouble-resolver/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Program/Tools/Linux/shell/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Tools/Gradle/gradle-and-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Program/Tools/Linux/linux/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Tools/Linux/ubuntu/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Android/<span class="number">3</span>rdLib/easy-permissions/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/MyView/Share/persuing-personal-value/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/Program/Tools/Computer/<span class="keyword">char</span>-decode/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/MyView/Original/trouble-obeys-forever-rule/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Android/<span class="number">3</span>rdLib/permissions-dispatcher/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/AI/Business/<span class="number">10</span>-breakthrough-technologies<span class="number">-2017</span>/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">03</span>/Program/Java/improve-code-inspection-with-annotation                                                                                                                                  s/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">03</span>/Program/Android/<span class="number">3</span>rdLib/great-spirit-on-github/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">02</span>/Program/Tools/Gradle/gradle/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">03</span>/Program/Android/Design/compile-process-of-apk/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">02</span>/Program/Android/deep-learning-of-android-by-luosheng                                                                                                                                  yang/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">02</span>/Program/Android/Design/permission-checker/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/MyView/Original/investment/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/MyView/Original/keep-your-independency/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/English/english-is-a-<span class="keyword">friend</span>-<span class="keyword">for</span>-everybody/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/AI/Business/andrew ng-artificial-intelligence-is-the                                                                                                                                  -<span class="keyword">new</span>-electricity/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Android/Design/ui-app/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Android/<span class="number">3</span>rdLib/findbugs/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Android/Design/architecture-of-android-app/i                                                                                                                                  ndex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Java/deep-learning-of-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Tools/Git/github-cheat-sheet/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Java/what-is-reflection-in-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/gitHub-android-libraries-top-                                                                                                                                  <span class="number">100</span>/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/less-code/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/<span class="built_in">list</span>-of-android-ui-ux-librari                                                                                                                                  es/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/android-knowledge-base/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/quality-tools-<span class="keyword">for</span>-Android/ind                                                                                                                                  ex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/catagory-of-open-sources-proj                                                                                                                                  ects-of-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Java/design-pattern-in-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/block-canary/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/MyView/Original/Why/why-i-insist-on-practicing-delib                                                                                                                                  erately-eveyday/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/butterknife/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/MyView/Original/Why/why-i-write-blog/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/leak-canary/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/event-bus/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/English/why-i-insist-on-<span class="keyword">using</span>-english/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/AI/Business/Jiang-tao--only<span class="number">-2</span>%-persons-can-be-winner                                                                                                                                  -of-AI/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">28</span>/MyView/Original/beauty-of-life/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/AI/Business/yann-leCun-predict-learning-is-the-futur                                                                                                                                  e-of-AI/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/MyView/Original/Why/why/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">28</span>/MyView/Original/error-concept-in-my-past-brain-os/in                                                                                                                                  dex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/Program/Tools/Computer/<span class="keyword">float</span>/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">28</span>/MyView/Movie/the-legend-of<span class="number">-1900</span>/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Business/concept-of-machine-learning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Basic Concept/history-of-ai-in-china/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/MyView/my-core-competitiveness/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/MyView/Music/santana-smooth/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Business/concept-of-ai/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/MyView/special-thanks/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Basic Concept/history-of-ai/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/Program/Tools/Others/baiduyun-search/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/MyView/deep-thinking-change-my-life/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/AI/TensorFlow/learning-resource-of-ai/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/English/computer-english-words/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/Program/Android/learning-resource-of-android/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/Program/Android/MyApp/qi-niu-upload/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/awesome-android-complete-reference/i                                                                                                                                  ndex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/crash-of-application/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/stetho-chrome/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/fast-android-networking/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/custom-activity-on-crash/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/emmagee/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/MyView/IPR/api-patent-query/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">23</span>/AI/TensorFlow/ai-chips/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/MyView/IPR/patent-of-virus-detect-base-on-android-ui                                                                                                                                  /index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">24</span>/Program/Android/optimization-of-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">24</span>/Program/Android/animation-of-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">23</span>/Program/Tools/Computer/ic-chip/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">24</span>/Program/Android/MyApp/my-favor-music-player/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">23</span>/Program/Java/design-pattern/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/MyView/Share/learning-habits/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/MyView/Original/big-trend/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/AI/Business/views-of-chenghao-about-ai/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/Program/Math/matrix-multiply/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">21</span>/Program/Math/bayes-rule/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">21</span>/AI/Business/datanovo/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/Program/Tools/Google/the-meaning-of-cross-wall/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/books-impacting-me/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">21</span>/Program/Tools/Others/csdn/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Original/Why/why-insist-on-reading/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Original/Why/why-stay-in-big-cities/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">20</span>/MyView/psychology/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">20</span>/MyView/Movie/to-live/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Journey/vision-of-cities/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Movie/hacksaw-ridge/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">15</span>/Program/Android/good-open-source-framework/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">14</span>/Program/Android/MyApp/update-cool-weather/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">14</span>/MyView/Movie/house-of-card/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">14</span>/Program/Android/update-ui/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Java/difference-of-java-and-c++/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Android/multi-thread-in-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/MyView/Movie/ordinary-life/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Java/multi-thread/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Tools/Regular Expression/regular-expression-                                                                                                                                  in-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Tools/Regular Expression/brief-introduction-                                                                                                                                  of-regular-expression/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Tools/Regular Expression/anatomy-of-regular-                                                                                                                                  expression/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Android/resolve-memory-leak/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Android/best-practice-of-android-dev/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/ram-of-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/java-crawler/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/improper-code-of-chinese-in-java/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/anatomy-of-java-io/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Java/picture-<span class="keyword">for</span>-java-learning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">11</span>/Program/Android/MyApp/bmi-app/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Java/senior-engineer-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Java/thinking-in-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Tools/Git/<span class="keyword">auto</span>-git-daily/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/AI/TensorFlow/ai-in-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/MyView/Movie/billy-lynn's-<span class="keyword">long</span>-halftime-walk/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/Program/Java/java-trouble-solver/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">05</span>/Program/Android/linux-tips/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/Program/Android/android-trouble-resolver/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">05</span>/Program/Android/adb-tips/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/AI/TensorFlow/codota-ai-programming/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">03</span>/Program/Java/how-to-write-singe-instance/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/Program/Android/glance-of-file-directory/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">04</span>/Program/Android/android_signature_v1_and_v2/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">03</span>/Program/Android/tips-of-androidstudio/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">02</span>/Program/Tools/Open Source/history-of-open-source/ind                                                                                                                                  ex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">03</span>/<span class="number">01</span>/Program/Android/android-emulator-system-sound/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-essence-of-sound/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/the-anatomy-of-linux-library/ind                                                                                                                                  ex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-essence-of-video/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-essence-of-picture/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/the-anatomy-of-network-programmi                                                                                                                                  ng/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-essence-of-color/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/the-anatomy-of-file-system/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-anatomy-of-cpu/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/start-up-of-linux/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-anatomy-of-hard-disk/inde                                                                                                                                  x.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-anatomy-of-GPU/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/the-essence-of-hardware-accelarate-i                                                                                                                                  n-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/example-of-machine-learning-in-meituan/in                                                                                                                                  dex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Tools/Code Refactor/the-ways-of-keep-code-cl                                                                                                                                  ean/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Business/data-clean-and-remark-feature-in-meituan                                                                                                                                  /index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/framework-of-get-features-in-meituan/inde                                                                                                                                  x.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/online-learning-in-meituan/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/ffm-learning-in-meituan/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Tools/Data Base/the-essence-of-mysql-index/i                                                                                                                                  ndex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/hot-update-of-android/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">25</span>/Program/Android/GestureDetector/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/dynamic-load-android-dex-from-meitua                                                                                                                                  n/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">22</span>/English/my-translations/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/deep-learning-in-meituan/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">22</span>/English/love-sentences/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/history-of-v4-and-v7/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">20</span>/Program/Android/<span class="keyword">virtual</span>-apk/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">22</span>/English/love-words/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">20</span>/Program/Java/learn-journey-of-javascript/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">20</span>/MyView/my-views-of-learning-program/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">21</span>/English/beautiful-article-of-english/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/some-thoughts-of-fusheng/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/ai-on-terminal-of-google/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/ten-truths-of-ai-star-up-firm/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/golden-age-of-artificial-intelligence/in                                                                                                                                  dex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/the-future-of-personal-terminal/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/core-components-from-deep-learning-fra                                                                                                                                  mework/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/<span class="number">20</span>-open-source-projects-of-machine-lea                                                                                                                                  rning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/white-paper-of-google-machine-learning                                                                                                                                  /index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/<span class="number">28</span>-open-source-projects-of-machine-lea                                                                                                                                  rning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/right-way-of-master-machine-learning/i                                                                                                                                  ndex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/awesome-deep-learning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/<span class="number">25</span>-open-source-projects-of-machine-lea                                                                                                                                  rning-java/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/awesome-machine-learning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/TensorFlow/basic-knowledge-of-scikit-learn/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/TensorFlow/big-data-resources/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/TensorFlow/changes-by-google-tensorflow/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/Basic Concept/super-intelligence-individual/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/Program/Tools/Python/tools-of-python/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/Program/Tools/Python/learn-journey-of-python/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/Program/Tools/Git/learn-journey-of-git/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/visual-interactive-guide-basics-neural                                                                                                                                  -networks/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/tensorflow-android-stand-alone-demo/in                                                                                                                                  dex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/tensorflow-android-camera-demo/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/applications-of-tensorflow/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/supercharging-android-apps-with-tensor                                                                                                                                  flow/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">15</span>/AI/TensorFlow/ai-vs-machine-learning/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/Business/ppt-of-andrew-ng/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/setup-of-tensorflow/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/platforms-of-tensorflow/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">15</span>/Program/Tools/Atom/techniques-of-atom-editor/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/history-of-tensorflow/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/TensorFlow/pytorch-of-facebook/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/recognize-license-number-of-car/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/generate-lyric-from-lyric-of-jay/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/Basic Concept/brain-and-chips/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/TensorFlow/how-to-train-deep-neural-network/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/google-raisr/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/ai-on-ear-phone/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/how-to-find-ai-start-up-firm/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Basic Concept/gentle-understanding-of-tensorflow/                                                                                                                                  index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/quick-learning-of-tensorflow/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/simple-understanding-of-tensorflow/ind                                                                                                                                  ex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/ai-and-algorithms/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/good-understanding-of-tensorflow/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/ai-and-machine-learning-need-more-open                                                                                                                                  -sources/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/benchmark-of-machine-learning/index.ht                                                                                                                                  ml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">12</span>/Program/Tools/Google/google-styleguide/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/basic-concept-and-operation-of-tensorf                                                                                                                                  low/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/advice-<span class="keyword">for</span>-computer-science-college-s                                                                                                                                  tudents/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Tools/Linux/the-unix-and-internet-fundamenta                                                                                                                                  ls-howto/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/how-to-become-a-hacker/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/how-to-ask-questions-the-smart-way/in                                                                                                                                  dex.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/software-release-practice-howto/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/want-to-start-a-startup-great-hacker/                                                                                                                                  index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/how-to-report-bugs-effectively/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/things-every-hacker-once-knew/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/want-to-start-a-startup-undergraduate                                                                                                                                  /index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/English/how-to-use-english/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Tools/Linux/the-art-of-unix-programming/inde                                                                                                                                  x.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/MyView/Share/financial-philosophy./index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/teach-yourself-programming-in-ten-yea                                                                                                                                  rs/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/MyView/Share/sit-idle-and-enjoy-the-fruits/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Tools/Google/how-to-use-google/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">19</span>/MyView/Share/credits-of-death /index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">19</span>/MyView/Share/summary-and-table-of-principles/index.h                                                                                                                                  tml</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">18</span>/MyView/Share/unfinished-life/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">15</span>/MyView/Share/reborn-every<span class="number">-7</span>-years/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">16</span>/MyView/Share/retirement-speech-of-HP-president/index                                                                                                                                  .html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">17</span>/MyView/Share/wisdom-of-choose/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">10</span>/MyView/Book/my-book-<span class="built_in">list</span>/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">14</span>/MyView/Share/take-time-as-<span class="keyword">friend</span>/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">10</span>/MyView/Share/live-your-life/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">11</span>/MyView/Share/to-be-a-super-individual/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">06</span>/MyView/my-view-of-growing-up/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">12</span>/MyView/Share/everybody-can-be-engineer/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">05</span>/MyView/Original/Past/my-article-<span class="keyword">for</span>-newspaper/index.                                                                                                                                  html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">03</span>/MyView/Original/Past/my-resume/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/view-of-scientific-discovery/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/pictures-of-year-wikipedia/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">04</span>/MyView/Original/Past/my-patent-<span class="built_in">list</span>/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/lixiang-reference-of-business-insi                                                                                                                                  de/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/luozhenyu-logic-thinking/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/wujun-letters-from-silicon-valley/                                                                                                                                  index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/wangyuquan-front-guard/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">01</span>/MyView/Journey/view-of-journey/index.html</div><div class="line">INFO  Generated: <span class="number">2016</span>/<span class="number">12</span>/<span class="number">31</span>/English/view-of-english/index.html</div><div class="line">INFO  Generated: <span class="number">2016</span>/<span class="number">12</span>/<span class="number">31</span>/MyView/my-hello-world/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/liuxuefeng-classic-music/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/gudian-super-individual/index.html</div><div class="line">INFO  Generated: categories/Personal/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/lixiaolai-lead-to-freedom-of-wealt                                                                                                                                  h/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: categories/English/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: categories/Personal/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: categories/AI/index.html</div><div class="line">INFO  Generated: categories/English/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/English/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: categories/Tools/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: categories/Tools/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: categories/Tools/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: categories/Tools/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/AI/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: categories/Patent/index.html</div><div class="line">INFO  Generated: categories/Program/index.html</div><div class="line">INFO  Generated: categories/Program/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/Program/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: categories/Android/index.html</div><div class="line">INFO  Generated: categories/Program/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/Program/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: categories/Program/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: categories/Java/index.html</div><div class="line">INFO  Generated: categories/Java/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: categories/Java/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: archives/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: categories/Math/index.html</div><div class="line">INFO  Generated: categories/Android/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">12</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">13</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">14</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">17</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">15</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">16</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">18</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">21</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">20</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">19</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">22</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">23</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">25</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">24</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">26</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">27</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">28</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">29</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">30</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">32</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">33</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">31</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">34</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">35</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">36</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">37</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">38</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">39</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">40</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">41</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">42</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">43</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2016</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">44</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">45</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2016</span>/<span class="number">12</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/index.html</div><div class="line">INFO  Generated: archives/page/<span class="number">46</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">12</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">13</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">14</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">15</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">16</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">18</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">19</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">17</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">20</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">22</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">21</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">23</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">26</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">24</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">27</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">25</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">30</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">32</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">28</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">29</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">31</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">33</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">34</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">36</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">35</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">37</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">40</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">39</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">38</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">41</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">43</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">44</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">42</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">45</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">13</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">12</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">14</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">12</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">13</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">14</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">17</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">15</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">18</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">16</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">9</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">11</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">10</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">12</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">13</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">14</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">15</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">17</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">16</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">19</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">21</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">18</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">20</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">23</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">22</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">24</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">25</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">27</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">26</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">28</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">29</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">30</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">31</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">33</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">34</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">32</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">35</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">37</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">36</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">38</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">39</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">41</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">43</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">40</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">44</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">42</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">46</span>/index.html</div><div class="line">INFO  Generated: page/<span class="number">45</span>/index.html</div><div class="line">INFO  Generated: tags/Meta-Skill/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: tags/Pitfall/index.html</div><div class="line">INFO  Generated: tags/Basic-Concept/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: tags/Best-Practice/index.html</div><div class="line">INFO  Generated: tags/Pronunciation/index.html</div><div class="line">INFO  Generated: tags/Deliberate-Practice/index.html</div><div class="line">INFO  Generated: tags/English/index.html</div><div class="line">INFO  Generated: tags/Google/index.html</div><div class="line">INFO  Generated: tags/English/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Grammar/index.html</div><div class="line">INFO  Generated: tags/Google/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Innovation/index.html</div><div class="line">INFO  Generated: tags/Vocabulary/index.html</div><div class="line">INFO  Generated: tags/Word/index.html</div><div class="line">INFO  Generated: tags/Sentence/index.html</div><div class="line">INFO  Generated: tags/Profession/index.html</div><div class="line">INFO  Generated: tags/Beauty/index.html</div><div class="line">INFO  Generated: tags/Quote/index.html</div><div class="line">INFO  Generated: tags/Share/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">5</span>/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">4</span>/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">6</span>/index.html</div><div class="line">INFO  Generated: tags/Health/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">7</span>/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: tags/Skill-Graph/index.html</div><div class="line">INFO  Generated: tags/Knowledge-Framework/index.html</div><div class="line">INFO  Generated: tags/Tensorflow/index.html</div><div class="line">INFO  Generated: tags/Psychology/index.html</div><div class="line">INFO  Generated: tags/Big-Trend/index.html</div><div class="line">INFO  Generated: tags/Chip/index.html</div><div class="line">INFO  Generated: tags/Tensorflow/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Machine-Learning/index.html</div><div class="line">INFO  Generated: tags/Tensorflow/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: tags/Machine-Learning/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Machine-Learning/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: tags/Android/index.html</div><div class="line">INFO  Generated: tags/History/index.html</div><div class="line">INFO  Generated: tags/Algorithm/index.html</div><div class="line">INFO  Generated: tags/Open-Source/index.html</div><div class="line">INFO  Generated: tags/Wear/index.html</div><div class="line">INFO  Generated: tags/Jiang-Tao/index.html</div><div class="line">INFO  Generated: tags/Open-Source/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Winner/index.html</div><div class="line">INFO  Generated: tags/Earphone/index.html</div><div class="line">INFO  Generated: tags/Application/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Application/page/<span class="number">3</span>/index.html</div><div class="line">INFO  Generated: tags/Andrew-Ng/index.html</div><div class="line">INFO  Generated: tags/Application/index.html</div><div class="line">INFO  Generated: tags/Patent/index.html</div><div class="line">INFO  Generated: tags/Lyric/index.html</div><div class="line">INFO  Generated: tags/Meituan/index.html</div><div class="line">INFO  Generated: tags/Data-Novo/index.html</div><div class="line">INFO  Generated: tags/Deep-Learning/index.html</div><div class="line">INFO  Generated: tags/Startup/index.html</div><div class="line">INFO  Generated: tags/Deep-Learning/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/RAISR/index.html</div><div class="line">INFO  Generated: tags/Business/index.html</div><div class="line">INFO  Generated: tags/Investment/index.html</div><div class="line">INFO  Generated: tags/Fu-Sheng/index.html</div><div class="line">INFO  Generated: tags/Trend/index.html</div><div class="line">INFO  Generated: tags/Zhou-Hongyi/index.html</div><div class="line">INFO  Generated: tags/Smart-Phone/index.html</div><div class="line">INFO  Generated: tags/FFM/index.html</div><div class="line">INFO  Generated: tags/Prediction-Learning/index.html</div><div class="line">INFO  Generated: tags/Yann-LeCun/index.html</div><div class="line">INFO  Generated: tags/Framework/index.html</div><div class="line">INFO  Generated: tags/Feature/index.html</div><div class="line">INFO  Generated: tags/Online/index.html</div><div class="line">INFO  Generated: tags/Java/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Java/index.html</div><div class="line">INFO  Generated: tags/Python/index.html</div><div class="line">INFO  Generated: tags/Clustering/index.html</div><div class="line">INFO  Generated: tags/Regression/index.html</div><div class="line">INFO  Generated: tags/Decision-Trees-Rules/index.html</div><div class="line">INFO  Generated: tags/PCA/index.html</div><div class="line">INFO  Generated: tags/Visualization/index.html</div><div class="line">INFO  Generated: tags/K-nearest-neighbors/index.html</div><div class="line">INFO  Generated: tags/Statistics/index.html</div><div class="line">INFO  Generated: tags/Time-Series-Sequences/index.html</div><div class="line">INFO  Generated: tags/Random-Forests/index.html</div><div class="line">INFO  Generated: tags/Text-Mining/index.html</div><div class="line">INFO  Generated: tags/Caffe/index.html</div><div class="line">INFO  Generated: tags/MXNet/index.html</div><div class="line">INFO  Generated: tags/Torch/index.html</div><div class="line">INFO  Generated: tags/CNTK/index.html</div><div class="line">INFO  Generated: tags/Hardward/index.html</div><div class="line">INFO  Generated: tags/Codota/index.html</div><div class="line">INFO  Generated: tags/Tensor/index.html</div><div class="line">INFO  Generated: tags/Scikit/index.html</div><div class="line">INFO  Generated: tags/cuBLAS/index.html</div><div class="line">INFO  Generated: tags/BLAS/index.html</div><div class="line">INFO  Generated: tags/Computation-Graph/index.html</div><div class="line">INFO  Generated: tags/cuDNN/index.html</div><div class="line">INFO  Generated: tags/Resource/index.html</div><div class="line">INFO  Generated: tags/Book/index.html</div><div class="line">INFO  Generated: tags/PyTorch/index.html</div><div class="line">INFO  Generated: tags/DeepMind-Lab/index.html</div><div class="line">INFO  Generated: tags/Facebook/index.html</div><div class="line">INFO  Generated: tags/FastText/index.html</div><div class="line">INFO  Generated: tags/SystemML/index.html</div><div class="line">INFO  Generated: tags/Neural-Network/index.html</div><div class="line">INFO  Generated: tags/Universe/index.html</div><div class="line">INFO  Generated: tags/White-Paper/index.html</div><div class="line">INFO  Generated: tags/Article/index.html</div><div class="line">INFO  Generated: tags/Camera/index.html</div><div class="line">INFO  Generated: tags/Music/index.html</div><div class="line">INFO  Generated: tags/Movie/index.html</div><div class="line">INFO  Generated: tags/Kaifu-Lee/index.html</div><div class="line">INFO  Generated: tags/Life/index.html</div><div class="line">INFO  Generated: tags/DroidRunner/index.html</div><div class="line">INFO  Generated: tags/Computer-Skill/index.html</div><div class="line">INFO  Generated: tags/Movie/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Career/index.html</div><div class="line">INFO  Generated: tags/Picture/index.html</div><div class="line">INFO  Generated: tags/Philosophy/index.html</div><div class="line">INFO  Generated: tags/Engineer/index.html</div><div class="line">INFO  Generated: tags/Liu-Weipeng/index.html</div><div class="line">INFO  Generated: tags/Management/index.html</div><div class="line">INFO  Generated: tags/Principle/index.html</div><div class="line">INFO  Generated: tags/Habit/index.html</div><div class="line">INFO  Generated: tags/AI/index.html</div><div class="line">INFO  Generated: tags/<span class="number">5</span>G/index.html</div><div class="line">INFO  Generated: tags/IPR/index.html</div><div class="line">INFO  Generated: tags/Computer-Science/index.html</div><div class="line">INFO  Generated: tags/House/index.html</div><div class="line">INFO  Generated: tags/Education/index.html</div><div class="line">INFO  Generated: tags/Software/index.html</div><div class="line">INFO  Generated: tags/Stock/index.html</div><div class="line">INFO  Generated: tags/Gesture-Detector/index.html</div><div class="line">INFO  Generated: tags/Hacker/index.html</div><div class="line">INFO  Generated: tags/Bugs/index.html</div><div class="line">INFO  Generated: tags/Emulator/index.html</div><div class="line">INFO  Generated: tags/ADB/index.html</div><div class="line">INFO  Generated: tags/Debug/index.html</div><div class="line">INFO  Generated: tags/Android-Studio/index.html</div><div class="line">INFO  Generated: tags/Awesome-Resources/index.html</div><div class="line">INFO  Generated: tags/Signature/index.html</div><div class="line">INFO  Generated: tags/Animation/index.html</div><div class="line">INFO  Generated: tags/Dynamic-Load/index.html</div><div class="line">INFO  Generated: tags/Luo-Shengyang/index.html</div><div class="line">INFO  Generated: tags/Log/index.html</div><div class="line">INFO  Generated: tags/Crash/index.html</div><div class="line">INFO  Generated: tags/File-Directory/index.html</div><div class="line">INFO  Generated: tags/Monitor/index.html</div><div class="line">INFO  Generated: tags/OkHttp/index.html</div><div class="line">INFO  Generated: tags/Fast-Android-Networking/index.html</div><div class="line">INFO  Generated: tags/Okio/index.html</div><div class="line">INFO  Generated: tags/Support-Library/index.html</div><div class="line">INFO  Generated: tags/V4/index.html</div><div class="line">INFO  Generated: tags/V7/index.html</div><div class="line">INFO  Generated: tags/Hot-Update/index.html</div><div class="line">INFO  Generated: tags/Linux/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/APK/index.html</div><div class="line">INFO  Generated: tags/Linux/index.html</div><div class="line">INFO  Generated: tags/Robust/index.html</div><div class="line">INFO  Generated: tags/Memory-Leak/index.html</div><div class="line">INFO  Generated: tags/Multithread/index.html</div><div class="line">INFO  Generated: tags/Command/index.html</div><div class="line">INFO  Generated: tags/Performance/index.html</div><div class="line">INFO  Generated: tags/Stetho/index.html</div><div class="line">INFO  Generated: tags/Hardware-Accelerate/index.html</div><div class="line">INFO  Generated: tags/CPU/index.html</div><div class="line">INFO  Generated: tags/GPU/index.html</div><div class="line">INFO  Generated: tags/UI/index.html</div><div class="line">INFO  Generated: tags/Byte-Code/index.html</div><div class="line">INFO  Generated: tags/Class-Loader/index.html</div><div class="line">INFO  Generated: tags/Generic/index.html</div><div class="line">INFO  Generated: tags/Thread/index.html</div><div class="line">INFO  Generated: tags/Annotation/index.html</div><div class="line">INFO  Generated: tags/Garbage-Collector/index.html</div><div class="line">INFO  Generated: tags/Reflection/index.html</div><div class="line">INFO  Generated: tags/Serialization/index.html</div><div class="line">INFO  Generated: tags/Security/index.html</div><div class="line">INFO  Generated: tags/IO/index.html</div><div class="line">INFO  Generated: tags/Tip/index.html</div><div class="line">INFO  Generated: tags/Virtual-APK/index.html</div><div class="line">INFO  Generated: tags/C/index.html</div><div class="line">INFO  Generated: tags/Design-Pattern/index.html</div><div class="line">INFO  Generated: tags/Singleton/index.html</div><div class="line">INFO  Generated: tags/Java-Snippet/index.html</div><div class="line">INFO  Generated: tags/Multiprocess/index.html</div><div class="line">INFO  Generated: tags/Crawler/index.html</div><div class="line">INFO  Generated: tags/JavaScript/index.html</div><div class="line">INFO  Generated: tags/JVM/index.html</div><div class="line">INFO  Generated: tags/Bayes-theorem/index.html</div><div class="line">INFO  Generated: tags/Memory/index.html</div><div class="line">INFO  Generated: tags/Data-Mining/index.html</div><div class="line">INFO  Generated: tags/Matrix/index.html</div><div class="line">INFO  Generated: tags/Big-Data/index.html</div><div class="line">INFO  Generated: tags/China/index.html</div><div class="line">INFO  Generated: tags/Recommendation-System/index.html</div><div class="line">INFO  Generated: tags/Asking/index.html</div><div class="line">INFO  Generated: tags/Charset/index.html</div><div class="line">INFO  Generated: tags/ASCII/index.html</div><div class="line">INFO  Generated: tags/GBK/index.html</div><div class="line">INFO  Generated: tags/Unicode/index.html</div><div class="line">INFO  Generated: tags/UTF8/index.html</div><div class="line">INFO  Generated: tags/iGet/index.html</div><div class="line">INFO  Generated: tags/Business-Inside/index.html</div><div class="line">INFO  Generated: tags/iGet/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Classic-Music/index.html</div><div class="line">INFO  Generated: tags/Li-Xiang/index.html</div><div class="line">INFO  Generated: tags/Logic-Thinking/index.html</div><div class="line">INFO  Generated: tags/Luo-Zhenyu/index.html</div><div class="line">INFO  Generated: tags/Liu-Xuefeng/index.html</div><div class="line">INFO  Generated: tags/Wu-Jun/index.html</div><div class="line">INFO  Generated: tags/Silicon-Valley/index.html</div><div class="line">INFO  Generated: tags/Super-Individual/index.html</div><div class="line">INFO  Generated: tags/Gu-Dian/index.html</div><div class="line">INFO  Generated: tags/Wang-Yuquan/index.html</div><div class="line">INFO  Generated: tags/Front-Guard/index.html</div><div class="line">INFO  Generated: tags/Reading/index.html</div><div class="line">INFO  Generated: tags/Portfolio/index.html</div><div class="line">INFO  Generated: tags/Resume/index.html</div><div class="line">INFO  Generated: tags/Butter-Knife/index.html</div><div class="line">INFO  Generated: tags/Jake-Wharton/index.html</div><div class="line">INFO  Generated: tags/Third-Library/index.html</div><div class="line">INFO  Generated: tags/Third-Library/page/<span class="number">2</span>/index.html</div><div class="line">INFO  Generated: tags/Find-Bugs/index.html</div><div class="line">INFO  Generated: tags/Block-Canary/index.html</div><div class="line">INFO  Generated: tags/Easy-Permissions/index.html</div><div class="line">INFO  Generated: tags/Leak-Canary/index.html</div><div class="line">INFO  Generated: tags/Event-Bus/index.html</div><div class="line">INFO  Generated: tags/Less-Code/index.html</div><div class="line">INFO  Generated: tags/Checkstyle/index.html</div><div class="line">INFO  Generated: tags/Permissions-Dispatcher/index.html</div><div class="line">INFO  Generated: tags/UX/index.html</div><div class="line">INFO  Generated: tags/PMD/index.html</div><div class="line">INFO  Generated: tags/Findbugs/index.html</div><div class="line">INFO  Generated: tags/BMI/index.html</div><div class="line">INFO  Generated: tags/Lint/index.html</div><div class="line">INFO  Generated: tags/Music-Player/index.html</div><div class="line">INFO  Generated: tags/Cool-Weather/index.html</div><div class="line">INFO  Generated: tags/JSON/index.html</div><div class="line">INFO  Generated: tags/Milestone/index.html</div><div class="line">INFO  Generated: tags/GSON/index.html</div><div class="line">INFO  Generated: tags/Compile/index.html</div><div class="line">INFO  Generated: tags/Gradle/index.html</div><div class="line">INFO  Generated: tags/Architecture/index.html</div><div class="line">INFO  Generated: tags/Permission/index.html</div><div class="line">INFO  Generated: tags/Compiler/index.html</div><div class="line">INFO  Generated: tags/Atom/index.html</div><div class="line">INFO  Generated: tags/Clean-Code/index.html</div><div class="line">INFO  Generated: tags/IC/index.html</div><div class="line">INFO  Generated: tags/Floating-point/index.html</div><div class="line">INFO  Generated: tags/Multimedia/index.html</div><div class="line">INFO  Generated: tags/File-System/index.html</div><div class="line">INFO  Generated: tags/Color/index.html</div><div class="line">INFO  Generated: tags/MySQL/index.html</div><div class="line">INFO  Generated: tags/Video/index.html</div><div class="line">INFO  Generated: tags/Sound/index.html</div><div class="line">INFO  Generated: tags/Optimization/index.html</div><div class="line">INFO  Generated: tags/Git/index.html</div><div class="line">INFO  Generated: tags/GitHub/index.html</div><div class="line">INFO  Generated: tags/Cheat-Sheet/index.html</div><div class="line">INFO  Generated: tags/Tutorials/index.html</div><div class="line">INFO  Generated: tags/Wikipedia/index.html</div><div class="line">INFO  Generated: tags/Tool/index.html</div><div class="line">INFO  Generated: tags/Ubuntu/index.html</div><div class="line">INFO  Generated: tags/Shell/index.html</div><div class="line">INFO  Generated: tags/Unix/index.html</div><div class="line">INFO  Generated: tags/Network/index.html</div><div class="line">INFO  Generated: tags/Server/index.html</div><div class="line">INFO  Generated: tags/BaiduYun/index.html</div><div class="line">INFO  Generated: tags/VirtualBox/index.html</div><div class="line">INFO  Generated: tags/VmWare/index.html</div><div class="line">INFO  Generated: tags/CSDN/index.html</div><div class="line">INFO  Generated: tags/Internet/index.html</div><div class="line">INFO  Generated: tags/Trinea/index.html</div><div class="line">INFO  Generated: tags/Regular-Expression/index.html</div><div class="line">INFO  Generated: tags/Wealth/index.html</div><div class="line">INFO  Generated: tags/Li-Xiaolai/index.html</div><div class="line">INFO  Generated: tags/Chrome/index.html</div><div class="line">INFO  Generated: tags/Next/index.html</div><div class="line">INFO  Generated: tags/Smartphone/index.html</div><div class="line">INFO  Generated: tags/Notebook/index.html</div><div class="line">INFO  Generated: tags/Hexo/index.html</div><div class="line">INFO  Generated: tags/Write-Blog/index.html</div><div class="line">INFO  Generated: tags/Program/index.html</div><div class="line">INFO  Generated: tags/Big-Bang/index.html</div><div class="line">INFO  Generated: tags/Domain-Name/index.html</div><div class="line">INFO  Generated: tags/Smart-UI/index.html</div><div class="line">INFO  Generated: tags/Share/page/<span class="number">8</span>/index.html</div><div class="line">INFO  Generated: archives/<span class="number">2017</span>/page/<span class="number">46</span>/index.html</div><div class="line">INFO  Generated: tags/Smart-AI/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/MyView/Original/<span class="built_in">stack</span>-overflow/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/MyView/Original/pyramid/index.html</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">16</span>/Program/Android/MyApp/what-a-beautiful-day/index.htm                                                                                                                                  l</div><div class="line">INFO  Generated: <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/Program/Android/MyApp/joke/index.html</div><div class="line">INFO  <span class="number">814</span> files generated in <span class="number">41</span> s</div><div class="line">INFO  Deploying: git</div><div class="line">INFO  Clearing .deploy_git folder...</div><div class="line">INFO  Copying files from <span class="keyword">public</span> folder...</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2016</span>/<span class="number">12</span>/<span class="number">31</span>/English/view-of-english/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2016</span>/<span class="number">12</span>/<span class="number">31</span>/MyView/my-hello-world/index.h                                                                                                                                  tml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">01</span>/MyView/Journey/view-of-journe                                                                                                                                  y/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/gudian-supe                                                                                                                                  r-individual/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/liuxuefeng-                                                                                                                                  classic-music/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/lixiang-ref                                                                                                                                  erence-of-business-inside/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/lixiaolai-l                                                                                                                                  ead-to-freedom-of-wealth/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/luozhenyu-l                                                                                                                                  ogic-thinking/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/wangyuquan-                                                                                                                                  front-guard/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/iGet/wujun-lette                                                                                                                                  rs-from-silicon-valley/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/pictures-of-year                                                                                                                                  -wikipedia/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">02</span>/MyView/Share/view-of-scientif                                                                                                                                  ic-discovery/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">03</span>/MyView/Original/Past/my-resum                                                                                                                                  e/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">04</span>/MyView/Original/Past/my-paten                                                                                                                                  t-<span class="built_in">list</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">05</span>/MyView/Original/Past/my-artic                                                                                                                                  le-<span class="keyword">for</span>-newspaper/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">06</span>/MyView/my-view-of-growing-up/                                                                                                                                  index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">10</span>/MyView/Book/my-book-<span class="built_in">list</span>/inde                                                                                                                                  x.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">10</span>/MyView/Share/live-your-life/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">11</span>/MyView/Share/to-be-a-super-in                                                                                                                                  dividual/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">12</span>/MyView/Share/everybody-can-be                                                                                                                                  -engineer/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">14</span>/MyView/Share/take-time-as-fri                                                                                                                                  end/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">15</span>/MyView/Share/reborn-every<span class="number">-7</span>-y                                                                                                                                  ears/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">16</span>/MyView/Share/retirement-speec                                                                                                                                  h-of-HP-president/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">17</span>/MyView/Share/wisdom-of-choose                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">18</span>/MyView/Share/unfinished-life/                                                                                                                                  index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">19</span>/MyView/Share/credits-of-death                                                                                                                                   /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">19</span>/MyView/Share/summary-and-tabl                                                                                                                                  e-of-principles/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/English/how-to-use-english/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/MyView/Share/sit-idle-and-enj                                                                                                                                  oy-the-fruits/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/advice-<span class="keyword">for</span>-com                                                                                                                                  puter-science-college-students/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/how-to-ask-que                                                                                                                                  stions-the-smart-way/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/how-to-become-                                                                                                                                  a-hacker/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/how-to-report-                                                                                                                                  bugs-effectively/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/software-relea                                                                                                                                  se-practice-howto/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/teach-yourself                                                                                                                                  -programming-in-ten-years/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/things-every-h                                                                                                                                  acker-once-knew/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/want-to-start-                                                                                                                                  a-startup-great-hacker/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Advice/want-to-start-                                                                                                                                  a-startup-undergraduate/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Tools/Google/how-to-u                                                                                                                                  se-google/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Tools/Linux/the-art-o                                                                                                                                  f-unix-programming/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">01</span>/<span class="number">20</span>/Program/Tools/Linux/the-unix-                                                                                                                                  and-internet-fundamentals-howto/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">12</span>/Program/Tools/Google/google-s                                                                                                                                  tyleguide/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Basic Concept/gentle-under                                                                                                                                  standing-of-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/ai-on-ear-phone/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/generate-lyric-fr                                                                                                                                  om-lyric-of-jay/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/google-raisr/inde                                                                                                                                  x.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/how-to-find-ai-st                                                                                                                                  art-up-firm/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/Business/recognize-license                                                                                                                                  -number-of-car/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/ai-and-algorith                                                                                                                                  ms/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/ai-and-machine-                                                                                                                                  learning-need-more-open-sources/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/basic-concept-a                                                                                                                                  nd-operation-of-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/benchmark-of-ma                                                                                                                                  chine-learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/good-understand                                                                                                                                  ing-of-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/quick-learning-                                                                                                                                  of-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">13</span>/AI/TensorFlow/simple-understa                                                                                                                                  nding-of-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/Basic Concept/brain-and-ch                                                                                                                                  ips/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/Business/ppt-of-andrew-ng/                                                                                                                                  index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/TensorFlow/how-to-train-de                                                                                                                                  ep-neural-network/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">14</span>/AI/TensorFlow/pytorch-of-face                                                                                                                                  book/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">15</span>/AI/TensorFlow/ai-vs-machine-l                                                                                                                                  earning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">15</span>/Program/Tools/Atom/techniques                                                                                                                                  -of-atom-editor/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/applications-of                                                                                                                                  -tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/history-of-tens                                                                                                                                  orflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/platforms-of-te                                                                                                                                  nsorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/setup-of-tensor                                                                                                                                  flow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/supercharging-a                                                                                                                                  ndroid-apps-with-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/tensorflow-andr                                                                                                                                  oid-camera-demo/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/tensorflow-andr                                                                                                                                  oid-stand-alone-demo/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">17</span>/AI/TensorFlow/visual-interact                                                                                                                                  ive-guide-basics-neural-networks/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/Basic Concept/super-intell                                                                                                                                  igence-individual/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/TensorFlow/basic-knowledge                                                                                                                                  -of-scikit-learn/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/TensorFlow/big-data-resour                                                                                                                                  ces/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/AI/TensorFlow/changes-by-goog                                                                                                                                  le-tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">18</span>/Program/Tools/Python/tools-of                                                                                                                                  -python/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/ai-on-terminal-of                                                                                                                                  -google/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/golden-age-of-art                                                                                                                                  ificial-intelligence/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/some-thoughts-of-                                                                                                                                  fusheng/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/ten-truths-of-ai-                                                                                                                                  star-up-firm/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/Business/the-future-of-per                                                                                                                                  sonal-terminal/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/<span class="number">20</span>-open-source-                                                                                                                                  projects-of-machine-learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/<span class="number">25</span>-open-source-                                                                                                                                  projects-of-machine-learning-java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/<span class="number">28</span>-open-source-                                                                                                                                  projects-of-machine-learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/awesome-deep-le                                                                                                                                  arning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/awesome-machine                                                                                                                                  -learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/core-components                                                                                                                                  -from-deep-learning-framework/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/right-way-of-ma                                                                                                                                  ster-machine-learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/AI/TensorFlow/white-paper-of-                                                                                                                                  google-machine-learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/Program/Tools/Git/learn-journ                                                                                                                                  ey-of-git/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">19</span>/Program/Tools/Python/learn-jo                                                                                                                                  urney-of-python/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">20</span>/MyView/my-views-of-learning-p                                                                                                                                  rogram/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">20</span>/Program/Android/<span class="keyword">virtual</span>-apk/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">20</span>/Program/Java/learn-journey-of                                                                                                                                  -javascript/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">21</span>/English/beautiful-article-of-                                                                                                                                  english/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">22</span>/English/love-sentences/index.                                                                                                                                  html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">22</span>/English/love-words/index.html                                                                                                                                  .</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">22</span>/English/my-translations/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">25</span>/Program/Android/GestureDetect                                                                                                                                  or/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Business/data-clean-and-re                                                                                                                                  mark-feature-in-meituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/deep-learning-in-m                                                                                                                                  eituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/example-of-machine                                                                                                                                  -learning-in-meituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/ffm-learning-in-me                                                                                                                                  ituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/framework-of-get-f                                                                                                                                  eatures-in-meituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/AI/Meituan/online-learning-in                                                                                                                                  -meituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/dynamic-load-                                                                                                                                  android-dex-from-meituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/history-of-v4                                                                                                                                  -and-v7/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/hot-update-of                                                                                                                                  -android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Android/the-essence-o                                                                                                                                  f-hardware-accelarate-in-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Tools/Code Refactor/t                                                                                                                                  he-ways-of-keep-code-clean/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">26</span>/Program/Tools/Data Base/the-e                                                                                                                                  ssence-of-mysql-index/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-an                                                                                                                                  atomy-of-GPU/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-an                                                                                                                                  atomy-of-cpu/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-an                                                                                                                                  atomy-of-hard-disk/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-es                                                                                                                                  sence-of-color/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-es                                                                                                                                  sence-of-picture/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-es                                                                                                                                  sence-of-sound/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Computer/the-es                                                                                                                                  sence-of-video/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/start-up-                                                                                                                                  of-linux/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/the-anato                                                                                                                                  my-of-file-system/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/the-anato                                                                                                                                  my-of-linux-library/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">02</span>/<span class="number">27</span>/Program/Tools/Linux/the-anato                                                                                                                                  my-of-network-programming/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">01</span>/Program/Android/android-emula                                                                                                                                  tor-system-sound/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">02</span>/Program/Tools/Open Source/his                                                                                                                                  tory-of-open-source/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">03</span>/Program/Android/tips-of-andro                                                                                                                                  idstudio/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">03</span>/Program/Java/how-to-write-<span class="built_in">sin</span>                                                                                                                                  ge-instance/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">04</span>/Program/Android/android_signa                                                                                                                                  ture_v1_and_v2/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">05</span>/Program/Android/adb-tips/inde                                                                                                                                  x.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">05</span>/Program/Android/linux-tips/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/MyView/Movie/billy-lynn's-lon                                                                                                                                  g-halftime-walk/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/Program/Android/android-troub                                                                                                                                  le-resolver/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/Program/Android/glance-of-fil                                                                                                                                  e-directory/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">08</span>/Program/Java/java-trouble-sol                                                                                                                                  ver/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/AI/TensorFlow/ai-in-java/inde                                                                                                                                  x.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/AI/TensorFlow/codota-ai-progr                                                                                                                                  amming/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Java/picture-<span class="keyword">for</span>-java                                                                                                                                  -learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Java/senior-engineer-                                                                                                                                  java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Java/thinking-in-java                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">09</span>/Program/Tools/Git/<span class="keyword">auto</span>-git-da                                                                                                                                  ily/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/anatomy-of-java-                                                                                                                                  io/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/improper-code-of                                                                                                                                  -chinese-in-java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/java-crawler/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">10</span>/Program/Java/ram-of-java/inde                                                                                                                                  x.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">11</span>/Program/Android/MyApp/bmi-app                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/MyView/Movie/ordinary-life/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Android/best-practice                                                                                                                                  -of-android-dev/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Android/multi-thread-                                                                                                                                  in-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Android/resolve-memor                                                                                                                                  y-leak/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">12</span>/Program/Java/multi-thread/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Java/difference-of-ja                                                                                                                                  va-and-c++/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Tools/Regular Express                                                                                                                                  ion/anatomy-of-regular-expression/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Tools/Regular Express                                                                                                                                  ion/brief-introduction-of-regular-expression/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">13</span>/Program/Tools/Regular Express                                                                                                                                  ion/regular-expression-in-java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">14</span>/MyView/Movie/house-of-card/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">14</span>/Program/Android/MyApp/update-                                                                                                                                  cool-weather/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">14</span>/Program/Android/update-ui/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">15</span>/Program/Android/good-open-sou                                                                                                                                  rce-framework/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Journey/vision-of-citi                                                                                                                                  es/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Movie/hacksaw-ridge/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Original/Why/why-insis                                                                                                                                  t-on-reading/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/Original/Why/why-stay-                                                                                                                                  in-big-cities/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">19</span>/MyView/books-impacting-me/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">20</span>/MyView/Movie/to-live/index.ht                                                                                                                                  ml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">20</span>/MyView/psychology/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">21</span>/AI/Business/datanovo/index.ht                                                                                                                                  ml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">21</span>/Program/Math/bayes-rule/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">21</span>/Program/Tools/Others/csdn/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/AI/Business/views-of-chenghao                                                                                                                                  -about-ai/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/MyView/Original/big-trend/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/MyView/Share/learning-habits/                                                                                                                                  index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/Program/Math/matrix-multiply/                                                                                                                                  index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">22</span>/Program/Tools/Google/the-mean                                                                                                                                  ing-of-cross-wall/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">23</span>/AI/TensorFlow/ai-chips/index.                                                                                                                                  html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">23</span>/Program/Java/design-pattern/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">23</span>/Program/Tools/Computer/ic-chi                                                                                                                                  p/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">24</span>/Program/Android/MyApp/my-favo                                                                                                                                  r-music-player/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">24</span>/Program/Android/animation-of-                                                                                                                                  android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">24</span>/Program/Android/optimization-                                                                                                                                  of-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/MyView/IPR/api-patent-query/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/MyView/IPR/patent-of-virus-de                                                                                                                                  tect-base-on-android-ui/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/awesome-andro                                                                                                                                  id-complete-reference/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/crash-of-appl                                                                                                                                  ication/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/custom-activi                                                                                                                                  ty-on-crash/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/emmagee/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/fast-android-                                                                                                                                  networking/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">25</span>/Program/Android/stetho-chrome                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/AI/TensorFlow/learning-resour                                                                                                                                  ce-of-ai/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/English/computer-english-word                                                                                                                                  s/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/MyView/deep-thinking-change-m                                                                                                                                  y-life/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/MyView/special-thanks/index.h                                                                                                                                  tml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/Program/Android/MyApp/qi-niu-                                                                                                                                  upload/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/Program/Android/learning-reso                                                                                                                                  urce-of-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">26</span>/Program/Tools/Others/baiduyun                                                                                                                                  -search/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Basic Concept/history-of-a                                                                                                                                  i-in-china/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Basic Concept/history-of-a                                                                                                                                  i/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Business/concept-of-ai/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/AI/Business/concept-of-machin                                                                                                                                  e-learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/MyView/Music/santana-smooth/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/MyView/Original/why/why/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/MyView/my-core-competitivenes                                                                                                                                  s/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">27</span>/Program/Tools/Computer/<span class="keyword">float</span>/                                                                                                                                  index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">28</span>/MyView/Movie/the-legend-of<span class="number">-19</span>                                                                                                                                  <span class="number">00</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">28</span>/MyView/Original/beauty-of-lif                                                                                                                                  e/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">28</span>/MyView/Original/error-concept                                                                                                                                  -in-my-past-brain-os/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/AI/Business/Jiang-tao--only<span class="number">-2</span>                                                                                                                                  %-persons-can-be-winner-of-AI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/AI/Business/yann-leCun-predic                                                                                                                                  t-learning-is-the-future-of-AI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/English/why-i-insist-on-<span class="keyword">using</span>                                                                                                                                  -english/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/MyView/Original/Why/why-i-wri                                                                                                                                  te-blog/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/block-                                                                                                                                  canary/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/butter                                                                                                                                  knife/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/event-                                                                                                                                  bus/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">29</span>/Program/Android/<span class="number">3</span>rdLib/leak-c                                                                                                                                  anary/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/MyView/Original/Why/why-i-ins                                                                                                                                  ist-on-practicing-deliberately-eveyday/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/catago                                                                                                                                  ry-of-open-sources-projects-of-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/gitHub                                                                                                                                  -android-libraries-top<span class="number">-100</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/less-c                                                                                                                                  ode/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/<span class="built_in">list</span>-o                                                                                                                                  f-android-ui-ux-libraries/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/<span class="number">3</span>rdLib/qualit                                                                                                                                  y-tools-<span class="keyword">for</span>-Android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Android/android-knowl                                                                                                                                  edge-base/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Java/design-pattern-i                                                                                                                                  n-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">30</span>/Program/Tools/Git/github-chea                                                                                                                                  t-sheet/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/AI/Business/andrew ng-artific                                                                                                                                  ial-intelligence-is-the-<span class="keyword">new</span>-electricity/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/English/english-is-a-<span class="keyword">friend</span>-f                                                                                                                                  or-everybody/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/MyView/Original/investment/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/MyView/Original/keep-your-ind                                                                                                                                  ependency/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Android/<span class="number">3</span>rdLib/findbu                                                                                                                                  gs/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Android/Design/archit                                                                                                                                  ecture-of-android-app/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Android/Design/ui-app                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Java/deep-learning-of                                                                                                                                  -java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">03</span>/<span class="number">31</span>/Program/Java/what-is-reflecti                                                                                                                                  on-in-java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">02</span>/Program/Android/Design/permis                                                                                                                                  sion-checker/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">02</span>/Program/Android/deep-learning                                                                                                                                  -of-android-by-luoshengyang/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">02</span>/Program/Tools/gradle/gradle/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">03</span>/Program/Android/<span class="number">3</span>rdLib/great-                                                                                                                                  spirit-on-github/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">03</span>/Program/Android/Design/compil                                                                                                                                  e-process-of-apk/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">03</span>/Program/Java/improve-code-ins                                                                                                                                  pection-with-annotations/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/AI/Business/<span class="number">10</span>-breakthrough-t                                                                                                                                  echnologies<span class="number">-2017</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/MyView/Original/trouble-obeys                                                                                                                                  -forever-rule/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/MyView/Share/persuing-persona                                                                                                                                  l-value/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Android/<span class="number">3</span>rdLib/easy-p                                                                                                                                  ermissions/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Android/<span class="number">3</span>rdLib/permis                                                                                                                                  sions-dispatcher/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Tools/Gradle/gradle-a                                                                                                                                  nd-android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">04</span>/Program/Tools/Linux/ubuntu/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Meta Skill/meta-skill-english                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Meta Skill/meta-skill-innovat                                                                                                                                  ion/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Meta Skill/meta-skill-retriev                                                                                                                                  e/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/MyView/Original/watch your at                                                                                                                                  tention/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Program/Tools/linux/linux-tro                                                                                                                                  uble-resolver/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Program/Tools/linux/linux/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">05</span>/Program/Tools/linux/shell/ind                                                                                                                                  ex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/English/basic-concept-of-spel                                                                                                                                  ling/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/English/basic-concept-of-voca                                                                                                                                  bulary/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/Program/Java/basic-concept-of                                                                                                                                  -java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/Program/Tools/Computer/<span class="keyword">char</span>-d                                                                                                                                  ecode/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">06</span>/readme/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">07</span>/AI/Business/views-of-zhouhong                                                                                                                                  yi-on-ai/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">07</span>/MyView/it-happens-to-me-by-ac                                                                                                                                  cident/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">08</span>/MyView/Movie/life-of-pi/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/MyView/to-be-the-master-of-yo                                                                                                                                  urself/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/C&amp;C++/the-basic                                                                                                                                  -concepts-of-c-compiler/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Computer/the-ba                                                                                                                                  sic-concepts-of-memory/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Linux/the-basic                                                                                                                                  -concepts-of-linux-server/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Linux/the-basic                                                                                                                                  -concepts-of-linux/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">09</span>/Program/Tools/Python/the-basi                                                                                                                                  c-concepts-of-python/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">10</span>/Program/Android/MyApp/ui/inde                                                                                                                                  x.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">10</span>/Program/Android/analysis-of-d                                                                                                                                  ebug-problem/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/English/basic-concept-of-gram                                                                                                                                  mar/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/English/my-<span class="keyword">using</span>-of-english/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/Meta Skill/meta-skill-deliber                                                                                                                                  ately-practice/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/MyView/Original/domain-name/i                                                                                                                                  ndex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">11</span>/Program/Android/MyApp/search-                                                                                                                                  my-blog/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">12</span>/Program/Android/MyApp/bigbang                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">12</span>/Program/Tools/Computer/foobar                                                                                                                                  /index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in about/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2016</span>/<span class="number">12</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2016</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">01</span>/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">12</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">13</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">14</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">02</span>/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">12</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">13</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">14</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">15</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">16</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">17</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">18</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">03</span>/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/<span class="number">04</span>/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">12</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">13</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">14</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">15</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">16</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">17</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">18</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">19</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">20</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">21</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">22</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">23</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">24</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">25</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">26</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">27</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">28</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">29</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">30</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">31</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">32</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">33</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">34</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">35</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">36</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">37</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">38</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">39</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">40</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">41</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">42</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">43</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">44</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">45</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">12</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">13</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">14</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">15</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">16</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">17</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">18</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">19</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">20</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">21</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">22</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">23</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">24</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">25</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">26</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">27</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">28</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">29</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">30</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">31</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">32</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">33</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">34</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">35</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">36</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">37</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">38</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">39</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">40</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">41</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">42</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">43</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">44</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">45</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">46</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in atom.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in baidusitemap.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/AI/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Android/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/English/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/English/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/English/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Java/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Java/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Math/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Patent/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Personal/page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Program/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Program/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Program/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Program/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Program/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Program/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Tools/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Tools/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Tools/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/Tools/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in categories/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in css/main.css.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/affix.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/algolia-search.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/bootstrap.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/exturl.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/hook-duoshuo.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/motion.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/post-details.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/schemes/pisces.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/scrollspy.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in js/src/utils.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/algolia-instant-search/instantsearch                                                                                                                                  .min.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/helpers/jquery.fancy                                                                                                                                  box-buttons.css.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/helpers/jquery.fancy                                                                                                                                  box-buttons.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/helpers/jquery.fancy                                                                                                                                  box-media.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/helpers/jquery.fancy                                                                                                                                  box-thumbs.css.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/helpers/jquery.fancy                                                                                                                                  box-thumbs.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/jquery.fancybox.css.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/jquery.fancybox.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fancybox/source/jquery.fancybox.pack                                                                                                                                  .js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fastclick/README.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/fastclick/lib/fastclick.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/font-awesome/css/font-awesome.css.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/font-awesome/css/font-awesome.min.cs                                                                                                                                  s.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/jquery/index.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/jquery_lazyload/CONTRIBUTING.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/jquery_lazyload/README.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/jquery_lazyload/jquery.lazyload.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/jquery_lazyload/jquery.scrollstop.js                                                                                                                                  .</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/three/three-waves.min.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/three/three.min.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/ua-parser-js/dist/ua-parser.min.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/ua-parser-js/dist/ua-parser.pack.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/velocity/velocity.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/velocity/velocity.min.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/velocity/velocity.ui.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in lib/velocity/velocity.ui.min.js.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">10</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">11</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">12</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">13</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">14</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">15</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">16</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">17</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">18</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">19</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">20</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">21</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">22</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">23</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">24</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">25</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">26</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">27</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">28</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">29</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">30</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">31</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">32</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">33</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">34</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">35</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">36</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">37</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">38</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">39</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">40</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">41</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">42</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">43</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">44</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">45</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">46</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in page/<span class="number">9</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in search.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in sitemap.xml.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/<span class="number">5</span>G/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/ADB/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/AI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/APK/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/ASCII/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Algorithm/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Andrew-Ng/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Android-Studio/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Android/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Animation/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Annotation/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Application/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Application/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Application/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Architecture/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Article/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Asking/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Atom/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Awesome-Resources/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/BLAS/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/BMI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/BaiduYun/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Basic-Concept/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Bayes-theorem/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Beauty/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Best-Practice/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Big-Bang/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Big-Data/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Big-Trend/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Block-Canary/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Book/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Bugs/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Business-Inside/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Business/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Butter-Knife/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Byte-Code/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/C/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/CNTK/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/CPU/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/CSDN/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Caffe/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Camera/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Career/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Charset/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Cheat-Sheet/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Checkstyle/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/China/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Chip/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Chrome/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Class-Loader/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Classic-Music/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Clean-Code/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Clustering/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Codota/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Color/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Command/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Compile/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Compiler/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Computation-Graph/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Computer-Science/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Computer-Skill/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Cool-Weather/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Crash/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Crawler/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Data-Mining/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Data-Novo/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Debug/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Decision-Trees-Rules/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Deep-Learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Deep-Learning/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/DeepMind-Lab/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Deliberate-Practice/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Design-Pattern/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Domain-Name/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/DroidRunner/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Dynamic-Load/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Earphone/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Easy-Permissions/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Education/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Emulator/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Engineer/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/English/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/English/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Event-Bus/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/FFM/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Facebook/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Fast-Android-Networking/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/FastText/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Feature/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/File-Directory/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/File-System/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Find-Bugs/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Findbugs/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Floating-point/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Framework/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Front-Guard/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Fu-Sheng/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/GBK/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/GPU/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Garbage-Collector/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Generic/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Gesture-Detector/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Git/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/GitHub/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Google/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Google/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Gradle/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Grammar/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Gson/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Gu-Dian/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Habit/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Hacker/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Hardward/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Hardware-Accelerate/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Health/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Hexo/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/History/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Hot-Update/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/House/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/IC/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/IO/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/IPR/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Innovation/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Internet/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Investment/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/JSON/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/JVM/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Jake-Wharton/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Java-Snippet/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Java/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Java/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/JavaScript/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Jiang-Tao/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/K-nearest-neighbors/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Kaifu-Lee/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Knowledge-Framework/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Leak-Canary/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Less-Code/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Li-Xiang/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Li-Xiaolai/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Life/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Lint/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Linux/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Linux/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Liu-Weipeng/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Liu-Xuefeng/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Log/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Logic-Thinking/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Luo-Shengyang/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Luo-Zhenyu/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Lyric/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/MXNet/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Machine-Learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Machine-Learning/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Machine-Learning/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Management/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Matrix/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Meituan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Memory-Leak/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Memory/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Meta-Skill/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Milestone/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Monitor/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Movie/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Movie/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Multimedia/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Multiprocess/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Multithread/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Music-Player/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Music/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/MySQL/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Network/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Neural-Network/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Next/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Notebook/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/OkHttp/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Okio/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Online/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Open-Source/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Open-Source/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Optimization/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/PCA/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/PMD/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Patent/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Performance/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Permission/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Permissions-Dispatcher/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Philosophy/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Picture/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Pitfall/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Portfolio/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Prediction-Learning/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Principle/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Profession/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Program/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Pronunciation/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Psychology/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/PyTorch/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Quote/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/RAISR/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Random-Forests/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Reading/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Recommendation-System/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Reflection/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Regression/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Regular-Expression/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Resource/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Resume/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Robust/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Scikit/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Security/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Sentence/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Serialization/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Server/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">4</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">5</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">6</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">7</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Shell/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Signature/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Silicon-Valley/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Singleton/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Skill-Graph/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Smart-Phone/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Smartphone/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Software/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Sound/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Startup/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Statistics/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Stetho/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Stock/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Super-Individual/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Support-Library/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/SystemML/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tensor/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tensorflow/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tensorflow/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tensorflow/page/<span class="number">3</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Text-Mining/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Third-Library/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Third-Library/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Thread/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Time-Series-Sequences/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tip/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tool/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Torch/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Trend/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Trinea/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Tutorials/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/UI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/UTF8/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/UX/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Ubuntu/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Unicode/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Universe/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Unix/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/V4/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/V7/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Video/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Virtual-APK/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/VirtualBox/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Visualization/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/VmWare/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Vocabulary/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Wang-Yuquan/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Wealth/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Wear/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/White-Paper/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Wikipedia/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Winner/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Word/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Write-Blog/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Wu-Jun/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Yann-LeCun/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Zhou-Hongyi/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/cuBLAS/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/cuDNN/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/iGet/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/iGet/page/<span class="number">2</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/python/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/MyView/Original/pyramid/index                                                                                                                                  .html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/MyView/Original/<span class="built_in">stack</span>-overflo                                                                                                                                  w/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/Program/Android/MyApp/joke/in                                                                                                                                  dex.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in <span class="number">2017</span>/<span class="number">04</span>/<span class="number">16</span>/Program/Android/MyApp/what-a-                                                                                                                                  beautiful-day/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in archives/<span class="number">2017</span>/page/<span class="number">46</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Share/page/<span class="number">8</span>/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Smart-AI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">warning: LF will be replaced by CRLF in tags/Smart-UI/index.html.</div><div class="line">The file will have its original line endings in your working directory.</div><div class="line">[master e526227] Site updated: <span class="number">2017</span><span class="number">-04</span><span class="number">-16</span> <span class="number">22</span>:<span class="number">51</span>:<span class="number">59</span></div><div class="line"> <span class="number">813</span> files changed, <span class="number">56614</span> insertions(+), <span class="number">12580</span> deletions(-)</div><div class="line"> create mode <span class="number">100644</span> <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/MyView/Original/pyramid/index.html</div><div class="line"> create mode <span class="number">100644</span> <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/MyView/Original/<span class="built_in">stack</span>-overflow/index.html</div><div class="line"> create mode <span class="number">100644</span> <span class="number">2017</span>/<span class="number">04</span>/<span class="number">13</span>/Program/Android/MyApp/joke/index.html</div><div class="line"> create mode <span class="number">100644</span> <span class="number">2017</span>/<span class="number">04</span>/<span class="number">16</span>/Program/Android/MyApp/what-a-beautiful-day/index.                                                                                                                                  html</div><div class="line"> create mode <span class="number">100644</span> archives/<span class="number">2017</span>/page/<span class="number">46</span>/index.html</div><div class="line"> rewrite content.json (<span class="number">60</span>%)</div><div class="line"> rewrite feed.json (<span class="number">98</span>%)</div><div class="line"> create mode <span class="number">100644</span> tags/Share/page/<span class="number">8</span>/index.html</div><div class="line"> create mode <span class="number">100644</span> tags/Smart-AI/index.html</div><div class="line"> create mode <span class="number">100644</span> tags/Smart-UI/index.html</div><div class="line">Branch master <span class="built_in">set</span> up to track remote branch master from git@github.com:ipcreator                                                                                                                                  /ipcreator.github.io.git.</div><div class="line">To github.com:ipcreator/ipcreator.github.io.git</div><div class="line">   <span class="number">7</span>dbbcff..e526227  HEAD -&gt; master</div><div class="line">On branch master</div><div class="line">nothing to commit, working tree clean</div><div class="line">Branch master <span class="built_in">set</span> up to track remote branch master from git@git.coding.net:ipcre                                                                                                                                  ator/ipcreator.git.</div><div class="line">To git.coding.net:ipcreator/ipcreator.git</div><div class="line">   <span class="number">7</span>dbbcff..e526227  HEAD -&gt; master</div><div class="line">INFO  Deploy done: git</div><div class="line"></div><div class="line">user@LAPTOP<span class="number">-082</span>RQVIH MINGW64 /d/IPCreatorBlog</div><div class="line">$</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/torvalds.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Talk is cheap, Show me the Code.&lt;br&gt;Programmers can be great  code artists, just like Pianist and wonderful music.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="Smart UI" scheme="http://aisee.me/tags/Smart-UI/"/>
    
      <category term="Smart AI" scheme="http://aisee.me/tags/Smart-AI/"/>
    
  </entry>
  
  <entry>
    <title>Joke</title>
    <link href="http://aisee.me/2017/04/13/Program/Android/MyApp/joke/"/>
    <id>http://aisee.me/2017/04/13/Program/Android/MyApp/joke/</id>
    <published>2017-04-13T01:30:18.000Z</published>
    <updated>2017-04-16T13:58:31.116Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/joke.jpg" alt=""></p>
<blockquote>
<p>I love cold jokes, so I developed one yesterday.</p>
</blockquote>
<a id="more"></a>
<h2 id="Settlement-One"><a href="#Settlement-One" class="headerlink" title="Settlement One"></a>Settlement One</h2><p><a href="https://www.qiushibaike.com/imgrank/" target="_blank" rel="external">超搞笑图片_笑死人不偿命的爆笑笑话图片大全 - 糗事百科</a><br><img src="http://om8nmvpn9.bkt.clouddn.com/qiushibaike.jpg" alt=""></p>
<h2 id="Settlement-Two"><a href="#Settlement-Two" class="headerlink" title="Settlement Two"></a>Settlement Two</h2><p><a href="https://www.juhe.cn/box/index/id/95" target="_blank" rel="external">聚盒子生活常用笑话大全接口测试</a><br><img src="http://om8nmvpn9.bkt.clouddn.com/juhe.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/joke.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I love cold jokes, so I developed one yesterday.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
  </entry>
  
  <entry>
    <title>Pyramid Model</title>
    <link href="http://aisee.me/2017/04/13/MyView/Original/pyramid/"/>
    <id>http://aisee.me/2017/04/13/MyView/Original/pyramid/</id>
    <published>2017-04-12T23:30:18.000Z</published>
    <updated>2017-04-16T14:43:16.950Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/Maslow%27s_hierarchy_of_needs.png" alt=""></p>
<blockquote>
<p>Solid foundation, step by step</p>
</blockquote>
<a id="more"></a>
<h1 id="Health"><a href="#Health" class="headerlink" title="Health"></a>Health</h1><p><img src="http://ong8f1obl.bkt.clouddn.com/health.jpg" alt=""></p>
<h2 id="Family"><a href="#Family" class="headerlink" title="Family"></a>Family</h2><p><img src="http://ong8f1obl.bkt.clouddn.com/Family-Wellness-Day-Logo-LR.jpg" alt=""></p>
<h3 id="Skill"><a href="#Skill" class="headerlink" title="Skill"></a>Skill</h3><p><img src="http://ong8f1obl.bkt.clouddn.com/Pyramid96dpi-839x1024.png" alt=""></p>
<h4 id="Wealth"><a href="#Wealth" class="headerlink" title="Wealth"></a>Wealth</h4><p><img src="http://ong8f1obl.bkt.clouddn.com/wealth%20pyramid.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/Maslow%27s_hierarchy_of_needs.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Solid foundation, step by step&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Stack Overflow</title>
    <link href="http://aisee.me/2017/04/13/MyView/Original/stack-overflow/"/>
    <id>http://aisee.me/2017/04/13/MyView/Original/stack-overflow/</id>
    <published>2017-04-12T22:30:18.000Z</published>
    <updated>2017-04-16T14:49:39.230Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/stackoverflow.png" alt=""></p>
<blockquote>
<p>Time is precious, energy is limited.</p>
<p>Not only to do something according to your ability, at the same time to do try your best.</p>
<p>The journey is reward.</p>
</blockquote>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/stackoverflow.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Time is precious, energy is limited.&lt;/p&gt;
&lt;p&gt;Not only to do something according to your ability, at the same time to do try your best.&lt;/p&gt;
&lt;p&gt;The journey is reward.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Big Bang</title>
    <link href="http://aisee.me/2017/04/12/Program/Android/MyApp/bigbang/"/>
    <id>http://aisee.me/2017/04/12/Program/Android/MyApp/bigbang/</id>
    <published>2017-04-12T13:18:06.000Z</published>
    <updated>2017-04-12T14:03:40.349Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_1492004365.png" alt=""></p>
<blockquote>
<p>Read –&gt; Write<br>Copy –&gt; Refactor –&gt; Innovate<br>Record –&gt; Using –&gt; Deepen –&gt; Systemize<br> For every problem, Try your Best to Find Three Solvable Ways </p>
</blockquote>
<ol>
<li>Learn the Basic Concepts and Framework of Android/Java/Linux/Computer.</li>
<li>Read Code Following the Time Sequence.</li>
<li>Read the Official Code Comments , API Docs, Sample Apps.</li>
<li>Migrate and Optimize the Codes to Your Code Repositories.</li>
</ol>
<a id="more"></a>
<h2 id="Snippets"><a href="#Snippets" class="headerlink" title="Snippets"></a>Snippets</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EnglishWordsParser</span> <span class="keyword">extends</span> <span class="title">SimpleParser</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] parse(String text) <span class="keyword">throws</span> SegmentException &#123;</div><div class="line">        List&lt;String&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        String regex = <span class="string">"([\\w]+(\\'|\\-)*[\\w]+)|([\\w]+)"</span>;</div><div class="line">        Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);</div><div class="line">        Matcher matcher=pattern.matcher(text);</div><div class="line">        <span class="keyword">while</span> (matcher.find()) &#123;</div><div class="line">            result.add(matcher.group());</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> result.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Official-API-Comments"><a href="#Official-API-Comments" class="headerlink" title="Official API Comments"></a>Official API Comments</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * Attempts to find the next subsequence of the input sequence that matches</div><div class="line">     * the pattern.</div><div class="line">     *</div><div class="line">     * &lt;p&gt; This method starts at the beginning of this matcher&apos;s region, or, if</div><div class="line">     * a previous invocation of the method was successful and the matcher has</div><div class="line">     * not since been reset, at the first character not matched by the previous</div><div class="line">     * match.</div><div class="line">     *</div><div class="line">     * &lt;p&gt; If the match succeeds then more information can be obtained via the</div><div class="line">     * &lt;tt&gt;start&lt;/tt&gt;, &lt;tt&gt;end&lt;/tt&gt;, and &lt;tt&gt;group&lt;/tt&gt; methods.  &lt;/p&gt;</div><div class="line">     *</div><div class="line">     * @return  &lt;tt&gt;true&lt;/tt&gt; if, and only if, a subsequence of the input</div><div class="line">     *          sequence matches this matcher&apos;s pattern</div><div class="line">     */</div><div class="line">    public boolean find() &#123;</div><div class="line">        synchronized (this) &#123;</div><div class="line">            matchFound = findNextImpl(address, input, matchOffsets);</div><div class="line">        &#125;</div><div class="line">        return matchFound;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * Returns an array containing all of the elements in this list in</div><div class="line">     * proper sequence (from first to last element); the runtime type of</div><div class="line">     * the returned array is that of the specified array.  If the list fits</div><div class="line">     * in the specified array, it is returned therein.  Otherwise, a new</div><div class="line">     * array is allocated with the runtime type of the specified array and</div><div class="line">     * the size of this list.</div><div class="line">     *</div><div class="line">     * &lt;p&gt;If the list fits in the specified array with room to spare (i.e.,</div><div class="line">     * the array has more elements than the list), the element in the array</div><div class="line">     * immediately following the end of the list is set to &lt;tt&gt;null&lt;/tt&gt;.</div><div class="line">     * (This is useful in determining the length of the list &lt;i&gt;only&lt;/i&gt; if</div><div class="line">     * the caller knows that the list does not contain any null elements.)</div><div class="line">     *</div><div class="line">     * &lt;p&gt;Like the &#123;@link #toArray()&#125; method, this method acts as bridge between</div><div class="line">     * array-based and collection-based APIs.  Further, this method allows</div><div class="line">     * precise control over the runtime type of the output array, and may,</div><div class="line">     * under certain circumstances, be used to save allocation costs.</div><div class="line">     *</div><div class="line">     * &lt;p&gt;Suppose &lt;tt&gt;x&lt;/tt&gt; is a list known to contain only strings.</div><div class="line">     * The following code can be used to dump the list into a newly</div><div class="line">     * allocated array of &lt;tt&gt;String&lt;/tt&gt;:</div><div class="line">     *</div><div class="line">     * &lt;pre&gt;</div><div class="line">     *     String[] y = x.toArray(new String[0]);&lt;/pre&gt;</div><div class="line">     *</div><div class="line">     * Note that &lt;tt&gt;toArray(new Object[0])&lt;/tt&gt; is identical in function to</div><div class="line">     * &lt;tt&gt;toArray()&lt;/tt&gt;.</div><div class="line">     *</div><div class="line">     * @param a the array into which the elements of this list are to</div><div class="line">     *          be stored, if it is big enough; otherwise, a new array of the</div><div class="line">     *          same runtime type is allocated for this purpose.</div><div class="line">     * @return an array containing the elements of this list</div><div class="line">     * @throws ArrayStoreException if the runtime type of the specified array</div><div class="line">     *         is not a supertype of the runtime type of every element in</div><div class="line">     *         this list</div><div class="line">     * @throws NullPointerException if the specified array is null</div><div class="line">     */</div><div class="line">    &lt;T&gt; T[] toArray(T[] a);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/Screenshot_1492004365.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Read –&amp;gt; Write&lt;br&gt;Copy –&amp;gt; Refactor –&amp;gt; Innovate&lt;br&gt;Record –&amp;gt; Using –&amp;gt; Deepen –&amp;gt; Systemize&lt;br&gt; For every problem, Try your Best to Find Three Solvable Ways &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Learn the Basic Concepts and Framework of Android/Java/Linux/Computer.&lt;/li&gt;
&lt;li&gt;Read Code Following the Time Sequence.&lt;/li&gt;
&lt;li&gt;Read the Official Code Comments , API Docs, Sample Apps.&lt;/li&gt;
&lt;li&gt;Migrate and Optimize the Codes to Your Code Repositories.&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="Open Source" scheme="http://aisee.me/tags/Open-Source/"/>
    
      <category term="Big Bang" scheme="http://aisee.me/tags/Big-Bang/"/>
    
  </entry>
  
  <entry>
    <title>Bitmap</title>
    <link href="http://aisee.me/2017/04/12/Program/Tools/Computer/bitmap/"/>
    <id>http://aisee.me/2017/04/12/Program/Tools/Computer/bitmap/</id>
    <published>2017-04-12T12:53:06.000Z</published>
    <updated>2017-04-24T07:34:28.698Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/bitmap.jpg" alt=""></p>
<blockquote>
<p>只要有足够多的不同色彩的像素，就可以制作出色彩丰富的图象</p>
</blockquote>
<a id="more"></a>
<h2 id="Bitmap-位图-全解析"><a href="#Bitmap-位图-全解析" class="headerlink" title="Bitmap(位图)全解析"></a>Bitmap(位图)全解析</h2><p>Drawable：通用的图形对象，用于装载常用格式的图像，既可以是PNG，JPG这样的图像， 也是前面学的那13种Drawable类型的可视化对象！我们可以理解成一个用来放画的——画框！</p>
<p>Bitmap(位图)：我们可以把他看作一个画架，我们先把画放到上面，然后我们可以 进行一些处理，比如获取图像文件信息，做旋转切割，放大缩小等操作！</p>
<p>Canvas(画布)：如其名，画布，我们可以在上面作画(绘制)，你既可以用Paint(画笔)， 来画各种形状或者写字，又可以用Path(路径)来绘制多个点，然后连接成各种图形！</p>
<p>Matrix(矩阵)：用于图形特效处理的，颜色矩阵(ColorMatrix)，还有使用Matrix进行图像的 平移，缩放，旋转，倾斜等！</p>
<h2 id="说明位图-矢量图-像素-分辨率，PPI-DPI？"><a href="#说明位图-矢量图-像素-分辨率，PPI-DPI？" class="headerlink" title="说明位图,矢量图,像素,分辨率，PPI,DPI？"></a>说明位图,矢量图,像素,分辨率，PPI,DPI？</h2><h3 id="位图"><a href="#位图" class="headerlink" title="位图"></a>位图</h3><p>位图图像（bitmap）, 亦称为点阵图像或绘制图像，是由称作像素（图片元素）的单个点组成的。这些点可以进行不同的排列和染色以构成图样。当放大位图时，可以看见赖以构成整个图像的无数单个方块。只要有足够多的不同色彩的像素，就可以制作出色彩丰富的图象，逼真地表现自然界的景象。缩放和旋转容易失真，同时文件容量较大。bmp，jpg，gif，png。便携式网络图形（Portable Network Graphics，PNG）是一种无损压缩的位图图形格式，截图首选png格式。</p>
<p><img src="https://pic2.zhimg.com/dd1d5448347bd9ae91bed2ed1f42b72d_b.png" alt=""></p>
<blockquote>
<p>位图实质为使用像素阵列来表示的图像（注意“表示”两个字），用于展现在显示器或者用于打印，位图并未真实存在的文件，但它可以生成真实性的文件如png、bmp、jpg、gif、psd、tif等。通过位图我们可以直接操作图像像素，例如有像素决定的颜色、灰度值、背景。</p>
</blockquote>
<h3 id="矢量图像"><a href="#矢量图像" class="headerlink" title="矢量图像"></a>矢量图像</h3><p>由数学向量组成，文件容量较小，在进行放大、缩小或旋转等操作时图象不会失真，缺点是不易制作色彩变化太多的图象。</p>
<h3 id="像素"><a href="#像素" class="headerlink" title="像素"></a>像素</h3><p>像素，又称画素，为图像显示的基本单位，译自英文“pixel”，pix是英语单词picture的常用简写，加上英语单词“元素”element，就得到pixel，故“像素”表示“图像元素”之意。像素表示图形尺寸的大小。不同设备显示效果相同。这里的“相同”是指像素数不会变，比如指定UI长度是100px，那不管分辨率是多少UI长度都是100px。也正是因为如此才造成了UI在小分辨率设备上被放大而失真，在大分辨率上被缩小。</p>
<h3 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h3><p>Image resolution，中国大陆译为“分辨率”，香港、台湾分别译为“解像度”和“解析度”，又称“解像力”，泛指量测或显示系统对细节的分辨能力。分辨率越高代表视频质量越好，越能表现出更多的细节；但相对的，因为纪录的信息越多，文件也就会越大。图像处理或信号处理中的空间或时间分辨率：能够分辨图像中两个点或线的能力。描述分辨率的单位有：dpi（点每英寸）、lpi（线每英寸）和ppi（每英寸像素）。从技术角度说，“像素”只存在于电脑显示领域，而“点”只出现于打印或印刷领域。对电脑显示屏等，分辨率是用像素数目衡量；对数字文件印刷，分辨率是通常用每英寸所含点或像素〔dpi〕来衡量。像素数目大的数码相机，较能够输出高分辨率的图像。因此，相机制造商在广告上多使用像素数目代表分辨率。不过，相机是测量仪器而不是显示设备。镜头对视频质量极为重要，光以用像素数目代表分辨率是非常误导的。美国、日本和国际标准都建议不应使用此一定义。</p>
<p>提起分辨率，我们需要了解两个概念，图像分辨率和输出分辨率，图像分辨率是每英寸的像素数，以ppi为单位，图像分辨率又常常被表示成每一个方向上的总像素数量，比如640×480像素、1280×960像素等。而决定图像输出质量的是图像的输出分辨率，描述的是设备输出图像时每英寸可产生的点数（dpi），以dpi为单位，两者有联系但并不总是相等的。</p>
<p>以21.5寸的显示器为例，设置屏幕分辨率为1920<em>1080（推荐设置，还可以设置成最小800</em>600），下载一张1920<em>1080的图片，当显示为实际大小时，图片正好可以覆盖整个屏幕，再将屏幕分辨率设置为1360</em>768，这时当查看图片的实际大小时，发现屏幕不能承下整个图片。也就是说，21.5寸的显示器设置1920<em>1080，是将屏幕分为1920</em>1080个小块（也就是像素），当显示1920<em>1080的图片时，屏幕上的所有块（像素）正好都被占用，当显示器分辨率为1360</em>768时，将21.5寸的屏幕分成1360<em>768个小块，再次显示1920</em>1080大小的图片时，发现屏幕上的所有块不能承下图片，需要左右移动才能查看完整的图片。这也解释了，为什么将屏幕分辩率调小之后，会发现照片和文字变大的问题。</p>
<blockquote>
<p>例如分辨率为1280*720表达的就是：屏幕长上有1280个像素，屏幕宽上有720个像素。每一个像素点都是单独染色，像素点的颜色由RGB三原色与灰度值决定。</p>
</blockquote>
<h3 id="PPI"><a href="#PPI" class="headerlink" title="PPI"></a>PPI</h3><p>每英寸像素（英语：Pixels Per Inch），又被称为像素密度，是一个表示打印图像或显示器单位面积上像素数量的指数。一般用来计量电脑显示器，电视机和手持电子设备屏幕的精细程度。通常情况下，每英寸像素值越高，屏幕能显示的图像也越精细。是将屏幕尺寸与分辨率整合到一起的一个属性。以屏幕尺寸为4吋的iPhone 5为例，分辨率为1136x640，像素密度为326PPI。而分辨率为1920x1080的家用21.5寸显示器，像素密度为103PPI。Retina显示屏（英文：Retina Display）是一种由苹果公司设计和委托制造的显示屏，具备足够高像素密度而使得人体肉眼无法分辨其中单独像素点的液晶屏，最初采用该种屏幕的产品iPhone 4由执行长史蒂夫·乔布斯于WWDC2010发布，其屏幕分辨率为960×640（每英寸像素数326ppi）。这种分辨率在正常观看距离下足以使人肉眼无法分辨其中的单独像素。</p>
<p><img src="https://pic4.zhimg.com/f44740f69919814b034042ccf178d3d7_b.png" alt=""></p>
<h3 id="DPI打印输出分辨率（英语：Dots-Per-Inch，每英寸点数）"><a href="#DPI打印输出分辨率（英语：Dots-Per-Inch，每英寸点数）" class="headerlink" title="DPI打印输出分辨率（英语：Dots Per Inch，每英寸点数）"></a>DPI打印输出分辨率（英语：Dots Per Inch，每英寸点数）</h3><p>是一个量度单位，用于点阵数位影像，意思是指每一英寸长度中，取样或可显示或输出点的数目。打印机所设定之分辨率的DPI值越高，印出的图像会越精细。打印机通常可以调校分辨率。例如撞针打印机，分辨率通常是60至90 DPI。喷墨打印机则可达1200 DPI，甚至9600 DPI。激光打印机则有600至1200 DPI。一般显示器为96 DPI。</p>
<p><img src="http://images.cnitblog.com/blog/602138/201404/151457586822202.png" alt=""></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="https://www.zhihu.com/question/36918058" target="_blank" rel="external">说明位图,矢量图,像素,分辨率，PPI,DPI？</a><br>[2]<a href="http://www.cnblogs.com/android001/p/3666265.html" target="_blank" rel="external">[图形图像]—位图Bitmap、分辨率Resolution、像素Pixel(px)、距离密度dpi，基本概念与相互之间的联系</a><br>[3]<a href="http://www.runoob.com/w3cnote/android-tutorial-bitmap1.html" target="_blank" rel="external"> Bitmap(位图)全解析 Part 1</a><br>[4]<a href="http://www.jianshu.com/p/98c88f9ceafa" target="_blank" rel="external">Android 之 Bitmap</a><br>[5]<a href="http://www.cnblogs.com/over140/archive/2011/11/21/2256727.html" target="_blank" rel="external">Android中文API（136） —— Bitmap</a><br>[6]<a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2013/0204/838.html" target="_blank" rel="external">Android资源文件res的使用详解（strings,layout,drawable,arrays等）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/bitmap.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;只要有足够多的不同色彩的像素，就可以制作出色彩丰富的图象&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Program" scheme="http://aisee.me/categories/Program/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Android" scheme="http://aisee.me/tags/Android/"/>
    
      <category term="Bitmap" scheme="http://aisee.me/tags/Bitmap/"/>
    
  </entry>
  
  <entry>
    <title>Foo &amp; Bar</title>
    <link href="http://aisee.me/2017/04/12/Program/Tools/Computer/foobar/"/>
    <id>http://aisee.me/2017/04/12/Program/Tools/Computer/foobar/</id>
    <published>2017-04-12T12:53:06.000Z</published>
    <updated>2017-04-12T13:16:43.327Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/foobarbaz.png" alt=""></p>
<ol>
<li><p>“Foo” and “bar” as metasyntactic variables were popularised by MIT and DEC, the first references are in work on LISP and PDP-1 and Project MAC from 1964 onwards.</p>
</li>
<li><p>Many of these people were in MIT’s Tech Model Railroad Club, where we find the first documented use of “foo” in tech circles in 1959 (and a variant in 1958).</p>
</li>
<li><p>Both “foo” and “bar” (and even “baz”) were well known in popular culture, especially from Smokey Stover and Pogo comics, which will have been read by many TMRC members.</p>
</li>
<li><p>Also, it seems likely the military FUBAR(F*cked Up Beyond All Repair) contributed to their popularity.</p>
</li>
</ol>
<blockquote>
<p>编程里面的foo和bar就是我们小时候写作文里面的小明和小红。写作文的时候，当然情节最重要，花时间去想角色的名字太麻烦了，就干脆叫小明小红好了。</p>
</blockquote>
<a id="more"></a>
<h2 id="维基百科上的解释"><a href="#维基百科上的解释" class="headerlink" title="维基百科上的解释"></a>维基百科上的解释</h2><p>原文：</p>
<blockquote>
<p>The terms foobar, foo, bar, baz and qux are sometimes used as placeholder names (also referred to as metasyntactic variables) in computer programming or computer-related documentation.[1] They have been used to name entities such as variables, functions, and commands whose purpose is unimportant and serve only to demonstrate a concept. The words themselves have no meaning in this usage. Foobar is sometimes used alone; foo, bar, and baz are sometimes used in that order, when multiple entities are needed.</p>
</blockquote>
<p>译文：</p>
<blockquote>
<p>术语foobar, foo, bar, baz 和qux经常在计算机编程或计算机相关的文档中被用作占位符的名字。当变量，函数，或命令本身不太重要的时候，foobar, foo,bar, baz 和qux就被用来充当这些实体的名字，这样做的目的仅仅是阐述一个概念，说明一个想法。这些术语本身相对于使用的场景来说没有任何意义。Foobar经常被单独使用；而当需要多个实体举例的时候，foo，bar，和baz则经常被按顺序使用。</p>
</blockquote>
<h2 id="Code-Sample-From-Google"><a href="#Code-Sample-From-Google" class="headerlink" title="Code Sample From Google"></a>Code Sample From Google</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACTION_FOO = <span class="string">"org.ipcreator.ui.apps.contact.service.action.FOO"</span>;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACTION_BAZ = <span class="string">"org.ipcreator.ui.apps.contact.service.action.BAZ"</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Handle action Foo in the provided background thread with the provided</div><div class="line"> * parameters.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleActionFoo</span><span class="params">(String param1, String param2)</span> </span>&#123;</div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> Handle action Foo</span></div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Handle action Baz in the provided background thread with the provided</div><div class="line"> * parameters.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleActionBaz</span><span class="params">(String param1, String param2)</span> </span>&#123;</div><div class="line">    <span class="comment">// <span class="doctag">TODO:</span> Handle action Baz</span></div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>foobar是计算机程序领域里的术语炒作，并无实际用途和参考意义。 在计算机程序设计与计算机技术的相关文档中，术语foobar是一个常见的无名氏化名，常被作为“伪变量”使用。</p>
</blockquote>
<p>单词“foobar”或分离的“foo”与“bar”常出现于程序设计的案例中，如同Hello World程序一样，它们常被用于向学习者介绍某种程序语言。<br>“foo”常被作为函数／方法的名称，而“bar”则常被用作变量名。<br>下面是一段通过“foo”和“bar”来演示如何在Java、C及C++中连接两个字符串的实例程序：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Java Code</span></div><div class="line">String foo = <span class="string">"Hello, "</span>;</div><div class="line">String bar = <span class="string">"World"</span>;</div><div class="line">System.out.println(foo + bar);</div><div class="line"><span class="comment">//Hello, World is printed to the screen by printing foo and bar</span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// C code</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">char</span> foo[] = <span class="string">"Hello,"</span>;</div><div class="line">   <span class="keyword">char</span> bar[] = <span class="string">"World!"</span>;</div><div class="line">   <span class="built_in">printf</span>(<span class="string">"%s %s\n"</span>, foo, bar);</div><div class="line"></div><div class="line">   <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// C++ code</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">   <span class="keyword">char</span> foo[] = <span class="string">"Hello,"</span>;</div><div class="line">   <span class="keyword">char</span> bar[] = <span class="string">"World!"</span>;</div><div class="line">   <span class="built_in">cout</span> &lt;&lt; foo &lt;&lt; <span class="string">" "</span> &lt;&lt; bar &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"></div><div class="line">   <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://www.cnblogs.com/javaee6/p/3756906.html" target="_blank" rel="external">编程中Foo, Bar 到底什么意思？</a><br>[2]<a href="https://zh.wikipedia.org/wiki/Foobar" target="_blank" rel="external">Foobar</a><br>[3]<a href="http://stackoverflow.com/questions/4868904/what-is-the-origin-of-foo-and-bar" target="_blank" rel="external">What is the origin of foo and bar? [closed]
</a>[4]<a href="http://blog.csdn.net/qinxi/article/details/325875" target="_blank" rel="external">foo和bar词源</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/foobarbaz.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;“Foo” and “bar” as metasyntactic variables were popularised by MIT and DEC, the first references are in work on LISP and PDP-1 and Project MAC from 1964 onwards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Many of these people were in MIT’s Tech Model Railroad Club, where we find the first documented use of “foo” in tech circles in 1959 (and a variant in 1958).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Both “foo” and “bar” (and even “baz”) were well known in popular culture, especially from Smokey Stover and Pogo comics, which will have been read by many TMRC members.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Also, it seems likely the military FUBAR(F*cked Up Beyond All Repair) contributed to their popularity.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;编程里面的foo和bar就是我们小时候写作文里面的小明和小红。写作文的时候，当然情节最重要，花时间去想角色的名字太麻烦了，就干脆叫小明小红好了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Meta Skill——Deliberate Practice</title>
    <link href="http://aisee.me/2017/04/11/Meta%20Skill/meta-skill-deliberately-practice/"/>
    <id>http://aisee.me/2017/04/11/Meta Skill/meta-skill-deliberately-practice/</id>
    <published>2017-04-11T00:29:06.000Z</published>
    <updated>2017-05-02T14:32:10.973Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/DeliberatePractice.png" alt=""></p>
<blockquote>
<p><strong>You can feel your own progress</strong></p>
<p>Accumulation is powerful.<br>More Skills, More Weapons, More Ways<br>Deliberate Practice makes perfect</p>
</blockquote>
<ol>
<li>Designed to Improve Performance.</li>
<li>Repeated a Lot.</li>
<li><strong>Feedback</strong> Continuously Available.</li>
<li>Mentally Hightly Demanding.</li>
<li>Not Much Fun.</li>
</ol>
<blockquote>
<p>Concept –&gt; Framework –&gt;System –&gt; Application –&gt; Innovation<br>Every error is a chance of growing up, include program, life and so forth<br>Don’t let the beautiful things go , Enjoy it, Record it. Create it ,Share it.<br><strong>With the upgrading of skills, rhythm and feeling are getting better and better</strong></p>
</blockquote>
<a id="more"></a>
<h2 id="Update-Concept"><a href="#Update-Concept" class="headerlink" title="Update Concept"></a>Update Concept</h2><ol>
<li>Avoid wrong ways of growing up.</li>
<li>Improve quality of your life.</li>
</ol>
<h2 id="Deep-Thinking"><a href="#Deep-Thinking" class="headerlink" title="Deep Thinking"></a>Deep Thinking</h2><ol>
<li>Keep attention focused  on Goal.</li>
<li>Relax and control yourself.</li>
<li>Train your brain.</li>
<li>Improve your deep sleep.</li>
<li>Excercise of mental faculties is as important as bodily Excercise.</li>
</ol>
<ul>
<li><em>17.04.12</em> Trinity[‘trɪnɪtɪ]<br>Walking &amp; Deep Thinking &amp; Knock shoulder against a brick wall<br><img src="http://oimagea8.ydstatic.com/image?url=http://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/Shield-Trinity-Scutum-Fidei-English.svg/220px-Shield-Trinity-Scutum-Fidei-English.svg.png&amp;product=PICDICT_EDIT&amp;w=150" alt=""></li>
</ul>
<h2 id="Deep-Reading"><a href="#Deep-Reading" class="headerlink" title="Deep Reading"></a>Deep Reading</h2><ol>
<li>Read word by word</li>
<li>.Less is more.</li>
<li>Slow is quick.</li>
<li>Practice , practice ,practice.</li>
</ol>
<h3 id="Deliberate-Reading"><a href="#Deliberate-Reading" class="headerlink" title="Deliberate Reading"></a><a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter7.html" target="_blank" rel="external">Deliberate Reading</a></h3><h2 id="Using-English"><a href="#Using-English" class="headerlink" title="Using English"></a>Using English</h2><ol>
<li>Master a powerful meta skill.</li>
<li>One more word, one more sentence.</li>
</ol>
<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><ol>
<li>Realize your Innovative Thinking</li>
<li>Maxmize your valuable skills.</li>
</ol>
<ul>
<li><em>17.05.03</em>  <ul>
<li>Idea –&gt;Demo</li>
<li>Basic Framework, Git/Github…</li>
<li>Static Codes Checker…</li>
<li>Dynamic Running Monitor…</li>
<li>Android, Java, C/C++, Linux…</li>
<li>Design Pattern, MVP, RxJava/RxAndroid…</li>
<li>UI，Network，Database，File，MultiThread…</li>
</ul>
</li>
</ul>
<h2 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h2><ol>
<li>Insist on Writing Blog.</li>
<li>Summarizing daily.</li>
<li>Reorganize and optimize by review.</li>
</ol>
<h2 id="Walking"><a href="#Walking" class="headerlink" title="Walking"></a>Walking</h2><ol>
<li>Keep completing ten thousand steps every day.</li>
<li>It is not only physical training, but also a way of strengthening willpower.</li>
</ol>
<h2 id="Investment"><a href="#Investment" class="headerlink" title="Investment"></a>Investment</h2><ol>
<li>To get the most out of money, you have to invest.</li>
<li>For capital, money should be sentenced to  life imprisonment.</li>
<li>In long term, Invest  the growing up  of yourself is the best way.</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/DeliberatePractice.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You can feel your own progress&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Accumulation is powerful.&lt;br&gt;More Skills, More Weapons, More Ways&lt;br&gt;Deliberate Practice makes perfect&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Designed to Improve Performance.&lt;/li&gt;
&lt;li&gt;Repeated a Lot.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Feedback&lt;/strong&gt; Continuously Available.&lt;/li&gt;
&lt;li&gt;Mentally Hightly Demanding.&lt;/li&gt;
&lt;li&gt;Not Much Fun.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Concept –&amp;gt; Framework –&amp;gt;System –&amp;gt; Application –&amp;gt; Innovation&lt;br&gt;Every error is a chance of growing up, include program, life and so forth&lt;br&gt;Don’t let the beautiful things go , Enjoy it, Record it. Create it ,Share it.&lt;br&gt;&lt;strong&gt;With the upgrading of skills, rhythm and feeling are getting better and better&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Meta Skill" scheme="http://aisee.me/tags/Meta-Skill/"/>
    
      <category term="Deliberate Practice" scheme="http://aisee.me/tags/Deliberate-Practice/"/>
    
  </entry>
  
  <entry>
    <title>Basic Concept of English——Grammar</title>
    <link href="http://aisee.me/2017/04/11/English/basic-concept-of-grammar/"/>
    <id>http://aisee.me/2017/04/11/English/basic-concept-of-grammar/</id>
    <published>2017-04-11T00:27:10.000Z</published>
    <updated>2017-04-11T03:48:02.077Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/grammar.jpg" alt=""></p>
<blockquote>
<p>Grammar is the rules of English.<br>No grammar , no sentence.</p>
</blockquote>
<p>要了解语法的本质。本质上来看，语法并不是“规定你应该怎么说”，而是“尽量”“系统地”解释“人们为什么普遍这么说”。所以，不能把语法规则当作数学公式，语法规则并不保证按照它拼凑出来的句子一定有意义并且正确。</p>
<a id="more"></a>
<p>学英语或者干脆直接用英语没有什么捷径，但肯定有窍门。重要的窍门之一就是保持耐心。这么说太笼统。重要的是，凭什么保持耐心呢？凭了解，透彻的了解。刚刚提到语法的本质只是解释“人们为什么普遍这么说”，如此看来，就真没有什么理由去“背”语法规则了；应该做的是去尝试着<strong>“理解”语法规则</strong>，理解了，就等于记住了。采用“理解”这个动作的人，显然比采用“背”这个动作的人更容易拥有耐心。再比如，了解到语法不过是“<strong>尽量地系统化了的有例外的规则之集合</strong>”，就更容易保持耐心了。不再会觉得那些例外可恨了，只觉得那些例外只是自然存在的而已。不再为语法书的体系而感到困惑了，而是清楚能做到这样“颇有体系”已经非常不容易了。</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a><a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">语法</a></h2><p>短视其实是人类的本性，所以，我们总是不由自主地被它所左右。人们学骑自行车比学语法快，并不仅仅是因为语法更为复杂，还可能更是因为骑自行车很快就能学会，而后就可以马上体会到各种便捷；而学习语法不仅单调枯燥、耗时费力，而且最要命的是总是觉得“不知道学它究竟有什么用？”这个问题，是很多人放弃学习的根本原因——我在《把时间当作朋友》里有详尽的论述。</p>
<p>多少本科毕业生（甚至包括相当部分的研究生、博士）走入社会之后，竟然写不出一份像样的租房合同，或者竟然不能够完全读懂自己所签写的雇佣协议。很多人听人讲话、读人文章之后常常断章取义，其实并非出自故意，只不过是文字理解水平太差乃至于经常“听不到”、“看不到”一些重要内容而已。不妨想像一下，绝大多数人（这个比例绝对会超过99%）无论多么认真地写一篇文稿，无论自己反复修改过多少次，能够正式出版之前，拿到编辑手里之后“一字都不需改动”的可能性几乎是零——更可能的存在着一些有意无意的错别字、或隐蔽或明显的语法错误、自以为是的表达等等，往往需要另外一个人反复推敲才行。很多人忽视母语的修炼，像鸵鸟遇到危险时只顾着把头埋起来一样一头扎到英语学习中去，其实不见得是有意而为之，更深层次的原因很可能仅仅是对自己母语水平的错误估计。</p>
<p>调查表明，在任何文化中，人们最为恐惧的第一件事儿是死亡，而紧随其后的就是当众讲话。不过，能够意识到自己的语法差还算是清醒的，绝大多数人把自己的糟糕表现归咎于诸如心理素质不好、发挥太差、准备不充分之类听起来相对“冠冕堂皇”得多的理由，而回避自己在两个最重要的方面彻底不及格的事实：语法和思维能力。为了能够有效表达，就算是林肯不也老老实实地去钻研了好几年的语法才放心大胆参加竞选的么？</p>
<h3 id="语法书的结构和查询方法"><a href="#语法书的结构和查询方法" class="headerlink" title="语法书的结构和查询方法"></a>语法书的结构和查询方法</h3><p>读语法书还是有一点点方法的。很多人搞不定语法的原因只不过是因为心太急。总想一下子把一本语法书翻完，结果欲速不仅不达，并且还永远停滞不前。拿来一本语法书，应该先把它想象成地图。你见过谁买来一张地图之后闷头坐在那里把那地图的每一个角落都看上一遍之后直接把那地图背下来？绝大多数人又不是训练有素的特种兵，一生都无必要那么做。</p>
<p>拿来一张地图的时候，我们已经知道个大概：那地图是上北下南左西右东，什么样的线条是公路，什么样的线条是地铁，什么样的标志是公交站……我们有这样的常识，是因为过去看过一些地图。拿来语法书也一样，大多数语法书的结构都差不多，从“冠词”开始讲起，而后名词、代词、动词、形容词、副词、连词等等，而其中关于动词的那一章几乎占语法书的2/3篇幅（因为有时态、语态、语气等等诸多细节要讲解）……</p>
<p>正如我们想去某个地方的时候要去查地图一样，我们想要了解哪一方面的语法知识，就去查语法书。语法书不可能看一遍就全记住，正如地图看一遍不大可能全记住一样。语法书基本上都是查着查着看完并谙熟于心的，就好像地图也是查着查着就不用再查了一样。地图上总是有一些地方我们一辈子都不需要去，而语法点之中也有一些人们一辈子都可能用不到。把最常用的语法知识经过反复查阅应用牢记于心，剩下的，需要的时候拿出语法书查得到就好了。</p>
<p>语法书当然要比一般的地图更为复杂一些。除了告诉我们该书的基本结构的目录之外，重要的还有书尾的“索引”（index）。通过索引，我们可以查得到重要的关键词都在哪些页面出现过。当我们遇到一个没有生词却读不懂的句子之时，我们就可能会猜“究竟是哪个语法点我没弄清楚才导致这句话我看不懂呢？”首先要锁定“功能词”。所谓功能词是指语法书里面专门讲解过的那些词，比如“that”、“and”、“as”、“of”等等。</p>
<p>查语法书就这么简单：</p>
<blockquote>
<ol>
<li>锁定功能词，</li>
<li>检索索引，</li>
<li>逐一翻阅相应内容，看看能否找到合适的解答。</li>
</ol>
</blockquote>
<p>如果一本语法书中没有找到满意的答案，那就再换一本语法书，最终总能找到答案。有时就算在一本语法书中找到了答案，也可以再翻翻另外一本语法书，因为这么做总是可以找到一些补充的信息。</p>
<h3 id="数学式语法而不是英语语法"><a href="#数学式语法而不是英语语法" class="headerlink" title="数学式语法而不是英语语法"></a>数学式语法而不是英语语法</h3><p>很多人用对待初等数学的方式对待英语，这是一种过分简单化的看法，或者说是一种不切实际的想法和做法。</p>
<p>初等数学其实没什么意思，因为太简单。一切都是确定的，无懈可击的。了解一些无须理解争论的“公理”，然后再推演或者干脆记忆一堆“定理”和“公式”，而后就可以做到“无懈可击”的证明，或者“正确无误”的结果。英语语法（事实上所有语言的语法都如此）则很复杂。语法里面很少有公理、定理，更多的是带有众多例外的“规则”。从这个意义上来说，学好语法显然要比学好初等数学难出许多，干脆不是同一个层面上的事情。</p>
<p>到了微积分和概率统计，数学才真正妙趣横生。因为这个时候，数学已经开始处理复杂性与不确定性——生活的关键本质就在于其复杂性与不确定性。然而那些当初“充满优越感幻觉的理科生”早就不再对数学“感兴趣”了。</p>
<p>数学也好，英语也罢（或者说任何其他一种语言），其实各自都是描述这个世界的众多方式之一。初等数学（例如算术、代数、几何等等）只是被用来描述这个世界的某一部分，而语言则担负着“尽量描述整个世界”的任务，所以显然要比初等数学复杂得多，并且无法做到“完美”或者“相对完美”。</p>
<p>要了解语法的本质。本质上来看，语法并不是“规定你应该怎么说”，而是“尽量”“系统地”解释“人们为什么普遍这么说”。所以，不能把语法规则当作数学公式，语法规则并不保证按照它拼凑出来的句子一定有意义并且正确。</p>
<h3 id="反复通读至少一本语法书"><a href="#反复通读至少一本语法书" class="headerlink" title="反复通读至少一本语法书"></a>反复通读至少一本语法书</h3><p>如果一个人学会查词典，学会查语法书，再肯于多查几部词典、多查几本语法书，他基本上就具备在中国的任何一所民办英语培训机构做老师的基本素质了。在大多数短期英语培训机构里，英语老师所谓的备课，90%以上的工作只不过是查查词典、翻翻语法书而已。这样的老师都算是敬业的，更多的所谓“老师”能不查就不查词典，能不翻就不翻语法书，因为他们把自己的90%时间精力放在琢磨如何才能使课堂气氛更加活跃——唱唱歌啊，跳跳舞啊，讲讲笑话啊什么的。当然更多的人连这些都做不好，于是只好吹牛，（并且只能）往死了吹……</p>
<p>如果读者爱惜自己的时间精力（“视金钱如粪土”确实颇有些气势），那最好还是靠自己吧。只有尽早反复通读一本语法书，才可能快速摆脱对老师的依赖，而后做自己的明师。尽管语法知识看起来非常枯燥，但是只要换一种读法，就可能会有很大的改观。</p>
<p>学习外语的真正难点在于母语和外语这两种语言之间的非一一对应之处。两种语言重合、一一对应的部分，是容易学会的。“apple-苹果”、“table-桌子”、“fatigue-疲乏”、“sophisticated-精细的”之类的单词，由于其所表达的概念在两种语言中都存在，并一一对应，记忆起来并不难。然而，像英文的“vary”，在中文中就很难找到对应的词汇，比如这个例句中的vary这个词：“People’s opinions vary from individual to individual.”，用英汉词典的释义“变化”来理解好像并不那么准确，这句话的意思是“人们的看法各不相同。”再比如，中文中的“确实”这个副词，在英文中其实没有一个同等作用同等用法的对应，比如这个例句中“I do hate going out alone.”，是用附加一个助动词“do”的结构来表示中文“确实”这个含义；再比如，“Who could’ve considered such a possibility?”这个英文句子中，是用“could have done”的形式在疑问句中表达中文副词“居然”的含义的——而非汉英辞典里给出的“actually”和“virtually”。</p>
<p>“This is a table.”或者“That’s a book.”之类的句子，不仅容易理解，并且容易运用。其实只不过是因为它们的结构与逻辑与我们的母语几乎一一对应。日常使用中，近乎“一一对应”的文字其实占大多数，比如之前我们曾读过的“Evolution itself has no foresight.”之类的句子。（读者应该在“5.2 无论如何都要学语法”中读到过这个句子——如果没有的话，说明您读书太不认真了。）</p>
<p>句子结构、表达方法在两种语言之间也有很多并非一一对应的情况，尽管数量上是少数，却给语言的熟练运用带来很多的麻烦。比如，“请问，这个座位有人么？”对应的不是“Please ask, is there anyone at this seat?”，而是“Excuse me, is this seat taken?”；“如果我没有记错的话……”不是“If I didn’t remember wrong, …”，而可能是“If my memory serves, …”</p>
<p>有这么一个句子我曾印象深刻：“The impact that technologies have had on our daily life and society in general, is undeniable.”这是大学英语精读教材里某一篇文章中的句子。我当时愣了一下，想，要是让我来表达“什么什么的影响”，很可能用的就是“the influence of 什么什么”，而不是用“impact”这个词，也不会用一个从句，更不会用那么个时态——想想是有道理的，这位作者在表达的是：“一直以来，技术对……的影响”，其中的“一直以来”，是用现在完成时表达的。也就是说，这句话里有很多对于我来说，英语与母语非一一对应的地方。</p>
<p>于是，我就拿出我的惯用伎俩：</p>
<p>把这个于我来讲“非一一对应”的句子做个标记；<br>把它摘抄到笔记本上；<br>再想想这个句子能否当作替换练习模板——即，看看我能不能把这个句子变成这样一个“填空”句型：<br>The impact that <em> have/has had on </em> , is undeniable.<br>之后，我就可以不停地用这个“模板”造句了：</p>
<p>The impact that the internet has had on every respect of our daily life, is undeniable.<br>The impact that parents and their attitudes have had on their children’s personality development, is undeniable.<br>The impact that one’s early education has had on his or her later life, is undeniable.<br>…<br>造上几个句子之后，这种表达法就已经牢牢刻在我的脑子里，可以不加思索地运用了（其实，所谓“地道”也不过就是应该这样学的吧？）。而不再用考虑 “我究竟应该用从句呢？还是要用介词结构？”或者“我究竟是不是应该使用现在完成时呢？”之类必须用各种语法概念才能理顺的问题。其实，类似的手段我曾经在之前的文中演示过：“I have lost my key.”这句话，就可以当作一个模板：“I have lost my _.”；而后反复造句，直至把这种表达法谙熟于心。</p>
<p>我建议学生通读语法书的方法是这样：</p>
<blockquote>
<ol>
<li>逐页浏览；</li>
<li>仔细阅读每一个例句（而那些语法概念能不能完全理解，能不能一次就记住倒在其次）；</li>
<li>判断这个例句的英文表达与中文表达是否相当地“非一一对应”？如果是，则做出标记（要是有“呀，让我用英语表达这个意思，可能说出来的就不是这样了！”的念头的话，就应该做标记了）；</li>
<li>积累到一定数量，就把这类句子摘录出来，做成替换练习模板，反复造句并朗读，直至熟练；</li>
<li>继续浏览；</li>
<li>通读一遍之后，如此这般再反复几次……</li>
</ol>
</blockquote>
<p>那些语法概念并非不重要，只不过我们并不需要像患了强迫症一般非要一次就把它们全部彻底搞定。在反复的浏览过程中，那些曾经艰涩的概念大多都会潜移默化地被吸收，不再那么难缠。并且，有些概念就算搞不清，其实也无所谓。例如“独立主格结构”这个概念，不了解又怎么样呢？只要遇到那样的句子之时能够正确理解其意（因为做过好几遍那么多例句的替换练习）不就可以了么？有些人好不容易搞清楚了“独立主格结构”这个概念，换一本语法书（比如Collins Cobuild的《英语语法大全》）之后，才发现那个概念在这些书里叫另外一个名字，于是就痛苦不堪……</p>
<p>别想了，开始行动吧。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_081559.jpg" alt=""></p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_082227.jpg" alt=""></p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_110139.jpg" alt=""></p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_110422.jpg" alt=""></p>
<h2 id="英语语法超图解"><a href="#英语语法超图解" class="headerlink" title="英语语法超图解"></a>英语语法超图解</h2><p>我们都相信学习是必须的，是生活中每天都要做的事。但正因为如此，学习应该是一件轻松且容易达成的事，而不是一件一想到就痛苦而难以坚持的事。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_082418.jpg" alt=""></p>
<blockquote>
<p>英语语法，指英语中语言的结构规律，主要包括“单词、短语、句型和语法”四个要素。以下就根据这四个要素做细节说明：</p>
</blockquote>
<h3 id="1-单词"><a href="#1-单词" class="headerlink" title="1. 单词"></a>1. 单词</h3><p>英语单词依据在句子中的作用，可分为八大词类，分别为名词、代词、形容词、动词、副词、介词、连词和感叹词。</p>
<h4 id="1-1-名词"><a href="#1-1-名词" class="headerlink" title="1-1. 名词"></a>1-1. 名词</h4><p>表示人、地、事、物等的词。名词分为可数名词和不可数名词，可数名词前要加冠词a/an，不可数名词前要加定冠词the，例如：a book,an apple, the air。</p>
<h4 id="1-2-代名词"><a href="#1-2-代名词" class="headerlink" title="1-2. 代名词"></a>1-2. 代名词</h4><p>表示代替名词或名词短语的形式用词。代名词可以分为：<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_082656.jpg" alt=""></p>
<h4 id="1-3-形容词"><a href="#1-3-形容词" class="headerlink" title="1-3. 形容词"></a>1-3. 形容词</h4><p>用来修饰名词或代词的词。形容词可分为：<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_083205.jpg" alt=""></p>
<h4 id="1-4-动词"><a href="#1-4-动词" class="headerlink" title="1-4. 动词"></a>1-4. 动词</h4><p>是用以表示动作或状态的词，例如：be, go, get, have, run, send等。另外，动词在使用上，要特别注意时态和语态的变化。<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_083321.jpg" alt=""></p>
<h4 id="1-5-副词"><a href="#1-5-副词" class="headerlink" title="1-5. 副词"></a>1-5. 副词</h4><p>可用来修饰动词、形容词和其他副词，也可以用来修饰短语。副词分为：<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_083408.jpg" alt=""></p>
<h4 id="1-6-介词"><a href="#1-6-介词" class="headerlink" title="1-6. 介词"></a>1-6. 介词</h4><p>通常放在名词和代词之前，用来表示名词或代词和其前面词的关系。介词从形式上来分有四种：<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_083455.jpg" alt=""></p>
<h4 id="1-7-连词"><a href="#1-7-连词" class="headerlink" title="1-7. 连词"></a>1-7. 连词</h4><p>用来连接单词、短语、从句和句子的词。连词分为：<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_083541.jpg" alt=""></p>
<h4 id="1-8-感叹词"><a href="#1-8-感叹词" class="headerlink" title="1-8. 感叹词"></a>1-8. 感叹词</h4><p>用以表示强烈的情绪和感情的一种声音或叫喊。例如：Hello! Hurrah! Hi! Oh!等等。</p>
<h3 id="2-短语"><a href="#2-短语" class="headerlink" title="2.短语"></a>2.短语</h3><p>短语是由两个或两个以上的英语单词所组合的词语，不包含主语和动词，可以构成句子的一部分，也可以用来当名词、形容词和副词使用。短语主要分为以下五大种类：<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_084025.jpg" alt=""></p>
<h3 id="3-句型"><a href="#3-句型" class="headerlink" title="3. 句型"></a>3. 句型</h3><p>句子是按照一定的语法规律组成的，表达一个完整的意义。一个句子一般由两部分构成，即主语部分和动词部分，这两部分也是句子中最主要的成分。而句子的次要成分包括宾语，形容词，副词，主语补语等。首先介绍一下，在一般语法说明中容易使用到的英语缩写：</p>
<p>S subject 主语</p>
<p>V verb 动词</p>
<ol>
<li><p>vt. transitive verb 及物动词<br>Verbs that take object are called transitive verbs.</p>
</li>
<li><p>vi. intransitive verb不及物动词</p>
</li>
</ol>
<p>O object宾语</p>
<ol>
<li>d.o. direct object 直接宾语</li>
<li>i.o. indirect object 间接宾语</li>
</ol>
<p>C complement 补语</p>
<ol>
<li>S.C subject complement主语补语</li>
<li>O.C object complement宾语补语</li>
</ol>
<p>以下为英语五大基本句型：</p>
<h4 id="句型01：S＋V（主语＋不及物动词）"><a href="#句型01：S＋V（主语＋不及物动词）" class="headerlink" title="句型01：S＋V（主语＋不及物动词）"></a>句型01：S＋V（主语＋不及物动词）</h4><blockquote>
<p>Everybody laughed</p>
</blockquote>
<h4 id="句型02：S＋V＋SC（主语＋系动词＋表语）"><a href="#句型02：S＋V＋SC（主语＋系动词＋表语）" class="headerlink" title="句型02：S＋V＋SC（主语＋系动词＋表语）"></a>句型02：S＋V＋SC（主语＋系动词＋表语）</h4><p>句型02：S＋V＋SC（主语＋系动词＋表语）此结构中的动词常为系动词，例如：look,seem, appear, prove, become, turn, sound, taste,keep, stay…等。</p>
<blockquote>
<p>The girl in red dress looks cute.</p>
</blockquote>
<h4 id="句型03：S＋V＋O（主语＋及物动词＋宾语）"><a href="#句型03：S＋V＋O（主语＋及物动词＋宾语）" class="headerlink" title="句型03：S＋V＋O（主语＋及物动词＋宾语）"></a>句型03：S＋V＋O（主语＋及物动词＋宾语）</h4><blockquote>
<p>Nobody could answer the question.</p>
</blockquote>
<h4 id="句型04：S＋V＋O1＋O2（主语＋双宾动词＋间接宾语＋直接宾语）"><a href="#句型04：S＋V＋O1＋O2（主语＋双宾动词＋间接宾语＋直接宾语）" class="headerlink" title="句型04：S＋V＋O1＋O2（主语＋双宾动词＋间接宾语＋直接宾语）"></a>句型04：S＋V＋O1＋O2（主语＋双宾动词＋间接宾语＋直接宾语）</h4><p>间接宾语通常会是“人”，直接宾语通常会是“物品”。</p>
<blockquote>
<p>Mary lent me her car.</p>
</blockquote>
<h4 id="句型05：-S＋V＋O＋OC（主语＋使役动词＋宾语＋宾语补语）"><a href="#句型05：-S＋V＋O＋OC（主语＋使役动词＋宾语＋宾语补语）" class="headerlink" title="句型05： S＋V＋O＋OC（主语＋使役动词＋宾语＋宾语补语）"></a>句型05： S＋V＋O＋OC（主语＋使役动词＋宾语＋宾语补语）</h4><p>They named this cat “Tiger”.</p>
<h3 id="4-语法"><a href="#4-语法" class="headerlink" title="4. 语法"></a>4. 语法</h3><p>英语语法有一定的规则，它是客观存在的，而不是语言学家规定的。语言学家只是对其进行归纳、整理，并选择恰当的方式把它们描述出来。学习英语语法得注意如下基本规则：</p>
<h4 id="规则01：两个动词是不能连在一起的。"><a href="#规则01：两个动词是不能连在一起的。" class="headerlink" title="规则01：两个动词是不能连在一起的。"></a>规则01：两个动词是不能连在一起的。</h4><blockquote>
<p>I like to play the piano.</p>
</blockquote>
<h4 id="规则02：如果一定要同时用两个动词，第二个动词的前面必须加“to”，或是加上“-ing”。"><a href="#规则02：如果一定要同时用两个动词，第二个动词的前面必须加“to”，或是加上“-ing”。" class="headerlink" title="规则02：如果一定要同时用两个动词，第二个动词的前面必须加“to”，或是加上“-ing”。"></a>规则02：如果一定要同时用两个动词，第二个动词的前面必须加“to”，或是加上“-ing”。</h4><blockquote>
<p>I like to swim./I like swimming.</p>
</blockquote>
<h4 id="规则03：主语如果是第三人称单数，现在时中的动词必须加“s”"><a href="#规则03：主语如果是第三人称单数，现在时中的动词必须加“s”" class="headerlink" title="规则03：主语如果是第三人称单数，现在时中的动词必须加“s”"></a>规则03：主语如果是第三人称单数，现在时中的动词必须加“s”</h4><blockquote>
<p>She sings very well.</p>
</blockquote>
<h4 id="规则04：绝大多数的否定句，不能直接加-not，必须加上助动词或使役动词动词。"><a href="#规则04：绝大多数的否定句，不能直接加-not，必须加上助动词或使役动词动词。" class="headerlink" title="规则04：绝大多数的否定句，不能直接加 not，必须加上助动词或使役动词动词。"></a>规则04：绝大多数的否定句，不能直接加 not，必须加上助动词或使役动词动词。</h4><blockquote>
<p>I don’t want to go.</p>
</blockquote>
<h4 id="规则05：-在不定式“to”的后面，必须用动词原形"><a href="#规则05：-在不定式“to”的后面，必须用动词原形" class="headerlink" title="规则05： 在不定式“to”的后面，必须用动词原形"></a>规则05： 在不定式“to”的后面，必须用动词原形</h4><blockquote>
<p>She wants to become a good teacher.</p>
</blockquote>
<h4 id="规则06：英语中有所谓的助动词。英语中有很多助动词，除了-do外，can-may-might-would-will-must-也是助动词。"><a href="#规则06：英语中有所谓的助动词。英语中有很多助动词，除了-do外，can-may-might-would-will-must-也是助动词。" class="headerlink" title="规则06：英语中有所谓的助动词。英语中有很多助动词，除了 do外，can, may, might, would,will, must 也是助动词。"></a>规则06：英语中有所谓的助动词。英语中有很多助动词，除了 do外，can, may, might, would,will, must 也是助动词。</h4><blockquote>
<p>You must practice your English every day.</p>
</blockquote>
<h4 id="规则07：大部分的英语问句都要包含助动词"><a href="#规则07：大部分的英语问句都要包含助动词" class="headerlink" title="规则07：大部分的英语问句都要包含助动词"></a>规则07：大部分的英语问句都要包含助动词</h4><blockquote>
<p>Do you like playing basketball?（你喜欢打篮球吗？）<br>How many books do you have?（你有多少本书？）</p>
</blockquote>
<h4 id="规则08：特殊动词随主语变化，另外，英语中有些动词因主语不同而有所变形，例如-be-动词。"><a href="#规则08：特殊动词随主语变化，另外，英语中有些动词因主语不同而有所变形，例如-be-动词。" class="headerlink" title="规则08：特殊动词随主语变化，另外，英语中有些动词因主语不同而有所变形，例如 be 动词。"></a>规则08：特殊动词随主语变化，另外，英语中有些动词因主语不同而有所变形，例如 be 动词。</h4><blockquote>
<p>I am a good student.（我是一位好学生。）<br>She has a big heart.（她有宽大的胸襟。）<br>They have been to Paris.（他们去过巴黎。）</p>
</blockquote>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_093109.jpg" alt=""></p>
<h3 id="一般现在时-vs-一般过去时"><a href="#一般现在时-vs-一般过去时" class="headerlink" title="一般现在时 vs. 一般过去时"></a>一般现在时 vs. 一般过去时</h3><p>一般现在时表示经常性、习惯性的动作、行为或者现在的某种状况；一般过去时表示过去某一时间内发生的动作或存在的状态，常与表示过去的时间副词连用，例如：yesterday, last night/week, amonth ago, in 1990’s等。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_093249.jpg" alt=""></p>
<h3 id="将来时"><a href="#将来时" class="headerlink" title="将来时"></a>将来时</h3><p>将来时表示将来某个时间要发生的动作或存在的状态，也表示将来经常或者重复发生的动作，常与表示将来的时间副词连用，例如：tomorrow,soon, next week, this afternoon…。</p>
<h3 id="现在进行时vs-过去进行时vs-将来进行时"><a href="#现在进行时vs-过去进行时vs-将来进行时" class="headerlink" title="现在进行时vs.过去进行时vs.将来进行时"></a>现在进行时vs.过去进行时vs.将来进行时</h3><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_093444.jpg" alt=""></p>
<h4 id="进行时的句型构成"><a href="#进行时的句型构成" class="headerlink" title="进行时的句型构成"></a>进行时的句型构成</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_093544.jpg" alt=""></p>
<h4 id="进行时的使用时机"><a href="#进行时的使用时机" class="headerlink" title="进行时的使用时机"></a>进行时的使用时机</h4><h3 id="现在完成时vs-过去完成时vs-将来完成时"><a href="#现在完成时vs-过去完成时vs-将来完成时" class="headerlink" title="现在完成时vs.过去完成时vs.将来完成时"></a>现在完成时vs.过去完成时vs.将来完成时</h3><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_093739.jpg" alt=""></p>
<h4 id="完成时的句型构成"><a href="#完成时的句型构成" class="headerlink" title="完成时的句型构成"></a>完成时的句型构成</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_094053.jpg" alt=""></p>
<h4 id="完成时的使用时机"><a href="#完成时的使用时机" class="headerlink" title="完成时的使用时机"></a>完成时的使用时机</h4><h3 id="完成进行时（现在-vs-过去-vs-将来）"><a href="#完成进行时（现在-vs-过去-vs-将来）" class="headerlink" title="完成进行时（现在 vs. 过去 vs. 将来）"></a>完成进行时（现在 vs. 过去 vs. 将来）</h3><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_094030.jpg" alt=""></p>
<h4 id="完成时的句型构成-1"><a href="#完成时的句型构成-1" class="headerlink" title="完成时的句型构成"></a>完成时的句型构成</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_094906.jpg" alt=""></p>
<h4 id="完成时的使用时机-1"><a href="#完成时的使用时机-1" class="headerlink" title="完成时的使用时机"></a>完成时的使用时机</h4><h3 id="形容词（含比较级-amp-最高级）"><a href="#形容词（含比较级-amp-最高级）" class="headerlink" title="形容词（含比较级&amp;最高级）"></a>形容词（含比较级&amp;最高级）</h3><p>形容词主要用来修饰名词或不定代词，表示人或事物的性质、状态和特征的词。形容词在句中作定语、补语及修饰从句等。<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_095854.jpg" alt=""></p>
<h4 id="形容词的用法"><a href="#形容词的用法" class="headerlink" title="形容词的用法"></a>形容词的用法</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_100452.jpg" alt=""></p>
<h4 id="形容词的比较级、最高级"><a href="#形容词的比较级、最高级" class="headerlink" title="形容词的比较级、最高级"></a>形容词的比较级、最高级</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_101509.jpg" alt=""></p>
<h3 id="副词（含比较级-amp-最高级）"><a href="#副词（含比较级-amp-最高级）" class="headerlink" title="副词（含比较级&amp;最高级）"></a>副词（含比较级&amp;最高级）</h3><p>副词主要用来修饰动词、形容词、其他副词或全句，用来说明时间、地点、程度、方式等概念的词。副词在句中主要作状语。副词可以分为时间副词、地点副词、方式副词、程度副词、频率副词等。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_102148.jpg" alt=""></p>
<h3 id="动词短语（不可分离vs-可分离）"><a href="#动词短语（不可分离vs-可分离）" class="headerlink" title="动词短语（不可分离vs.可分离）"></a>动词短语（不可分离vs.可分离）</h3><p>所谓的动词短语，是指由动词加上介词∕副词所组成的短语。其短语意义有时与原先单独动词的字义不同，并且有多种字义。英语中的动词短语依照结构分为两种：不可分离的动词短语（动词＋介词），及可分离的动词短语（动词＋副词）。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_102328.jpg" alt=""></p>
<h3 id="系动词vs-感官动词"><a href="#系动词vs-感官动词" class="headerlink" title="系动词vs.感官动词"></a>系动词vs.感官动词</h3><p>系动词是用来补充描述和指明事物的，常用形容词来补充说明主语的不足，使得整句意思更完整，常用的系动词有seem, appear, look, feel,sound ,taste, become, get ,turn, smell, grow等；</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_102444.jpg" alt=""><br>感官动词是表示人的感觉的动词, 常见的感官动词有feel, hear, sound ,see, taste, smell, look at等。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_102859.jpg" alt=""></p>
<h3 id="动名词与不定式"><a href="#动名词与不定式" class="headerlink" title="动名词与不定式"></a>动名词与不定式</h3><p>当一个句子中出现两个动词时，通常会用两种形式呈现。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_103306.jpg" alt=""><br>一、动名词：动词＋ing→具有动词及名词的特性，在句子中作为名词使用。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_103332.jpg" alt=""><br>二、不定式：to＋动词原形→具有名词、形容</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_103445.jpg" alt=""></p>
<h3 id="连词"><a href="#连词" class="headerlink" title="连词"></a>连词</h3><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_103528.jpg" alt=""></p>
<h3 id="介词"><a href="#介词" class="headerlink" title="介词"></a>介词</h3><p>介词。是用来表明单词与单词之间的各种关系，主要是用来引出具有名词作用的单词，例如名词、动名词、代名词及名词从句。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_103848.jpg" alt=""></p>
<h3 id="短语"><a href="#短语" class="headerlink" title="短语"></a>短语</h3><p>短语是指由两个或两个以上的英语单词所组合的词语，其中不包含主语和动词，连在一起具有类似一种词类作用的字群。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_104033.jpg" alt=""></p>
<h3 id="虚拟语气"><a href="#虚拟语气" class="headerlink" title="虚拟语气"></a>虚拟语气</h3><p>虚拟语气用来表示说的话不是事实或者是不可能发生的情况，而是一种愿望、建议、假设。虚拟语气有三种基本类型：与现在事实相反，与过去事实相反，与将来事实相反。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_105324.jpg" alt=""></p>
<h3 id="被动语态"><a href="#被动语态" class="headerlink" title="被动语态"></a>被动语态</h3><p>英语中有两种语态：主动语态和被动语态。主动语态表示主语是动作的执行者。被动语态表示主语是动作的承受者，即行为动作的物件。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_105418.jpg" alt=""></p>
<h3 id="附加问句"><a href="#附加问句" class="headerlink" title="附加问句"></a>附加问句</h3><h3 id="关系代名词"><a href="#关系代名词" class="headerlink" title="关系代名词"></a>关系代名词</h3><p>关系代名词是指兼具代名词与连词双重作用的代名词。关系代名词所代表的名词或代名词就做“先行词”，句中该用何种代名词视先行词的种类而定。关系代名词的人称、格、数应该与先行词一致。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_105518.jpg" alt=""></p>
<h4 id="普通关系代名词"><a href="#普通关系代名词" class="headerlink" title="普通关系代名词"></a>普通关系代名词</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_105601.jpg" alt=""></p>
<h4 id="表示人和物品的关系代名词－that"><a href="#表示人和物品的关系代名词－that" class="headerlink" title="表示人和物品的关系代名词－that"></a>表示人和物品的关系代名词－that</h4><p>关系代名词that 既可以表示人又可以表示物，可以做主格或宾格，不能为所有格。有些场合关系代名词只能用 that，有的场合则不能用that。</p>
<p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_105828.jpg" alt=""></p>
<h3 id="从句（名词从句、形容词从句、副词从句……）"><a href="#从句（名词从句、形容词从句、副词从句……）" class="headerlink" title="从句（名词从句、形容词从句、副词从句……）"></a>从句（名词从句、形容词从句、副词从句……）</h3><h3 id="倒装句"><a href="#倒装句" class="headerlink" title="倒装句"></a>倒装句</h3><p>英语句子通常有两种语序：一种是自然语序，一种是倒装语序。将谓语的一部分或全部置于主语之前的语序叫做倒装语序。<br><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_105856.jpg" alt=""></p>
<h4 id="全部倒装"><a href="#全部倒装" class="headerlink" title="全部倒装"></a>全部倒装</h4><p><img src="http://oo851m2j1.bkt.clouddn.com/2017-04-11_110004.jpg" alt=""></p>
<h4 id="部分倒装"><a href="#部分倒装" class="headerlink" title="部分倒装"></a>部分倒装</h4><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="http://zhibimo.com/read/xiaolai/a-new-english-reading-handbook/" target="_blank" rel="external">a-new-english-reading-handbook</a><br>[3]<a href="http://www.duokan.com/reader/www/app.html?id=96b2fcc60e3b442595c87aa4f289908c" target="_blank" rel="external">英语语法超图解</a><br>[4]<a href="http://www.duokan.com/reader/www/app.html?id=151c181f133e4bf795835e5f05e6780d" target="_blank" rel="external">零基础英语语法</a><br>[5]<a href="http://www.duokan.com/reader/www/app.html?id=47e26632bb224d89891b2c58590dad01" target="_blank" rel="external">新东方·英语语法新思维</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/grammar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Grammar is the rules of English.&lt;br&gt;No grammar , no sentence.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要了解语法的本质。本质上来看，语法并不是“规定你应该怎么说”，而是“尽量”“系统地”解释“人们为什么普遍这么说”。所以，不能把语法规则当作数学公式，语法规则并不保证按照它拼凑出来的句子一定有意义并且正确。&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://aisee.me/categories/English/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Grammar" scheme="http://aisee.me/tags/Grammar/"/>
    
  </entry>
  
  <entry>
    <title>My Using of English</title>
    <link href="http://aisee.me/2017/04/11/English/my-using-of-english/"/>
    <id>http://aisee.me/2017/04/11/English/my-using-of-english/</id>
    <published>2017-04-10T23:02:06.000Z</published>
    <updated>2017-04-11T00:19:17.403Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/language-v-population.png" alt=""><br>Top Languages of the Internet, Today and Tomorrow<sup>[1]</sup></p>
<blockquote>
<p>Learning. Teaching. Using. Enjoying English!</p>
</blockquote>
<p>Whether it’s easy or difficult , just do it right now.</p>
<a id="more"></a>
<h2 id="Vocabulary"><a href="#Vocabulary" class="headerlink" title="Vocabulary"></a>Vocabulary</h2><p>One more, one more<br>Accumulation<br>Review</p>
<h2 id="Grammar"><a href="#Grammar" class="headerlink" title="Grammar"></a>Grammar</h2><p>Deliberate Learn and Practice</p>
<h2 id="Sentence"><a href="#Sentence" class="headerlink" title="Sentence"></a>Sentence</h2><p>Daily Sentence<br>Translation of Quotes</p>
<h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><p>Search the Info<br>Download the Files<br>Use the tools</p>
<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><p>Improve Reading Skill<br>Read the Doc(API…)<br>Read the Code<br>Write the Code</p>
<h2 id="Write-Blog"><a href="#Write-Blog" class="headerlink" title="Write Blog"></a>Write Blog</h2><p>Improve Writing Skill</p>
<h2 id="Smartphone"><a href="#Smartphone" class="headerlink" title="Smartphone"></a>Smartphone</h2><p>Switch the Language of OS to English</p>
<h2 id="Notebook"><a href="#Notebook" class="headerlink" title="Notebook"></a>Notebook</h2><p>Switch the Language of OS to English</p>
<h2 id="Music"><a href="#Music" class="headerlink" title="Music"></a>Music</h2><p>Taste the fabulous Music</p>
<h2 id="Movie"><a href="#Movie" class="headerlink" title="Movie"></a>Movie</h2><p>Appreciate the wonderful Movie</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="https://unbabel.com/blog/top-languages-of-the-internet/#" target="_blank" rel="external">Top Languages of the Internet, Today and Tomorrow</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/language-v-population.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;Top Languages of the Internet, Today and Tomorrow&lt;sup&gt;[1]&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Learning. Teaching. Using. Enjoying English!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Whether it’s easy or difficult , just do it right now.&lt;/p&gt;
    
    </summary>
    
      <category term="English" scheme="http://aisee.me/categories/English/"/>
    
    
      <category term="Smartphone" scheme="http://aisee.me/tags/Smartphone/"/>
    
      <category term="Notebook" scheme="http://aisee.me/tags/Notebook/"/>
    
      <category term="Write Blog" scheme="http://aisee.me/tags/Write-Blog/"/>
    
      <category term="Program" scheme="http://aisee.me/tags/Program/"/>
    
      <category term="Music" scheme="http://aisee.me/tags/Music/"/>
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>Support the Feature of Searching</title>
    <link href="http://aisee.me/2017/04/11/Program/Android/MyApp/search-my-blog/"/>
    <id>http://aisee.me/2017/04/11/Program/Android/MyApp/search-my-blog/</id>
    <published>2017-04-10T22:20:06.000Z</published>
    <updated>2017-04-10T22:57:47.916Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-11_062124.jpg" alt=""></p>
<blockquote>
<p>Search the F**king Web<br>Read the F**king Manual<br>Keep Deliberate Practice</p>
</blockquote>
 <a id="more"></a>
<h2 id="Offical-Web-Site"><a href="#Offical-Web-Site" class="headerlink" title="Offical Web Site"></a>Offical Web Site</h2><p>Find the Same Problem<br><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-11_064554.jpg" alt=""></p>
<h2 id="Analysis-of-My-Blog"><a href="#Analysis-of-My-Blog" class="headerlink" title="Analysis of My Blog"></a>Analysis of My Blog</h2><p>Search.xml parse error<br><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-11_064611.jpg" alt=""></p>
<h2 id="Correct-the-Error"><a href="#Correct-the-Error" class="headerlink" title="Correct the Error"></a>Correct the Error</h2><p>Delete the error part<br><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-11_064803.jpg" alt=""></p>
<h2 id="Display-the-Search-Widget"><a href="#Display-the-Search-Widget" class="headerlink" title="Display the Search Widget"></a>Display the Search Widget</h2><p><img src="http://om8nmvpn9.bkt.clouddn.com/2017-04-11_064919.jpg" alt=""></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p> [1]<a href="https://www.v2ex.com/t/298727" target="_blank" rel="external">Hexo next 主题的 local search 功能失效，点击搜索链接无法弹出叠加层</a><br> [2]<a href="https://github.com/PaicHyperionDev/hexo-generator-search" target="_blank" rel="external">hexo-generator-search</a><br> [3]<a href="https://www.npmjs.com/package/hexo-generator-searchdb" target="_blank" rel="external">hexo-generator-searchdb</a><br> [4]<a href="https://github.com/iissnan/hexo-theme-next/issues/1165" target="_blank" rel="external">点击搜索（local search）没反应啊啊啊 #1165</a><br> [5]<a href="[修正]Local search plugin update #1168">https://github.com/iissnan/hexo-theme-next/issues/1168</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/2017-04-11_062124.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Search the F**king Web&lt;br&gt;Read the F**king Manual&lt;br&gt;Keep Deliberate Practice&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Chrome" scheme="http://aisee.me/tags/Chrome/"/>
    
      <category term="Hexo" scheme="http://aisee.me/tags/Hexo/"/>
    
      <category term="Next" scheme="http://aisee.me/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>UI</title>
    <link href="http://aisee.me/2017/04/10/Program/Android/MyApp/ui/"/>
    <id>http://aisee.me/2017/04/10/Program/Android/MyApp/ui/</id>
    <published>2017-04-10T13:12:06.000Z</published>
    <updated>2017-04-10T13:38:42.751Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170410-210933.png" alt=""></p>
<blockquote>
<p>Roll with the punches<br>Down to earth, step by step towards the ultimate goal</p>
</blockquote>
 <a id="more"></a>
<h2 id="Music"><a href="#Music" class="headerlink" title="Music"></a>Music</h2><p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170410-210750.png" alt=""></p>
<h2 id="Usage-Statistics"><a href="#Usage-Statistics" class="headerlink" title="Usage Statistics"></a>Usage Statistics</h2><p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170410-210856.png" alt=""></p>
<h2 id="Small-Tools"><a href="#Small-Tools" class="headerlink" title="Small Tools"></a>Small Tools</h2><p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170410-210833.png" alt=""></p>
<h2 id="Weather"><a href="#Weather" class="headerlink" title="Weather"></a>Weather</h2><p><img src="http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170410-210923.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/Screenshot_20170410-210933.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Roll with the punches&lt;br&gt;Down to earth, step by step towards the ultimate goal&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Application" scheme="http://aisee.me/tags/Application/"/>
    
      <category term="Milestone" scheme="http://aisee.me/tags/Milestone/"/>
    
  </entry>
  
  <entry>
    <title>Analysis of Android Studio Debug Problem</title>
    <link href="http://aisee.me/2017/04/10/Program/Android/analysis-of-debug-problem/"/>
    <id>http://aisee.me/2017/04/10/Program/Android/analysis-of-debug-problem/</id>
    <published>2017-04-10T02:50:06.000Z</published>
    <updated>2017-04-10T02:52:50.640Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/android_debug_bridge-600x338.png" alt=""></p>
<ol>
<li>Fetch the log info</li>
<li>Analyze the crash info</li>
<li>Search the Google/Stack Overflow</li>
<li>Summarize the process</li>
</ol>
<a id="more"></a>
<h2 id="Fetch-the-log-info"><a href="#Fetch-the-log-info" class="headerlink" title="Fetch the log info"></a>Fetch the log info</h2><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">--------- beginning of crash</div><div class="line">04-10 10:03:48.492 7348-7355/me.ipcreator.ui.debug A/libc: Fatal signal 6 (SIGABRT), code -6 in tid 7355 (JDWP)</div><div class="line"></div><div class="line">                                                           [ 04-10 10:03:48.493  1282: 1282 W/         ]</div><div class="line">                                                           debuggerd: handling request: pid=7348 uid=10100 gid=10100 tid=7355</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: Build fingerprint: 'Android/sdk_google_phone_x86/generic_x86:7.1.1/NYC/3756122:userdebug/test-keys'</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: Revision: '0'</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: ABI: 'x86'</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: pid: 7348, tid: 7355, name: JDWP  &gt;&gt;&gt; me.ipcreator.ui.debug &lt;&lt;&lt;</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: signal 6 (SIGABRT), code -6 (SI_TKILL), fault addr --------</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG: Abort message: 'art/runtime/jdwp/jdwp_event.cc:661] Check failed: Thread::Current() != GetDebugThread() (Thread::Current()=0xac58f400, GetDebugThread()=0xac58f400) Expected event thread'</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG:     eax 00000000  ebx 00001cb4  ecx 00001cbb  edx 00000006</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG:     esi b12d0978  edi b12d0920</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG:     xcs 00000073  xds 0000007b  xes 0000007b  xfs 0000003b  xss 0000007b</div><div class="line">04-10 10:03:48.551 7366-7366/? A/DEBUG:     eip b6366424  ebp b12ceac8  esp b12cea6c  flags 00000296</div><div class="line">04-10 10:03:48.555 7366-7366/? A/DEBUG: backtrace:</div><div class="line">04-10 10:03:48.555 7366-7366/? A/DEBUG:     #00 pc ffffe424  [vdso:b6366000] (__kernel_vsyscall+16)</div><div class="line">04-10 10:03:48.555 7366-7366/? A/DEBUG:     #01 pc 0007a03c  /system/lib/libc.so (tgkill+28)</div><div class="line">04-10 10:03:48.555 7366-7366/? A/DEBUG:     #02 pc 00075885  /system/lib/libc.so (pthread_kill+85)</div><div class="line">04-10 10:03:48.555 7366-7366/? A/DEBUG:     #03 pc 0002785a  /system/lib/libc.so (raise+42)</div><div class="line">04-10 10:03:48.555 7366-7366/? A/DEBUG:     #04 pc 0001ee36  /system/lib/libc.so (abort+86)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #05 pc 005183c5  /system/lib/libart.so (_ZN3art7Runtime5AbortEPKc+565)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #06 pc 0011a5b3  /system/lib/libart.so (_ZN3art10LogMessageD1Ev+1747)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #07 pc 0039b74d  /system/lib/libart.so (_ZN3art4JDWP9JdwpState24AcquireJdwpTokenForEventEy+733)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #08 pc 0039acf3  /system/lib/libart.so (_ZN3art4JDWP9JdwpState29SendRequestAndPossiblySuspendEPNS0_9ExpandBufENS0_17JdwpSuspendPolicyEy+211)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #09 pc 003a0ec9  /system/lib/libart.so (_ZN3art4JDWP9JdwpState16PostClassPrepareEPNS_6mirror5ClassE+1705)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #10 pc 001c2a85  /system/lib/libart.so (_ZN3art3Dbg16PostClassPrepareEPNS_6mirror5ClassE+53)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #11 pc 001689fc  /system/lib/libart.so (_ZN3art11ClassLinker11DefineClassEPNS_6ThreadEPKcjNS_6HandleINS_6mirror11ClassLoaderEEERKNS_7DexFileERKNS9_8ClassDefE+1116)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #12 pc 001683e9  /system/lib/libart.so (_ZN3art11ClassLinker26FindClassInPathClassLoaderERNS_33ScopedObjectAccessAlreadyRunnableEPNS_6ThreadEPKcjNS_6HandleINS_6mirror11ClassLoaderEEEPPNS8_5ClassE+1865)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #13 pc 0016979b  /system/lib/libart.so (_ZN3art11ClassLinker9FindClassEPNS_6ThreadEPKcNS_6HandleINS_6mirror11ClassLoaderEEE+1163)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #14 pc 005a7a7a  /system/lib/libart.so (_ZN3art8verifier12RegTypeCache12ResolveClassEPKcPNS_6mirror11ClassLoaderE+186)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #15 pc 005a742d  /system/lib/libart.so (_ZN3art8verifier12RegTypeCache4FromEPNS_6mirror11ClassLoaderEPKcb+701)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #16 pc 005a70fd  /system/lib/libart.so (_ZN3art8verifier12RegTypeCache14FromDescriptorEPNS_6mirror11ClassLoaderEPKcb+77)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #17 pc 005862ed  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier26ResolveClassAndCheckAccessEj+173)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #18 pc 005960c4  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier27ResolveMethodAndCheckAccessEjNS0_10MethodTypeE+84)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #19 pc 0059265c  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier20VerifyInvocationArgsEPKNS_11InstructionENS0_10MethodTypeEb+76)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #20 pc 00587e02  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier25CodeFlowVerifyInstructionEPj+4914)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #21 pc 00585f96  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier20CodeFlowVerifyMethodEv+358)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #22 pc 00581c9d  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier14VerifyCodeFlowEv+973)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #23 pc 0057da56  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier6VerifyEv+854)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #24 pc 0057c742  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier12VerifyMethodEPNS_6ThreadEjPKNS_7DexFileENS_6HandleINS_6mirror8DexCacheEEENS7_INS8_11ClassLoaderEEEPKNS4_8ClassDefEPKNS4_8CodeItemEPNS_9ArtMethodEjPNS_17CompilerCallbacksEbNS_11LogSeverityEbPNSt3__112basic_stringIcNSO_11char_traitsIcEENSO_9allocatorIcEEEE+226)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #25 pc 0057c1c7  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier13VerifyMethodsILb0EEENS1_11FailureDataEPNS_6ThreadEPNS_11ClassLinkerEPKNS_7DexFileEPKNS8_8ClassDefEPNS_21ClassDataItemIteratorENS_6HandleINS_6mirror8DexCacheEEENSG_INSH_11ClassLoaderEEEPNS_17CompilerCallbacksEbNS_11LogSeverityEbPNSt3__112basic_stringIcNSP_11char_traitsIcEENSP_9allocatorIcEEEE+791)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #26 pc 0057b1f9  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier11VerifyClassEPNS_6ThreadEPKNS_7DexFileENS_6HandleINS_6mirror8DexCacheEEENS7_INS8_11ClassLoaderEEEPKNS4_8ClassDefEPNS_17CompilerCallbacksEbNS_11LogSeverityEPNSt3__112basic_stringIcNSJ_11char_traitsIcEENSJ_9allocatorIcEEEE+921)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #27 pc 0057a4b9  /system/lib/libart.so (_ZN3art8verifier14MethodVerifier11VerifyClassEPNS_6ThreadEPNS_6mirror5ClassEPNS_17CompilerCallbacksEbNS_11LogSeverityEPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE+841)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #28 pc 00174386  /system/lib/libart.so (_ZN3art11ClassLinker11VerifyClassEPNS_6ThreadENS_6HandleINS_6mirror5ClassEEENS_11LogSeverityE+2102)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #29 pc 0017a406  /system/lib/libart.so (_ZN3art11ClassLinker15InitializeClassEPNS_6ThreadENS_6HandleINS_6mirror5ClassEEEbb+326)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #30 pc 00158dde  /system/lib/libart.so (_ZN3art11ClassLinker17EnsureInitializedEPNS_6ThreadENS_6HandleINS_6mirror5ClassEEEbb+222)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #31 pc 001b60da  /system/lib/libart.so (_ZN3artL17GetFieldValueImplEyyyPNS_4JDWP9ExpandBufEb+1866)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #32 pc 001b667e  /system/lib/libart.so (_ZN3art3Dbg19GetStaticFieldValueEyyPNS_4JDWP9ExpandBufE+78)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #33 pc 003a4c5d  /system/lib/libart.so (_ZN3art4JDWPL12RT_GetValuesEPNS0_9JdwpStateEPNS0_7RequestEPNS0_9ExpandBufE+141)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #34 pc 003a2ea4  /system/lib/libart.so (_ZN3art4JDWP9JdwpState14ProcessRequestEPNS0_7RequestEPNS0_9ExpandBufEPb+1044)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #35 pc 003ab570  /system/lib/libart.so (_ZN3art4JDWP9JdwpState12HandlePacketEv+192)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #36 pc 00678df3  /system/lib/libart.so (_ZN3art4JDWP12JdwpAdbState15ProcessIncomingEv+1139)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #37 pc 003ab9d1  /system/lib/libart.so (_ZN3art4JDWP9JdwpState3RunEv+593)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #38 pc 003aae50  /system/lib/libart.so (_ZN3art4JDWPL15StartJdwpThreadEPv+48)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #39 pc 00074fe2  /system/lib/libc.so (_ZL15__pthread_startPv+210)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #40 pc 0002029e  /system/lib/libc.so (__start_thread+30)</div><div class="line">04-10 10:03:48.556 7366-7366/? A/DEBUG:     #41 pc 0001e076  /system/lib/libc.so (__bionic_clone+70)</div><div class="line">04-10 10:03:48.863 1607-7371/system_process W/ActivityManager:   Force finishing activity me.ipcreator.ui.debug/org.ipcreator.ui.MainActivity</div></pre></td></tr></table></figure>
<h2 id="Analyze-the-crash-info"><a href="#Analyze-the-crash-info" class="headerlink" title="Analyze the crash info"></a>Analyze the crash info</h2><blockquote>
<p>04-10 10:03:48.551 7366-7366/? A/DEBUG: Abort message: ‘art/runtime/jdwp/jdwp_event.cc:661] Check failed: Thread::Current() != GetDebugThread() (Thread::Current()=0xac58f400, GetDebugThread()=0xac58f400) Expected event thread’</p>
</blockquote>
<h2 id="Search-the-Google-Stack-Overflow"><a href="#Search-the-Google-Stack-Overflow" class="headerlink" title="Search the Google/Stack Overflow"></a>Search the Google/Stack Overflow</h2><p>Problem could be related with Android version 7.x, i removed all the breakpoints in nested functions and it worked, tested with Android version 6.0 too, and it is working without problem.</p>
<p>According to google developers team response, it was fixed on 12/1/2016 and will be applied in next release.</p>
<p>In my case i had to disable Instant Run. It seems like Instant Run has all sorts of side effects and this can be one of them.<br>Note, in Android Studio, the is under File -&gt; Settings -&gt; Build, Execution, Deployment -&gt; Instant Run</p>
<h2 id="Summarize-the-process"><a href="#Summarize-the-process" class="headerlink" title="Summarize the process"></a>Summarize the process</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://stackoverflow.com/questions/40618803/android-app-crashes-when-launched-in-debug-mode" target="_blank" rel="external">Android app crashes when launched in debug mode</a><br><a href="https://code.google.com/p/android/issues/detail?id=227513" target="_blank" rel="external"><br>Issue 227513:    art/runtime/jdwp/jdwp_event.cc:661] Check failed: Thread::Current() != GetDebugThread() (Thread::Current()=0x7ffeecc19400, GetDebugThread()=0x7ffeecc19400) Expected event thread</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/android_debug_bridge-600x338.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fetch the log info&lt;/li&gt;
&lt;li&gt;Analyze the crash info&lt;/li&gt;
&lt;li&gt;Search the Google/Stack Overflow&lt;/li&gt;
&lt;li&gt;Summarize the process&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Debug" scheme="http://aisee.me/tags/Debug/"/>
    
      <category term="Android Studio" scheme="http://aisee.me/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Become Your Master of Life</title>
    <link href="http://aisee.me/2017/04/09/MyView/to-be-the-master-of-yourself/"/>
    <id>http://aisee.me/2017/04/09/MyView/to-be-the-master-of-yourself/</id>
    <published>2017-04-09T11:26:06.000Z</published>
    <updated>2017-04-09T11:47:43.960Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/masteringlifelogo-800.jpg" alt=""></p>
<blockquote>
<p>Master of your brain<br>Master of your emotion<br>Master of your mind<br>Master of your action<br>Master of your habit<br>Master of your life</p>
</blockquote>
<ol>
<li>Keep Deliberate Practice Day by Day.</li>
<li>Break time-consuming tasks into smaller tasks and work on them one at a time.</li>
<li>Learn and Organize more Basic  Concepts.</li>
<li>Master more meta skills.</li>
</ol>
<a id="more"></a>
<h2 id="Brain"><a href="#Brain" class="headerlink" title="Brain"></a>Brain</h2><p>Deep thinking changes my life.</p>
<h2 id="Emotion"><a href="#Emotion" class="headerlink" title="Emotion"></a>Emotion</h2><p>Positive, Sunny</p>
<h2 id="Mind"><a href="#Mind" class="headerlink" title="Mind"></a>Mind</h2><p>Wise</p>
<h2 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h2><p>Focus your Ultimate Goal</p>
<h2 id="Habit"><a href="#Habit" class="headerlink" title="Habit"></a>Habit</h2><p>Good habits</p>
<h2 id="Life"><a href="#Life" class="headerlink" title="Life"></a>Life</h2><p>Healthy, Harmony, Meaningful, Valuable</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/masteringlifelogo-800.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Master of your brain&lt;br&gt;Master of your emotion&lt;br&gt;Master of your mind&lt;br&gt;Master of your action&lt;br&gt;Master of your habit&lt;br&gt;Master of your life&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Keep Deliberate Practice Day by Day.&lt;/li&gt;
&lt;li&gt;Break time-consuming tasks into smaller tasks and work on them one at a time.&lt;/li&gt;
&lt;li&gt;Learn and Organize more Basic  Concepts.&lt;/li&gt;
&lt;li&gt;Master more meta skills.&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of C Compiler</title>
    <link href="http://aisee.me/2017/04/09/Program/Tools/C&amp;C++/the-basic-concepts-of-c-compiler/"/>
    <id>http://aisee.me/2017/04/09/Program/Tools/C&amp;C++/the-basic-concepts-of-c-compiler/</id>
    <published>2017-04-09T00:48:06.000Z</published>
    <updated>2017-04-09T01:24:43.600Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/GCC_CompilationProcess.png" alt=""></p>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h1 id="手把手教你构建-C-语言编译器"><a href="#手把手教你构建-C-语言编译器" class="headerlink" title="手把手教你构建 C 语言编译器"></a><a href="http://lotabout.me/2015/write-a-C-interpreter-0/" target="_blank" rel="external">手把手教你构建 C 语言编译器</a></h1><h2 id="手把手教你构建-C-语言编译器（0）——前言"><a href="#手把手教你构建-C-语言编译器（0）——前言" class="headerlink" title="手把手教你构建 C 语言编译器（0）——前言"></a>手把手教你构建 C 语言编译器（0）——前言</h2><h2 id="手把手教你构建-C-语言编译器（1）——设计"><a href="#手把手教你构建-C-语言编译器（1）——设计" class="headerlink" title="手把手教你构建 C 语言编译器（1）——设计"></a>手把手教你构建 C 语言编译器（1）——设计</h2><h2 id="手把手教你构建-C-语言编译器（2）——虚拟机"><a href="#手把手教你构建-C-语言编译器（2）——虚拟机" class="headerlink" title="手把手教你构建 C 语言编译器（2）——虚拟机"></a>手把手教你构建 C 语言编译器（2）——虚拟机</h2><h2 id="手把手教你构建-C-语言编译器（3）——词法分析器"><a href="#手把手教你构建-C-语言编译器（3）——词法分析器" class="headerlink" title="手把手教你构建 C 语言编译器（3）——词法分析器"></a>手把手教你构建 C 语言编译器（3）——词法分析器</h2><h2 id="手把手教你构建-C-语言编译器（4）——递归下降"><a href="#手把手教你构建-C-语言编译器（4）——递归下降" class="headerlink" title="手把手教你构建 C 语言编译器（4）——递归下降"></a>手把手教你构建 C 语言编译器（4）——递归下降</h2><h2 id="手把手教你构建-C-语言编译器（5）——变量定义"><a href="#手把手教你构建-C-语言编译器（5）——变量定义" class="headerlink" title="手把手教你构建 C 语言编译器（5）——变量定义"></a>手把手教你构建 C 语言编译器（5）——变量定义</h2><h2 id="手把手教你构建-C-语言编译器（6）——函数定义"><a href="#手把手教你构建-C-语言编译器（6）——函数定义" class="headerlink" title="手把手教你构建 C 语言编译器（6）——函数定义"></a>手把手教你构建 C 语言编译器（6）——函数定义</h2><h2 id="手把手教你构建-C-语言编译器（7）——语句"><a href="#手把手教你构建-C-语言编译器（7）——语句" class="headerlink" title="手把手教你构建 C 语言编译器（7）——语句"></a>手把手教你构建 C 语言编译器（7）——语句</h2><h2 id="手把手教你构建-C-语言编译器（8）——表达式"><a href="#手把手教你构建-C-语言编译器（8）——表达式" class="headerlink" title="手把手教你构建 C 语言编译器（8）——表达式"></a>手把手教你构建 C 语言编译器（8）——表达式</h2><h2 id="手把手教你构建-C-语言编译器（9）——总结"><a href="#手把手教你构建-C-语言编译器（9）——总结" class="headerlink" title="手把手教你构建 C 语言编译器（9）——总结"></a>手把手教你构建 C 语言编译器（9）——总结</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="http://lotabout.me/2015/write-a-C-interpreter-0/" target="_blank" rel="external">手把手教你构建 C 语言编译器</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/GCC_CompilationProcess.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="C" scheme="http://aisee.me/tags/C/"/>
    
      <category term="Compiler" scheme="http://aisee.me/tags/Compiler/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of Memory</title>
    <link href="http://aisee.me/2017/04/09/Program/Tools/Computer/the-basic-concepts-of-memory/"/>
    <id>http://aisee.me/2017/04/09/Program/Tools/Computer/the-basic-concepts-of-memory/</id>
    <published>2017-04-08T23:52:06.000Z</published>
    <updated>2017-04-09T01:24:45.784Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/Memory.jpg" alt=""></p>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h2 id="通俗计算机工作原理"><a href="#通俗计算机工作原理" class="headerlink" title="通俗计算机工作原理"></a><a href="http://book.51cto.com/art/201311/416397.htm" target="_blank" rel="external">通俗计算机工作原理</a></h2><p>首先，我们从计算机工作原理谈起。</p>
<p>在启动Excel程序之前，Excel程序以可执行文件的形式存储在计算机硬盘里，这时候它什么也做不了，只是计算机硬盘里的二进制代码而已，就像密封在魔瓶里的小怪兽，等待着拔开魔瓶盖子的那个人。</p>
<p>那么，谁是那个打开魔瓶盖子的人呢？这个人就是作为Excel使用者的我们！我们双击Excel图标启动Excel，就相当于打开魔瓶盖子，Excel小怪兽从计算机硬盘加载到计算机内存中，小怪兽获得了自由，而计算机内存就是Excel小怪兽施展本领的地方。</p>
<p><img src="http://s7.51cto.com/wyfs01/M00/32/5C/wKioJlJ-GFOSIhFHAACUWrKyWBo821.jpg" alt=""></p>
<p>可以这样比喻：Excel程序启动之前存在于计算机硬盘中时，它是扁平的、僵硬的、毫无生命的二进制代码，但是，当Excel程序启动并加载到计算机内存以后，它就变成了立体的、鲜活的、有生命的Excel程序。</p>
<p>内存是计算机的重要组成部分，我们可以把它想象成工作台边上的一排排立体货架，程序从计算机硬盘加载到内存的过程就相当于把货物从“紧锁的”库房（计算机硬盘）中取出，摆放到工作台边的一排排货架（内存）上，以方便计算机中央处理器（又称为CPU）随时加工取用。</p>
<p>为了更清楚地说明问题，我们用Excel工作表模拟计算机的内存结构。假设图1-2所示的工作表就是计算机内存，工作表中的每个单元格相当于计算机内存中的一个存储位置，我们发现计算机内存中已经加载了如下数据：</p>
<p>内存B2位置（B2单元格）存储了一个数值12；</p>
<p>内存B3位置（B3单元格）存储了一个数值5；</p>
<p>内存B5位置（B5单元格）存储了一个字符”Jack”；</p>
<p>内存B6位置（B6单元格）存储了一个字符串”Lin”；</p>
<p>内存B10:H19位置存储了一个Excel工作簿WorkBook(1)。</p>
<p>还有很多已经加载到计算机内存中的其他各种内容。<br><img src="http://s4.51cto.com/wyfs01/M01/32/5C/wKioJlJ-GJfQg45FAAD3o3s6pVI252.jpg" alt=""></p>
<p>像车间工作台旁边的货架一样，计算机内存中的每个存储位置都有一个位置坐标（或者称作“存储地址”），比如位置B2就是数值12存储的地址；位置B5就是字符串”Jack”存储的地址。</p>
<p>简单地了解了计算机内存后，我们再来了解另一个重要的计算机部件的功用，那就是：计算机中央处理器，也叫CPU。</p>
<p>当我们双击Excel图标启动Excel时，是谁把Excel加载到计算机内存中的一个个存储位置上的呢？具体做这件事的人是我们吗？不是，我们只是双击了一下Excel图标，给计算机发出了一个启动Excel程序的命令而已，具体做这件事的是计算机中央处理器（CPU）。</p>
<p>计算机中央处理器是计算机中最勤劳的部件，计算机的绝大部分工作都由它来完成，比如，把Excel程序从计算机硬盘加载到计算机内存中；执行VBA程序等。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="http://book.51cto.com/art/201311/416397.htm" target="_blank" rel="external">通俗计算机工作原理</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/Memory.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Memory" scheme="http://aisee.me/tags/Memory/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of Python</title>
    <link href="http://aisee.me/2017/04/09/Program/Tools/Python/the-basic-concepts-of-python/"/>
    <id>http://aisee.me/2017/04/09/Program/Tools/Python/the-basic-concepts-of-python/</id>
    <published>2017-04-08T23:15:06.000Z</published>
    <updated>2017-04-08T23:17:53.192Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/python-logo-master-v3-TM.png" alt=""></p>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h1 id="Python教程"><a href="#Python教程" class="headerlink" title="Python教程"></a><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">Python教程</a></h1><h2 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h2><h2 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h2><h3 id="Python解释器"><a href="#Python解释器" class="headerlink" title="Python解释器"></a>Python解释器</h3><h2 id="第一个Python程序"><a href="#第一个Python程序" class="headerlink" title="第一个Python程序"></a>第一个Python程序</h2><h3 id="使用文本编辑器"><a href="#使用文本编辑器" class="headerlink" title="使用文本编辑器"></a>使用文本编辑器</h3><h3 id="Python代码运行助手"><a href="#Python代码运行助手" class="headerlink" title="Python代码运行助手"></a>Python代码运行助手</h3><h3 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h3><h2 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a>Python基础</h2><h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><h3 id="字符串和编码"><a href="#字符串和编码" class="headerlink" title="字符串和编码"></a>字符串和编码</h3><h3 id="使用list和tuple"><a href="#使用list和tuple" class="headerlink" title="使用list和tuple"></a>使用list和tuple</h3><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><h3 id="使用dict和set"><a href="#使用dict和set" class="headerlink" title="使用dict和set"></a>使用dict和set</h3><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><h3 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h3><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><h2 id="高级特性"><a href="#高级特性" class="headerlink" title="高级特性"></a>高级特性</h2><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><h3 id="列表生成式"><a href="#列表生成式" class="headerlink" title="列表生成式"></a>列表生成式</h3><h3 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a>生成器</h3><h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h3><h2 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h2><h3 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h3><h3 id="map-reduce"><a href="#map-reduce" class="headerlink" title="map/reduce"></a>map/reduce</h3><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><h3 id="sorted"><a href="#sorted" class="headerlink" title="sorted"></a>sorted</h3><h3 id="返回函数"><a href="#返回函数" class="headerlink" title="返回函数"></a>返回函数</h3><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><h3 id="偏函数"><a href="#偏函数" class="headerlink" title="偏函数"></a>偏函数</h3><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h3 id="使用模块"><a href="#使用模块" class="headerlink" title="使用模块"></a>使用模块</h3><h3 id="安装第三方模块"><a href="#安装第三方模块" class="headerlink" title="安装第三方模块"></a>安装第三方模块</h3><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="类和实例"><a href="#类和实例" class="headerlink" title="类和实例"></a>类和实例</h3><h3 id="访问限制"><a href="#访问限制" class="headerlink" title="访问限制"></a>访问限制</h3><h3 id="继承和多态"><a href="#继承和多态" class="headerlink" title="继承和多态"></a>继承和多态</h3><h3 id="获取对象信息"><a href="#获取对象信息" class="headerlink" title="获取对象信息"></a>获取对象信息</h3><h3 id="实例属性和类属性"><a href="#实例属性和类属性" class="headerlink" title="实例属性和类属性"></a>实例属性和类属性</h3><h3 id="面向对象高级编程"><a href="#面向对象高级编程" class="headerlink" title="面向对象高级编程"></a>面向对象高级编程</h3><h3 id="使用slots"><a href="#使用slots" class="headerlink" title="使用slots"></a>使用<strong>slots</strong></h3><h3 id="使用-property"><a href="#使用-property" class="headerlink" title="使用@property"></a>使用@property</h3><h3 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h3><h3 id="定制类"><a href="#定制类" class="headerlink" title="定制类"></a>定制类</h3><h3 id="使用枚举类"><a href="#使用枚举类" class="headerlink" title="使用枚举类"></a>使用枚举类</h3><h3 id="使用元类"><a href="#使用元类" class="headerlink" title="使用元类"></a>使用元类</h3><h2 id="错误、调试和测试"><a href="#错误、调试和测试" class="headerlink" title="错误、调试和测试"></a>错误、调试和测试</h2><h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><h3 id="文档测试"><a href="#文档测试" class="headerlink" title="文档测试"></a>文档测试</h3><h2 id="IO编程"><a href="#IO编程" class="headerlink" title="IO编程"></a>IO编程</h2><h3 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h3><h3 id="StringIO和BytesIO"><a href="#StringIO和BytesIO" class="headerlink" title="StringIO和BytesIO"></a>StringIO和BytesIO</h3><h3 id="操作文件和目录"><a href="#操作文件和目录" class="headerlink" title="操作文件和目录"></a>操作文件和目录</h3><h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><h2 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h2><h3 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h3><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><h3 id="ThreadLocal"><a href="#ThreadLocal" class="headerlink" title="ThreadLocal"></a>ThreadLocal</h3><h3 id="进程-vs-线程"><a href="#进程-vs-线程" class="headerlink" title="进程 vs. 线程"></a>进程 vs. 线程</h3><h3 id="分布式进程"><a href="#分布式进程" class="headerlink" title="分布式进程"></a>分布式进程</h3><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h2 id="常用内建模块"><a href="#常用内建模块" class="headerlink" title="常用内建模块"></a>常用内建模块</h2><h3 id="datetime"><a href="#datetime" class="headerlink" title="datetime"></a>datetime</h3><h3 id="collections"><a href="#collections" class="headerlink" title="collections"></a>collections</h3><h3 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h3><h3 id="struct"><a href="#struct" class="headerlink" title="struct"></a>struct</h3><h3 id="hashlib"><a href="#hashlib" class="headerlink" title="hashlib"></a>hashlib</h3><h3 id="itertools"><a href="#itertools" class="headerlink" title="itertools"></a>itertools</h3><h3 id="contextlib"><a href="#contextlib" class="headerlink" title="contextlib"></a>contextlib</h3><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><h3 id="HTMLParser"><a href="#HTMLParser" class="headerlink" title="HTMLParser"></a>HTMLParser</h3><h3 id="urllib"><a href="#urllib" class="headerlink" title="urllib"></a>urllib</h3><h2 id="常用第三方模块"><a href="#常用第三方模块" class="headerlink" title="常用第三方模块"></a>常用第三方模块</h2><h3 id="PIL"><a href="#PIL" class="headerlink" title="PIL"></a>PIL</h3><h2 id="virtualenv"><a href="#virtualenv" class="headerlink" title="virtualenv"></a>virtualenv</h2><h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><h2 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h2><h3 id="TCP-IP简介"><a href="#TCP-IP简介" class="headerlink" title="TCP/IP简介"></a>TCP/IP简介</h3><h3 id="TCP编程"><a href="#TCP编程" class="headerlink" title="TCP编程"></a>TCP编程</h3><h3 id="UDP编程"><a href="#UDP编程" class="headerlink" title="UDP编程"></a>UDP编程</h3><h2 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h2><h3 id="SMTP发送邮件"><a href="#SMTP发送邮件" class="headerlink" title="SMTP发送邮件"></a>SMTP发送邮件</h3><h3 id="POP3收取邮件"><a href="#POP3收取邮件" class="headerlink" title="POP3收取邮件"></a>POP3收取邮件</h3><h2 id="访问数据库"><a href="#访问数据库" class="headerlink" title="访问数据库"></a>访问数据库</h2><h3 id="使用SQLite"><a href="#使用SQLite" class="headerlink" title="使用SQLite"></a>使用SQLite</h3><h3 id="使用MySQL"><a href="#使用MySQL" class="headerlink" title="使用MySQL"></a>使用MySQL</h3><h3 id="使用SQLAlchemy"><a href="#使用SQLAlchemy" class="headerlink" title="使用SQLAlchemy"></a>使用SQLAlchemy</h3><h2 id="Web开发"><a href="#Web开发" class="headerlink" title="Web开发"></a>Web开发</h2><h3 id="HTTP协议简介"><a href="#HTTP协议简介" class="headerlink" title="HTTP协议简介"></a>HTTP协议简介</h3><h3 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h3><h3 id="WSGI接口"><a href="#WSGI接口" class="headerlink" title="WSGI接口"></a>WSGI接口</h3><h3 id="使用Web框架"><a href="#使用Web框架" class="headerlink" title="使用Web框架"></a>使用Web框架</h3><h3 id="使用模板"><a href="#使用模板" class="headerlink" title="使用模板"></a>使用模板</h3><h2 id="异步IO"><a href="#异步IO" class="headerlink" title="异步IO"></a>异步IO</h2><h3 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h3><h3 id="asyncio"><a href="#asyncio" class="headerlink" title="asyncio"></a>asyncio</h3><h3 id="async-await"><a href="#async-await" class="headerlink" title="async/await"></a>async/await</h3><h3 id="aiohttp"><a href="#aiohttp" class="headerlink" title="aiohttp"></a>aiohttp</h3><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="Day-1-搭建开发环境"><a href="#Day-1-搭建开发环境" class="headerlink" title="Day 1 - 搭建开发环境"></a>Day 1 - 搭建开发环境</h3><h3 id="Day-2-编写Web-App骨架"><a href="#Day-2-编写Web-App骨架" class="headerlink" title="Day 2 - 编写Web App骨架"></a>Day 2 - 编写Web App骨架</h3><h3 id="Day-3-编写ORM"><a href="#Day-3-编写ORM" class="headerlink" title="Day 3 - 编写ORM"></a>Day 3 - 编写ORM</h3><h3 id="Day-4-编写Model"><a href="#Day-4-编写Model" class="headerlink" title="Day 4 - 编写Model"></a>Day 4 - 编写Model</h3><h3 id="Day-5-编写Web框架"><a href="#Day-5-编写Web框架" class="headerlink" title="Day 5 - 编写Web框架"></a>Day 5 - 编写Web框架</h3><h3 id="Day-6-编写配置文件"><a href="#Day-6-编写配置文件" class="headerlink" title="Day 6 - 编写配置文件"></a>Day 6 - 编写配置文件</h3><h3 id="Day-7-编写MVC"><a href="#Day-7-编写MVC" class="headerlink" title="Day 7 - 编写MVC"></a>Day 7 - 编写MVC</h3><h3 id="Day-8-构建前端"><a href="#Day-8-构建前端" class="headerlink" title="Day 8 - 构建前端"></a>Day 8 - 构建前端</h3><h3 id="Day-9-编写API"><a href="#Day-9-编写API" class="headerlink" title="Day 9 - 编写API"></a>Day 9 - 编写API</h3><h3 id="Day-10-用户注册和登录"><a href="#Day-10-用户注册和登录" class="headerlink" title="Day 10 - 用户注册和登录"></a>Day 10 - 用户注册和登录</h3><h3 id="Day-11-编写日志创建页"><a href="#Day-11-编写日志创建页" class="headerlink" title="Day 11 - 编写日志创建页"></a>Day 11 - 编写日志创建页</h3><h3 id="Day-12-编写日志列表页"><a href="#Day-12-编写日志列表页" class="headerlink" title="Day 12 - 编写日志列表页"></a>Day 12 - 编写日志列表页</h3><h3 id="Day-13-提升开发效率"><a href="#Day-13-提升开发效率" class="headerlink" title="Day 13 - 提升开发效率"></a>Day 13 - 提升开发效率</h3><h3 id="Day-14-完成Web-App"><a href="#Day-14-完成Web-App" class="headerlink" title="Day 14 - 完成Web App"></a>Day 14 - 完成Web App</h3><h3 id="Day-15-部署Web-App"><a href="#Day-15-部署Web-App" class="headerlink" title="Day 15 - 部署Web App"></a>Day 15 - 部署Web App</h3><h3 id="Day-16-编写移动App"><a href="#Day-16-编写移动App" class="headerlink" title="Day 16 - 编写移动App"></a>Day 16 - 编写移动App</h3><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><h2 id="期末总结"><a href="#期末总结" class="headerlink" title="期末总结"></a>期末总结</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">Python教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/python-logo-master-v3-TM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Python" scheme="http://aisee.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of Linux</title>
    <link href="http://aisee.me/2017/04/09/Program/Tools/Linux/the-basic-concepts-of-linux/"/>
    <id>http://aisee.me/2017/04/09/Program/Tools/Linux/the-basic-concepts-of-linux/</id>
    <published>2017-04-08T22:43:06.000Z</published>
    <updated>2017-04-08T23:06:41.252Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/linux-1-638.jpg" alt=""></p>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h1 id="鸟哥的-Linux-私房菜-–-基础学习篇"><a href="#鸟哥的-Linux-私房菜-–-基础学习篇" class="headerlink" title="鸟哥的 Linux 私房菜 – 基础学习篇"></a><a href="http://cn.linux.vbird.org/" target="_blank" rel="external">鸟哥的 Linux 私房菜 – 基础学习篇</a></h1><p><a href="http://cn.linux.vbird.org/image/title/title_03.png" target="_blank" rel="external">http://cn.linux.vbird.org/image/title/title_03.png</a></p>
<h2 id="第一部份：Linux的规划与安装"><a href="#第一部份：Linux的规划与安装" class="headerlink" title="第一部份：Linux的规划与安装"></a><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php#part1" target="_blank" rel="external">第一部份：Linux的规划与安装</a></h2><h2 id="第二部份：Linux文件、目录与磁盘格式"><a href="#第二部份：Linux文件、目录与磁盘格式" class="headerlink" title="第二部份：Linux文件、目录与磁盘格式"></a><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php#part2" target="_blank" rel="external">第二部份：Linux文件、目录与磁盘格式</a></h2><h2 id="第三部份：学习Shell与Shell-Scripts"><a href="#第三部份：学习Shell与Shell-Scripts" class="headerlink" title="第三部份：学习Shell与Shell Scripts"></a><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php#part3" target="_blank" rel="external">第三部份：学习Shell与Shell Scripts</a></h2><h2 id="第四部份：Linux使用者管理"><a href="#第四部份：Linux使用者管理" class="headerlink" title="第四部份：Linux使用者管理"></a><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php#part4" target="_blank" rel="external">第四部份：Linux使用者管理</a></h2><h2 id="第五部份：Linux系统管理员"><a href="#第五部份：Linux系统管理员" class="headerlink" title="第五部份：Linux系统管理员"></a><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php#part5" target="_blank" rel="external">第五部份：Linux系统管理员</a></h2><h2 id="第六部份：其他备份文章"><a href="#第六部份：其他备份文章" class="headerlink" title="第六部份：其他备份文章"></a><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php#part6" target="_blank" rel="external">第六部份：其他备份文章</a></h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="http://cn.linux.vbird.org/" target="_blank" rel="external">鸟哥的Linux私房菜</a><br>[3]<a href="https://wizardforcel.gitbooks.io/vbird-linux-basic-4e/content/index.html" target="_blank" rel="external">鸟哥的Linux私房菜：基础学习篇 第四版</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/linux-1-638.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Linux" scheme="http://aisee.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of Linux Server</title>
    <link href="http://aisee.me/2017/04/09/Program/Tools/Linux/the-basic-concepts-of-linux-server/"/>
    <id>http://aisee.me/2017/04/09/Program/Tools/Linux/the-basic-concepts-of-linux-server/</id>
    <published>2017-04-08T22:43:06.000Z</published>
    <updated>2017-04-08T23:16:22.651Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/linux-server.jpg" alt=""></p>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h1 id="鸟哥的-Linux-私房菜-–-服务器架设篇"><a href="#鸟哥的-Linux-私房菜-–-服务器架设篇" class="headerlink" title="鸟哥的 Linux 私房菜 – 服务器架设篇"></a><a href="http://cn.linux.vbird.org/" target="_blank" rel="external">鸟哥的 Linux 私房菜 – 服务器架设篇</a></h1><p><a href="http://cn.linux.vbird.org/image/title/title_03.png" target="_blank" rel="external">http://cn.linux.vbird.org/image/title/title_03.png</a></p>
<p><a href="http://cn.linux.vbird.org/linux_server/#part1" target="_blank" rel="external">第一部份：架站前的进修专区</a><br><a href="http://cn.linux.vbird.org/linux_server/#part2" target="_blank" rel="external">第二部分：主机的简易防火措施</a><br><a href="http://cn.linux.vbird.org/linux_server/#part3" target="_blank" rel="external">第三部分：局域网络内常见的服务器架设</a><br><a href="http://cn.linux.vbird.org/linux_server/#part4" target="_blank" rel="external">第四部分：常见因特网服务器架设</a><br><a href="http://cn.linux.vbird.org/linux_server/#part5" target="_blank" rel="external">第五部分：一些旧数据</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="http://cn.linux.vbird.org/" target="_blank" rel="external">鸟哥的 Linux 私房菜 – 服务器架设篇</a><br><a href="http://cn.linux.vbird.org/image/title/title_03.png" target="_blank" rel="external">http://cn.linux.vbird.org/image/title/title_03.png</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/linux-server.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Linux" scheme="http://aisee.me/tags/Linux/"/>
    
      <category term="Server" scheme="http://aisee.me/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>Life of Pi</title>
    <link href="http://aisee.me/2017/04/08/MyView/Movie/life-of-pi/"/>
    <id>http://aisee.me/2017/04/08/MyView/Movie/life-of-pi/</id>
    <published>2017-04-07T23:03:18.000Z</published>
    <updated>2017-04-08T14:36:48.508Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p1784592701.webp" alt=""></p>
<p>故事开始于蒙特娄，也结束于蒙特娄。一名在找寻灵感的作家（拉菲·斯波 Rafe Spall 饰）无意间得知派·帕帖尔（伊尔凡·可汗 Irrfan Khan 饰）的传奇故事。派的父亲（阿迪勒·侯赛因 Adil Hussain 饰）开了一家动物园。因这样特殊的生活环境，少年派（苏拉·沙玛 Suraj Sharma 饰 ）对信仰与人的本性自有一套看法。在派17岁那一年，他的父母决定举家移民加拿大以追求更好的生活，而他也必须离开他的初恋情人。在前往加拿大的船上，他们遇见一位残忍成性的法国厨师（杰拉尔·德帕迪约 Gérard Depardieu 饰）。当天深夜在茫茫大海中，原本令派感到刺激无比的暴风雨一瞬间就成了吞噬货船的大灾难。派却奇迹般地活了下来，搭着救生船在太平洋上漂流，而且有一名最令人意想不到的同伴——理查德·帕克，一只孟加拉老虎。神奇的冒险旅程就这样意外开始了……</p>
<a id="more"></a>
<p>导演: 李安<br>编剧: 扬·马特尔 / 大卫·麦基<br>主演: 苏拉·沙玛 / 拉菲·斯波 / 伊尔凡·可汗 / 杰拉尔·德帕迪约 / 塔布 / 更多…<br>类型: 剧情 / 奇幻 / 冒险<br>官方网站: www.lifeofpimovie.com<br>制片国家/地区: 美国 / 台湾 / 英国 / 加拿大<br>语言: 英语 / 泰米尔语 / 法语 / 日语 / 印地语 / 汉语普通话<br>上映日期: 2012-11-22(中国大陆) / 2012-09-28(纽约电影节) / 2012-11-21(美国)<br>片长: 127分钟<br>又名: 少年Pi的奇幻漂流 / 漂流少年Pi<br>IMDb链接: <a href="http://www.imdb.com/title/tt0454876" target="_blank" rel="external">tt0454876</a><br>官方小站: <a href="https://site.douban.com/foxmovies/" target="_blank" rel="external">《少年派的奇幻漂流》官方小站</a></p>
<h2 id="还原故事的真相：少年派毫不奇幻的残酷漂流"><a href="#还原故事的真相：少年派毫不奇幻的残酷漂流" class="headerlink" title="还原故事的真相：少年派毫不奇幻的残酷漂流"></a><a href="https://movie.douban.com/review/5666816/" target="_blank" rel="external">还原故事的真相：少年派毫不奇幻的残酷漂流</a></h2><p>版权归作者所有，任何形式转载请联系作者。<br>作者：水长东（来自豆瓣）<br>来源：<a href="https://movie.douban.com/review/5666816/" target="_blank" rel="external">https://movie.douban.com/review/5666816/</a></p>
<p> 还原故事的真相：少年派毫不奇幻的残酷漂流</p>
<p>少年Pi的奇幻漂流，听来是奇幻冒险的视觉大片，看过了则更是感叹大饱眼福。这并非3D效果运用的最好的一部电影，但炫目的视觉效果， 使整部电影浑然天成丝毫没有做作缀余之感。整部电影叙事虽无太大的情节波动，但其情节之间的起承转合并加上绝妙的摄影及特效依然让人十分震撼。</p>
<p>Pi是一个生于印度并且同时信仰基督教、伊斯兰教和印度教的少年，他的父亲经营着一个动物园，所以派从小就了解动物的习性……坦白说，这个故事的开头并不算吸引人，混合着宗教信仰的一个少年的成长经历。不过随后剧情正式进入到“奇幻漂流”。 派举家迁往加拿大，与他们同船的还有动物园的动物，Pi的父亲想把它们带到异国他乡卖个好价钱。但是动物园园长一家经历了一次类似泰坦尼克号式的沉船事件，除了Pi，家人全部遇难。Pi侥幸落在救生艇的舱盖布上得以生存，与他同处一艇的还有一条鬣狗、一只断了一条腿的斑马、一只母猩猩，以及一只成年孟加拉虎“理查德-帕克”。<br>在漂流的最初3天，鬣狗咬死了猩猩，活吃了斑马，老虎又杀死了鬣狗。接下来这个少年在海上求生的故事，就是如何对付理查德-帕克的故事。自知无法战胜老虎的Pi最终选择与它一起面对漂流生活。7个月中，他要收集淡水、捕鱼捉虾，他要使用一切海上生存技能喂饱老虎，也让自己活下来。当然，这场漂流也遇到了暴风雨、鲨鱼的袭击以及各种精彩而血腥的险境。在Pi与老虎所剩的食物耗尽后，陷入绝望的他们已准备从容赴死。但奇迹的是他们随着小船漂到了一座天堂般的岛屿。在短暂的停留休整之后，他发现这儿是个食人岛。惊恐的Pi与老虎再次开始了漂流，直到在墨西哥的海滩上获救，那只老虎却头也不回地消失了。</p>
<p>但是如果这部《少年和老虎海上历险记》情节发展到此为止，确实只是乏善可陈的无力写一篇影评了。但是直到少年派讲出最后那个所谓杜撰出来的第二个故事之后，往复的镜头便一幕一幕在脑海中闪现，之前的所有好像并无深意的打趣的细节都成为了伏笔，使这整个故事融会贯通的串联起来，打破了原本充满和谐和爱心并且奇幻的冒险故事，而只一个有些残酷无情的血淋淋的故事展现在眼前。</p>
<p>让我们先从电影的结尾说起。当派与两个日本的公司代表讲述了他的奇幻冒险之后，两个日本人并不相信且视为儿戏，并希望派讲出一个没有动物，没有小岛，没有狐鼬的真实故事。然后派讲出了另一个版本的海上求生记——其实，救生艇上并没有动物，只有一个厨子、一个断了腿的水手、Pi和他的母亲。厨子先后杀害并吃掉了水手，然后又杀死了母亲，最终派忍无可忍同样杀害并吃掉了水手。最后的现实是，最终只有Pi活了下来。这个故事伴随着两个日本人惊恐的表情讲完了，也许我们理所当然的会以为他们会选择这个第二个故事。但是当采访Pi的记者打开当时事件的档案时，写在后面的是“最后他和这只动物共同相伴走到了最后”这样一句话，显然他们采用了第一个不那么残酷而残忍的故事。接着Pi又问来访的记者，这两个故事，你相信哪个？记者说，有老虎的那个（第一个）。Pi回答：所以你跟随上帝。</p>
<p>当故事讲到这里的时候，相信很多观众已经意识到了，这个故事中的四个人与第一个故事中的四个动物是一一对应的。此刻导演担心观众不能联想到其联系，还让采访Pi的记者此时发问以一一对应：水手是斑马、厨子是鬣狗、猩猩是母亲、而Pi自己是老虎。也许可能你还不能接受第二个残酷的故事，但是导演在讲述第一个故事发生的过程中已经数次暗示我们，第二个故事才是真是发生的：1、大船遇到风暴，当Pi跳上救生船之后，在中国船员用汉语大喊“斑马！斑马！”后，斑马跳进了救生船。此处暗示中国船员的角色对应。2、当Pi的母亲想换素的菜品时，厨子表现的极为恶劣戏谑，刚好符合鬣狗穷凶极恶的品性。3、 猩猩是漂流很久之后才找到救生船并在Pi的帮助下上船，并且只有猩猩是在Pi的帮助下上船。4、在猩猩被鬣狗咬死之后，老虎才突然出现反扑了鬣狗。这与第二个故事中Pi的母亲被厨子杀了之后Pi终于忍无可忍杀了厨子的出场顺序一致。</p>
<p>如此看来，我们知道了第一个故事就是现实的隐喻，它含有两层：一是对真实事件的隐喻，二是经过自己的感悟而升华出对人性思考的隐喻。这第二层便是电影的核心，也是导演和主人公想要表达的核心。</p>
<p>先说说PI这个名字。它代表了无穷数位的无理数。当他在最后一节数学课上写了整整三个黑板的π值的时候，学生和老师们都在欢呼，每增加一个数字都代表了一个成就，而这就是人类的衡量文明进步的标志。如他父亲所说，科技带领人类在这几百年取得的成就抵得上信仰于人类文明几千年的成就。而在这个成就之上，影射的则是人类无穷无尽的欲望，就像π值的无穷尽一样。与此处对应的隐喻还有Pi小时候听到的那个神话，那个神张开嘴就是整个宇宙。这个隐喻同样出现在他看到了鲸鱼吃水母，看到了老虎的嘴，看到了幻境里鱼类的相残和张开的血盆大嘴。</p>
<p>Pi年幼是信仰多种宗教，印度教（家庭背景）、基督教（跟哥哥打赌去教堂里喝圣水，从而和牧师交谈）、伊斯兰教（被伊斯兰教的诵经所感染）。他认为这些宗教是可以兼容的，他认为自己这样就接近了神，了解了神。其实主人公Pi就是全人类的象征，无论哪种信仰，哪种宗教，作者和导演就是要在这里引起全人类对于信仰的反思。此处的隐喻是：1、在船上吃饭的时候，母亲因为是素食主义者，想跟厨子换全素的菜品。厨子先后指着肠和肉汁说：它以前是吃素的，它以前也是吃素的，随后引起了父亲的不满并险与其大打出手。2、饭桌上一个中国水手前来想要安慰这一家人，解释到：我是信佛的，但是这个肉汁我也吃。因为在船上，肉汁不算肉，只是调味品。3、Pi在饿极之后为了一条大鱼与老虎进行了殊死搏斗，全然不顾自己先前素食主义的信条。4、当Pi找到了那个小岛之后，饿极了的抛开地上的土寻找的植物的根茎满足的吃着。而老虎上岛之后看见大量狐鼬之后则是一顿猛抓猛吃，奇怪的是其他的狐鼬居然没有逃跑而是直立而视，这场景与Pi吃植物何其相似。</p>
<p>也许这是对素食主义以及素食主义者的一种讽刺的暗示。万物皆由造物主所创，动物与植物皆为生物，并无本质区别，所以老虎吃狐鼬就像吃一般。而此素食主义（或宗教信仰）则是建立在物质条件相对丰富的情况下，如果人在物质匮乏食不果腹境地就会放下束缚，正如在船上佛教徒会吃肉汁，Pi为了吃鱼肉不惜与老虎搏命一样。</p>
<p>与前面人类欲望无尽的隐喻相联系，则是暗示人类盲目的信仰，却同时做着违背神性的事；有着无穷的欲望，始终无法脱离心中的兽性。正如在饭桌上，爸爸教导Pi的这个桥段：一个人不能同时信仰这么多宗教，如果你什么都信就代表什么都不信。然后又告诉Pi，希望Pi拥有自己理性的思维，甚至与老爸信的冲突都没关系，只要是出于理性的。也许观众或许认为影片在批判宗教信仰而宣扬绝对理性，神在危机的时候没有向Pi深处援手，正如在暴风雨来的时候Pi跪地长啸“你带走了我的所有，你还想要什么？！”对神的质疑。</p>
<p>但个人认为影片向我们真是传递的信息恰恰是与上述相反的。还记的这前后两个故事的角色对应之后，第一个故事中的老虎就是主人公，那么故事中的Pi又是谁呢？传递给我的是一个明确的答案：心中的神性，在现实中引导人类的无形的神。它既独立于人类，又是人类的一部分。人类在很多时候抛弃了他，却又在关键的时刻接受他的指引，渡向脱离兽性的彼岸。在第一个故事中，老虎就代表着Pi甚至是人类罪恶和兽性的一面。当漂流初期的时候，老虎生猛无比，对Pi寸步不让；后面老虎因为饿极了之后又受惠于Pi食物的赏赐渐渐被驯化；一个最重要的桥段是当暴风雨来临的时候，Pi看见了穿破乌云从天而降的圣光，高呼神迹并极力要向老虎展示，但老虎畏惧不前，充满畏惧的蜷缩在角落里。</p>
<p>主人公在岛上获救，白天有着无穷的食物，干净的淡水，以致于他钟情于这个小岛，不想离开，因为对未知和死亡的恐惧让他想在这个岛永远生存下去，他甚至将女朋友送给他的红绳系到了那棵树上表达了他的依恋。然而黑夜降临，他看到了白天的湖水开始吞噬鱼类，那深不可测的湖水在吃着自己养育的动物，同时他又看到了那个仿佛莲花的树叶，一层层剥开后看到了人类的牙齿。白天和黑夜，馈赠与索取，吃和被吃。这就是此岸。这就是人类，这就是生存的残酷。</p>
<p>人不信了神了吗？你抛弃了我了吗？还记得影片前面Pi跑到教堂里与神父的对话吗？PI问神父，神将自己的儿子派到世上，让他为人类受尽了苦难，这叫爱吗？神父回答，你所要知道的就是，他爱我们。电影的结局也回答了这个问题：神的儿子带领拯救了人，脱离了自相残杀的苦海，一步步消除兽性，这就是上帝的爱。</p>
<p>Pi毅然的逃离的那个小岛，因为他不想继续活在过去，吃着同类生存下去。他跟随着神的指引，乘着小船，向着脱离兽性的彼岸。但此时，他仍然无法完全脱离兽性的一面，载着老虎继续出发。直到最后，那只老虎走进了丛林里，消失了。Pi哭很厉害，因为人类的兽性帮助人类生存了下来，在最危难的时刻生存了下来。而当人无限的追求并接近神性的时候，兽性会在不被察觉时离去了。他告诉作家，在老虎的眼里看到了另一个灵魂。而父亲告诉他，在老虎的眼睛里，你只能看到自己。父亲没有错，兽性没有情感和怜悯，与神性是毫不相容的。起初Pi并不相信，但是在漂流的过程中他渐渐明白了，这两者是不可能融汇调和的。“我以为它会回头，但它只是朝着森林深处望去，然后永远消失了。也许父亲说得对，它根本没有把我当成朋友，但我非常确定，我在它眼中看到的，绝对不只是我自己目光投射的倒影。它就那么头也不回的走了，但在我内心深处，它永远与我同在。”</p>
<p>让我对上述推断深信不疑的是这个真实的故事：“理查德•帕克”原是历史上真实吃人海难故事的主人公名字。1884年，Mignonette号沉没，4名船员被困在南大西洋，除了3名船员，还有一个名叫理查德•帕克的17岁男仆。在茫茫的海上漂流中，3名成年船员杀死了孤儿理查德•帕克，分食了他的肉，因此得以生还。这部影片讲述的不是一个美的令人发指的奇幻故事，也不是纠结于宗教信仰和理性思考的一个拧巴的人生选择。原著作者和导演委婉而又明确的向观众用近乎疯狂而又含蓄的手法讲述了这个残酷的事实，是对生活的悔悟、信仰的拷问，和人性的反思。</p>
<p>因为这部影片真的不叫《少年派的奇幻漂流》，而是 &lt; Life of Pi &gt;。</p>
<p>最后想说的是李安导演的功力让我佩服的五体投地，因为无论观众看懂与否出了电影院都会精神亢奋的竖起大拇哥并说一句“牛逼！”。</p>
<p>“我心里有猛虎，在细嗅着蔷薇，审视我的心灵吧，亲爱的朋友，你应战栗，因为那里才是你本来的面目。”——西格夫里•萨松</p>
<h2 id="李安的隐喻森林与少年Pi的三个故事"><a href="#李安的隐喻森林与少年Pi的三个故事" class="headerlink" title="李安的隐喻森林与少年Pi的三个故事"></a><a href="https://movie.douban.com/review/5682066/" target="_blank" rel="external">李安的隐喻森林与少年Pi的三个故事</a></h2><p>在谈论少年Pi这部电影之前，需要预设若干个前提。这些前提就像是数学里的那几条公理，一切演绎，一切推理皆由此而来。如果我们不能在起点达成共识，那么只会分道扬镳，越行越远。</p>
<p>第一。少年Pi的小说属于扬马特尔，少年Pi的电影属于李安。李安的电影基于原著，但又不尽相同。他保留了故事框架，进行了改动增删，使之混杂入了李氏基因，从而变成另外一样东西。因此，我在接下来的分析中，将会彻底抛开原著的干扰——不涉及原著情节，不涉及原作者用意，不比较两版之间的差异，总之就当是我们从来不知道这部电影还有原著——只专注于导演在银幕上给我们摆出来的东西。</p>
<p>第二。成年Pi的演员伊尔凡可汗在接受采访时说过：“这部电影表面上看是一个少年的冒险故事，实际上隐藏着很多隐喻，它有许多平行空间，很多层次。”换句话说，这是一个寓言性质的故事，里面的隐喻表现手法克制而简洁，彼此的映射关系十分明显。李安就是通过这种方式，赋予了扬马特尔的故事框架一个“李安”灵魂。我们只有承认李安在这些细节上的处理是刻意的，每一处都经过精心设计，每句台词都有它的功能和指向，才能拼凑出他试图表达的意义。否认了这一点，就成了聆听云天明童话的三体人，听到的只是一个纯净、美好的故事。</p>
<p>第三。我一向认为，影评是一件主观的工作，每个人都有不同的视角和观感，他们都没错，所谓的仁者见仁智者见智，根本不存在客观影评这种东西，自然也就不存在对错。对写影评的人来说，他唯一的责任，就是承认他的评价只是个人体验，不是妄议别人对错的客观真理。所以这篇东西，只是我个人的一些想法，它不涉及微言大义，不谈主题外延，只就电影本身的线索做一些分析。或许对，或许错，或许过度解读，或许牵强附会。如果得到大家的认同，我深感荣幸；如果你的意见与我大相径庭，那说明这部电影存在多重解读，更显出它的神秘魅力。</p>
<p>闲话少说，让我们从那次晚餐说起。</p>
<p>电影一开始，同时信仰了印度教、基督教和伊斯兰教的Pi和他的父亲母亲在晚餐时进行了一次谈话。这次谈话非常重要，它是整个电影主题的第一次预演。</p>
<p>少年Pi的父亲说：“如果你同时信仰三个宗教，那等于什么都没信。与其如此，不如选择相信理性，相信科学……我宁可你经过深思熟虑否认我，也不要不加分辨地盲目接受。”（凭记忆写出，只是复述其大意，以下同。）</p>
<p>而母亲则说：“科学解决外在的问题，而不是内在的。”实际上是在暗示理性和信仰所发挥的作用不同，前者解决现实问题，后者解决心灵问题——要注意，母亲这句话，实际上成为了Pi后来一切行动的心理渊薮。</p>
<p>电影里提及了两人的背景：父亲被现代医学救了一条性命，所以他相信科学，代表着理性；母亲倾向于宗教，代表着信仰。电影里还特意强调，母亲舍弃家庭跟随父亲，信仰是她与过去唯一的联系。</p>
<p>父亲和母亲的说法不同，少年Pi面临着抉择。要理性还是要信仰，这是一个精神领域的经典困境，少年Pi最终做出的选择是：“我决定去受洗。”也就是说，他选择了后者，也就意味着他认同了母亲的话，</p>
<p>但信仰需要的是虔诚，Pi并非一个虔诚者，他是个泛神论者。成年Pi的一番论述表明，他需要的是一种超自然的、至高无上的力量作为信仰依靠。至于无论是上帝、安拉还是毗湿奴，并不重要。可以这么说，他的意识里，信仰的是信仰本身，而不是某种特定的神明。</p>
<p>对虔诚者，他选择信仰是去解决问题。而Pi这样的人，他选择信仰，只是为了逃避问题。信仰对他来说，不是一个具体膜拜的对象，而是一个寄托，一个可以逃遁的空间。</p>
<p>这就是为什么，Pi要讲两个故事。</p>
<p>两个故事的真假一直存在争论。可在我看来，第一个故事毋庸置疑是编造出来的。李安很狡猾，他从不公开谈论故事的真假，他知道保持一部电影的魅力就是让观众无限地争论下去。可他在电影里的安排，却表明了自己内心的态度。</p>
<p>一个幻想故事，可以天马行空无所顾忌；但一个真实发生的故事，必须符合现实。第一个故事里有食人岛，这是一座深海中的热带密林，中间生存着无数沙漠中才有的狐獴。沙漠和大海，这是截然不同的两种意象。</p>
<p>如果这个故事是真实的，那么李安为什么不设置一个长满棕榈树爬满老鼠的正常海岛，使之看起来更加合理呢？可李安非但没这么做，反而煞费苦心地挑选了距离合理性最远的沙漠狐獴，这是刻意放大不合理，以此来暗示第一个故事的虚幻性，告诉所有观众，这只是幻觉，这只是想象。我们都希望第一个是真实，但没法说第一个就是真实的。</p>
<p>这有点像我们平时开玩笑。比如我调侃一个姑娘说：“你真漂亮我特喜欢你。”这句话有可能会被当成玩笑，也有可能会被当真。为了避免被当真的风险，我会故意夸大这句话“你比林志玲还漂亮我天天想着你连肉都不愿意吃了。”不合理的部分被无限放大，听的人自然明白这只是个玩笑。</p>
<p>所以，第一个故事是Pi所幻想出来的，第二个故事是真实的，是理性的。可Pi无法解决第二个残酷故事给自己内心带来的煎熬，他只能逃遁到第一个故事里去，把周围的遇难者幻化为各种动物，才能让自己平静——正如母亲晚餐时所说，理性解决外在的，信仰解决内在的。他那一句“我决定去受洗”，实际上就是自己决定逃遁的预言。</p>
<p>李安在这部电影里，有两种方式来引导观众巧妙地觉察到隐喻存在。一是预演。每一次大的行动之前，都会有一次小的行动作为预演；二是让本体和喻体反复出现，强化两者之间的关联，然后通过构建喻体之间的关系，来揭示本体的命运。</p>
<p>晚餐谈话，无疑就是Pi讲述两个故事的动机预演；而基督教牧师对Pi说的那句：“you must be thirsty。”和父亲说“从它眼中反映出来的，是你自己的投影”，则是李安在不断在我们脑海里建立起Pi和老虎之间的本喻关系。</p>
<p>有人说老虎代表了恐惧，我觉得应该更进一步，代表的是Pi的本能情感。在第一个故事里，Pi把自己一分为二，自己代表着人性或理性，老虎是剥除了理性的原始本能——本能地发怒，本能地恐惧，毫无掩饰地表达自己最粗粝的欲望。</p>
<p>换句话说，第一个故事里的人与虎，是第二个故事人性与兽性之间天人交战的投影。Pi不愿正视吃人的现实，只得一分为二，变成人与虎的奇幻漂流。这在许多影评里都有提及。</p>
<p>可是，不要忘了，我们否定第一个故事真实性，理由是它存在着不合理，而且李安保留了“不合理”的标签，以此提醒观众故事的虚幻。</p>
<p>但第二个故事，就真的合乎情理了么？</p>
<p>回想一下第二个故事的过程：Pi、母亲、水手和厨师登上救生艇。水手受伤，很快死去。厨师将其吃掉。然后Pi不小心放跑了一只海龟，被厨师殴打。母亲与厨师争执，被厨师所杀。厨师把母亲的尸体扔进大海喂鲨鱼。Pi出于愤怒杀了厨师，并吃掉了他。</p>
<p>在这个故事里，各种元素和第一个故事完美对应，母亲=猩猩，厨师=鬣狗，水手=斑马，老虎=Pi的本能，看似完美无缺，合乎情理，连最理性的保险公司都快要认同，但其中却存在着两个破绽。</p>
<p>第一个破绽，是香蕉。</p>
<p>当Pi讲述第一个故事的时候，说猩猩坐着漂浮的香蕉而来。保险调查员立刻指出，香蕉不会漂浮。当Pi讲述第二个故事时，对这个细节居然没有修改，仍旧坚持说妈妈坐着漂浮的香蕉前来。</p>
<p>香蕉在现实里能否漂浮，并不重要。在电影的世界里，保险调查员指出香蕉不能漂浮，这代表了一种常识，它的功能是用来牵出Pi讲的故事里反常识的地方，内在逻辑是自洽的。</p>
<p>第二个破绽，是妈妈的死。</p>
<p>厨师是一个对食物很执着的人，他会吃老鼠，会把水手杀掉用肉做鱼饵。对他来说，每一块肉都是极其宝贵的。可是妈妈死后，厨子没吃掉她，扔到了海里喂了鲨鱼——这是一种浪费，尤其是厨师已经吃过了水手，对他来说，最大的心理障碍已经消除，没理由会做这种浪费行为。</p>
<p>第二个故事本身已经非常圆满，却多了这两个颇为醒目的蛇足。实际上，它们也是刻意被保留下来的标签，用来提醒观众——第二个故事也并非真实——至少隐瞒了一部分真实。</p>
<p>这两个破绽，都与母亲有关。毫无疑问，第二个故事隐瞒的真实，就是母亲的下落，</p>
<p>前面我说过了，李安喜欢用各种比喻反复强化本喻关系。少年Pi和老虎是其中最醒目的一对，但还有一对本喻很容易被忽略。</p>
<p>母亲与莲花。</p>
<p>莲花与母亲之间的关系非常密切，在此之前已经有两次显著暗示。一次是在开头，母亲在地板上用粉笔画莲花给Pi和拉维看。一次是电影中段，Pi俯瞰海底，先是鱼形成莲花，然后又变成母亲的容貌（这里Pi父和拉维的脸都没出现，指向特别明显），最后叠加到了沉船。所以准确地说，莲花代表的是Pi对母亲的思念和爱。</p>
<p>与此同时，李安还特意安排了阿南蒂给Pi讲解舞蹈，引出一个关于莲花的重要比喻：林中莲花。</p>
<p>在Pi问阿南蒂林中莲花是什么意思时，她没有回答。直到我们进入整个电影最关键的一段情节：食人岛，才恍然大悟。</p>
<p>Pi在夜晚的林中摘下一朵莲花，打开以后，里面是一颗人牙。于是“林中莲花”这个比喻和指向，在这里得以完成。</p>
<p>我们知道，第一个故事是Pi的幻想。那么他在岛上的动作，肯定是对各种现实发生的投射。莲花是Pi对母亲的思念；莲花中的人牙，代表了母亲的遗骸，也即死亡。而母亲的躯体，实际上就是整个食人岛。</p>
<p>岛是母亲，而岛下涌起的酸潮，则是母亲的下场。</p>
<p>酸潮是一个意义异常清晰也异常恐怖的比喻。如果想表达母亲死亡的意象，有很多种办法，最简单的比如说潮水慢慢淹没岛屿，代表母亲的溺水；或者鲨鱼啃噬小岛的根茎，代表葬身鲨腹，等等……可李安选择的是一个非比寻常，几乎和海洋没有一点关系的比喻：酸。</p>
<p>这个酸，自然就是人的胃酸。酸潮扑上小岛，这个意象表明母亲是被吃掉的，被胃酸所消化，所以遗骸的代表物是牙齿。</p>
<p>Pi在岛上吃了植物根茎，老虎吃了狐獴，这是食母的暗喻。有一种说法认为，根茎和狐獴代表尸体的肌肉纤维和蛆虫，代表了吃人，这两个比喻在电影里找不到可参照的点。李安如果要设一个比喻，一定不会只设一次，一定会重复多次，或者找另外一个参照点，所以这个猜想是否成立，需不需要影射到如此细致，有待商榷。但食母是确凿无疑的。</p>
<p>之所以这么说，是因为食母之前已经预演过一次。</p>
<p>Pi是个素食主义者，他第一次抓到一条大鱼，一边大哭一边用锤子把它砸死。砸死以后，Pi跪倒在筏子上，哭着对鱼的尸体说：“毗湿奴，谢谢你化身为鱼来救我。”他这么做，是因为自己面临着饥馑危机，理性告诉他只能吃鱼渡日，为了能够达成心灵妥协，Pi必须在信仰里找了一个借口。基督教和伊斯兰教关于道德的教义太过鲜明，没办法利用，于是Pi只能选择毗湿奴作为理由。这也从一个侧面反应出Pi的宗教观。</p>
<p>于是，鱼成了毗湿奴的化身，Pi有了一个可接受的理由，内心回归平静。</p>
<p>这次吃鱼事件非常重要，承前启后。</p>
<p>往前看，它与晚餐谈话相对照。父亲在晚餐时说了句话：“今天的羊肉很美味，可惜你们享受不了。”说明父亲是家里唯一一个肉食者，他代表着理性，理性是要吃肉的。母亲则告诉Pi，理性可以解决外在，信仰可以解决内在。这一点是食鱼事件里也得到体现，Pi理性地杀鱼吃肉，然后用信仰给自己内心找了个避难所，一个借口。这个很变通甚至有点狡猾的举动，与Pi在餐桌上轻松地说“我决定去受洗”的精神是一脉相承。</p>
<p>往后看，母亲就是鱼。鱼是毗湿奴所化，那么母亲也一定是毗湿奴Pi来的。Pi吃鱼是因为这是毗湿奴的化身，Pi吃母亲也是因为她是毗湿奴的化身。一个化成鱼，一个化成了海盗。食鱼事件就是食母事件的预演。</p>
<p>宗教变成了Pi的心灵庇护所，他给自己构筑了一个坚固的壳。对Pi来说，基督教和伊斯兰教的教义太过清晰，对善恶的道德评判太过清晰，他唯一能选择的——同时也恰好是她母亲所信仰的——只有印度教。只有毗湿奴的神话特性，才能为Pi食母构造出一个合理的借口。</p>
<p>李安唯恐观众还搞不清楚这个比喻，还特意给出一个岛的轮廓特写。有人说这是毗湿奴的侧影，有人说这是一个女人，都没错。这个轮廓本来就兼具了母亲与毗湿奴两种特性。莲花是毗湿奴的象征，而母亲信仰的是印度教，毗湿奴的神话就是她讲给小Pi听的。从这个特写镜头，母亲-莲花-毗湿奴这三个元素的连接，得到了一次明白无误的强化。</p>
<p>这就是为什么岛的轮廓既像毗湿奴，又像是母亲，Pi为了给自己的食母寻找了个宗教理由，早视它们为一体了。</p>
<p>在这之前，Pi应该已经做过类似的事情。在幻想层面，鬣狗杀死了猩猩，老虎杀死了鬣狗，但很快鬣狗、斑马和猩猩的尸体全都消失了，全都被老虎吃掉了。投射到现实层面，厨师杀了母亲，Pi杀了厨师。然后面临饥馑的Pi吃掉了水手的剩余部分和厨师，最后把目光投向了自己母亲的尸体。</p>
<p>食人是一回事，食自己的母亲又是另外一回事。Pi在吃水手和厨师时还能保持正常——食鱼事件里，Pi杀死了鱼自己却没吃，而是喂了老虎，表明他把吃人归咎为自己的兽性，自己的人性还保持着清醒——但面对自己母亲，他内心的惊慌和挣扎可想而知。</p>
<p>在登岛之前，故事一里有一场惊天动力的大风暴，老虎在瑟瑟发抖，Pi在呼天抢地。开始时Pi还呼叫着神明，但很快就放弃了。这说明他的人性和兽性同时遭遇大了现实中的大挫折，这挫折可能是真正的风暴，也可能是其他灾难，总之造成的结果是食物匮乏至极，陷入极度的饥饿。唯一的食物，只有母亲。</p>
<p>吃了，自己心理绝对无法接受；不吃，一定会饿死。</p>
<p>可这场危机太过强烈，于是Pi的人性和兽性不得不暂时达成统一，或者说妥协，把母亲当成毗湿奴的化身，重演吃鱼时的故事，并且构造出一个毗湿奴食人岛的幻象。正如电影开头讲述的，到了夜晚，我们都生活在毗湿奴的梦里。</p>
<p>然后，在幻想层面，人与虎同时登岛，Pi吃了植物根茎，老虎吃了狐獴。不知大家还记得不记得，当Pi告别阿南蒂的时候，阿南蒂给他手腕系了绳子，代表了与最爱之人的告别。再回想起Pi一登岛便在岛上系了一段绳子，便会豁然开朗。Pi是在告别，与母亲告别，因为他即将要吃掉她。</p>
<p>到了夜晚，酸潮涌动，莲花里只残存一颗牙齿。等到Pi夜晚打开莲花看到人牙时，林中莲花的暗喻发挥了作用，他的理性之火终于觉醒，意识到自己做下的极恐怖的事。</p>
<p>Pi自己说担心被食人岛吞噬，才决定离开，实际上担心的是食母这件事吞噬掉他的精神，让他疯掉，乃至死亡。所以他选择了逃离这个岛，也就选择了忘记。这同样也在阿南蒂的情节里得到了呼应：“我记得那一天发生的每一件事情，但是却忘记了是如何告别的。”</p>
<p>结果Pi把这件事彻底忘掉了。他给保险员讲述第二个故事时，只讲到自己暗示吃了厨师，就停止了。他不是刻意隐瞒，而是自己也忘了，唯一残留的记忆，只有他自己编造出来保留在第一个故事里的食人岛。</p>
<p>阿南蒂的情节在整个电影里地位独特。如果把她的戏单独抽出看，根本没有任何意义，这段情节跟后面一点关系也没有，这女人也再没出现过。但李安从来不做无用功，他加入阿南蒂的戏，正是为了给后面食人岛的一系列活动建立比喻的对照系。</p>
<p>系绳子、忘记告别、林中莲花，这些都是食人岛中的重要暗喻，同时又与阿南蒂的故事要素全部照合。没有阿南蒂的故事，食人岛的行为就会让观众觉得不知所云。没有食人岛，阿南蒂则变得毫无意义。两者实际上是一个彼此呼应的隐喻体系的两端。</p>
<p>这就是充斥于细节中的各式隐喻所构筑出的第三个，也是真正的故事。</p>
<p>李安把第一个故事描绘的极为精美，对第二个故事却吝啬到一个镜头都没有，对第三个故事甚至只肯用隐喻来承载。他把现实包裹在美好的糖衣之内，又在现实里放入残酷夹心，递给大家。作家和保险公司相信了第一个故事，Pi本人相信的是第二个，为了强化自己的信念，他甚至还多信了一个犹太教。至于观众愿意剥开几层糖纸，则取决于他们自己。</p>
<p>李安用这种极度不均衡的手法，把选择权出让给观众。他打开了许多条路，每一条都没有设置终点。《盗梦空间》里，陀螺是旋转还是倒下，主角究竟是在梦里还是现实，观众可以予以猜测解读，也可以随时出戏，起身走人，归根到底这是主角自己的问题，观众们是无关的客观者。但观众们在看少年Pi的时候，不得不面临一个问题：我究竟该相信哪一个故事。这个选择权不再取决于故事的解读，而是取决于观众的内心。宗教者从中看到信仰的力量，无神论者从中看到对宗教的否定与稀释，心灵纯净者与疲惫于现实都市的人倾向于相信第一个故事，而内心黑暗的悲观主义者，则对背后隐藏的真相不寒而栗。</p>
<p>当李安在采访时被问起关于第二个故事，他的回答避重就轻，说故事拍完就交给观众了，这是个聪明的做法，他放弃了最权威的导演阐释权，让观众保持争论。莫衷一是是电影保持长久魅力的不二法门。所以我们不必奢望从他那里得到明确的答案，相信自己的本心就好。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p1784592701.webp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;故事开始于蒙特娄，也结束于蒙特娄。一名在找寻灵感的作家（拉菲·斯波 Rafe Spall 饰）无意间得知派·帕帖尔（伊尔凡·可汗 Irrfan Khan 饰）的传奇故事。派的父亲（阿迪勒·侯赛因 Adil Hussain 饰）开了一家动物园。因这样特殊的生活环境，少年派（苏拉·沙玛 Suraj Sharma 饰 ）对信仰与人的本性自有一套看法。在派17岁那一年，他的父母决定举家移民加拿大以追求更好的生活，而他也必须离开他的初恋情人。在前往加拿大的船上，他们遇见一位残忍成性的法国厨师（杰拉尔·德帕迪约 Gérard Depardieu 饰）。当天深夜在茫茫大海中，原本令派感到刺激无比的暴风雨一瞬间就成了吞噬货船的大灾难。派却奇迹般地活了下来，搭着救生船在太平洋上漂流，而且有一名最令人意想不到的同伴——理查德·帕克，一只孟加拉老虎。神奇的冒险旅程就这样意外开始了……&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Movie" scheme="http://aisee.me/tags/Movie/"/>
    
  </entry>
  
  <entry>
    <title>周鸿袆:通用型的人工智能都是骗子,必须结合垂直领域</title>
    <link href="http://aisee.me/2017/04/07/AI/Business/views-of-zhouhongyi-on-ai/"/>
    <id>http://aisee.me/2017/04/07/AI/Business/views-of-zhouhongyi-on-ai/</id>
    <published>2017-04-07T14:44:06.000Z</published>
    <updated>2017-04-07T14:47:58.536Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://n1.itc.cn/img8/wb/recom/2017/04/07/149152566053390572.JPEG" alt=""></p>
<p>总的来说，他认为， 人工智能代表了一个很重要的技术，但搞所谓通用型的人工智能基本都是骗子，说人工智能大脑具备了几岁小孩的智力，都是忽悠。“我今天觉得人工智能必须结合一个垂直的领域，解决具体的问题，这是人工智能最有机会的地方。”</p>
<a id="more"></a>
<p>雷锋网(公众号：雷锋网)消息，在半个月前的3月23号，三六零科技股份有限公司与华泰联合证券签订了IPO上市辅导协议，这意味着360会以IPO的方式回归A股。不久后，周鸿祎接受了中国证券报专访，谈及了为何退市，对人工智能的看法，以及对自家手机的定位。</p>
<p>谈到从美国退市，周鸿祎表示，主要是出于对当时网络安全形势的考虑。当时360已经是国内最大、全球前三的网络安全公司，除了普通用户，还服务着不少国企，重要单位，甚至是敏感的基础设施。后来，互联网主管部门的领导找到360，希望从国家安全、国家利益的角度出发，360能退回来从外资公司变成内资公司。</p>
<p>周鸿祎称，退市解决了身份问题，未来在军民融合的过程也能参与国防项目。他同时认为，360必须扎根在中国，希望能为中国国家网络安全、社会的网络安全贡献一份力量，在网络安全建设中担任重要角色。<br>在谈到国内安全产业现状时，他认为，360在包括非对称的技术对抗等一些领域与国际领先水平相比差距已经不大，甚至在某些领域是比较领先的。他称，360应该是第一家利用云端大数据、机器学习算法解决对未知攻击的预警。而国内外的主要的差距，是对络安全的认识和基础技术领域方面。</p>
<p>而对于人工智能，周鸿祎也有自己的看法，其最核心的安全业务就与人工智能有莫大的关系。</p>
<p>在人工智能与360的核心业务网络安全的结合上，他表示，“360是最早把人工智能技术用在了网络安全上的”。他们做了一个QVM引擎，用机器学习的算法，把很多已知的病毒样本送进机器学习，最后形成一种模式，可以识别新软件是不是恶意的程序或者潜在的攻击。QVM基本没有病毒库，只需定期更新规则。</p>
<p>360天眼则利用大数据和人工智能深度学习进行识别未知攻击。它通过网络各个结点采集到网络流量的数据，利用GPU的并行计算建立了深度学习的学习网络，利用这个网络识别网络异常的流量。另外，360还在与美国的大学合作，投资了一个实验室，专门研究利用人工智能的方法用机器来挖掘漏洞。</p>
<p>总的来说，他认为， 人工智能代表了一个很重要的技术，但搞所谓通用型的人工智能基本都是骗子，说人工智能大脑具备了几岁小孩的智力，都是忽悠。“我今天觉得人工智能必须结合一个垂直的领域，解决具体的问题，这是人工智能最有机会的地方。”</p>
<p>此前，周鸿祎在内部信中称，公司主要着眼两个方面：</p>
<blockquote>
<p>一个是图像识别，一个是大数据技术。而360在这两方面的进展是，前者已经在直播产品和相机产品方面有所应用，后者则主要依托于搜索与浏览器的数据，用于新一代的智能搜索。</p>
</blockquote>
<p>他同时认为，人工智能也不会让互联网时代过时。“我认为恰恰是因为有了移动互联网、产生了大数据，才有了人工智能的存在。我觉得人工智能跟IoT万物互联非常贴合，因为万物互联的大数据可以作为人工智能计算的根据。”</p>
<p>最后，对于360的智能手机业务，周鸿祎透露，智能手机业务因为错过了最好的时机，目前360手机每年不到1千万的销量，肯定不在第一梯队。但他们的定位是，主要做终端的市场，把安全做好，同时我们继续以线上销售为主。</p>
<blockquote>
<p>“我觉得手机最重要的是活着，这个市场已经经过了10年，创新已经快走到尽头了。我觉得可能在未来2、3年里，手机一定会有物理器件或软件上巨大的创新。我们在这个市场上继续存在，我们也在等待弯道超车的机会。”</p>
</blockquote>
<p>雷锋网版权文章，未经授权禁止转载。详情见转载须知。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://n1.itc.cn/img8/wb/recom/2017/04/07/149152566053390572.JPEG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;总的来说，他认为， 人工智能代表了一个很重要的技术，但搞所谓通用型的人工智能基本都是骗子，说人工智能大脑具备了几岁小孩的智力，都是忽悠。“我今天觉得人工智能必须结合一个垂直的领域，解决具体的问题，这是人工智能最有机会的地方。”&lt;/p&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="Zhou Hongyi" scheme="http://aisee.me/tags/Zhou-Hongyi/"/>
    
  </entry>
  
  <entry>
    <title>My Views of Happiness</title>
    <link href="http://aisee.me/2017/04/07/MyView/it-happens-to-me-by-accident/"/>
    <id>http://aisee.me/2017/04/07/MyView/it-happens-to-me-by-accident/</id>
    <published>2017-04-07T06:45:06.000Z</published>
    <updated>2017-04-07T13:08:10.045Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/Happiness-is-a.png" alt=""></p>
<blockquote>
<p>Healthy, Family, Enterprise, Thanksgiving<br>Love her，accompany her.</p>
</blockquote>
<a id="more"></a>
<h2 id="Healthy"><a href="#Healthy" class="headerlink" title="Healthy"></a>Healthy</h2><h3 id="Walking"><a href="#Walking" class="headerlink" title="Walking"></a>Walking</h3><h3 id="Sleeping"><a href="#Sleeping" class="headerlink" title="Sleeping"></a>Sleeping</h3><h3 id="Diet"><a href="#Diet" class="headerlink" title="Diet"></a>Diet</h3><h3 id="Mentality"><a href="#Mentality" class="headerlink" title="Mentality"></a>Mentality</h3><h2 id="Family"><a href="#Family" class="headerlink" title="Family"></a>Family</h2><h3 id="Resposibility"><a href="#Resposibility" class="headerlink" title="Resposibility"></a>Resposibility</h3><h3 id="Independency"><a href="#Independency" class="headerlink" title="Independency"></a>Independency</h3><h2 id="Enterprise"><a href="#Enterprise" class="headerlink" title="Enterprise"></a>Enterprise</h2><h3 id="Growing-up"><a href="#Growing-up" class="headerlink" title="Growing up"></a>Growing up</h3><h3 id="Startup"><a href="#Startup" class="headerlink" title="Startup"></a>Startup</h3><h2 id="Thanksgiving"><a href="#Thanksgiving" class="headerlink" title="Thanksgiving"></a>Thanksgiving</h2><h3 id="Face-to-Reality"><a href="#Face-to-Reality" class="headerlink" title="Face to Reality"></a>Face to Reality</h3><h3 id="Appreciation"><a href="#Appreciation" class="headerlink" title="Appreciation"></a>Appreciation</h3><h3 id="Try-your-best"><a href="#Try-your-best" class="headerlink" title="Try your best"></a>Try your best</h3><h3 id="Let-it-Go"><a href="#Let-it-Go" class="headerlink" title="Let it Go"></a>Let it Go</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/Happiness-is-a.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Healthy, Family, Enterprise, Thanksgiving&lt;br&gt;Love her，accompany her.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>The Basic Concepts of Java</title>
    <link href="http://aisee.me/2017/04/06/Program/Java/basic-concept-of-java/"/>
    <id>http://aisee.me/2017/04/06/Program/Java/basic-concept-of-java/</id>
    <published>2017-04-06T13:18:06.000Z</published>
    <updated>2017-04-12T14:04:15.826Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/java.jpg" alt=""></p>
<blockquote>
<p>Java is a good Coffee for Programmer<br>Resolve Problems from the views of Java designer , Compiler, CPU, Memery…</p>
</blockquote>
<p>见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。<sup>[1]<sup></sup></sup></p>
<a id="more"></a>
<h2 id="On-job-Training-2"><a href="#On-job-Training-2" class="headerlink" title="On job Training[2]"></a>On job Training<sup>[2]<sup></sup></sup></h2><h3 id="启发编程思想，培养编程感觉"><a href="#启发编程思想，培养编程感觉" class="headerlink" title="启发编程思想，培养编程感觉"></a>启发编程思想，培养编程感觉</h3><p>用程序来解决生活中的实际问题</p>
<blockquote>
<p>How –&gt; Why</p>
</blockquote>
<h3 id="Java-virtual-machine"><a href="#Java-virtual-machine" class="headerlink" title="Java virtual machine"></a>Java virtual machine</h3><p>可运行Java字节码的假想计算机</p>
<p>javac：编译器，在javac命令中，可以使用通配符来指定一次编译多个源文件<br>java: 解析器，启动一个Jvm</p>
<p>javac 将java源程序翻译为jvm可执行代码——java字节码，这一编译过程同c/c++有些不同，当C编译器生成一个对象的代码时，该代码是为在某一特定硬件平台运行而产生的。因此，在编译过程中，编译程序通过查表将所有对符号的引用转换为特定的内存偏移量，以保证程序的运行。</p>
<p>java编译器却不将对变量和方法的引用编译为数值引用，也不确定程序执行过程中的内存布局，而是将这些符号引用信息保留在字节码中，由解析器在运行过程中创立内存布局，然后再通过查表来确定一个方法所在的地址，这样就有效保证了java的可移植性和安全性。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/1.1.jpg" alt=""></p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/1.1-.jpg" alt=""></p>
<p>运行jvm字节码的工作是由解析器来完成</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/1.22.jpg" alt=""></p>
<ol>
<li>代码的装入</li>
</ol>
<p>由class loader完成，其负责装入运行一个程序需要的所有代码，这也包括程序代码中的类所继承的类和被其调用的类。当类装载器装入一个类时，该类被放在自己的名字空间中。除了通过符号引用自己名字空间以外的类，类之间没有其他办法可以影响其他类。在本台计算机上的所有类都在同一地址空间内，而所有从外部引进的类，都有一个自己独立的名字空间。这使得本地类通过共享相同的名字空间获得较高的运行效率，同时又保证它们与从外部引进的类不会相互影响。</p>
<p>当装入了运行程序需要的所有类后，解析器便可确定整个可执行程序的内存布局。解析器为符号引用于特定的地址空间建立对应关系及查询表。通过在这一阶段确定代码的内存布局，java很好地解决了由超类改变而使子类崩溃的问题，同时也防止了代码对地址的非法访问。</p>
<ol>
<li><p>代码的校验<br>被装入的代码由字节码校验器进行检查，校验器可发现操作数栈溢出、非法数据类型转化等多种错误。通过校验后，代码便开始执行。</p>
</li>
<li><p>代码的执行<br>Java字节码的执行有两种方式：<br>A、即时编译方式<br>  解析器先将字节码编译成机器码，然后再执行该机器码。<br>B、解析执行方式<br>   解析器通过每次解析并执行一小段代码来完成java字节码程序的所有操作。<br>通常采用的是第二种方法。由于jvm规格描述具有足够的灵活性，这使得将字节码翻译为机器代码的工作具有较高的效率，对于那些对运行速度要求较高的应用程序，解析器可将java字节码即时编译为机器码，从而很好地保证了java代码的可移植性和高性能。</p>
</li>
</ol>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">Usage: java [-options] class [args...]</div><div class="line">           (to execute a class)</div><div class="line">   or  java [-options] -jar jarfile [args...]</div><div class="line">           (to execute a jar file)</div><div class="line">where options include:</div><div class="line">    -d32          use a 32-bit data model if available</div><div class="line">    -d64          use a 64-bit data model if available</div><div class="line">    -server       to select the "server" VM</div><div class="line">                  The default VM is server.</div><div class="line"></div><div class="line">    -cp &lt;class search path of directories and zip/jar files&gt;</div><div class="line">    -classpath &lt;class search path of directories and zip/jar files&gt;</div><div class="line">                  A ; separated list of directories, JAR archives,</div><div class="line">                  and ZIP archives to search for class files.</div><div class="line">    -D&lt;name&gt;=&lt;value&gt;</div><div class="line">                  set a system property</div><div class="line">    -verbose:[class|gc|jni]</div><div class="line">                  enable verbose output</div><div class="line">    -version      print product version and exit</div><div class="line">    -version:&lt;value&gt;</div><div class="line">                  Warning: this feature is deprecated and will be removed</div><div class="line">                  in a future release.</div><div class="line">                  require the specified version to run</div><div class="line">    -showversion  print product version and continue</div><div class="line">    -jre-restrict-search | -no-jre-restrict-search</div><div class="line">                  Warning: this feature is deprecated and will be removed</div><div class="line">                  in a future release.</div><div class="line">                  include/exclude user private JREs in the version search</div><div class="line">    -? -help      print this help message</div><div class="line">    -X            print help on non-standard options</div><div class="line">    -ea[:&lt;packagename&gt;...|:&lt;classname&gt;]</div><div class="line">    -enableassertions[:&lt;packagename&gt;...|:&lt;classname&gt;]</div><div class="line">                  enable assertions with specified granularity</div><div class="line">    -da[:&lt;packagename&gt;...|:&lt;classname&gt;]</div><div class="line">    -disableassertions[:&lt;packagename&gt;...|:&lt;classname&gt;]</div><div class="line">                  disable assertions with specified granularity</div><div class="line">    -esa | -enablesystemassertions</div><div class="line">                  enable system assertions</div><div class="line">    -dsa | -disablesystemassertions</div><div class="line">                  disable system assertions</div><div class="line">    -agentlib:&lt;libname&gt;[=&lt;options&gt;]</div><div class="line">                  load native agent library &lt;libname&gt;, e.g. -agentlib:hprof</div><div class="line">                  see also, -agentlib:jdwp=help and -agentlib:hprof=help</div><div class="line">    -agentpath:&lt;pathname&gt;[=&lt;options&gt;]</div><div class="line">                  load native agent library by full pathname</div><div class="line">    -javaagent:&lt;jarpath&gt;[=&lt;options&gt;]</div><div class="line">                  load Java programming language agent, see java.lang.instrument</div><div class="line">    -splash:&lt;imagepath&gt;</div><div class="line">                  show splash screen with specified image</div><div class="line">See http://www.oracle.com/technetwork/java/javase/documentation/index.html for more details.</div></pre></td></tr></table></figure>
<h3 id="Java-Garbage-Collector"><a href="#Java-Garbage-Collector" class="headerlink" title="Java Garbage Collector"></a>Java Garbage Collector</h3><p>Java类的实例对象和数组所需的存储空间是在堆上分配的，解析器具体承担为类实例分配空间的工作。解析器在为一个实例对象分配完存储空间后，便开始记录对该实例对象所占用的内存区域的使用。一旦对象使用完毕，便将其回收到垃圾箱中。</p>
<p>在java语言中，除了new语句外没有其他方法为一个对象申请和释放内存。对内存进行释放和回收的工作是由java运行体统承担的，这允许java运行系统的设计者自己决定碎片回收的方法。</p>
<p>在java程序运行过程中，一个垃圾回收器会不定时地被唤起检查是否有不再被使用的对象，并释放它们占用的内存空间，垃圾回收器不由程序员控制，也无规律可循，并不会一产生垃圾，它就被唤起，甚至有可能到程序终止，它都没有启动的机会。</p>
<p>不同的jvm采用不同的回收策略，一般有两种比较常用：</p>
<ol>
<li><p>复制式回收策略<br>先将正在运行中的程序暂停，然后把正在被使用的所有对象从他们所在的堆内存里复制到另一块堆内存，那些不再被使用的对象所占据的内存空间就被释放掉。</p>
</li>
<li><p>自省式回收策略<br>检测所有正在使用的对象，并为它们标注，完成这项工作后再将所有不再被使用的对象所占据的内存空间一次释放。</p>
</li>
</ol>
<p>Java把内存划分成两种，一种是栈内存，另一种是堆内存。</p>
<p>在方法中定义的一些基本类型的变量和对象的引用变量都是在方法的栈内存中分配，当在一段代码块（也就是一对花括号{}之间）定义一个变量时，java就在栈中为这个变量分配内存空间，当超过变量的作用域后，java会自动释放掉为该变量所分配的内存空间，该内存空间可以立即被另作他用。</p>
<p>堆内存用来存放由new创建的对象和数组，在堆中分配的内存，由java虚拟机的gc来管理，在堆中产生一个数组或对象后，还可以在栈中定义一个特殊的变量，让栈中的这个变量的取值等于数组或对象在堆内存中的首地址，栈中的这个变量就成了数组或对象的引用变量，以后就可以在程序中使用栈中的引用变量来访问堆中的数组或对象，引用变量就相当于是为数组或对象起的一个名称（叫代号也行）。引用变量时普通的变量，定义时在栈中分配，引用变量在程序运行到其作用域之外后被释放，而数组和对象本身在堆中分配，即使程序运行到使用new产生数组和对象的语句所在的代码块之外，数组和对象本身占据的内存不会被释放，数组和对象在没有引用变量指向它时，才会变为垃圾，不再被使用，但仍然占据内存空间不放，在随后一个不确定的时间呗GC释放，这也是java比较占内存的原因。</p>
<blockquote>
<p>Java内部还是有指针的，只是把指针的概念对用户隐藏起来了。</p>
</blockquote>
<h3 id="Pitfall"><a href="#Pitfall" class="headerlink" title="Pitfall"></a>Pitfall</h3><h4 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h4><p>与java有关的环境变量对空格和中文是非常敏感的<br>java -verbose，显示JVM详细的加载过程</p>
<p>环境变量：OS中定义的变量，可供操作系统上所有应用程序使用<br>Windows：在cmd中，用set命令查看，是用户和系统环境变量的总和<br>path：设置供OS去寻找和执行应用程序的路径，当前目录–&gt;Path设置的目录，以最先找到的为准<br>Windows，用;分隔，Linux用:分隔<br>Windows，用%variable%取值，Linux用$variable取值</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/1.2.jpg" alt=""></p>
<p>classpath：jvm按照classpath环境变量指定的目录顺序去查找这个类，以最先找到的为准，注意：与linux类似，jvm只会到classpath指定的目录中去寻找类，而不会自动在当前目录中去寻找</p>
<p>.代表java虚拟机运行时的当前工作目录</p>
<p>系统Windows，用;分隔，Linux用:分隔</p>
<h3 id="Java-Class"><a href="#Java-Class" class="headerlink" title="Java Class"></a>Java Class</h3><p>Java中的程序必须以类的形式存在，一个类要被解析器直接启动运行，必须要有main方法，jvm运行时，首先会调用main方法，main方法的写法是固定的，public static void main(String[] args)</p>
<p>如果在class前没有public修饰符，命名可以是一切合法的名称，而带有public，必须与源文件同名</p>
<p>xxx.java中可以定义多个class，javac之后，产生多个class文件，能直接用java启动的只有那个含有main方法的类</p>
<h3 id="Java-Grammar"><a href="#Java-Grammar" class="headerlink" title="Java Grammar"></a>Java Grammar</h3><p>java是严格区分大小写的<br>java所有的程序代码分为结构定义和功能执行语句，一条语句可以写在若干行上，功能执行语句的最后必须用;结束。</p>
<p>java程序中一句连续的字符串不能分开在两行中写，如果太长，可以分成两个字符串，再用+号连起来，然后在+处断行。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">单行注释//</div><div class="line">多行注释/*   */</div><div class="line">文档注释/**  */</div></pre></td></tr></table></figure>
<p>多行注释可以嵌套单行注释，但是不能嵌套多行注释</p>
<p>标识符，不能以数字开头，不能是java中的保留关键字</p>
<blockquote>
<p>正确的路有一条，错误的路千万条，何苦要去记住哪些错误的路呢？永远用字幕开头，尽量不要包含其他的符号。</p>
</blockquote>
<p>注意：Java中没有sizeof、goto、const这些关键字，但不能用goto、const作为变量名。</p>
<h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><ol>
<li><p>整型常量<br>十六进制0x开头<br>八进制0开头<br>长整型l结尾</p>
</li>
<li><p>浮点数常量<br>单精度f/F结尾<br>双精度d/D结尾<br>小数常量的默认类型为double<br>float类型后面一定要加f/F</p>
</li>
<li><p>布尔常量<br>true和false</p>
</li>
<li><p>字符常量<br>java中的字符占用两个字节，是用unicode码表示的。<br>单引号<br>还可以用unicode码值来表示对应的字符</p>
</li>
<li><p>字符串常量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&quot;&quot;</div><div class="line">\反斜杠转义字符</div><div class="line">\\</div><div class="line">\r回车</div><div class="line">\n换行</div><div class="line">\t制表符</div><div class="line">\b退格键</div></pre></td></tr></table></figure>
</li>
<li><p>null常量<br>表示引用的对象为空</p>
</li>
</ol>
<h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>用一个变量定义一块内存以后，程序就可以用变量名代表这块内存中的数据。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> x=<span class="number">0</span>,y;</div><div class="line">y=x+<span class="number">3</span>;</div></pre></td></tr></table></figure></p>
<p>先取出x代表的那块内存单元的数，加上3，然后把结果放到y所在的那块内存单元。</p>
<p>Java基本变量类型，都是小写：<br>整数：byte,,short,int,long<br>浮点：float，double<br>字符：char （与c语言不同，java的字符占两个字节，是unicode编码的）<br>布尔：boolean</p>
<p>注意：java语言中没有无符号的数据类型</p>
<p>引用类型：类、接口、数组</p>
<p>计算机里只有数值，当你在内存中看到一个数值时，这个数值可能代表各种意义，比如你看到的文字、图像和听到的声音等都是使用数字形式来表示的，生活中的数值也可以代表其他意义，如1234可以代表密码、存款额、电报信息等，根据上下线索，我们能够知道这些数值代表的意义。其实字符也是一个数字，当要给一个字符变量赋值时，就可以直接用整数，如97对应字符’a’，使用char ch=97 将字符a赋值给变量ch，如果我们要将字符x赋值给一个char变量，该填一个怎样的整数呢？显然，不太容易记住每个字符所对应的数字，所以，我们就用单引号加上这个字符本身来表示那个字符对应的数字，如char ch=’x’。</p>
<p>变量的作用域（scope）<br>在c/c++/java里，一对花括号中间的部分就是一个代码块，代码块决定其中定义的变量的作用域。</p>
<p>局部变量在进行取值操作前必须被初始化或进行过赋值操作，否则会出现编译错误</p>
<h4 id="基本数据类型之间的转换"><a href="#基本数据类型之间的转换" class="headerlink" title="基本数据类型之间的转换"></a>基本数据类型之间的转换</h4><ol>
<li><p>自动（隐式）<br>同时满足两个条件：<br>A、两种类型彼此兼容；<br>B、目标类型的取值范围要大于源类型。</p>
</li>
<li><p>强制（显式）<br>类型不兼容或者取值范围要小于源类型</p>
</li>
</ol>
<p>字符串可以使用+同其他的数据类型相连形成一个新的字符串(将其他数据类型值默认转化为十进制)</p>
<p>源和目标分别是两个大小不同的内存块（由变量及数据的类型来决定），将源数据赋值给目标内存的过程，就是用目标内存块去套取源内存中的数据，能套多少算多少。</p>
<ol>
<li>表达式的数据类型自动提升</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">byte</span> b = <span class="number">5</span>;</div><div class="line">b = b-<span class="number">2</span>;</div><div class="line">System.out.println(b);</div></pre></td></tr></table></figure>
<p>在表达式取值时，变量值被自动提升为int类型</p>
<blockquote>
<p>b = (byte)(b-2)</p>
</blockquote>
<p>java定义了若干适用于表达式的类型提升规则<br>A、所有的byte类型、short类型和char类型的值将被提升到int类型；<br>B、如果一个操作数是long类型，计算结果就是long类型<br>C、如果一个操作数是float类型，计算结果就是float类型<br>D、如果一个操作数是double类型，计算结果就是double类型</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p><img src="http://onzc6nld3.bkt.clouddn.com/2.4.jpg" alt=""></p>
<p>方法要接收调用程序传递进来的参数，必须为每个传递进来的参数定义一个变量。如果方法没有return语句，编译时，系统会自动在方法的最后添加一个return。</p>
<p>void：不知道是什么类型，可定义方法时又非要填写一个返回值类型，就用它充数吧。</p>
<h4 id="方法的重载-overload"><a href="#方法的重载-overload" class="headerlink" title="方法的重载(overload)"></a>方法的重载(overload)</h4><p>java的编译器很聪明，能够根据调用方法时所传递的参数的个数和类型选择相应的方法，重载方法的参数列表必须不同，要么是参数的个数不同，要么是参数的类型不同。重载方法的返回值类型可以相同，也可以不同。</p>
<blockquote>
<p>如果两个方法的参数类型和个数完全一样，返回值类型不同，行不行？如果你是java的设计者，而且你的用户在程序里编写了这样的两个方法，在调用时，你能根据他所传递的参数来为他选择到底该用哪个吗？没有办法吧！那就是不能这样做。学编程不需要死记硬背，靠的是动脑筋来思考，这样的学习才能做到举一反三、触类旁通。</p>
</blockquote>
<h3 id="Java中的运算符"><a href="#Java中的运算符" class="headerlink" title="Java中的运算符"></a>Java中的运算符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">“+”除字符串相加功能外，还能降字符串与其他的数据类型相连成一个新的字符串，条件是表达式中至少有一个字符串，如&quot;x&quot;+123的结果是&quot;x123&quot;</div><div class="line">如果对负数取模，可以把模数符号忽略不计，如5%(-2)=1，但是被模数是负数就另当别论了如(-5)%(-2)=-1</div><div class="line">/，整数除和小数除是有区别的，整数之间做除法，只保留整数部分而舍弃小数部分。3510/1000*1000=3000</div></pre></td></tr></table></figure>
<p>为了避免将比较运算符==误写成=，有经验的程序员干脆写成if(3==x)，将常量放在==前面，这样万一写错，编译器就会报错。</p>
<p><strong>逻辑运算符</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&amp; 或者|无论任何情况，&amp;两边的表达式都会参与计算</div><div class="line">&amp;&amp; 或者||当左边为false时，则将不会计算其右边的表达式</div></pre></td></tr></table></figure></p>
<p>XOR异或，只有当^连接的两个布尔表达式的值不相同时，该组合才返回true值。</p>
<p><strong>移位运算符</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;&lt;左移</div><div class="line">&gt;&gt;右移</div><div class="line">&gt;&gt;&gt;无符号右移</div></pre></td></tr></table></figure></p>
<p>右移时，如果最高位是0，左边移空的高位就填入0<br>如果最高位是1，左边移空的高位就填入1<br>无符号右移，不管高位是0还是1，左边移空的高位都填入0</p>
<p>移位运算符适用数据类型有byte、short、char、int、long</p>
<ol>
<li>对低于int类型的操作数将先自动转换为int类型再移位；</li>
<li>对于int类型整数移位a&gt;&gt;b，系统先将b对32取模，得到的结果才是真正移位的位数。</li>
<li>对于long类型整数移位时a&gt;&gt;b，则是先将移位位数对64取模。</li>
</ol>
<p>移位能为我们实现整数除以或乘以2的n次方的效果，如x&gt;&gt;1的结果和x/2的结果是一样的，x&lt;&lt;2和x*4的结果也是一样的。一个数左移n位，就等于这个数乘以2的n次方，一个数右移n位，就等于这个数除以2的n次方。</p>
<blockquote>
<p>注意：移位不会改变变量本身的值</p>
</blockquote>
<p>经验分享：不要在一行中编写太复杂的表达式，也就是不要在一行中进行太多的运算，除可读性差之外，还极容易出错。多用括号分成多条语句，括号的优先级是最高的。</p>
<h3 id="程序的流程控制"><a href="#程序的流程控制" class="headerlink" title="程序的流程控制"></a>程序的流程控制</h3><p>结构化程序设计角度：</p>
<ol>
<li>顺序</li>
<li>选择</li>
<li>循环</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">对于if x then y，还有一种更简洁的写法</div><div class="line">变量 = 布尔表达式?语句1:语句2</div></pre></td></tr></table></figure>
<p>求绝对值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">y= x&gt;0?x:-x</div></pre></td></tr></table></figure></p>
<p>在java中，if和elseif括号中的表达式的结果必须是布尔型的，这一点和c/c++不一样</p>
<p>switch语句判断条件可以接受byte,short,int,char类型，不接受其它类型<br>case是一旦碰到第一次匹配，如果没有break，就会继续执行。</p>
<p>注意while表达式的括号后一定不要加;</p>
<p>do while语句的结尾处多了一个分号;</p>
<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组是多个相同类型数据的组合，实现对这些数据的统一管理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int [] x = new int[100];</div><div class="line">int x[] = new int[100];</div></pre></td></tr></table></figure></p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/2.14.jpg" alt=""></p>
<p>数组的静态初始化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int a = &#123;1,2,3,4&#125;;</div><div class="line">int a[] = new int[]&#123;3,4,5&#125;;</div></pre></td></tr></table></figure></p>
<p>注意：在java语言中声明数组时，无论用何种方式定义数组，都不能指定其长度。</p>
<p>多维数组，在java中并没有真正的多维数组，只有数组的数组，虽然在应用上很像C语言中的多维数组，但还是有区别的。在C语言中定义一个二维数组，必须是一个x*y二维矩阵块，类似我们通常所见到的棋盘。</p>
<p>Java中多维数组不一定是规则矩阵形式</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/2.18.jpg" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">int [][] xx = &#123;&#123;3,2,7&#125;,&#123;1,5&#125;,&#123;6&#125;&#125;</div></pre></td></tr></table></figure></p>
<p>与一维数组一样，在声明多维数组时不能指定其长度。</p>
<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><p>什么是面向对象，这是一个相对概念，是相对面向过程而言的。<br>要理解什么是幸福，要先理解什么是痛苦一样的道理。</p>
<h3 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h3><p>Windows窗口–&gt;结构体<br>HideWindow、MoveWindow，接收参数<br>谓语与宾语的关系，程序的重心集中在方法（谓语）上</p>
<h3 id="面向对象-1"><a href="#面向对象-1" class="headerlink" title="面向对象"></a>面向对象</h3><p>Windows窗口，主体，有属性，<br>有动作（方法，Hide,Move…）<br>主语与谓语的关系，程序的重点集中在主体/对象（主语）上</p>
<p>封装性，用类封装了数据和方法<br>真正能体现面向对象的强大优势的地方，是在面向对象的继承与多态性方面<br>封装性是面向对象的根源和最根本的属性</p>
<p>封装：Encapsulation<br>继承：Inheritance<br>多态：Polymorphism</p>
<p>面向对象的编程思想力图使在计算机语言中对事物的描述与现实世界中该事物的本来面目尽可能地一致，类和对象就是面向对象方法的核心概念。类时对某一类事物的描述，是抽象的、概念上的定义，对象是实际存在的该类事物的个体，因而也成实例（Instance）。</p>
<p>面向对象程序设计的重点是类的设计。</p>
<p>类的属性：类的成员变量<br>类的方法：类的成员方法<br>一个类中的方法可以直接访问同类中的任何成员（包括成员变量和成员方法）</p>
<p>注意：方法中的变量若与类成员变量同名，则该方法中对这个变量名的访问时局部变量而非成员变量。</p>
<p>对象的引用句柄是在栈中分配的一个变量，对象本身是在堆中分配的，原理同之前讲过的数组一样。</p>
<p>当一个对象被创建时，会对其中各种类型的成员变量自动进行初始化赋值，除了基本数据类型之外的变量类型都是引用类型。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">byte</span>、<span class="keyword">short</span>、<span class="keyword">int</span>： <span class="number">0</span></div><div class="line"><span class="keyword">long</span>:<span class="number">0L</span></div><div class="line"><span class="keyword">float</span>:<span class="number">0.0F</span></div><div class="line"><span class="keyword">double</span>:<span class="number">0.0</span>D</div><div class="line"><span class="keyword">char</span>：<span class="string">'\u0000'</span>（表示为空）</div><div class="line"><span class="keyword">boolean</span>：<span class="keyword">false</span></div><div class="line">All reference type：<span class="keyword">null</span></div></pre></td></tr></table></figure></p>
<h3 id="对象的比较"><a href="#对象的比较" class="headerlink" title="对象的比较"></a>对象的比较</h3><p>==用于比较两个变量的值是否相等<br>equals()方法用于比较两个对象的内容是否一致</p>
<p>equls方法是String类的一个成员方法，用于比较两个引用变量所指向的对象的内容是否相等，就像比较两个人的长相是否一样。</p>
<h3 id="匿名对象"><a href="#匿名对象" class="headerlink" title="匿名对象"></a>匿名对象</h3><p>创建完对象，在调用该对象的方法时，也可以不定义对象的句柄，而直接调用这个对象的方法。这样的对象叫做匿名对象。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Person p1 = new Person();</div><div class="line">p1.show();</div><div class="line"></div><div class="line">// 这句代码执行完，这个对象也就变成了垃圾</div><div class="line">new Person().show();</div></pre></td></tr></table></figure>
<p>使用匿名对象的两种情况：<br>A、如果对一个对象只需要进行一次方法调用<br>B、将匿名对象作为实参传递给一个方法调用</p>
<h3 id="类的封装"><a href="#类的封装" class="headerlink" title="类的封装"></a>类的封装</h3><p>如果外面的程序可以随意修改一个类的成员变量，会造成不可预料的程序错误，就像一个人的身高，不能被外部随意修改，只能通过各种摄取营养的方法去修改这个属性。</p>
<p>为了实现良好的封装性，通常将类的成员变量声明为private，再通过public的方法来对这个变量进行访问。</p>
<p>一个类通常就是一个小的模块，模块设计追求强内聚（许多功能尽量在类的内部独立完成，不让外面干预），弱耦合（提供给外部尽量少的方法调用）。</p>
<h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><ol>
<li>它具有与类相同的名称</li>
<li>它不含返回值</li>
<li>它不能在方法中用return语句返回一个值</li>
</ol>
<p>构造方法在程序设计中非常有用，它可以为类的成员变量进行初始化工作。<br>每一个人一出生就必须先洗澡。</p>
<p>注意：在构造方法里不含返回值的概念是不同于void的，对于public void这样的写法就不再是构造方法，而变成了普通方法。</p>
<p>构造方法的重载<br>new 类名(参数列表)</p>
<p>在执行构造方法中的代码之前，进行属性的显式初始化，也就是执行在定义成员变量时就对其进行赋值的语句。</p>
<p>在java的每个类里都至少有一个构造方法，如果没有定义，系统会自动为这个类产生一个默认的构造方法，没有参数，方法体中也没有任何代码，即什么也不做。</p>
<p>一旦定义了构造方法，系统就不再产生默认的构造方法。</p>
<p>经验：只要定义有参数的构造方法，都最好再定义一个无参数的构造方法。构造方法一般都是public的，因为它们在对象产生时，会被系统自动调用。</p>
<p>每个成员方法内部，都有一个this引用变量，指向调用这个方法的对象。<br><img src="http://onzc6nld3.bkt.clouddn.com/3.14.jpg" alt=""></p>
<blockquote>
<p>对于一个方法来说，只要是对象，它就可以调用，它根本就不区分是不是自己所属的那个对象。</p>
</blockquote>
<p>this应用场景：<br>A、想通过构造方法将外部传入的参数赋值给类成员变量，构造方法的形式参数名称与类的成员变量名相同；</p>
<p>B、假设有一个容器类和一个部件类，在容器类的某个方法中要创建部件类的实例对象，而部件类的构造方法要接收一个代表其所在容器的参数。</p>
<p>C、我们可以在一个构造方法里调用其他重载的构造方法，不是用构造方法名，而是用this（参数列表）的形式，根据其中的参数列表，选择相应的构造方法。</p>
<h3 id="GC有关的知识"><a href="#GC有关的知识" class="headerlink" title="GC有关的知识"></a>GC有关的知识</h3><blockquote>
<p>皮之不存毛将焉附，如果对象都不存在，又怎么能够调用它的方法，无论是构造方法被调用，还是析构方法被调用，对象都在内存中存在。</p>
</blockquote>
<p>Java的finalize()方法的作用类似c++中的析构方法，finalize()方法是在对象被当成垃圾从内存中释放前调用，而不是在对象变成垃圾前调用，垃圾回收器的启用不由程序员控制，业务规律可循，并不会一产生垃圾，它就被唤起，甚至有可能到程序终止，它都没有启动的机会。</p>
<p>System.gc()，强制启动垃圾回收器来回收垃圾。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/3.15.jpg" alt=""></p>
<blockquote>
<p>读代码时，不是专盯代码本身，而是要看内存状态。</p>
</blockquote>
<h3 id="方法的参数传递"><a href="#方法的参数传递" class="headerlink" title="方法的参数传递"></a>方法的参数传递</h3><h4 id="基本数据类型的参数传递"><a href="#基本数据类型的参数传递" class="headerlink" title="基本数据类型的参数传递"></a>基本数据类型的参数传递</h4><p>基本类型的变量作为实参传递，并不能改变这个变量的值。<br><img src="http://onzc6nld3.bkt.clouddn.com/3.16.jpg" alt=""></p>
<h4 id="引用数据类型的参数传递"><a href="#引用数据类型的参数传递" class="headerlink" title="引用数据类型的参数传递"></a>引用数据类型的参数传递</h4><p>一个对象可以有多个句柄（名称/引用）<br><img src="http://onzc6nld3.bkt.clouddn.com/3.17.jpg" alt=""></p>
<blockquote>
<p>Java语言在给被调用方法的参数赋值时，只采用传值的方式。所以，基本类型数据传递的是该数据的值本身，引用类型数据传递的也是这个变量的值本身，即对象的引用（句柄），而非对象本身，通过方法调用，可以改变对象的内容，但是对象的引用是不能改变的。对于数组，也属于引用类型。</p>
</blockquote>
<h3 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h3><h4 id="static-变量"><a href="#static-变量" class="headerlink" title="static 变量"></a>static 变量</h4><p>有时候，我们希望无论是否产生了对象，或无论产生了多少对象的情况下，某些特定的数据在内存空间里只有一份，例如所有的中国人都有国家名称，每一个中国人都共享这个国家名称，不必在每一个中国人的实例对象中都单独分配一个用于代表国家名称的变量。</p>
<p>静态变量在某种程度上与其他语言的全局变量相类似，如果不是私有的就可以在类的外部进行访问，此时不需要产生类的实例对象，只需要类名就可以引用。对于静态成员变量，我们叫类属性(class attributes)</p>
<p>用static标识符修饰的变量，它们在类被载入时创建，只要类存在，static变量就存在。</p>
<h4 id="static-方法"><a href="#static-方法" class="headerlink" title="static 方法"></a>static 方法</h4><p>对于静态成员方法，我们叫类方法(class method)，采用static关键字说明类的属性和方法不属于类的某个实例对象。</p>
<p>注意：</p>
<ol>
<li>在静态方法里只能直接调用同类中其他的静态成员（包括变量和方法），而不能直接访问类中的非静态成员。这是因为，对于非静态的方法和变量，需要先创建类的实例对象后才可使用。</li>
<li>静态方法不能以任何方式引用this和super关键字，道理同1</li>
<li>main()方法是静态的，因此jvm在执行main方法时不创建main方法所在的类的实例对象，因而在main方法中，不能直接访问该类中的非静态成员，必须创建该类的一个实例对象后，才能通过这个对象去访问类中的非静态成员。</li>
</ol>
<h4 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h4><p>static block，当类被载入时，静态代码块被执行，且只被执行一次，静态块经常用来进行类属性的初始化。尽管产生了类的多个实例对象，但其中的静态代码块只被执行一次。</p>
<p>当一个程序用到了其他的类，才会去装载那个类。</p>
<blockquote>
<p>类是在第一次被使用的时候才被装载，而不是在程序启动时就装载程序中所有可能要用到的类。</p>
</blockquote>
<h4 id="单态设计模式"><a href="#单态设计模式" class="headerlink" title="单态设计模式"></a>单态设计模式</h4><p>设计模式是在大量的实践总结和理论化之后优选的代码结构、编程风格以及解决问题的思考方式。设计模式就像是经典的棋谱，不同的棋局，我们用不同的棋谱，免得自己再去思考和摸索。</p>
<p>了解和掌握设计模式，这也是java开发者提高自身素质的一个很好选择。</p>
<p>单态设计模式：在整个软件系统中，对某个类只能存在一个对象实例，并且该类只提供一个取得其对象实例的方法。</p>
<ol>
<li>将类的构造方法的访问权限设置为private，这样，就不能用new操作符在类的外部产生类的对象了，但在类的内部仍可以产生该类的对象。</li>
</ol>
<h4 id="理解main方法的语法"><a href="#理解main方法的语法" class="headerlink" title="理解main方法的语法"></a>理解main方法的语法</h4><h4 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h4><p>在一个类内部定义类，这就是嵌套类（nested classes），也叫内部类。<br>嵌套类可以直接访问嵌套它的类的成员，包括private成员，但是嵌套类的成员却不能被嵌套它的类直接访问。</p>
<p>在类中直接定义的嵌套类的使用范围，仅限于这个类的内部，A类中定义了一个B类，那么B为A所知，却不被A的外面所知。内部类可以声明为private或protected。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/3.21.jpg" alt=""></p>
<p>在内部类对象保存了一个对外部类对象的引用，当内部类的成员方法中访问某一变量时，如果在该方法和内部类中都没有定义过这个变量，调用就会被传递给内部类中保存的那个外部类对象的引用，通过那个外部类对象的引用去调用这个变量，在内部类中调用外部类的方法也是一样的道理。</p>
<p>应用场景：<br>当一个类中的程序代码要用到另一个类的实例对象，而另一个类中的程序代码又要访问第一个类中的成员，将另一个类做成第一个类的内部类，程序代码就要容易编写得多。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">int</span> out_i = <span class="number">100</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</div><div class="line">		Inner in = <span class="keyword">new</span> Inner();</div><div class="line">		in.display();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</div><div class="line">		<span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></div><div class="line">		&#123;</div><div class="line">			System.out.println(<span class="string">"display out_i = "</span> + out_i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果用static修饰一个内部类，这个类就相当于是一个外部定义的类。<br>非static内部类中，成员是不能声明为static的。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/3.22-0.jpg" alt=""><br><img src="http://onzc6nld3.bkt.clouddn.com/3.22-1.jpg" alt=""></p>
<p>内部类也可以通过创建对象从外部类之外被调用，只要将内部类声明为public即可。</p>
<p>内部类Inner被声明为public，在外部就可以创建其外部类Outer的实例对象，再通过Outer类的实例对象创建Inner类的实例对象，就可以使用Inner类的实例对象来调用内部类Inner中的方法了。</p>
<p>嵌套类也可以在程序块的范围内定义。如，在方法中，或甚至在for循环体内部等。</p>
<p>在方法中定义的内部类只能访问方法中的final类型的局部变量，因为用final定义的局部变量相当于是一个常量，它的生命周期超出方法运行的生命周期。</p>
<h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><p>关键字：extends</p>
<ol>
<li>java只支持单继承，不允许多重继承，即：一个子类只能有一个父类</li>
<li>一个类可以被多个类继承</li>
<li>可以有多层继承</li>
<li>子类继承父类所有的成员变量和成员方法，但不继承父类的构造方法。在子类的构造方法中可使用语句super(参数列表)调用父类的构造方法。</li>
<li>如果子类的构造方法中没有显式地调用父类的构造方法，也没有使用this关键字调用重载的其它构造方法，则在产生子类的实例对象时，系统默认调用父类无参数的构造方法。</li>
<li>如果子类构造方法中没有显式地调用父类构造方法，而父类中又没有无参数的构造方法，则编译出错。经验：我们在定义类时，只要定义了有参数的构造方法，通常都还需要定义一个无参数的构造方法。</li>
</ol>
<h3 id="子类对象实例化过程"><a href="#子类对象实例化过程" class="headerlink" title="子类对象实例化过程"></a>子类对象实例化过程</h3><ol>
<li>分配成员变量的存储空间并进行默认的初始化；</li>
<li>绑定构造方法参数，就是new Class(实际参数列表)中所传递进的参数赋值给构造方法中的形式参数变量；</li>
<li>如有this()调用，则调用相应的重载构造方法，被调用的重载构造方法的执行流程结束后，回到当前构造方法，当前构造方法直接跳转到步骤6执行；</li>
<li>显式或隐式追溯调用父类的构造方法（一直到Object类为止，Object是所有java类的最顶层父类），父类的构造方法又从步骤2开始对父类执行这些流程，父类的构造方法的执行流程结束后，回到当前构造方法，当前构造方法继续往下执行。</li>
<li>进行实例变量的显式初始化操作，也就是执行在定义成员变量时就对其进行赋值的语句。</li>
<li>执行当前构造方法的方法体中的程序代码。</li>
</ol>
<p>注意：this()方法调用语句与this.school=school的区别，前者指调用其他的构造方法，后者是一个普通的赋值语句。</p>
<p>为什么？</p>
<ol>
<li>为什么super(…)和this(…)调用语句不能同时在一个构造方法中出现？</li>
<li>为什么super(…)或this(…)调用语句只能作为构造方法的第一句出现？</li>
</ol>
<p><img src="http://onzc6nld3.bkt.clouddn.com/4.1.jpg" alt=""></p>
<h3 id="覆盖父类的方法"><a href="#覆盖父类的方法" class="headerlink" title="覆盖父类的方法"></a>覆盖父类的方法</h3><p>覆盖方法必须和被覆盖方法具有相同的方法名称、参数列表和返回值类型<br>覆盖方法时，不能使用比父类中被覆盖的方法更严格的访问权限，如父类的方法时public，子类的方法就不能是private。</p>
<h3 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h3><ol>
<li>在java中声明类、属性和方法时，可使用关键字final来修饰。</li>
<li>final标记的类不能被继承。</li>
<li>final标记的方法不能被子类重写；</li>
<li>final标记的变量（成员变量或局部变量）即成为常量（这个常量也只能在这个类的内部使用，不能在类的外部直接使用，当用public static final共同标记常量时，这个常量就成了全局的常量，并且只能在定义时赋值，java中的全局常量也放在一个类中定义），只能赋值一次。final标记的成员变量必须在声明的同时或在该类的构造方法中显式赋值，然后才能使用。</li>
<li>方法中定义的内置类只能访问该方法内的final类型的局部变量，用final定义的局部变量相当于是一个常量，它的生命周期超出方法运行的生命周期。将一个形参定义成final也是可以的，这就限定了我们在方法中修改形式参数的值。</li>
</ol>
<h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><p>Java中可以定义一些不含方法体的方法，它的方法体的实现交给该类的子类根据自己的情况去实现，这样的方法就是抽象方法，包含抽象方法的类就叫抽象类，一个抽象类中可以有一个或多个抽象方法。任何带有抽象方法的类都必须声明为抽象类。</p>
<p>修饰符：abstract<br>抽象类不能被实例化<br>抽象方法只需声明，而不需实现。</p>
<p>抽象类的子类必须覆盖所有的抽象方法后才能被实例化，否则这个子类还是个抽象类。</p>
<p>abstract 返回值类型 抽象方法(参数列表)</p>
<h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>如果一个抽象类中的所有方法都是抽象的，就可以将这个类用另外一种方式来定义，也就是接口定义。</p>
<p>接口是抽象方法和常量值的定义的集合，从本质上讲，接口是一种特殊的抽象类，这种类中只包含常量和方法的定义，而没有变量和方法的实现。</p>
<p>即使没有显式地将其中的成员用public关键字标识，但这些成员都是public访问类型的。</p>
<p>接口里的变量默认是用public static final标识的，所以，接口中定义的变量就是全局静态常量。</p>
<ol>
<li>可以用extends关键字去继承一个已有的接口</li>
<li>也可以定义一个类，用implements关键字去实现一个接口中的所有方法</li>
<li>还可以去定义一个抽象类，用implements关键字去实现一个接口中定义的部分方法</li>
</ol>
<blockquote>
<p>在java中，设计接口的目的是为了让类不必受限于单一继承的关系，而可以灵活地同时继承一些共有的特性，从而达到多重继承的目的，而且避免了C++中多重继承的复杂关系所产生的问题。多重继承的危险性在于一个类有可能继承了同一个方法的不同实现，对接口来讲绝不会发生这种情况，因为接口没有任何实现。</p>
</blockquote>
<p>一个类可以在继承一个父类的同时，实现一个或多个接口，extends关键字必须位于implements关键字之前。</p>
<ol>
<li>实现一个接口就是要实现该接口的所有方法（抽象类除外）</li>
<li>接口中的方法都是抽象的</li>
<li>多个无关的类可以实现同一个接口</li>
<li>一个类可以实现多个无关的接口</li>
</ol>
<blockquote>
<p>调用者和被调用者必须共同遵守某一限定，调用者按照这个限定进行方法调用，被调用者按照这个限定进行方法实现，在面向对象的编程语言中，这种限定就是通过接口类来表示的，主板和各种PCI卡就是按照PCI接口进行约定的。</p>
</blockquote>
<p>java编译器并不能根据一个类中有哪些方法，就知道它是某个类的子类的，编译器只能从extends和implements关键字上来了解。</p>
<h3 id="对象的多态性"><a href="#对象的多态性" class="headerlink" title="对象的多态性"></a>对象的多态性</h3><h4 id="对象的类型转换"><a href="#对象的类型转换" class="headerlink" title="对象的类型转换"></a>对象的类型转换</h4><ol>
<li>子类转换成父类</li>
<li>父类转换成子类<br>强制转换：目的是让编译器进行语法检查时开点后门，放你过关，强制类型转换并不是要对内存中的对象大动手术，不是要将男人变成女人。</li>
</ol>
<p>强制类型转换的前提是程序员提前就知道要转换的父类引用类型对象的本来面目确实是子类类型的。</p>
<blockquote>
<p>可以用instanceof判断是否一个类实现了某个接口，也可以用它来判断一个实例对象是否属于一个类。</p>
</blockquote>
<h4 id="Object类"><a href="#Object类" class="headerlink" title="Object类"></a>Object类</h4><p>Object类时java类层中的最高层类，是所有类的超类，java中任何一个类都是它的子类，由于所有类都是object衍生出来的，所以object的方法适用于所有类。</p>
<p>Object中有一个equals方法，用于比较两个对象是否相等，默认值为false，为了确保准确，自定义类中必须覆盖Object类的equals方法。</p>
<h4 id="多态性"><a href="#多态性" class="headerlink" title="多态性"></a>多态性</h4><ol>
<li>应用程序不必为每一个派生类（子类）编写功能调用，只需要对抽象基类进行处理即可。</li>
<li>派生类的功能可以被基类的方法或引用变量调用，这叫后向兼容，可以提高程序的可扩充性和可维护性。</li>
</ol>
<h4 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h4><p>内部类可以声明是抽象类或是一个接口，它可以被另外一个内部类来继承或实现，内部类可以继承外部类，也可以用final关键字修饰。</p>
<h3 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h3><p>异常定义了程序中遇到的非致命的错误，而不是编译时的语法错误，如程序打开一个不存在的文件，网络连接中断，操作数越界，装载一个不存在的类等…</p>
<p>当try代码块中的程序发生了异常，系统将这个异常发生的代码行号，类别等信息封装到一个对象中，并将这个对象传递给catch代码块。</p>
<h4 id="throws关键字"><a href="#throws关键字" class="headerlink" title="throws关键字"></a>throws关键字</h4><p>定义方法时用throws关键字声明了它有可能发生异常，调用者就必须使用try…catch语句进行处理，这叫防患于未然。</p>
<p>在a调用方法中不处理，继续throws，一直到main方法<br>java中一个方法时可以被声明成抛出多个异常的。</p>
<p>Exception类是所有异常类的父类，除了ArithmeticException、NullPointerException、ArrayIndexOutOfBoundsException等系统异常外，我们也可以定义自己的异常类。</p>
<p>java是通过throw关键字抛出异常对象的<br>throw 异常对象;</p>
<p>在一个方法内使用throw关键字抛出了异常对象，如果该方法内部没有用try…catch语句对这个抛出的异常进行处理，则此方法应声明抛出异常，而由该方法的调用者负责处理。</p>
<p>我们可以在一个方法中使用throw、try…catch语句来实现程序的跳转<br><img src="http://onzc6nld3.bkt.clouddn.com/4.4.4.jpg" alt=""></p>
<h4 id="finally关键字"><a href="#finally关键字" class="headerlink" title="finally关键字"></a>finally关键字</h4><p>finally语句中的代码不管异常是否被捕获总是要被执行的。<br>finally中的代码块不能被执行的唯一情况是：在被保护代码块中执行了System.exit()</p>
<p>注意：</p>
<ol>
<li>一个方法被覆盖时，覆盖它的方法必须抛出相同的异常或异常的子类；</li>
<li>如果父类抛出多个异常，那么重写（覆盖）方法必须抛出那些异常的一个子集，也就是说，不能抛出新的异常。</li>
</ol>
<p>java没有goto语句，它保留goto关键字只是为了让程序员不要搞混。java利用带标号的break和continue语句来取代goto。java中严格定义的异常处理机制使goto没有再存在的必要，取消这种随意跳转的语句有利于优化代码以及保持系统的健壮性和安全性。</p>
<blockquote>
<p>java异常强制我们去考虑程序的强健性和安全性</p>
</blockquote>
<h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><p>java通过引入package机制，提供类的多层类命名空间。</p>
<p>位于包中的每个类的完整名称都应该是包名与类名的组合。<br>同一个包中的类相互访问，不用指定包名。</p>
<blockquote>
<p>同是中国的两个城市，使用时非要加个中国前缀，也是行得通的，但让人听起来就有点像汉奸了</p>
</blockquote>
<p>如果从外部访问一个包中的类，必须使用类的完整名称。<br>虚拟机在装载带有包名的类时，会先找到classpath环境变量指定的目录，再在这些目录中，按照与包名层次相对应的目录结构去查找class文件。</p>
<p>在编译时，让javac来生成与包名层次相对应的目录结构，而不必手工去创建。</p>
<p>javac -d  . Test.java</p>
<p>. 代表当前目录</p>
<p>如果没有-d选项，.class文件存放在当前工作目录</p>
<p>位于在包中的类，在文件系统中的存放位置，必须有与包名层次相对应的目录结构。在package语句中，用.来指明包的层次。</p>
<p>虚拟机在装载带有包名的类时，会先找到classpath环境变量指定的目录，再在这些目录中，按照与包名层次相对应的目录结构去查找class文件。</p>
<ol>
<li>即使java/class文件名相同，但其中包含的类的完整名称却不一定相同。</li>
<li>同一个包中的类不必位于同样的目录，因为java是通过classpath去寻找顶层包名。</li>
</ol>
<p>包名必须在程序中通过package语句指定，而不是靠目录结构来指定，先要有了包名后，才需要相应的目录结构。</p>
<p>包声明放在源文件的最前面，每个源文件只能声明一个包。</p>
<p>在实际应用中，虽然编译了一个修改过的java源文件，但运行可能是某个旧的class文件，特别是旧的class文件所在的目录再classpath环境变量中的位置，位于新的class文件所在的目录的前面，问题就更加隐蔽了。</p>
<p>当我们在编译过程中遇到了问题，有时并不是程序本身所带来的问题，需要我们放眼全局，思路更加开阔一些，从多个方面去思考和解决问题。</p>
<h4 id="import"><a href="#import" class="headerlink" title="import"></a>import</h4><p>父包和子包之间，能从语意上表示某种血缘和亲近关系，但父包和子包在使用上没有任何关系，如父包中的类调用子包中的类，必须引用子包的全名，而不能省略父包名部分。</p>
<p>import一个包中所有的类，并不会import这个包中的子包中的类，如果程序中用到了子包的类，需要再次对子包作单独引入。</p>
<h4 id="jdk中的常用包"><a href="#jdk中的常用包" class="headerlink" title="jdk中的常用包"></a>jdk中的常用包</h4><ol>
<li>java.lang<br>包含一些java语言的核心类，如String、Math、Integer、System和Thread，提供常用功能；</li>
</ol>
<p>java1.2以后的版本中，java.lang这个包会自动被导入，对于其中的类，不需要使用import语句来做导入，如System类</p>
<ol>
<li><p>java.io<br>包含能提供多种输入/输出功能的类</p>
</li>
<li><p>java.util<br>包含一些实用工具类，如定义系统特性、使用与日期日历相关的方法。</p>
</li>
<li><p>java.net<br>包含执行与网络相关的操作的类</p>
</li>
</ol>
<h3 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h3><p>访问修饰符共有4个：default、public、protected、private</p>
<h4 id="类成员"><a href="#类成员" class="headerlink" title="类成员"></a>类成员</h4><p>private<br>不能在方法体内声明的变量前加private修饰符</p>
<p>default 默认访问控制：default、friendly、package<br>对于默认访问控制成员，可以被这个包中的其它类访问。如果一个子类与父类位于不同的包中，子类也不能访问父类中的默认访问控制成员。</p>
<p>protect：既可以被同一个包中的其他类访问，也可以被不同包中的子类访问。</p>
<p>public：所有类，不管访问类与被访问类是否在同一个包中。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/4.1table.jpg" alt=""></p>
<h4 id="类"><a href="#类" class="headerlink" title="类"></a>类</h4><p>只有两种访问权限<br>即：public和默认</p>
<p>父类不能是private和protected，否则子类无法继承<br>public修饰的类能被所有的类访问，<br>默认修饰的类，只能被同一包中的所有类访问。</p>
<h3 id="java命名习惯"><a href="#java命名习惯" class="headerlink" title="java命名习惯"></a>java命名习惯</h3><ol>
<li>包名中的字母一律小写，如xxyyzz</li>
<li>类名、接口名应当使用名词，每个单词的首字母大写，如XxYyZz</li>
<li>方法名，第一个单词小写，后面每个单词的首字母大写，如xxYyZz</li>
<li>变量名，第一个单词小写，后面每个单词的首字母大写，如xxYyZz</li>
<li>常量名中的每一个字母一律大写，如XXXYYYZZZ</li>
</ol>
<h3 id="使用jar文件"><a href="#使用jar文件" class="headerlink" title="使用jar文件"></a>使用jar文件</h3><p>我们用的jdk中的包与类主要在jdk的安装目录的jre\lib\rt.jara文件中，由于java虚拟机会自动找到这个jar包，所以我们在使用这个jar包的类时，无需再用classpath来指向它们的位置。</p>
<p>jar: java archive file</p>
<p>jar文件是一种压缩文件，与常见的zip压缩文件格式兼容，习惯上称之为jar包，我们将开发的类压缩到jar文件中，以jar包的方式提供给别人使用。只要别人的classpath环境变量的设置中包含这个jar文件，java虚拟机就能自动在内存中解压这个jar文件，把这个jar文件当做一个目录，在这个jar文件中去寻找所需要的类及包名所对应的目录结构。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/4.7.jpg" alt=""></p>
<h4 id="jar-命令详解"><a href="#jar-命令详解" class="headerlink" title="jar 命令详解"></a>jar 命令详解</h4><p>jar命令是随jdk自动安装的，存放在jdk安装目录下的bin目录中。</p>
<p>jar命令可以用来对大量的类进行压缩，然后存为jar文件</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">Usage: jar &#123;ctxui&#125;[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...</div><div class="line">Options:</div><div class="line">    -c  create new archive</div><div class="line">    -t  list table of contents for archive</div><div class="line">    -x  extract named (or all) files from archive</div><div class="line">    -u  update existing archive</div><div class="line">    -v  generate verbose output on standard output</div><div class="line">    -f  specify archive file name</div><div class="line">    -m  include manifest information from specified manifest file</div><div class="line">    -n  perform Pack200 normalization after creating a new archive</div><div class="line">    -e  specify application entry point for stand-alone application</div><div class="line">        bundled into an executable jar file</div><div class="line">    -0  store only; use no ZIP compression</div><div class="line">    -P  preserve leading '/' (absolute path) and ".." (parent directory) components from file names</div><div class="line">    -M  do not create a manifest file for the entries</div><div class="line">    -i  generate index information for the specified jar files</div><div class="line">    -C  change to the specified directory and include the following file</div><div class="line">If any file is a directory then it is processed recursively.</div><div class="line">The manifest file name, the archive file name and the entry point name are</div><div class="line">specified in the same order as the 'm', 'f' and 'e' flags.</div><div class="line"></div><div class="line">Example 1: to archive two class files into an archive called classes.jar:</div><div class="line">       jar cvf classes.jar Foo.class Bar.class</div><div class="line">Example 2: use an existing manifest file 'mymanifest' and archive all the</div><div class="line">           files in the foo/ directory into 'classes.jar':</div><div class="line">       jar cvfm classes.jar mymanifest -C foo/ .</div></pre></td></tr></table></figure>
<p>注意：使用jar压缩文件夹时，在生成的jar文件中会保留在jar命令中所出现的路径名</p>
<h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><blockquote>
<p>在多任务系统中，每个独立执行的程序称为进程，也就是”正在进行的程序”</p>
</blockquote>
<p>每个进程都有独立的代码和数据空间（进程上下文）</p>
<blockquote>
<p>一个线程就是一个程序内部的一条执行线索</p>
</blockquote>
<p>当程序启动运行时，就自动产生了一个线程，主方法main就是在这个线程上运行的，当不再产生线程时，程序就是单线程的。如果要一个程序实现多段代码同时交替运行，就需产生多个线程，并指定每个线程上所要运行的程序代码段。</p>
<p>创建多线程有两种方法，继承Thread类和实现Runnable接口。</p>
<h4 id="用Thread类创建线程"><a href="#用Thread类创建线程" class="headerlink" title="用Thread类创建线程"></a>用Thread类创建线程</h4><p>Java的线程时通过java.lang.Thread类来控制的，一个Thread类的对象代表一个线程，而且只能代表一个线程，通过Thread类和它定义的对象，我们可以获得当前线程对象、获取某一线程的名称，可以实现控制线程暂停一段时间等功能。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/5.3.jpg" alt=""></p>
<ol>
<li><p>要将一段代码在一个新的线程上运行，该代码应该在一个类的run方法中，并且run方法所在的类是Thread类的子类。倒过来说，要实现多线程，必须编写一个继承了Thread类的子类，子类要覆盖Thread类中的run方法，在子类的run方法中调用想在新线程上运行的程序代码。</p>
</li>
<li><p>启动一个新的线程，不是直接调用Thread子类对象的run方法，而是调用Thread子类对象的start（从Thread类中继承的）方法，Thread类对象的start方法将产生一个新的线程，并在该线程上运行该Thread类对象中的run方法，根据面向对象的多态性，在该线程上实际运行的是Thread子类（也就是我们编写的那个类）对象中的run方法。</p>
</li>
<li><p>由于线程的代码在run方法中，那么该方法执行完以后，线程也就相应的结束了，因而可以通过控制run方法中的循环条件来控制线程的终止。</p>
</li>
</ol>
<p>Thread类有许多构造方法，通过Thread()构造方法创建的，线程将调用线程对象的run()方法作为其运行代码。如果Thread类的子类没有覆盖run方法，则程序会调用Thread类中的run方法，而该方法什么也不做，所以新的线程刚一产生就结束了。</p>
<p>直接在程序中写 new Thread().start()，新的线程将直接调用Thread类中的run()方法，效果同上。</p>
<p>综上，使用Thread()构造方法，适用于覆盖了run方法的Thread子类创建线程对象的情况。</p>
<h4 id="使用Runnable接口创建多线程"><a href="#使用Runnable接口创建多线程" class="headerlink" title="使用Runnable接口创建多线程"></a>使用Runnable接口创建多线程</h4><p>Thread(Runnable target)构造方法<br>Runnable接口类，该接口只有一个run()方法，当使用Thread（Runnable target）方法创建线程对象时，需要为该方法传递一个实现了Runnable接口的类对象，这样创建的线程将调用那个实现了Runnable接口的类对象中的run()方法作为其运行代码，而不再调用Thread类中的run方法了。</p>
<p>一个线程对象只能启动一个线程，无论你调用多少遍start()方法，结果都只有一个线程。</p>
<p>创建多个Thread类子类的对象，就等于创建了四个资源，每个线程在独立地处理各自的资源。</p>
<p>经验：一个资源（一个Thread类子类或实现了Runnable接口的类的对象），创建多个线程去处理同一个资源，并且每个线程上所允许的是相同的程序代码。</p>
<p>如：Windows上可以启动多个记事本程序，也就是多个进程使用的是同一个记事本程序代码。</p>
<h4 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h4><p>实现Runnable接口相对于继承Thread类来说，有下述好处：</p>
<ol>
<li><p>适合多个相同程序代码的线程去处理同一资源的情况，把虚拟CPU（线程）同程序的代码、数据有效分离，较好地体现了面向对象的设计思想。</p>
</li>
<li><p>可以避免由于java的单继承性带来的局限。当我们要将已经继承了某一个类的子类放入多线程中，由于一个类不能同时又两个父类，所以不能用继承Thread类的方式，只能采用实现Runnable接口的方式。</p>
</li>
<li><p>有利于程序的健壮性，代码能够被多个线程共享，代码与数据是独立的。当多个线程的执行代码来自于同一个类的实例时，即称它们共享相同的代码，多个线程可以操作相同的数据，与它们的代码无关。当共享访问相同的对象时，即它们共享相同的数据。当线程被构造时，需要的代码和数据通过一个对象作为构造方法实参传递进去，这个对象就是一个实现了Runnable接口的类的实例。</p>
</li>
</ol>
<h4 id="后台线程"><a href="#后台线程" class="headerlink" title="后台线程"></a>后台线程</h4><p>对java程序来说，只要还有一个前台线程在运行，这个进程就不会结束，如果一个进程只有后台线程运行，这个进程就会结束。前台线程时相对后台线程而言的，如果对某个线程对象在启动（调用start方法）之前调用了setDaemon(true)方法，这个线程就变成了后台线程。</p>
<h4 id="join联合线程"><a href="#join联合线程" class="headerlink" title="join联合线程"></a>join联合线程</h4><p>Thread类的join方法，作用是把a线程合并到调用a.join()语句的线程中。除了无参数的join方法外，还有两个带参数的join方法，分别是join(long millis)和join(long millis, int nanos)，它们的作用是指定合并时间，前者精确到毫秒，后者精确到纳秒，意思是两个线程合并指定的时间后，又开始分离，回到合并前的状态。</p>
<h4 id="多线程实践"><a href="#多线程实践" class="headerlink" title="多线程实践"></a>多线程实践</h4><ol>
<li><p>网络聊天程序<br>发送过程与接收过程在两个不同的线程上运行，彼此之间没有任何约束<br><img src="http://onzc6nld3.bkt.clouddn.com/5.10.jpg" alt=""></p>
</li>
<li><p>耗时数据处理取消机制<br>创建一个新的线程，该线程与用户交互，接收用户的输入，当接收到用户的停止命令时，新线程将主线程的循环条件Flag设置为假，即通知主线程在下次检查循环条件时结束复制过程。</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">boolean</span> bFlag =<span class="keyword">true</span>;</div><div class="line"><span class="keyword">while</span>(bFlag)&#123;</div><div class="line">    <span class="comment">//复制程序</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>www服务器<br>为每一个来访者创建一个线程</li>
</ol>
<h4 id="多线程同步"><a href="#多线程同步" class="headerlink" title="多线程同步"></a>多线程同步</h4><p>sleep(long millis)<br>线程的睡眠是可以被打断的，通过Thread.interrupt()，线程的睡眠被打断后进入Runnable状态。</p>
<blockquote>
<p>线程安全，类的同一个实例的方法在多个线程被调用，是否会出现意外。</p>
</blockquote>
<p>一、同步代码块<br>代码块的原子性，好比一座独木桥，任一时刻，只能有一个人在桥上行走，程序中不能有多个线程同时在这两句代码之间执行，这就是线程同步。</p>
<p>将这些需要具有原子性的代码，放入synchronized语句中</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// object 可以是任意的一个对象</span></div><div class="line"><span class="keyword">synchronized</span>(object)&#123;代码段&#125;</div></pre></td></tr></table></figure>
<p>任何类型的对象都有一个标志位，该标志位具有0、1两种状态，其开始状态为1，当执行synchronized(object)语句后，object对象的标志位变为0状态，知道执行完整个synchronized语句中的代码块后又回到1状态。</p>
<p>一个线程执行到synchronized语句处，先检查object对象（监视器）的标志位（锁旗标），如果为0状态，表明已经有另外的线程的执行状态正在有关的同步代码块中，这个线程将暂时阻塞（加入到一个与该对象的锁旗标相关联的等待线程池中），让出cpu资源，直到另外的线程执行完有关的同步代码块，将object对象的标志位恢复到1状态，这个阻塞就被取消，线程能够继续往下执行，并将object对象的标志位变为0状态，防止其它线程再进入有关的同步代码块中。如果有多个线程因等待同一对象的标志位而处于阻塞状态时，当对象的标志位恢复到1状态时，只会有一个线程能够继续运行，其它线程仍然处于阻塞等待状态。</p>
<p>若干个不同的代码块也可以实现相互之间的同步，只要各synchronized(object)语句中的object完全是同一个对象就可以。</p>
<p>一个刚锁定了监视器的线程在监视器被解锁后可以再次进入并锁定同一监视器，好比篮球运动员的篮球出手后可以再次去抢回来一样。</p>
<p>当在同步块中遇到break语句或抛出异常时，线程也会释放该锁旗标。</p>
<p>当cpu进入了一段同步代码块中执行，cpu是可以切换到其他线程的，只是在准备执行其他线程的代码时，发现其它线程处于阻塞状态，cpu又会回到先前的线程上。这个过程就类似于幸运之神刚一光顾其他有关线程，没想到吃了个闭门羹，便又离开了。</p>
<p>同步是以牺牲程序的性能为代价的，因为i系统要不停地对同步监视器进行检查，需要更多的开销。</p>
<p>除了可以对代码块进行同步外，也可以对方法实现同步，只要在需要同步的方法定义前加上synchronized关键字即可。</p>
<p>同步方法所用的监视器对象就是this对象</p>
<blockquote>
<p>老手就是在大量的实践中，犯下众多错误，然后经过反复调试、观察、比较，最后在总结、积累经验的过程中成长起来的。在计算机编程过程中，我们有时候会因为自己知识的不全面而作出错误的结论。</p>
</blockquote>
<p><img src="http://onzc6nld3.bkt.clouddn.com/5.2.jpg" alt=""></p>
<h3 id="死锁问题"><a href="#死锁问题" class="headerlink" title="死锁问题"></a>死锁问题</h3><p>两个线程对两个同步对象具有循环依赖时，就会出现死锁，例如一个线程进入对象X的监视器，而另一个对象进入了对象Y的监视器，这时进入X对象监视器的线程如果还试图进入Y对象的监视器就会被阻隔，接着进入Y对象监视器的线程如果试图进入X对象的监视器也会被阻隔，这样两个线程都处于挂起状态。程序发生死锁后最明显的特征就是程序的运行处于停滞不前状态。</p>
<p>两个人在吃饭，甲拿到了一根筷子和一把刀子，乙拿到了一把叉子和一根筷子，他们都无法吃到饭。<br>甲：你先给我筷子，我再给你刀子<br>乙：你先给我刀子，我才给你筷子<br>……</p>
<h3 id="线程间的通信"><a href="#线程间的通信" class="headerlink" title="线程间的通信"></a>线程间的通信</h3><p>java是通过object类的wait、notify、notifyall这三个方法来实现线程间的通信。所有的类都是从Object继承的，因此在任何类中都可以直接使用这些方法。</p>
<p>wait：告诉当前线程放弃监视器并进入睡眠状态，直到其他线程进入同一监视器并调用notify为止；<br>notify：唤醒同一对象监视器中调用wait的第一个线程，类似于饭馆有一个空位后通知所有等候就餐的顾客中的第一位可以入座的情况；<br>notifyAll：唤醒同一个对象监视器中调用wait的所有线程，只有最高优先级的线程首先被唤醒并执行。</p>
<p>上述三个方法只能在synchronized方法中调用，即：无论线程调用一个对象的wait还是notify方法，该线程必须先得到该对象的锁旗标，这样，notify只能唤醒同一个对象监视器中调用wait的线程，使用多个对象监视器，我们就可以分组有多个wait、notify的情况，同组里的wait只能被同组的notify唤醒。</p>
<p>一个线程的等待和唤醒过程可以用下图表示：<br><img src="http://onzc6nld3.bkt.clouddn.com/5.13.jpg" alt=""></p>
<h3 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h3><p>线程产生和消亡的整个过程，如下图所示：</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/5.4.jpg" alt=""></p>
<p>一个线程的产生式从我们调用了start方法开始进入Runnable状态，即可以被调度运行状态，并没有真正开始运行，调度器可以将CPU分配给它，真正运行其中的程序代码。线程在运行过程中，有以下几个可能的去向：</p>
<ol>
<li>没有遇到任何阻隔，运行完成直接结束，也就是run()方法执行完毕；</li>
<li>调度器将CPU分配给其他线程，这个线程又变为Runnable状态；</li>
<li>请求锁旗标，却得不到，这时候它要等待对象的锁旗标，得到锁旗标后又会进入Runnable状态开始运行；</li>
<li>遇到wait方法，它会被放入等待池中继续等待，直到有notify()或interrupt()方法执行，它才会被唤醒或打断，开始等待对象锁旗标，等到锁旗标后进入Runnable状态继续执行。</li>
</ol>
<p>控制线程生命周期的方法有suspend、resume和stop方法，但不推荐使用。</p>
<p>不推荐使用suspend和resume的原因如下：</p>
<ol>
<li>会导致死锁的发生；</li>
<li>它允许一个线程通过直接控制另外一个线程乙的代码来直接控制那个线程乙。</li>
</ol>
<p>不推荐使用stop的原因如下：<br>虽然stop能够避免死锁的发生，但是带来了另外的不足，如果一个线程正在操作共享数据段，操作过程中没有完成就stop了的话，就会导致数据的不完整性。</p>
<p>经验：推荐使用控制run方法中循环条件的方式来结束一个线程。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadLife</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</div><div class="line"></div><div class="line">		ThreadLifeTest threadLifeTest = <span class="keyword">new</span> ThreadLifeTest();</div><div class="line">		<span class="keyword">new</span> Thread(threadLifeTest).start();</div><div class="line"></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)&#123;</div><div class="line">			<span class="keyword">if</span>(<span class="number">5</span>==i)&#123;</div><div class="line">				threadLifeTest.stopMe();</div><div class="line">			&#125;</div><div class="line">			System.out.println(<span class="string">"main thread is running"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadLifeTest</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> bFlag = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopMe</span><span class="params">()</span></span>&#123;</div><div class="line">		bFlag = <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">		<span class="keyword">while</span>(bFlag)&#123;</div><div class="line">			System.out.println(<span class="string">"ThreadLifeTest.run()"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注意：调用了目标线程的stopMe方法之后，cpu不一定会马上切换到目标线程，目标线程也就不一定会马上终止。稍后切换到目标线程之后，终止了while循环，run方法结束，目标线程随之结束。</p>
<h3 id="Java-API"><a href="#Java-API" class="headerlink" title="Java API"></a>Java API</h3><p>API Application Programming Interface</p>
<p>学习编程语言与学汉语</p>
<ol>
<li><p>语法</p>
</li>
<li><p>成语<br>学习编程语言，掌握了大量API，就像学习汉语时掌握了大量的成语一样，我们在处理某些问题时将会轻而易举，同样，我们也能从这些API类中学会大师们组织java类的方法，划分系统结构的技巧。</p>
</li>
</ol>
<p>区别：对API来说，完全可以在需要时通过某种方式临时获取，现学现用</p>
<ol>
<li>学会写文章的技巧和手法，找到写文章的灵感<br>学习编程，也需要掌握分析与解决问题的手法，养成良好的编程习惯与风格，体会出一种编程的感觉。</li>
</ol>
<p>唐诗宋词/优秀散文<br>优秀的源代码<br>一些大学老师从事实际项目开发的经验不太丰富，只能讲些语法和API方面的知识，没有能力帮你分析与讲解编程经验与体会，就像许多小学老师自己都写不出好的作文来，但却可以成为语文老师一样的道理。</p>
<blockquote>
<p>专家不是靠书本学出来的，是有了一定的基础后，在工作中再总结、在学习的过程中成长起来的。我们没有必要去了解一门语言中的每个方面和细节，虽然，我们了解的越多，水平似乎就越高，但这都是要以时间和精力为代价的，学习到一定程度后，要适可而止，否则，一辈子都只有疲于学习的份儿了，就完全违背了“学以致用”的初衷。</p>
</blockquote>
<p>当你掌握了一门语言的语法特点后，能够看懂一般的程序，在需要时能够参照文档资料看懂以前还没有接触过的某个方面的程序，能够自己写出以恶搞有某种实际应用的小程序，你就算掌握了这门语言，剩下的就是你在工作中如何去积累经验的问题了。</p>
<p>会写一个程序的标准，是理解编程思想，再用自己的想法去独立写下来，对程序中的每个细节都是真正明白的。</p>
<h4 id="String类和StringBuffer类"><a href="#String类和StringBuffer类" class="headerlink" title="String类和StringBuffer类"></a>String类和StringBuffer类</h4><p>一个字符串就是一连串的字符，Java定义了String和StringBuffer两个类来封装对字符串的各种操作，都被放到了java.lang包中，不需要import java.lang这个语句导入该包就可以直接使用它们。</p>
<p>String类用于比较两个字符串、查找和抽取串中的字符或子串、字符串与其他类型之间的相互转换等。String类对象的内容一旦被初始化就不能再改变。</p>
<p>StringBuffer类用于内容可以改变的字符串，可以将其它各种类型的数据增加，插入到字符串中，也可以翻转字符串中原来的内容。一旦通过StringBuffer生成了最终想要的字符串，就应该使用StringBuffer.toString方法将其转换成String类，随后，就可以使用String类的各种方法操纵这个字符串了。</p>
<p>Java为字符串提供了特别的连接操作符+，可以把其它各种类型的数据转换成字符串，并前后连接成新的字符串。连接操作符+的功能是通过StringBuffer类和它的append方法实现的。</p>
<blockquote>
<p>String x = “a”+4+”c”;</p>
</blockquote>
<p>等效于：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">StringBuffer temp = new StringBuffer();</div><div class="line">temp.append(&quot;a&quot;);</div><div class="line">temp.append(&quot;4&quot;);</div><div class="line">temp.append(&quot;c&quot;);</div><div class="line">x =temp.toString();</div></pre></td></tr></table></figure></p>
<p>注意：<br>String s1 = “hello”<br>String s2 = “hello”<br>s1和s2是同一个对象。</p>
<p>String s1 = new String(“hello”);<br>String s2 = new String(“hello”);<br>s1和s2是两个不同的对象。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadLine</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">		<span class="keyword">byte</span> buf[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</div><div class="line">		String strInfo = <span class="keyword">null</span>;</div><div class="line">		<span class="keyword">int</span> pos = <span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> ch = <span class="number">0</span>;</div><div class="line"></div><div class="line">		System.out.println(<span class="string">"please enter info, input bye for exit"</span>);</div><div class="line"></div><div class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line"></div><div class="line">			ch = System.in.read();</div><div class="line"></div><div class="line">			<span class="keyword">switch</span>(ch)&#123;</div><div class="line">			<span class="keyword">case</span> <span class="string">'\r'</span>:</div><div class="line">				<span class="keyword">break</span>;</div><div class="line"></div><div class="line">			<span class="keyword">case</span> <span class="string">'\n'</span>:</div><div class="line">				strInfo = <span class="keyword">new</span> String(buf,<span class="number">0</span>,pos);</div><div class="line">				<span class="keyword">if</span>(<span class="string">"bye"</span>.equals(strInfo))&#123;</div><div class="line">					<span class="keyword">return</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					System.out.println(strInfo);</div><div class="line">					pos=<span class="number">0</span>;</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">				&#125;</div><div class="line"></div><div class="line">				<span class="keyword">default</span>:</div><div class="line">					buf[pos++]=(<span class="keyword">byte</span>)ch;</div><div class="line">					<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>String(buf,0,pos)把数组buf里面的值从0到pos取出，用来创建新的String类对象。<br>equals，比较String类对象的内容是否等于某一字符串常量<br>equalsIgnoreCase<br>indexof(int ch)、indexof(int ch,int fromIndex)<br>indexof(String str)、indexof(String str, int fromIndex)<br>substring(int beginIndex)、<br>substring(int beginIndex, int endIndex) 返回beginIndex到endIndex-1的一个字符串</p>
<p>String类中的replace和toUpperCase都不能改变字符串的内容，它们的返回值都是String类，即生成一个新的字符串，而不是改变原来的字符串内容。</p>
<h4 id="基本数据类型的对象包装类"><a href="#基本数据类型的对象包装类" class="headerlink" title="基本数据类型的对象包装类"></a>基本数据类型的对象包装类</h4><p>java对数据既提供基本数据的简单类型，也提供了相应的包装类，使用基本简单数据类型，可以改善系统的性能，也能满足大多数应用需求，但基本简单类型不具有对象的特性，不能满足某些特殊的需求。譬如很多类的很多方法参数类型都是object，Integer类来包装整数。包装类对象在进行基本数据类型的类型转换时也特别有用。</p>
<p>8种基本数据类型都有其对应的包装类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">boolean</span> bool= <span class="keyword">new</span> Boolean(<span class="keyword">false</span>);</div><div class="line"><span class="keyword">byte</span> bt= <span class="keyword">new</span> Byte((<span class="keyword">byte</span>) <span class="string">'t'</span>);</div><div class="line"><span class="keyword">char</span> ch = <span class="keyword">new</span> Character(<span class="string">'t'</span>);</div><div class="line"><span class="keyword">short</span> st = <span class="keyword">new</span> Short((<span class="keyword">short</span>) <span class="number">18</span>);</div><div class="line"><span class="keyword">int</span> it = <span class="keyword">new</span> Integer(<span class="number">18</span>);</div><div class="line"><span class="keyword">long</span> lg = <span class="keyword">new</span> Long(<span class="number">18</span>);</div><div class="line"><span class="keyword">float</span> ft = <span class="keyword">new</span> Float(<span class="number">1.8f</span>);</div><div class="line"><span class="keyword">double</span> db = <span class="keyword">new</span> Double(<span class="number">1.8</span>d);</div></pre></td></tr></table></figure>
<blockquote>
<p>要善于找出包装类的一些共性的地方，达到举一反三，学一通百的效果</p>
</blockquote>
<p>要将字符串转换成基本数据类型，几乎都是用Xxx包装类.parseXxx方式实现（一个例外是对于Boolean类，用的是getBoolean）</p>
<p>要将包装类转换成基本数据，几乎都是Xxx包装类对象.xxxValue方式。</p>
<h3 id="集合类"><a href="#集合类" class="headerlink" title="集合类"></a>集合类</h3><h4 id="Vector类"><a href="#Vector类" class="headerlink" title="Vector类"></a>Vector类</h4><p>Vector类是Java语言提供的一种高级数据结构，可用于保存一些列对象，java不支持动态数组，Vector类提供了一种与动态数组相近的功能。</p>
<p>如果我们不能预先确定要保存的对象的数目，或是需要方便获得某个对象的存放位置，Vector类都是一种不错的选择。</p>
<h4 id="Enumeration接口类"><a href="#Enumeration接口类" class="headerlink" title="Enumeration接口类"></a>Enumeration接口类</h4><p>Enumeration是一个接口类，它提供了一种访问各种数据结构中的所有数据的抽象机制，我们要访问各种数据结构对象中的所有元素时，都可以使用同样的方式，调用同样的方法。有了这样的数据结构，就很容易学一通百，以不变应万变。</p>
<h4 id="Collection接口"><a href="#Collection接口" class="headerlink" title="Collection接口"></a>Collection接口</h4><h4 id="Iterator接口"><a href="#Iterator接口" class="headerlink" title="Iterator接口"></a>Iterator接口</h4><p>我们要取出保存在实现了Collection接口对象中的所有对象，我们也必须通过Collection.iterator方法返回要给Iterator接口对象，Iterator接口的功能与使用同Enumeration接口非常相似。</p>
<p>Java2平台的数据结构类设计人员本可以扩展Enumeration接口，而不用创建Iterator这个新接口。但他们不喜欢Enumeration接口方法冗长的名字，因而创建了Iterator这个新接口，并缩短了方法名长度。</p>
<p>Java中，不能直接用Collection接口类创建对象，而必须用实现了Collection接口的类来创建对象，ArrayList类就是一个实现了Collection接口的类。</p>
<blockquote>
<p>不要变成只会照着书做，而不会自学和思考的人，假设有人真的把java api全部背了下来，以后再遇到别的公司开发的java类，不还是一样不会吗？</p>
</blockquote>
<p>什么时候用Vector，什么时候用ArrayList，Vector类中的所有方法都是线程同步的，两个线程并发访问Vector对象将是安全的，但只有一个线程访问Vector对象时，因为源程序仍调用了同步方法，需要额外的监视器检查，运行效率要低一些。</p>
<p>ArrayList类中的所有方法是非同步的，程序的效率会高一些。</p>
<h4 id="集合类接口的比较"><a href="#集合类接口的比较" class="headerlink" title="集合类接口的比较"></a>集合类接口的比较</h4><p>Collection——对象之间没有指定的顺序，允许重复元素；<br>Set——对象之间没有指定的顺序，不允许重复元素；<br>List——对象之间有指定的顺序，允许重复元素。</p>
<p><img src="http://onzc6nld3.bkt.clouddn.com/6.3.jpg" alt=""></p>
<h4 id="Hashtable类"><a href="#Hashtable类" class="headerlink" title="Hashtable类"></a>Hashtable类</h4><p>Hashtable也是一种高级数据结构，用以快速检索数据。Hashtable不仅可以像Vector一样动态存储一系列的对象，而且对存储的每一个对象（值value）都要安排另一个对象（关键字key）与之相关联。</p>
<p>向Hashtable对象中存储数据，使用的是Hashtable.put(Object key, Object value)方法，从Hashtable中检索数据，使用Hashtable.get(Object key)方法。值和关键字都可以是任何类型的非空的对象。</p>
<p>要想成功地从Hashtable中检索数据，用作关键字的对象必须正确覆盖了Object.hashCode方法和Object.equals方法（检索时，必须比较所用关键字是否与存储在Hashtable中的某个关键字相等，如果两个关键字对象不能正确判断是否相等，检索是不可能正确的）。</p>
<p>Object.hashCode方法返回一个叫散列码的值，这个值是由对象的地址以某种方式转换来的，内容相同的两个对象，既然是两个对象，地址就不可能一样，所以Object.hashCode返回的值也不一样。</p>
<p>要想两个内容相同的Object子类对象的hashcode方法返回一样的散列码，子类必须覆盖Object.hashCode方法。</p>
<p>用于关键字的类，如果它的两个对象用equals方法比较是相同的，那么这两个对象的hashCode方法返回值也要一样，所以我们也要覆盖hashCode方法。</p>
<p>String类，已按关键字类的要求覆盖了这两个方法，如果两个String对象的内容不相等，它们的hashCode的返回值也不相等，如果两个String对象的内容相等，它们的hashCode的返回值也相等。所以我们在实现自己编写的关键字类的hashCode方法时，可以调用这个关键字类的String类型的成员变量的hashCode方法来计算关键字类的hashCode返回值。</p>
<p>注意：StringBuffer类没有按照关键字类的要求覆盖hashCode方法，即使两个StringBuffer类对象的内容相等，但这两个对象的hashCode方法的返回值却不相等。所以不能用StringBuffer作为关键字类。</p>
<h4 id="Properties类"><a href="#Properties类" class="headerlink" title="Properties类"></a>Properties类</h4><p>Properties是Hashtable的子类，它增加了将Hashtable对象中的关键字、值对保存到文件和从文件中读取关键字/值对到Hashtable对象中的方法。<br><img src="http://onzc6nld3.bkt.clouddn.com/6.4.jpg" alt=""></p>
<p>如果要用到Properties类的store方法进行存储，每个属性的关键字和值都必须是字符串类型的。直接用setProperty、getProperty方法进行属性的设置与读取。</p>
<h4 id="System类"><a href="#System类" class="headerlink" title="System类"></a>System类</h4><p>Java不支持全局方法和变量，java设计者将一些系统相关的方法和变量收集到了一个统一的类——System类，System类中的所有成员都是静态的，可以直接使用System类名做前缀。如System.in ， System.out等</p>
<p>System.exit(int status)方法，提前终止虚拟机的运行，对于发生了异常情况下而想终止虚拟机的运行，传递一个非零值作为参数，对于在用户正常操作下，终止虚拟机的运行，传递零值作为参数。</p>
<p>System.CurrentTimeMillis()方法，返回自1970年1月1日0点0分0秒起至今的以毫秒为单位的时间，这是一个long类型的大数值。在计算机内部，只有数值，没有真正的日期类型及其它各种类型，我们平常用到的日期本质上就是一个数值，但通过这个数值，能够推算出其对应的具体日期时间。</p>
<p>getProperties方法与java环境属性<br>getProperties方法获得当前虚拟机的环境属性。<br>Windows环境变量，每一个属性都是变量与值成对的形式出现。<br>同样的道理，java作为一个虚拟的操作系统，它也有自己的环境属性，Properties是Hashtable的子类，正好可以用于存储环境属性中的多个变量/值对格式的数据，getProperties方法返回值是，包含了当前虚拟机的所有环境属性的Properties类型的对象。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestProperties</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Properties sp = System.getProperties();</div><div class="line">		Enumeration e = sp.propertyNames();</div><div class="line">		<span class="keyword">while</span>(e.hasMoreElements())&#123;</div><div class="line">			String key = (String)e.nextElement();</div><div class="line">			System.out.println(key+<span class="string">"="</span>+sp.getProperty(key));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在windows中，很容易增加一个新的环境属性，如何为java虚拟机增加一个新的环境属性呢？</p>
<p>java 命令有一个-D <name>=<value>格式的选项可以设置新的系统环境属性。</value></name></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-D&lt;name&gt;=&lt;value&gt;</div><div class="line">                 set a system property</div></pre></td></tr></table></figure>
<p>如</p>
<blockquote>
<p>java -DAAA=bbb<br>java -DAAA=bbb  -DCCC=ddd</p>
</blockquote>
<p>注意：-D与AAA之间没有空格</p>
<h4 id="Runtime类"><a href="#Runtime类" class="headerlink" title="Runtime类"></a>Runtime类</h4><p>Runtime类封装了Java命令本身的运行进程，其中的许多方法与System中的方法相重复。我们不能直接创建Runtime实例，但可以通过静态方法Runtime.getRuntime获得正在运行的Runtime对象的引用。</p>
<p>Exec方法，Java命令运行后，本身是多任务操作系统上的一个进程，在这个进程启动一个新的进程，即执行其他程序时使用exec方法。exec方法返回一个代表子进程的Process类对象，通过这个对象，Java进程可以与子进程交互。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRuntime</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line"></div><div class="line">		Process p=<span class="keyword">null</span>;</div><div class="line">		p = Runtime.getRuntime().exec(<span class="string">"notepad.exe"</span>);</div><div class="line">		Thread.sleep(<span class="number">5000</span>);</div><div class="line">		p.destroy();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>由于程序不能直接创建类Runtime的实例，所以可以保证我们只会产生一个Runtime的实例对象，而不能产生多个实例对象，这种情况就是单态设计模式。</p>
<h4 id="Date与Calendar、DateFormat类"><a href="#Date与Calendar、DateFormat类" class="headerlink" title="Date与Calendar、DateFormat类"></a>Date与Calendar、DateFormat类</h4><p>Date类用于表示日期和时间，最简单的构造方法时Date()，它以当前的日期和时间初始化一个Date对象。</p>
<p>由于开始设计Date时没有考虑到国际化，所以后来又设计了两个新的类来解决Date类中的问题，一个是Calendar类，一个是DateFormat类。</p>
<p>Calendar类是一个抽象基类，主要用于完成日期字段之间相互操作的功能，如Calendar.add方法可以实现在某一日期的基础上增加若干天（或年、月、小时、分、秒等日期字段）后的新日期<br>Calendar.set方法修改日期对象中的年、月、日、小时、分、秒等日期字段的值。<br>Calendar.getInstance方法可以返回一个Calendar类型（更确切地说是它的某个子类）的对象实例，GregorianCalendar类是JDK目前提供的一个唯一的Calendar子类，Calendar.getInstance方法返回的就是预设了当前时间的GregorianCalendar类对象。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Calendar cl = Calendar.getInstance();</span></div><div class="line">Calendar cl = <span class="keyword">new</span> GregorianCalendar();</div><div class="line">System.out.println(<span class="string">""</span>+cl.get(cl.YEAR)+cl.get(cl.MONTH)+cl.get(cl.DAY_OF_MONTH));</div><div class="line">cl.add(cl.DAY_OF_YEAR, <span class="number">315</span>);</div><div class="line">System.out.println(<span class="string">""</span>+cl.get(cl.YEAR)+cl.get(cl.MONTH)+cl.get(cl.DAY_OF_MONTH));</div></pre></td></tr></table></figure>
<p>虽然Calendar类几乎完全替代了Date类，但在某些情况下，我们仍有可能要用到Date类，譬如，程序中用的另外一个类的方法要求一个Date类型的参数。</p>
<p>我们有时要将Date对象表示的日期用指定的格式输出和将特定格式的日期字符串转换成一个Date对象。</p>
<p>Java.text.DataFormat就是实现这种功能的抽象基类，<br>Java.text.SimpleDateFormat类是JDK目前提供的一个DateFormat子类，它是一个具体类，使用它就可以完成把Date对象格式化为本地字符串，或者通过语义分析把日期或时间字符串转换成Date对象的功能。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SimpleDateFormat sdf1 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</div><div class="line">SimpleDateFormat sdf2 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日"</span>);</div><div class="line">Date d=sdf1.parse(<span class="string">"2017-04-09"</span>);</div><div class="line">System.out.println(sdf2.format(d));</div></pre></td></tr></table></figure>
<p>SimpleDateFormat类就相当于一个模板，其中yyyy对应的是年，MM对应的是月，dd对应的是日。详细可参考<a href="http://docs.oracle.com/javase/8/docs/api/index.html" target="_blank" rel="external">JDK</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">Letter	Date or Time Component	Presentation	Examples</div><div class="line">G	Era designator	Text	AD</div><div class="line">y	Year	Year	1996; 96</div><div class="line">Y	Week year	Year	2009; 09</div><div class="line">M	Month in year (context sensitive)	Month	July; Jul; 07</div><div class="line">L	Month in year (standalone form)	Month	July; Jul; 07</div><div class="line">w	Week in year	Number	27</div><div class="line">W	Week in month	Number	2</div><div class="line">D	Day in year	Number	189</div><div class="line">d	Day in month	Number	10</div><div class="line">F	Day of week in month	Number	2</div><div class="line">E	Day name in week	Text	Tuesday; Tue</div><div class="line">u	Day number of week (1 = Monday, ..., 7 = Sunday)	Number	1</div><div class="line">a	Am/pm marker	Text	PM</div><div class="line">H	Hour in day (0-23)	Number	0</div><div class="line">k	Hour in day (1-24)	Number	24</div><div class="line">K	Hour in am/pm (0-11)	Number	0</div><div class="line">h	Hour in am/pm (1-12)	Number	12</div><div class="line">m	Minute in hour	Number	30</div><div class="line">s	Second in minute	Number	55</div><div class="line">S	Millisecond	Number	978</div><div class="line">z	Time zone	General time zone	Pacific Standard Time; PST; GMT-08:00</div><div class="line">Z	Time zone	RFC 822 time zone	-0800</div><div class="line">X	Time zone	ISO 8601 time zone	-08; -0800; -08:00</div><div class="line"></div><div class="line">Date and Time Pattern	Result</div><div class="line">"yyyy.MM.dd G 'at' HH:mm:ss z"	2001.07.04 AD at 12:08:56 PDT</div><div class="line">"EEE, MMM d, ''yy"	Wed, Jul 4, '01</div><div class="line">"h:mm a"	12:08 PM</div><div class="line">"hh 'o''clock' a, zzzz"	12 o'clock PM, Pacific Daylight Time</div><div class="line">"K:mm a, z"	0:08 PM, PDT</div><div class="line">"yyyyy.MMMMM.dd GGG hh:mm aaa"	02001.July.04 AD 12:08 PM</div><div class="line">"EEE, d MMM yyyy HH:mm:ss Z"	Wed, 4 Jul 2001 12:08:56 -0700</div><div class="line">"yyMMddHHmmssZ"	010704120856-0700</div><div class="line">"yyyy-MM-dd'T'HH:mm:ss.SSSZ"	2001-07-04T12:08:56.235-0700</div><div class="line">"yyyy-MM-dd'T'HH:mm:ss.SSSXXX"	2001-07-04T12:08:56.235-07:00</div><div class="line">"YYYY-'W'ww-u"	2001-W27-3</div></pre></td></tr></table></figure>
<h4 id="Math与Random类"><a href="#Math与Random类" class="headerlink" title="Math与Random类"></a>Math与Random类</h4><p>Math类包含了所有用于几何和三角的浮点运算方法，这些方法都是静态的，每个方法的使用都非常简单，一看JDK文档就能明白。</p>
<p>Random类是一个伪随机数产生器，随机数是按照某种算法产生的，一旦用一个初值创建Random对象，就可以得到一系列的随机数，但如果用相同的初值创建Random对象，得到的随机数序列是相同的，也就是说，在程序中我们看到的“随机数”是固定的那些数，起不到随机的作用，针对这个问题，Java设计者们在Random类的Random()构造方法中使用当前时间来初始化Random对象，因为没有任何时刻的时间是相同的，所以就可以减少随机数序列相同的可能性。</p>
<h4 id="学习API的方法"><a href="#学习API的方法" class="headerlink" title="学习API的方法"></a>学习API的方法</h4><blockquote>
<p>作者写得越多，读者就要花费更多的时间来阅读，如果读者并不能从更多的篇幅中学到更多有价值的知识，那就是在浪费读者的宝贵时间。</p>
</blockquote>
<p>最聪明的人是最会利用工具和资源的人，必须要学会查阅文档。</p>
<p>大家根据自己的实际情况，可以提前通读一下JDK文档中大部分类及类中的方法，做到遇到问题时心中有数，也可以暂时不读，只掌握原理，处理过程，解决方法，等到以后有具体的实际需求时，再来查阅JDK文档。</p>
<h3 id="IO-输入输出"><a href="#IO-输入输出" class="headerlink" title="IO/输入输出"></a>IO/输入输出</h3><p>Java语言定义了许多类专门负责各种方式的输入输出，这些类都被放在java.io包中。</p>
<p>程序中，键盘被当做输入文件，显示器被当做输出文件。</p>
<h4 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h4><p>File类是IO包中唯一代表磁盘文件本身的对象，File类定义了一些与平台无关的方法来操纵文件，通过调用File类提供的各种方法，我们能够创建、删除文件、重命名文件，判断文件的读写权限及是否存在，设置和查询文件的最近修改时间。</p>
<p>在java中，目录也被当做file使用，只是多了一些目录特有的功能——可以用list方法列出目录中的文件名。在Unix下的路径分隔符为/，在Dos下的路径分隔符为\，Java可以正确处理Unix和Dos的路径分隔符，即使我们在Windows环境下使用/作为路径分隔符，Java仍然能够正确处理。</p>
<p>注意：delete方法删除由File对象的路径所表示的磁盘文件或目录。如果删除的对象是目录，该目录中的内容必须为空。</p>
<p>File类不能访问文件的内容，即不能够从文件中读取数据或往文件里写数据，它只能对文件本身的属性进行操作。</p>
<h4 id="RandomAccessFile类"><a href="#RandomAccessFile类" class="headerlink" title="RandomAccessFile类"></a>RandomAccessFile类</h4><p>RandomAccessFile类可以说是Java语言中功能最为丰富的文件访问类，它提供了众多的文件访问方法。RandomAccessFile类支持“随机访问”方式，我们可以跳转到文件的任意位置处读写数据。</p>
<p>该类仅限于操作文件，不能访问其它的IO设备，如网络、内存映像等。</p>
<p>RandomAccessFile可以以只读或读写方式打开文件，具体使用哪种方式取决于我们创建RandomAccessFile类对象的构造方式：</p>
<p>new RandomAccessFile(f,”rw”);// 读写方式<br>new RandomAccessFile(f,”r”);// 只读方式</p>
<p>注意：当我们的程序需要以读写的方式打开一个文件时，如果这个文件不存在，程序会为你创建。</p>
<p>String.substring(int beginIndex, int endIndex)方法可以用于取出一个字符串的部分子字符串，要注意的一个细节是：子字符串中的第一个字符对应的是原字符串中的脚标为beginIndex处的字符，但最后的字符对应的是原字符串中的脚标为endIndex-1处的字符，而不是endIndex处的字符。</p>
<h4 id="节点流"><a href="#节点流" class="headerlink" title="节点流"></a>节点流</h4><p>流的概念：</p>
<blockquote>
<p>数据流是一串连续不断的数据的集合，就像水管里的水流，在水管的一端一点一点地供水，而在水管的另一端看到的是一股连续不断的水流。数据写入程序可以是一段一段地向数据流管道中写入数据，这些数据段会按先后顺序形成一个长的数据流。对数据读取程序来说，看不到数据流在写入时的分段情况，每次可以读取其中的任意长度的数据，但只能先读取前面的数据后，再读取后面的数据。不管写入时是将数据分多次写入，还是作为一个整体一次写入，读取时的效果都是完全一样的。</p>
</blockquote>
<p>我们将IO流类分为两大类：</p>
<ol>
<li><p>节点流类<br>程序用于直接操作目标设备所对应的类。</p>
</li>
<li><p>包装类（处理流类、过滤流类）<br>一个间接流类去调用节点流类，以达到更加灵活方便地读写各种类型的数据。</p>
</li>
</ol>
<h4 id="InputStream与OutputStream"><a href="#InputStream与OutputStream" class="headerlink" title="InputStream与OutputStream"></a>InputStream与OutputStream</h4><p>程序可以从中连续读取字节的对象叫输入流，用InputStream类完成。<br>程序能向其中连续写入字节的对象叫输出流，用OutputStream类完成。</p>
<p>InputStream与OutputStream对象是两个抽象类，它们下面有许多子类，包括网络、管道、内存、文件等具体的IO设备，如FileInputStream类对应的就是文件输入流，是一个节点流类。</p>
<p>我们将这些节点流类所对应的IO源和目标成为流节点（Node）。</p>
<blockquote>
<p>输入输出类是相对程序而言的，不是代表文件的。</p>
</blockquote>
<p>如要将A文件的内容写入B文件中，<br>程序要对A文件创建一个输入类，对B文件要创建一个输出类。</p>
<p>InputStream定义了Java的输入流模型。该类中的所有方法在遇到错误时都会引发IOException异常，下面是InputStream类中方法的一个简要说明：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// 返回当前输入流中可读的字节数</span></div><div class="line"><span class="function"><span class="keyword">int</span>	<span class="title">available</span><span class="params">()</span></span></div><div class="line">Returns an estimate of the number of bytes that can be <span class="title">read</span> <span class="params">(or skipped over)</span> from <span class="keyword">this</span> input stream without blocking by the next invocation of a method <span class="keyword">for</span> <span class="keyword">this</span> input stream.</div><div class="line"></div><div class="line"><span class="comment">// 关闭，系统释放与这个流相关的资源</span></div><div class="line"><span class="keyword">void</span>	<span class="title">close</span><span class="params">()</span></div><div class="line">Closes <span class="keyword">this</span> input stream and releases any system resources associated with the stream.</div><div class="line"></div><div class="line"><span class="comment">// 在输入流的当前位置处放上一个标志，允许最多再读入readlimit个字节</span></div><div class="line"><span class="keyword">void</span>	<span class="title">mark</span><span class="params">(<span class="keyword">int</span> readlimit)</span></div><div class="line">Marks the current position in <span class="keyword">this</span> input stream.</div><div class="line"></div><div class="line"><span class="comment">// 如果当前流支持mark/reset操作就返回true</span></div><div class="line"><span class="keyword">boolean</span>	<span class="title">markSupported</span><span class="params">()</span></div><div class="line">Tests <span class="keyword">if</span> <span class="keyword">this</span> input stream supports the mark and reset methods.</div><div class="line"></div><div class="line"><span class="comment">// 返回下一个输入字节的整型表示，如果返回-1表示遇到流的末尾，结束。</span></div><div class="line"><span class="keyword">abstract</span> <span class="keyword">int</span>	<span class="title">read</span><span class="params">()</span></div><div class="line">Reads the next <span class="keyword">byte</span> of data from the input stream.</div><div class="line"></div><div class="line"><span class="comment">// 读入b.length个字节放到b中bin返回实际读入的字节数</span></div><div class="line"><span class="keyword">int</span>	<span class="title">read</span><span class="params">(<span class="keyword">byte</span>[] b)</span></div><div class="line">Reads some number of bytes from the input stream and stores them into the buffer array b.</div><div class="line"></div><div class="line"><span class="comment">// 把流中的数据读到数组b中从脚标为off开始的len个数组元素中</span></div><div class="line"><span class="keyword">int</span>	<span class="title">read</span><span class="params">(<span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></div><div class="line">Reads up to len bytes of data from the input stream into an array of bytes.</div><div class="line"></div><div class="line"><span class="comment">//把输入指针返回到以前所做的标志处</span></div><div class="line"><span class="keyword">void</span>	<span class="title">reset</span><span class="params">()</span></div><div class="line">Repositions <span class="keyword">this</span> stream to the position at the time the mark method was last called on <span class="keyword">this</span> input stream.</div><div class="line"></div><div class="line"><span class="comment">// 跳过输入流上的n个字节并返回实际跳过的字节数。</span></div><div class="line"><span class="keyword">long</span>	<span class="title">skip</span><span class="params">(<span class="keyword">long</span> n)</span></div><div class="line">Skips over and discards n bytes of data from <span class="keyword">this</span> input stream.</div></pre></td></tr></table></figure>
<p>InputStream是一个抽象类，程序中实际使用的是它的各种子类对象。不是所有的子类都会支持InputStream中定义的某些方法的，如skip，mark，reset等，这些方法支队某些子类有用。</p>
<blockquote>
<p>流是操作系统产生的一种资源。当我们在程序中创建了一个IO流对象，同时系统内也会创建了一个叫流的东西，在这种情况下，计算机内存中实际上产生了两个事物，一个是Java程序中的类的实例对象，一个是系统本身产生的某种资源，窗口、Socket等都是这样的情况，Java垃圾回收器只能管理程序中的类的实例对象，没法去管理系统产生的资源，所以程序需要调用close方法，去通知系统释放其自身产生的资源。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 关闭输出流</span></div><div class="line"><span class="function"><span class="keyword">void</span>	<span class="title">close</span><span class="params">()</span></span></div><div class="line">Closes <span class="keyword">this</span> output stream and releases any system resources associated with <span class="keyword">this</span> stream.</div><div class="line"></div><div class="line"><span class="comment">// 彻底完成输出并清空缓冲区</span></div><div class="line"><span class="keyword">void</span>	<span class="title">flush</span><span class="params">()</span></div><div class="line">Flushes <span class="keyword">this</span> output stream and forces any buffered output bytes to be written out.</div><div class="line"></div><div class="line"><span class="comment">//将整个字节数组写到输出流中</span></div><div class="line"><span class="keyword">void</span>	<span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] b)</span></div><div class="line">Writes b.length bytes from the specified <span class="keyword">byte</span> array to <span class="keyword">this</span> output stream.</div><div class="line"></div><div class="line"><span class="comment">// 将字节数组b中的从off开始的len个字节写到输出流</span></div><div class="line"><span class="keyword">void</span>	<span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></div><div class="line">Writes len bytes from the specified <span class="keyword">byte</span> array starting at offset off to <span class="keyword">this</span> output stream.</div><div class="line"></div><div class="line"><span class="comment">// 将一个字节写到输出流，这里的参数是int类型，它允许write使用表达式而不用强制转换成byte类型。</span></div><div class="line"><span class="keyword">abstract</span> <span class="keyword">void</span>	<span class="title">write</span><span class="params">(<span class="keyword">int</span> b)</span></div><div class="line">Writes the specified <span class="keyword">byte</span> to <span class="keyword">this</span> output stream.</div></pre></td></tr></table></figure>
<p>计算机访问外部设备，要比直接访问内存慢得多。使用内存缓冲区有两个方面的好处：</p>
<ol>
<li>提高cpu的使用率</li>
<li>write并没有马上真正写入到外设，我们还有机会回滚部分写入的数据。</li>
</ol>
<p>C语言默认情况下就会使用缓冲区，而在java中，有的类使用率缓冲区，有的类没有使用缓冲区，我们还可以在程序中使用专门的包装类来实现自己的缓冲区。</p>
<p>flush方法就是用于即使在缓冲区没有满的情况下，也将缓冲区的内容强制写入到外设，习惯上称这个过程为刷新。它只对那些使用缓冲区的OutputStream子类有效。如果我们调用了close方法，系统在关闭这个流之前，也会将缓冲区的内容刷新到硬盘文件的。</p>
<blockquote>
<p>读者花更多的时间去开阔自己的知识面和思维，了解更多的原理，而不是花大量时间去死记硬背某些细节和术语，特别是一个类中的每个方法名的具体拼写，具体的参数形式，java中有哪些关键字等这些死板的东西，只要有个印象就足够了。</p>
</blockquote>
<h4 id="FileInputStream与FileOutputStream"><a href="#FileInputStream与FileOutputStream" class="headerlink" title="FileInputStream与FileOutputStream"></a>FileInputStream与FileOutputStream</h4><p>这两个流节点用来操作磁盘文件，在创建一个FileInputStream对象时通过构造方法指定文件的路径和名字，当然这个文件应当是存在和可读的。</p>
<p>在创建一个FileOutputStream对象时指定文件如果存在，将要被覆盖。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">FileInputStream inOne = <span class="keyword">new</span> FileInputStream(<span class="string">"hello.test"</span>);</div><div class="line">File f = <span class="keyword">new</span> File();</div><div class="line">FileInputStream inTwo = <span class="keyword">new</span> FileInputStream(f);</div></pre></td></tr></table></figure>
<p>创建一个FileOutputStream对象时，可以为其指定还不存在的文件名，但不能是存在的目录名，也不能是一个已被其他程序打开了的文件。</p>
<p>FileOutputStream先创建输出对象，然后再准备输出。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFileStream</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">		File f = <span class="keyword">new</span> File(<span class="string">"hello.txt"</span>);</div><div class="line">		FileOutputStream out = <span class="keyword">new</span> FileOutputStream(f);</div><div class="line">		<span class="keyword">byte</span> buf[]=<span class="string">"hello ipcreator"</span>.getBytes();</div><div class="line">		out.write(buf);</div><div class="line">		out.close();</div><div class="line"></div><div class="line">		FileInputStream in = <span class="keyword">new</span> FileInputStream(f);</div><div class="line">		<span class="keyword">byte</span> [] contentBuf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</div><div class="line">		<span class="keyword">int</span> len = in.read(contentBuf);</div><div class="line">		System.out.println(<span class="keyword">new</span> String(buf,<span class="number">0</span>,len));</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>FileInputStream,FileOutputStream这两个类只提供了对字节或字节数组进行读取的方法，对于字符串的读写，我们还需要进行额外的转换。</p>
<p>FileOutputStream没有使用缓冲区。</p>
<h4 id="Reader与Writer"><a href="#Reader与Writer" class="headerlink" title="Reader与Writer"></a>Reader与Writer</h4><p>Java为字符文本的输入输出专门提供了一套单独的类，Reader和Writer两个抽象类与InputStream，OutputStream两个类相对应，同样，Reader和Writer下面也有许多子类，对具体IO设备进行字符输入输出，如FileReader就是用来读取文件流中的字符。</p>
<p>FileWriter使用了缓冲区。</p>
<h4 id="PipedInputStream与PipedOutputStream"><a href="#PipedInputStream与PipedOutputStream" class="headerlink" title="PipedInputStream与PipedOutputStream"></a>PipedInputStream与PipedOutputStream</h4><p>这两个类主要用来完成线程之间的通信，一个线程的PipedInputStream对象能够从另外一个线程的PipedOutputStream对象中读取数据。</p>
<p>JDK还提供了PipedWriter和PipedReader这两个类来用于字符文本的管道通信。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPipedReader</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">		Writer writer = <span class="keyword">new</span> Writer();</div><div class="line">		Reader reader = <span class="keyword">new</span> Reader();</div><div class="line">		Thread writerThread = <span class="keyword">new</span> Thread(writer);</div><div class="line">		Thread readerThread = <span class="keyword">new</span> Thread(reader);</div><div class="line"></div><div class="line">		PipedWriter pipedWriter = writer.getPipedWriter();</div><div class="line">		PipedReader pipedReader = reader.getPipedReader();</div><div class="line">		pipedWriter.connect(pipedReader);</div><div class="line"></div><div class="line">		writerThread.start();</div><div class="line">		readerThread.start();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Writer</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> PipedWriter writer = <span class="keyword">new</span> PipedWriter();</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> PipedWriter <span class="title">getPipedWriter</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> writer;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			writer.write(<span class="string">"hello Reader"</span>);</div><div class="line">			writer.close();</div><div class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Reader</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> PipedReader reader = <span class="keyword">new</span> PipedReader();</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> PipedReader <span class="title">getPipedReader</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> reader;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">		<span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</div><div class="line">		<span class="keyword">int</span> len;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			len = reader.read(buf);</div><div class="line">			reader.close();</div><div class="line">			System.out.println(<span class="keyword">new</span> String(buf,<span class="number">0</span>,len));</div><div class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>使用管道流类，可以实现各个程序模块之间的松耦合通信，我们可以灵活地将多个这样的模块的输出流与输入流相连接，以拼装成满足各种应用的程序，而不用对模块内部进行修改。假设有一个使用了管道流的压缩或加密的模块，我们的调用程序只管向该模块的输入流中送入数据，从该模块的输出流中取得数据，就完成了我们数据的压缩或加密，这个模块就像黑匣子一样，我们根本不用去了解它的任何细节。</p>
</blockquote>
<h3 id="ByteArrayInputStream-与ByteArrayOutputStream"><a href="#ByteArrayInputStream-与ByteArrayOutputStream" class="headerlink" title="ByteArrayInputStream 与ByteArrayOutputStream"></a>ByteArrayInputStream 与ByteArrayOutputStream</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">ByteArrayInputStream(<span class="keyword">byte</span>[] buf)</div><div class="line">Creates a ByteArrayInputStream so that it uses buf as its buffer array.</div><div class="line"></div><div class="line">ByteArrayInputStream(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> offset, <span class="keyword">int</span> length)</div><div class="line">Creates ByteArrayInputStream that uses buf as its buffer array.</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 创建一个32字节的缓冲区</span></div><div class="line">ByteArrayOutputStream()</div><div class="line">Creates a <span class="keyword">new</span> <span class="keyword">byte</span> array output stream.</div><div class="line"></div><div class="line"><span class="comment">// 根据参数指定的大小创建缓冲区，缓冲区的大小在数据过多时能够自动增长</span></div><div class="line">ByteArrayOutputStream(<span class="keyword">int</span> size)</div><div class="line">Creates a <span class="keyword">new</span> <span class="keyword">byte</span> array output stream, with a buffer capacity of the specified size, in bytes.</div></pre></td></tr></table></figure>
<p>这两个流的作用在于，用IO流的方式来完成对字节数组内容的读写，我们为什么不直接读写字节数组呢？在什么情况下该使用这两个类呢？</p>
<blockquote>
<p>内存虚拟文件/内存映像文件，他们是把一块内存虚拟成一个硬盘上的文件，原来该写到硬盘文件上的内容会被写到这个内存中，原来该从一个硬盘文件上读取内容可以改为从内存中直接读取。如果程序在运行过程中药产生一些临时文件，就可以用虚拟文件的方式来实现，我们不用访问硬盘，而是直接访问内存，会提高应用程序的效率。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArrayStream</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">		String temp = <span class="string">"hello ipcreator"</span>;</div><div class="line">		<span class="keyword">byte</span>[] src = temp.getBytes();</div><div class="line">		ByteArrayInputStream input = <span class="keyword">new</span> ByteArrayInputStream(src);</div><div class="line">		ByteArrayOutputStream output = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">		transform(input,output);</div><div class="line">		System.out.println(<span class="keyword">new</span> String(output.toByteArray()));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">transform</span><span class="params">(InputStream in, OutputStream out)</span></span></div><div class="line">			<span class="keyword">throws</span> IOException&#123;</div><div class="line">		<span class="keyword">int</span> c =<span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span>((c=in.read())!=-<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> C=(<span class="keyword">int</span>)Character.toUpperCase(c);</div><div class="line">			out.write(C);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArrayReader</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line"></div><div class="line">		StringReader reader = <span class="keyword">new</span> StringReader(<span class="string">"hello arrayreader"</span>);</div><div class="line">		StringWriter writer = <span class="keyword">new</span> StringWriter();</div><div class="line">		convert(reader,writer);</div><div class="line">		System.out.println(<span class="keyword">new</span> String(writer.toString()));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">convert</span><span class="params">(Reader reader, Writer writer)</span></span></div><div class="line">			<span class="keyword">throws</span> IOException&#123;</div><div class="line"></div><div class="line">		<span class="keyword">char</span> [] charBuff= <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</div><div class="line">		<span class="keyword">int</span> len = reader.read(charBuff);</div><div class="line">		writer.write(<span class="keyword">new</span> String(charBuff,<span class="number">0</span>,len).toUpperCase());</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="IO程序代码的复用"><a href="#IO程序代码的复用" class="headerlink" title="IO程序代码的复用"></a>IO程序代码的复用</h4><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://zhibimo.com/read/xiaolai/everyone-can-use-english/chapter6.html" target="_blank" rel="external">everyone-can-use-english</a><br>[2]<a href="">Java就业教程张孝祥PDF版.pdf</a><br>[3]<a href="">Think In  Java(中文第四版).pdf</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/java.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Java is a good Coffee for Programmer&lt;br&gt;Resolve Problems from the views of Java designer , Compiler, CPU, Memery…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;见过最多的，也最可悲的是—— 永远不相信自己所有的问题就出在自己从来都不肯耐心把最基础的东西弄清楚弄明白。&lt;sup&gt;[1]&lt;sup&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
  </entry>
  
  <entry>
    <title>Basic Concept of English——Pronunciation</title>
    <link href="http://aisee.me/2017/04/06/English/basic-concept-of-spelling/"/>
    <id>http://aisee.me/2017/04/06/English/basic-concept-of-spelling/</id>
    <published>2017-04-05T23:46:08.000Z</published>
    <updated>2017-04-05T23:55:12.119Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/pronunciation.jpg" alt=""></p>
<blockquote>
<p>Pronunciation can makes you break through Spoken English and Listening.</p>
</blockquote>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/pronunciation.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pronunciation can makes you break through Spoken English and Listening.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="English" scheme="http://aisee.me/categories/English/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Pronunciation" scheme="http://aisee.me/tags/Pronunciation/"/>
    
  </entry>
  
  <entry>
    <title>Basic Concept of English——Vocabulary</title>
    <link href="http://aisee.me/2017/04/06/English/basic-concept-of-vocabulary/"/>
    <id>http://aisee.me/2017/04/06/English/basic-concept-of-vocabulary/</id>
    <published>2017-04-05T23:46:06.000Z</published>
    <updated>2017-04-05T23:51:53.541Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/vocabulary.png" alt=""></p>
<blockquote>
<p>Vocabulary is the basis of English pyramid.</p>
</blockquote>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/vocabulary.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Vocabulary is the basis of English pyramid.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="English" scheme="http://aisee.me/categories/English/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Vocabulary" scheme="http://aisee.me/tags/Vocabulary/"/>
    
  </entry>
  
  <entry>
    <title>Basic Concept of Java——Charset</title>
    <link href="http://aisee.me/2017/04/06/Program/Tools/Computer/char-decode/"/>
    <id>http://aisee.me/2017/04/06/Program/Tools/Computer/char-decode/</id>
    <published>2017-04-05T23:46:06.000Z</published>
    <updated>2017-04-09T00:46:21.431Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image007.jpg" alt=""></p>
<p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/#authorN1001C" target="_blank" rel="external">作者：许令波</a></p>
<p>编码问题一直困扰着开发人员，尤其在 Java 中更加明显，因为 Java 是跨平台语言，不同平台之间编码之间的切换较多。本文将向你详细介绍 Java 中编码问题出现的根本原因，你将了解到：Java 中经常遇到的几种编码格式的区别；Java 中经常需要编码的场景；出现中文问题的原因分析；在开发 Java web 程序时可能会存在编码的几个地方，一个 HTTP 请求怎么控制编码格式？如何避免出现中文问题？</p>
<a id="more"></a>
<h2 id="为什么要编码"><a href="#为什么要编码" class="headerlink" title="为什么要编码"></a>为什么要编码</h2><p>计算机是如何表示我们人类能够理解的符号的，这些符号也就是我们人类使用的语言。由于人类的语言有太多，因而表示这些语言的符号太多，无法用计算机中一个基本的存储单元—— byte 来表示，因而必须要经过拆分或一些翻译工作，才能让计算机能理解。我们可以把计算机能够理解的语言假定为英语，其它语言要能够在计算机中使用必须经过一次翻译，把它翻译成英语。这个翻译的过程就是编码。所以可以想象只要不是说英语的国家要能够使用计算机就必须要经过编码。这看起来有些霸道，但是这就是现状，这也和我们国家现在在大力推广汉语一样，希望其它国家都会说汉语，以后其它的语言都翻译成汉语，我们可以把计算机中存储信息的最小单位改成汉字，这样我们就不存在编码问题了。<br>所以总的来说，编码的原因可以总结为：</p>
<ol>
<li>计算机中存储信息的最小单元是一个字节即 8 个 bit，所以能表示的字符范围是 0~255 个</li>
<li>人类要表示的符号太多，无法用一个字节来完全表示</li>
<li>要解决这个矛盾必须需要一个新的数据结构 char，从 char 到 byte 必须编码</li>
</ol>
<h2 id="如何“翻译”"><a href="#如何“翻译”" class="headerlink" title="如何“翻译”"></a>如何“翻译”</h2><p>明白了各种语言需要交流，经过翻译是必要的，那又如何来翻译呢？计算中提拱了多种翻译方式，常见的有 ASCII、ISO-8859-1、GB2312、GBK、UTF-8、UTF-16 等。它们都可以被看作为<strong>字典</strong>，它们<strong>规定了转化的规则</strong>，按照这个规则就可以让计算机正确的表示我们的字符。目前的编码格式很多，例如 GB2312、GBK、UTF-8、UTF-16 这几种格式都可以表示一个汉字，那我们到底选择哪种编码格式来存储汉字呢？这就要考虑到其它因素了，是<strong>存储空间</strong>重要还是<strong>编码的效率</strong>重要。根据这些因素来正确选择编码格式，下面简要介绍一下这几种编码格式。</p>
<h3 id="ASCII-码"><a href="#ASCII-码" class="headerlink" title="ASCII 码"></a>ASCII 码</h3><p>学过计算机的人都知道 ASCII 码，总共有 128 个，用一个字节的低 7 位表示，0~31 是控制字符如换行回车删除等；32~126 是打印字符，可以通过键盘输入并且能够显示出来。</p>
<h3 id="ISO-8859-1"><a href="#ISO-8859-1" class="headerlink" title="ISO-8859-1"></a>ISO-8859-1</h3><p>128 个字符显然是不够用的，于是 ISO 组织在 ASCII 码基础上又制定了一些列标准用来扩展 ASCII 编码，它们是 ISO-8859-1~ISO-8859-15，其中 ISO-8859-1 涵盖了大多数西欧语言字符，所有应用的最广泛。ISO-8859-1 仍然是单字节编码，它总共能表示 256 个字符。</p>
<h3 id="GB2312"><a href="#GB2312" class="headerlink" title="GB2312"></a>GB2312</h3><p>它的全称是《信息交换用汉字编码字符集 基本集》，它是双字节编码，总的编码范围是 A1-F7，其中从 A1-A9 是符号区，总共包含 682 个符号，从 B0-F7 是汉字区，包含 6763 个汉字。</p>
<h3 id="GBK"><a href="#GBK" class="headerlink" title="GBK"></a>GBK</h3><p>全称叫《汉字内码扩展规范》，是国家技术监督局为 windows95 所制定的新的汉字内码规范，它的出现是为了扩展 GB2312，加入更多的汉字，它的编码范围是 8140~FEFE（去掉 XX7F）总共有 23940 个码位，它能表示 21003 个汉字，它的编码是和 GB2312 兼容的，也就是说用 GB2312 编码的汉字可以用 GBK 来解码，并且不会有乱码。</p>
<h3 id="GB18030"><a href="#GB18030" class="headerlink" title="GB18030"></a>GB18030</h3><p>全称是《信息交换用汉字编码字符集》，是我国的强制标准，它可能是单字节、双字节或者四字节编码，它的编码与 GB2312 编码兼容，这个虽然是国家标准，但是实际应用系统中使用的并不广泛。</p>
<h3 id="UTF-16"><a href="#UTF-16" class="headerlink" title="UTF-16"></a>UTF-16</h3><p>说到 UTF 必须要提到 Unicode（Universal Code 统一码），ISO 试图想创建一个全新的超语言字典，世界上所有的语言都可以通过这本字典来相互翻译。可想而知这个字典是多么的复杂，关于 Unicode 的详细规范可以参考相应文档。<strong>Unicode 是 Java 和 XML 的基础</strong>，下面详细介绍 Unicode 在计算机中的存储形式。</p>
<p>UTF-16 具体定义了 Unicode 字符在计算机中存取方法。UTF-16 用两个字节来表示 Unicode 转化格式，这个是定长的表示方法，不论什么字符都可以用两个字节表示，两个字节是 16 个 bit，所以叫 UTF-16。UTF-16 表示字符非常方便，每两个字节表示一个字符，这个在字符串操作时就大大简化了操作，这也是 Java 以 UTF-16 作为内存的字符存储格式的一个很重要的原因。</p>
<h3 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h3><p>UTF-16 统一采用两个字节表示一个字符，虽然在表示上非常简单方便，但是也有其缺点，有很大一部分字符用一个字节就可以表示的现在要两个字节表示，存储空间放大了一倍，在现在的网络带宽还非常有限的今天，这样会增大网络传输的流量，而且也没必要。而 <strong>UTF-8 采用了一种变长技术，每个编码区域有不同的字码长度。不同类型的字符可以是由 1~6 个字节组成。</strong></p>
<p>UTF-8 有以下编码规则：<br>如果一个字节，最高位（第 8 位）为 0，表示这是一个 ASCII 字符（00 - 7F）。可见，所有 ASCII 编码已经是 UTF-8 了。<br>如果一个字节，以 11 开头，连续的 1 的个数暗示这个字符的字节数，例如：110xxxxx 代表它是双字节 UTF-8 字符的首字节。<br>如果一个字节，以 10 开始，表示它不是首字节，需要向前查找才能得到当前字符的首字节</p>
<h2 id="Java-中需要编码的场景"><a href="#Java-中需要编码的场景" class="headerlink" title="Java 中需要编码的场景"></a>Java 中需要编码的场景</h2><h3 id="I-O-操作中存在的编码"><a href="#I-O-操作中存在的编码" class="headerlink" title="I/O 操作中存在的编码"></a>I/O 操作中存在的编码</h3><p>涉及到编码的地方一般都在字符到字节或者字节到字符的转换上，而需要这种转换的场景主要是在 I/O 的时候，这个 I/O 包括磁盘 I/O 和网络 I/O，关于网络 I/O 部分在后面将主要以 Web 应用为例介绍。下图是 Java 中处理 I/O 问题的接口：</p>
<p><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image002.png" alt=""></p>
<p>Reader 类是 Java 的 I/O 中读字符的父类，而 InputStream 类是读字节的父类，InputStreamReader 类就是关联字节到字符的桥梁，它负责在 I/O 过程中处理读取字节到字符的转换，而具体字节到字符的解码实现它由 StreamDecoder 去实现，在 StreamDecoder 解码过程中必须由用户指定 Charset 编码格式。值得注意的是如果你没有指定 Charset，将使用本地环境中的默认字符集，例如在中文环境中将使用 GBK 编码。</p>
<p>写的情况也是类似，字符的父类是 Writer，字节的父类是 OutputStream，通过 OutputStreamWriter 转换字符到字节。如下图所示：<br><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image004.png" alt=""><br>同样 StreamEncoder 类负责将字符编码成字节，编码格式和默认编码规则与解码是一致的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">String file = <span class="string">"c:/stream.txt"</span>;</div><div class="line"> String charset = <span class="string">"UTF-8"</span>;</div><div class="line"> <span class="comment">// 写字符换转成字节流</span></div><div class="line"> FileOutputStream outputStream = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line"> OutputStreamWriter writer = <span class="keyword">new</span> OutputStreamWriter(</div><div class="line"> outputStream, charset);</div><div class="line"> <span class="keyword">try</span> &#123;</div><div class="line">    writer.write(<span class="string">"这是要保存的中文字符"</span>);</div><div class="line"> &#125; <span class="keyword">finally</span> &#123;</div><div class="line">    writer.close();</div><div class="line"> &#125;</div><div class="line"> <span class="comment">// 读取字节转换成字符</span></div><div class="line"> FileInputStream inputStream = <span class="keyword">new</span> FileInputStream(file);</div><div class="line"> InputStreamReader reader = <span class="keyword">new</span> InputStreamReader(</div><div class="line"> inputStream, charset);</div><div class="line"> StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</div><div class="line"> <span class="keyword">char</span>[] buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">64</span>];</div><div class="line"> <span class="keyword">int</span> count = <span class="number">0</span>;</div><div class="line"> <span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">while</span> ((count = reader.read(buf)) != -<span class="number">1</span>) &#123;</div><div class="line">        buffer.append(buffer, <span class="number">0</span>, count);</div><div class="line">    &#125;</div><div class="line"> &#125; <span class="keyword">finally</span> &#123;</div><div class="line">    reader.close();</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>涉及到 I/O 操作时只要注意指定统一的编解码 Charset 字符集，一般不会出现乱码问题，有些应用程序如果不注意指定字符编码，中文环境中取操作系统默认编码，如果编解码都在中文环境中，通常也没问题，但是还是强烈的不建议使用操作系统的默认编码，因为这样，你的应用程序的编码格式就和运行环境绑定起来了，在跨环境下很可能出现乱码问题。</p>
<h3 id="内存中操作中的编码"><a href="#内存中操作中的编码" class="headerlink" title="内存中操作中的编码"></a>内存中操作中的编码</h3><p>在 Java 开发中除了 I/O 涉及到编码外，最常用的应该就是在内存中进行字符到字节的数据类型的转换，Java 中用 String 表示字符串，所以 String 类就提供转换到字节的方法，也支持将字节转换为字符串的构造函数。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">String s = <span class="string">"这是一段中文字符串"</span>;</div><div class="line"> <span class="keyword">byte</span>[] b = s.getBytes(<span class="string">"UTF-8"</span>);</div><div class="line"> String n = <span class="keyword">new</span> String(b,<span class="string">"UTF-8"</span>);</div></pre></td></tr></table></figure>
<p> Charset 提供 encode 与 decode 分别对应 char[] 到 byte[] 的编码和 byte[] 到 char[] 的解码。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Charset charset = Charset.forName(<span class="string">"UTF-8"</span>);</div><div class="line">ByteBuffer byteBuffer = charset.encode(string);</div><div class="line">CharBuffer charBuffer = charset.decode(byteBuffer);</div></pre></td></tr></table></figure>
<p> Java 中还有一个 ByteBuffer 类，它提供一种 char 和 byte 之间的软转换，它们之间转换不需要编码与解码，只是把一个 16bit 的 char 格式，拆分成为 2 个 8bit 的 byte 表示，它们的实际值并没有被修改，仅仅是数据的类型做了转换。<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ByteBuffer heapByteBuffer = ByteBuffer.allocate(<span class="number">1024</span>);</div><div class="line">ByteBuffer byteBuffer = heapByteBuffer.putChar(c);</div></pre></td></tr></table></figure></p>
<h3 id="Java-中如何编解码"><a href="#Java-中如何编解码" class="headerlink" title="Java 中如何编解码"></a>Java 中如何编解码</h3><p> 下面我们以“I am 君山”这个字符串为例介绍 Java 中如何把它以 ISO-8859-1、GB2312、GBK、UTF-16、UTF-8 编码格式进行编码的。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"> public static void encode() &#123;</div><div class="line">       String name = &quot;I am 君山&quot;;</div><div class="line">       toHex(name.toCharArray());</div><div class="line">       try &#123;</div><div class="line">           byte[] iso8859 = name.getBytes(&quot;ISO-8859-1&quot;);</div><div class="line">           toHex(iso8859);</div><div class="line">           byte[] gb2312 = name.getBytes(&quot;GB2312&quot;);</div><div class="line">           toHex(gb2312);</div><div class="line">           byte[] gbk = name.getBytes(&quot;GBK&quot;);</div><div class="line">           toHex(gbk);</div><div class="line">           byte[] utf16 = name.getBytes(&quot;UTF-16&quot;);</div><div class="line">           toHex(utf16);</div><div class="line">           byte[] utf8 = name.getBytes(&quot;UTF-8&quot;);</div><div class="line">           toHex(utf8);</div><div class="line">       &#125; catch (UnsupportedEncodingException e) &#123;</div><div class="line">           e.printStackTrace();</div><div class="line">       &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 下面是 Java 中编码需要用到的类图<br> <img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image007.jpg" alt=""><br> 首先根据指定的 charsetName 通过 Charset.forName(charsetName) 设置 Charset 类，然后根据 Charset 创建 CharsetEncoder 对象，再调用 CharsetEncoder.encode 对字符串进行编码，不同的编码类型都会对应到一个类中，实际的编码过程是在这些类中完成的。下面是 String. getBytes(charsetName) 编码过程的时序图<br> <img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image009.jpg" alt=""></p>
<p>从上图可以看出根据 charsetName 找到 Charset 类，然后根据这个字符集编码生成 CharsetEncoder，这个类是所有字符编码的父类，针对不同的字符编码集在其子类中定义了如何实现编码，有了 CharsetEncoder 对象后就可以调用 encode 方法去实现编码了。这个是 String.getBytes 编码方法，其它的如 StreamEncoder 中也是类似的方式。</p>
<p>下面看看不同的字符集是如何将前面的字符串编码成 byte 数组的？<br>如字符串“I am 君山”的 char 数组为 49 20 61 6d 20 541b 5c71，下面把它按照不同的编码格式转化成相应的字节。</p>
<h4 id="按照-ISO-8859-1-编码"><a href="#按照-ISO-8859-1-编码" class="headerlink" title="按照 ISO-8859-1 编码"></a>按照 ISO-8859-1 编码</h4><p>字符串“I am 君山”用 ISO-8859-1 编码，下面是编码结果：<br><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image011.gif" alt=""></p>
<p>从上图看出 7 个 char 字符经过 ISO-8859-1 编码转变成 7 个 byte 数组，ISO-8859-1 是单字节编码，中文“君山”被转化成值是 3f 的 byte。3f 也就是“？”字符，所以经常会出现中文变成“？”很可能就是错误的使用了 ISO-8859-1 这个编码导致的。中文字符经过 ISO-8859-1 编码会丢失信息，通常我们称之为“黑洞”，它会把不认识的字符吸收掉。由于现在大部分基础的 Java 框架或系统默认的字符集编码都是 ISO-8859-1，所以很容易出现乱码问题，后面将会分析不同的乱码形式是怎么出现的。</p>
<h4 id="按照-GB2312-编码"><a href="#按照-GB2312-编码" class="headerlink" title="按照 GB2312 编码"></a>按照 GB2312 编码</h4><p>字符串“I am 君山”用 GB2312 编码，下面是编码结果：<br><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image013.gif" alt=""></p>
<p>GB2312 对应的 Charset 是 sun.nio.cs.ext. EUC_CN 而对应的 CharsetDecoder 编码类是 sun.nio.cs.ext. DoubleByte，GB2312 字符集有一个 char 到 byte 的码表，不同的字符编码就是查这个码表找到与每个字符的对应的字节，然后拼装成 byte 数组。查表的规则如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c2b[c2bIndex[char &gt;&gt; 8] + (char &amp; 0xff)]</div></pre></td></tr></table></figure>
<p> 如果查到的码位值大于 oxff 则是双字节，否则是单字节。双字节高 8 位作为第一个字节，低 8 位作为第二个字节，如下代码所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">if (bb &gt; 0xff) &#123;    // DoubleByte</div><div class="line">           if (dl - dp &lt; 2)</div><div class="line">               return CoderResult.OVERFLOW;</div><div class="line">           da[dp++] = (byte) (bb &gt;&gt; 8);</div><div class="line">           da[dp++] = (byte) bb;</div><div class="line">&#125; else &#123;                      // SingleByte</div><div class="line">           if (dl - dp &lt; 1)</div><div class="line">               return CoderResult.OVERFLOW;</div><div class="line">           da[dp++] = (byte) bb;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从上图可以看出前 5 个字符经过编码后仍然是 5 个字节，而汉字被编码成双字节，在第一节中介绍到 GB2312 只支持 6763 个汉字，所以并不是所有汉字都能够用 GB2312 编码。</p>
<h4 id="按照-GBK-编码"><a href="#按照-GBK-编码" class="headerlink" title="按照 GBK 编码"></a>按照 GBK 编码</h4><p>字符串“I am 君山”用 GBK 编码，下面是编码结果：<br><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image015.gif" alt=""><br>你可能已经发现上图与 GB2312 编码的结果是一样的，没错 GBK 与 GB2312 编码结果是一样的，由此可以得出 GBK 编码是兼容 GB2312 编码的，它们的编码算法也是一样的。不同的是它们的码表长度不一样，GBK 包含的汉字字符更多。所以只要是经过 GB2312 编码的汉字都可以用 GBK 进行解码，反过来则不然。</p>
<h4 id="按照-UTF-16-编码"><a href="#按照-UTF-16-编码" class="headerlink" title="按照 UTF-16 编码"></a>按照 UTF-16 编码</h4><p>字符串“I am 君山”用 UTF-16 编码，下面是编码结果：<br><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image017.gif" alt=""></p>
<p>用 UTF-16 编码将 char 数组放大了一倍，单字节范围内的字符，在高位补 0 变成两个字节，中文字符也变成两个字节。从 UTF-16 编码规则来看，仅仅将字符的高位和低位进行拆分变成两个字节。特点是编码效率非常高，规则很简单，由于不同处理器对 2 字节处理方式不同，Big-endian（高位字节在前，低位字节在后）或 Little-endian（低位字节在前，高位字节在后）编码，所以在对一串字符串进行编码是需要指明到底是 Big-endian 还是 Little-endian，所以前面有两个字节用来保存 BYTE_ORDER_MARK 值，UTF-16 是用定长 16 位（2 字节）来表示的 UCS-2 或 Unicode 转换格式，通过代理对来访问 BMP 之外的字符编码。</p>
<h4 id="按照-UTF-8-编码"><a href="#按照-UTF-8-编码" class="headerlink" title="按照 UTF-8 编码"></a>按照 UTF-8 编码</h4><p>字符串“I am 君山”用 UTF-8 编码，下面是编码结果：<br><img src="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image019.gif" alt=""><br>UTF-16 虽然编码效率很高，但是对单字节范围内字符也放大了一倍，这无形也浪费了存储空间，另外 UTF-16 采用顺序编码，不能对单个字符的编码值进行校验，如果中间的一个字符码值损坏，后面的所有码值都将受影响。而 UTF-8 这些问题都不存在，UTF-8 对单字节范围内字符仍然用一个字节表示，对汉字采用三个字节表示。它的编码规则如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> CoderResult <span class="title">encodeArrayLoop</span><span class="params">(CharBuffer src,</span></span></div><div class="line"> ByteBuffer dst)&#123;</div><div class="line">            <span class="keyword">char</span>[] sa = src.array();</div><div class="line">            <span class="keyword">int</span> sp = src.arrayOffset() + src.position();</div><div class="line">            <span class="keyword">int</span> sl = src.arrayOffset() + src.limit();</div><div class="line">            <span class="keyword">byte</span>[] da = dst.array();</div><div class="line">            <span class="keyword">int</span> dp = dst.arrayOffset() + dst.position();</div><div class="line">            <span class="keyword">int</span> dl = dst.arrayOffset() + dst.limit();</div><div class="line">            <span class="keyword">int</span> dlASCII = dp + Math.min(sl - sp, dl - dp);</div><div class="line">            <span class="comment">// ASCII only loop</span></div><div class="line">            <span class="keyword">while</span> (dp &lt; dlASCII &amp;&amp; sa[sp] &lt; <span class="string">'\u0080'</span>)</div><div class="line">                da[dp++] = (<span class="keyword">byte</span>) sa[sp++];</div><div class="line">            <span class="keyword">while</span> (sp &lt; sl) &#123;</div><div class="line">                <span class="keyword">char</span> c = sa[sp];</div><div class="line">                <span class="keyword">if</span> (c &lt; <span class="number">0x80</span>) &#123;</div><div class="line">                    <span class="comment">// Have at most seven bits</span></div><div class="line">                    <span class="keyword">if</span> (dp &gt;= dl)</div><div class="line">                        <span class="keyword">return</span> overflow(src, sp, dst, dp);</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)c;</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &lt; <span class="number">0x800</span>) &#123;</div><div class="line">                    <span class="comment">// 2 bytes, 11 bits</span></div><div class="line">                    <span class="keyword">if</span> (dl - dp &lt; <span class="number">2</span>)</div><div class="line">                        <span class="keyword">return</span> overflow(src, sp, dst, dp);</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0xc0</span> | (c &gt;&gt; <span class="number">6</span>));</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0x80</span> | (c &amp; <span class="number">0x3f</span>));</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Character.isSurrogate(c)) &#123;</div><div class="line">                    <span class="comment">// Have a surrogate pair</span></div><div class="line">                    <span class="keyword">if</span> (sgp == <span class="keyword">null</span>)</div><div class="line">                        sgp = <span class="keyword">new</span> Surrogate.Parser();</div><div class="line">                    <span class="keyword">int</span> uc = sgp.parse(c, sa, sp, sl);</div><div class="line">                    <span class="keyword">if</span> (uc &lt; <span class="number">0</span>) &#123;</div><div class="line">                        updatePositions(src, sp, dst, dp);</div><div class="line">                        <span class="keyword">return</span> sgp.error();</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">if</span> (dl - dp &lt; <span class="number">4</span>)</div><div class="line">                        <span class="keyword">return</span> overflow(src, sp, dst, dp);</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0xf0</span> | ((uc &gt;&gt; <span class="number">18</span>)));</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0x80</span> | ((uc &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3f</span>));</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0x80</span> | ((uc &gt;&gt;  <span class="number">6</span>) &amp; <span class="number">0x3f</span>));</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0x80</span> | (uc &amp; <span class="number">0x3f</span>));</div><div class="line">                    sp++;  <span class="comment">// 2 chars</span></div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">// 3 bytes, 16 bits</span></div><div class="line">                    <span class="keyword">if</span> (dl - dp &lt; <span class="number">3</span>)</div><div class="line">                        <span class="keyword">return</span> overflow(src, sp, dst, dp);</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0xe0</span> | ((c &gt;&gt; <span class="number">12</span>)));</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0x80</span> | ((c &gt;&gt;  <span class="number">6</span>) &amp; <span class="number">0x3f</span>));</div><div class="line">                    da[dp++] = (<span class="keyword">byte</span>)(<span class="number">0x80</span> | (c &amp; <span class="number">0x3f</span>));</div><div class="line">                &#125;</div><div class="line">                sp++;</div><div class="line">            &#125;</div><div class="line">            updatePositions(src, sp, dst, dp);</div><div class="line">            <span class="keyword">return</span> CoderResult.UNDERFLOW;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>UTF-8 编码与 GBK 和 GB2312 不同，不用查码表，所以在编码效率上 UTF-8 的效率会更好，所以在存储中文字符时 UTF-8 编码比较理想。</p>
<h4 id="几种编码格式的比较"><a href="#几种编码格式的比较" class="headerlink" title="几种编码格式的比较"></a>几种编码格式的比较</h4><p>对中文字符后面四种编码格式都能处理，GB2312 与 GBK 编码规则类似，但是 GBK 范围更大，它能处理所有汉字字符，所以 GB2312 与 GBK 比较应该选择 GBK。UTF-16 与 UTF-8 都是处理 Unicode 编码，它们的编码规则不太相同，相对来说 UTF-16 编码效率最高，字符到字节相互转换更简单，进行字符串操作也更好。它适合在本地磁盘和内存之间使用，可以进行字符和字节之间快速切换，如 Java 的内存编码就是采用 UTF-16 编码。但是它不适合在网络之间传输，因为网络传输容易损坏字节流，一旦字节流损坏将很难恢复，想比较而言 UTF-8 更适合网络传输，对 ASCII 字符采用单字节存储，另外单个字符损坏也不会影响后面其它字符，在编码效率上介于 GBK 和 UTF-16 之间，所以 UTF-8 在编码效率上和编码安全性上做了平衡，是理想的中文编码方式。</p>
<h2 id="字符编码笔记：ASCII，Unicode和UTF-8"><a href="#字符编码笔记：ASCII，Unicode和UTF-8" class="headerlink" title="字符编码笔记：ASCII，Unicode和UTF-8"></a><a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" target="_blank" rel="external">字符编码笔记：ASCII，Unicode和UTF-8</a></h2><h3 id="1-ASCII码"><a href="#1-ASCII码" class="headerlink" title="1. ASCII码"></a>1. ASCII码</h3><p>我们知道，在计算机内部，所有的信息最终都表示为一个二进制的字符串。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就可以组合出256种状态，这被称为一个字节（byte）。也就是说，一个字节一共可以用来表示256种不同的状态，每一个状态对应一个符号，就是256个符号，从0000000到11111111。</p>
<p>上个世纪60年代，美国制定了一套字符编码，对英语字符与二进制位之间的关系，做了统一规定。这被称为ASCII码，一直沿用至今。</p>
<p>ASCII码一共规定了128个字符的编码，比如空格”SPACE”是32（二进制00100000），大写的字母A是65（二进制01000001）。<strong>这128个符号（包括32个不能打印出来的控制符号），只占用了一个字节的后面7位，最前面的1位统一规定为0。</strong></p>
<h3 id="2、非ASCII编码"><a href="#2、非ASCII编码" class="headerlink" title="2、非ASCII编码"></a>2、非ASCII编码</h3><p>英语用128个符号编码就够了，但是用来表示其他语言，128个符号是不够的。比如，在法语中，字母上方有注音符号，它就无法用ASCII码表示。于是，一些欧洲国家就决定，利用字节中闲置的最高位编入新的符号。比如，法语中的é的编码为130（二进制10000010）。这样一来，这些欧洲国家使用的编码体系，可以表示最多256个符号。</p>
<p>但是，这里又出现了新的问题。不同的国家有不同的字母，因此，哪怕它们都使用256个符号的编码方式，代表的字母却不一样。比如，130在法语编码中代表了é，在希伯来语编码中却代表了字母Gimel (ג)，在俄语编码中又会代表另一个符号。但是不管怎样，所有这些编码方式中，0–127表示的符号是一样的，不一样的只是128–255的这一段。</p>
<p>至于亚洲国家的文字，使用的符号就更多了，汉字就多达10万左右。<strong>一个字节只能表示256种符号，肯定是不够的，就必须使用多个字节表达一个符号。</strong> 比如，简体中文常见的编码方式是GB2312，使用两个字节表示一个汉字，所以理论上最多可以表示<strong>256x256=65536个符号</strong>。</p>
<p>中文编码的问题需要专文讨论，这篇笔记不涉及。这里只指出，虽然都是用多个字节表示一个符号，但是GB类的汉字编码与后文的Unicode和UTF-8是毫无关系的。</p>
<h3 id="3-Unicode"><a href="#3-Unicode" class="headerlink" title="3.Unicode"></a>3.Unicode</h3><p>正如上一节所说，<strong>世界上存在着多种编码方式，同一个二进制数字可以被解释成不同的符号。</strong> 因此，要想打开一个文本文件，就必须知道它的编码方式，否则用错误的编码方式解读，就会出现乱码。为什么电子邮件常常出现乱码？就是因为发信人和收信人使用的编码方式不一样。</p>
<p>可以想象，如果有一种编码，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是Unicode，就像它的名字都表示的，这是一种所有符号的编码。<br>Unicode当然是一个很大的集合，现在的规模可以容纳100多万个符号。每个符号的编码都不一样，比如，U+0639表示阿拉伯字母Ain，U+0041表示英语的大写字母A，U+4E25表示汉字”严”。具体的符号对应表，可以查询unicode.org，或者专门的汉字对应表。</p>
<h3 id="4-Unicode的问题"><a href="#4-Unicode的问题" class="headerlink" title="4. Unicode的问题"></a>4. Unicode的问题</h3><p>需要注意的是，<strong>Unicode只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。</strong></p>
<p>比如，汉字”严”的unicode是十六进制数4E25，转换成二进制数足足有15位（100111000100101），也就是说这个符号的表示至少需要2个字节。表示其他更大的符号，可能需要3个字节或者4个字节，甚至更多。</p>
<p>这里就有两个严重的问题，第一个问题是，如何才能区别Unicode和ASCII？计算机怎么知道三个字节表示一个符号，而不是分别表示三个符号呢？第二个问题是，我们已经知道，英文字母只用一个字节表示就够了，如果Unicode统一规定，每个符号用三个或四个字节表示，那么每个英文字母前都必然有二到三个字节是0，这对于存储来说是极大的浪费，文本文件的大小会因此大出二三倍，这是无法接受的。</p>
<p>它们造成的结果是：1）出现了Unicode的多种存储方式，也就是说有许多种不同的二进制格式，可以用来表示Unicode。2）Unicode在很长一段时间内无法推广，直到互联网的出现。</p>
<h3 id="5-UTF-8"><a href="#5-UTF-8" class="headerlink" title="5.UTF-8"></a>5.UTF-8</h3><p>互联网的普及，强烈要求出现一种统一的编码方式。UTF-8就是在互联网上使用最广的一种Unicode的实现方式。其他实现方式还包括UTF-16（字符用两个字节或四个字节表示）和UTF-32（字符用四个字节表示），不过在互联网上基本不用。重复一遍，这里的关系是，<strong>UTF-8是Unicode的实现方式之一。</strong></p>
<p>UTF-8最大的一个特点，就是它是一种<strong>变长的编码方式</strong>。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。</p>
<p>UTF-8的编码规则很简单，只有二条：<br>1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。</p>
<p>2）对于n字节的符号（n&gt;1），<strong>第一个字节的前n位都设为1，第n+1位设为0</strong>，<strong>后面字节的前两位一律设为10。</strong> 剩下的没有提及的二进制位，全部为这个符号的unicode码。</p>
<p>下表总结了编码规则，字母x表示可用编码的位。<br>Unicode符号范围 | UTF-8编码方式<br>(十六进制) | （二进制）<br>——————–+———————————————<br>0000 0000-0000 007F | 0xxxxxxx<br>0000 0080-0000 07FF | 110xxxxx 10xxxxxx<br>0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx<br>0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx</p>
<p>跟据上表，解读UTF-8编码非常简单。<strong>如果一个字节的第一位是0，则这个字节单独就是一个字符；如果第一位是1，则连续有多少个1，就表示当前字符占用多少个字节。</strong></p>
<p>下面，还是以汉字”严”为例，演示如何实现UTF-8编码。<br>已知”严”的unicode是4E25（100111000100101），根据上表，可以发现4E25处在第三行的范围内（0000 0800-0000 FFFF），因此”严”的UTF-8编码需要三个字节，即格式是”1110xxxx 10xxxxxx 10xxxxxx”。然后，从”严”的最后一个二进制位开始，依次从后向前填入格式中的x，多出的位补0。这样就得到了，”严”的UTF-8编码是”11100100 10111000 10100101”，转换成十六进制就是E4B8A5。</p>
<h3 id="6-Unicode与UTF-8之间的转换"><a href="#6-Unicode与UTF-8之间的转换" class="headerlink" title="6. Unicode与UTF-8之间的转换"></a>6. Unicode与UTF-8之间的转换</h3><p>通过上一节的例子，可以看到”严”的Unicode码是4E25，UTF-8编码是E4B8A5，两者是不一样的。它们之间的转换可以通过程序实现。</p>
<p>在Windows平台下，有一个最简单的转化方法，就是使用内置的记事本小程序Notepad.exe。打开文件后，点击”文件”菜单中的”另存为”命令，会跳出一个对话框，在最底部有一个”编码”的下拉条。</p>
<p><img src="http://www.ruanyifeng.com/blog/2007/10/bg2007102801-thumb.jpg" alt=""></p>
<p>里面有四个选项：ANSI，Unicode，Unicode big endian 和 UTF-8。</p>
<p>1）ANSI是默认的编码方式。对于英文文件是ASCII编码，对于简体中文文件是GB2312编码（只针对Windows简体中文版，如果是繁体中文版会采用Big5码）。<br>2）Unicode编码指的是UCS-2编码方式，即直接用两个字节存入字符的Unicode码。这个选项用的little endian格式。<br>3）Unicode big endian编码与上一个选项相对应。我在下一节会解释little endian和big endian的涵义。<br>4）UTF-8编码，也就是上一节谈到的编码方法。<br>选择完”编码方式”后，点击”保存”按钮，文件的编码方式就立刻转换好了。</p>
<h3 id="7-Little-endian和Big-endian"><a href="#7-Little-endian和Big-endian" class="headerlink" title="7. Little endian和Big endian"></a>7. Little endian和Big endian</h3><p>上一节已经提到，Unicode码可以采用UCS-2格式直接存储。以汉字”严”为例，Unicode码是4E25，需要用两个字节存储，一个字节是4E，另一个字节是25。存储的时候，4E在前，25在后，就是Big endian方式；25在前，4E在后，就是Little endian方式。</p>
<p>这两个古怪的名称来自英国作家斯威夫特的《格列佛游记》。在该书中，小人国里爆发了内战，战争起因是人们争论，吃鸡蛋时究竟是从大头(Big-Endian)敲开还是从小头(Little-Endian)敲开。为了这件事情，前后爆发了六次战争，一个皇帝送了命，另一个皇帝丢了王位。</p>
<p>因此，第一个字节在前，就是”大头方式”（Big endian），第二个字节在前就是”小头方式”（Little endian）。</p>
<p>那么很自然的，就会出现一个问题：计算机怎么知道某一个文件到底采用哪一种方式编码？<br>Unicode规范中定义，每一个文件的最前面分别加入一个表示编码顺序的字符，这个字符的名字叫做”零宽度非换行空格”（ZERO WIDTH NO-BREAK SPACE），用FEFF表示。这正好是两个字节，而且FF比FE大1。</p>
<p>如果一个文本文件的头两个字节是FE FF，就表示该文件采用大头方式；如果头两个字节是FF FE，就表示该文件采用小头方式。</p>
<h3 id="8-实例"><a href="#8-实例" class="headerlink" title="8. 实例"></a>8. 实例</h3><p>下面，举一个实例。<br>打开”记事本”程序Notepad.exe，新建一个文本文件，内容就是一个”严”字，依次采用ANSI，Unicode，Unicode big endian 和 UTF-8编码方式保存。<br>然后，用文本编辑软件UltraEdit中的”十六进制功能”，观察该文件的内部编码方式。<br>1）ANSI：文件的编码就是两个字节”D1 CF”，这正是”严”的GB2312编码，这也暗示GB2312是采用大头方式存储的。<br>2）Unicode：编码是四个字节”FF FE 25 4E”，其中”FF FE”表明是小头方式存储，真正的编码是4E25。<br>3）Unicode big endian：编码是四个字节”FE FF 4E 25”，其中”FE FF”表明是大头方式存储。<br>4）UTF-8：编码是六个字节”EF BB BF E4 B8 A5”，前三个字节”EF BB BF”表示这是UTF-8编码，后三个”E4B8A5”就是”严”的具体编码，它的存储顺序与编码顺序是一致的。</p>
<h3 id="9-延伸阅读"><a href="#9-延伸阅读" class="headerlink" title="9. 延伸阅读"></a>9. 延伸阅读</h3><ul>
<li>The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets（关于字符集的最基本知识）</li>
<li>谈谈Unicode编码</li>
<li>RFC3629：UTF-8, a transformation format of ISO 10646（如果实现UTF-8的规定）</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/" target="_blank" rel="external">深入分析 Java 中的中文编码问题</a><br><a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html" target="_blank" rel="external">字符编码笔记：ASCII，Unicode和UTF-8</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/image007.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/cn/java/j-lo-chinesecoding/#authorN1001C&quot;&gt;作者：许令波&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编码问题一直困扰着开发人员，尤其在 Java 中更加明显，因为 Java 是跨平台语言，不同平台之间编码之间的切换较多。本文将向你详细介绍 Java 中编码问题出现的根本原因，你将了解到：Java 中经常遇到的几种编码格式的区别；Java 中经常需要编码的场景；出现中文问题的原因分析；在开发 Java web 程序时可能会存在编码的几个地方，一个 HTTP 请求怎么控制编码格式？如何避免出现中文问题？&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://aisee.me/categories/Java/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Charset" scheme="http://aisee.me/tags/Charset/"/>
    
  </entry>
  
  <entry>
    <title>Principles of IPCreator&#39;s Blog</title>
    <link href="http://aisee.me/2017/04/06/readme/"/>
    <id>http://aisee.me/2017/04/06/readme/</id>
    <published>2017-04-05T22:55:06.000Z</published>
    <updated>2017-04-05T23:24:45.739Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/blog.jpg" alt=""></p>
<h2 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h2><blockquote>
<ol>
<li>Sharpen your meta skills</li>
<li>Master basic concepts by meta skills</li>
<li>Record  the pitfalls I fell into</li>
<li>Share the best practices</li>
<li>Best practices deepen the understanding of meta skill and basic concepts.</li>
</ol>
</blockquote>
<a id="more"></a>
<h2 id="Meta-Skill"><a href="#Meta-Skill" class="headerlink" title="Meta Skill"></a>Meta Skill</h2><h3 id="Deliberate-Practice"><a href="#Deliberate-Practice" class="headerlink" title="Deliberate Practice"></a>Deliberate Practice</h3><h4 id="Update-Concept"><a href="#Update-Concept" class="headerlink" title="Update Concept"></a>Update Concept</h4><h4 id="Deep-Thinking"><a href="#Deep-Thinking" class="headerlink" title="Deep Thinking"></a>Deep Thinking</h4><h4 id="Deep-Reading"><a href="#Deep-Reading" class="headerlink" title="Deep Reading"></a>Deep Reading</h4><h4 id="Using-English"><a href="#Using-English" class="headerlink" title="Using English"></a>Using English</h4><h4 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h4><h4 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h4><h4 id="Walking"><a href="#Walking" class="headerlink" title="Walking"></a>Walking</h4><h4 id="Investment"><a href="#Investment" class="headerlink" title="Investment"></a>Investment</h4><h3 id="English"><a href="#English" class="headerlink" title="English"></a>English</h3><h3 id="Innovative-Thinking"><a href="#Innovative-Thinking" class="headerlink" title="Innovative Thinking"></a>Innovative Thinking</h3><h3 id="Retrieve"><a href="#Retrieve" class="headerlink" title="Retrieve"></a>Retrieve</h3><h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><h3 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h3><h4 id="Business"><a href="#Business" class="headerlink" title="Business"></a>Business</h4><h4 id="Tensorflow"><a href="#Tensorflow" class="headerlink" title="Tensorflow"></a>Tensorflow</h4><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h3 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/blog.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Pattern&quot;&gt;&lt;a href=&quot;#Pattern&quot; class=&quot;headerlink&quot; title=&quot;Pattern&quot;&gt;&lt;/a&gt;Pattern&lt;/h2&gt;&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Sharpen your meta skills&lt;/li&gt;
&lt;li&gt;Master basic concepts by meta skills&lt;/li&gt;
&lt;li&gt;Record  the pitfalls I fell into&lt;/li&gt;
&lt;li&gt;Share the best practices&lt;/li&gt;
&lt;li&gt;Best practices deepen the understanding of meta skill and basic concepts.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Meta Skill" scheme="http://aisee.me/tags/Meta-Skill/"/>
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Pitfall" scheme="http://aisee.me/tags/Pitfall/"/>
    
      <category term="Best Practice" scheme="http://aisee.me/tags/Best-Practice/"/>
    
  </entry>
  
  <entry>
    <title>Meta Skill——English</title>
    <link href="http://aisee.me/2017/04/05/Meta%20Skill/meta-skill-english/"/>
    <id>http://aisee.me/2017/04/05/Meta Skill/meta-skill-english/</id>
    <published>2017-04-05T12:55:06.000Z</published>
    <updated>2017-05-02T14:31:41.039Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/english-collocations-2.jpg" alt=""></p>
<blockquote>
<p>Using is the correct way of learning English</p>
</blockquote>
<ol>
<li>English skill decides the ability of research.</li>
<li>The improvement of program depends on English.</li>
<li>English let you experience more wonderful life.</li>
</ol>
<a id="more"></a>
<h2 id="Research"><a href="#Research" class="headerlink" title="Research"></a>Research</h2><ul>
<li>Search the Fucking Web</li>
<li>Google is beyond  your imagination</li>
</ul>
<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><h3 id="Manual-Document"><a href="#Manual-Document" class="headerlink" title="Manual Document"></a>Manual Document</h3><ul>
<li>Read The Fucking Manual</li>
<li>Platform API</li>
<li>Java API</li>
<li>Android API</li>
<li>Third Party Library<br>…</li>
</ul>
<h3 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h3><ul>
<li>Read The Fucking Codes</li>
<li>Open Source Resources<br>…</li>
</ul>
<h3 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h3><ul>
<li>Android Studio</li>
<li>Git/Github</li>
<li>Linux/VIM</li>
<li>Atom/Source Insight<br>…</li>
</ul>
<h2 id="Life"><a href="#Life" class="headerlink" title="Life"></a>Life</h2><ul>
<li>Beautiful Word/Sentence</li>
<li>Fabulous Music</li>
<li>Excellent Movie</li>
<li>Wonderful Book<br>…</li>
</ul>
<h2 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h2><h3 id="Program-1"><a href="#Program-1" class="headerlink" title="Program"></a>Program</h3><ul>
<li>Ubuntu</li>
<li>Vim</li>
</ul>
<h3 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h3><ul>
<li>Key Words</li>
</ul>
<h3 id="Writing-Blog"><a href="#Writing-Blog" class="headerlink" title="Writing Blog"></a>Writing Blog</h3><ul>
<li>Stick to the good habit of writing in English</li>
</ul>
<h3 id="Appreciation"><a href="#Appreciation" class="headerlink" title="Appreciation"></a>Appreciation</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/english-collocations-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Using is the correct way of learning English&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;English skill decides the ability of research.&lt;/li&gt;
&lt;li&gt;The improvement of program depends on English.&lt;/li&gt;
&lt;li&gt;English let you experience more wonderful life.&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="English" scheme="http://aisee.me/categories/English/"/>
    
    
      <category term="Meta Skill" scheme="http://aisee.me/tags/Meta-Skill/"/>
    
  </entry>
  
  <entry>
    <title>Meta Skill——Retrieve</title>
    <link href="http://aisee.me/2017/04/05/Meta%20Skill/meta-skill-retrieve/"/>
    <id>http://aisee.me/2017/04/05/Meta Skill/meta-skill-retrieve/</id>
    <published>2017-04-05T12:55:06.000Z</published>
    <updated>2017-05-12T14:39:15.045Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/1474698247-3b87ad3b8d5bcf7a2e3d4d1f299d62d9.jpg" alt=""></p>
<blockquote>
<p>Google makes you wiser</p>
</blockquote>
<a id="more"></a>
<h2 id="Basic-Concept"><a href="#Basic-Concept" class="headerlink" title="Basic Concept"></a>Basic Concept</h2><ol>
<li>Wikipedia</li>
</ol>
<h2 id="Program"><a href="#Program" class="headerlink" title="Program"></a>Program</h2><ol>
<li>Stack Overflow</li>
<li>Official Web Site(such as Google…)</li>
<li>Open Source Resources(Github…)</li>
<li>Find Resolving Ways of Trouble</li>
<li>Other Resources(Books…)</li>
</ol>
<h2 id="English"><a href="#English" class="headerlink" title="English"></a>English</h2><ol>
<li>Important Use Scene</li>
</ol>
<h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><ol>
<li>Chrome</li>
<li>TianXingVPN</li>
<li>CSDN</li>
<li>SouBaiduPan</li>
<li>P2PSearcher</li>
<li>XunLei</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="http://www.weyye.me/detail/my-google-search/" target="_blank" rel="external">修改hosts进入google世界</a></li>
</ol>
<h3 id="如何科学上网"><a href="#如何科学上网" class="headerlink" title="如何科学上网"></a>如何科学上网</h3><ul>
<li>VPN： 这里不多做介绍</li>
<li>google浏览器插件：之前可以，现在很多插件都没和谐了</li>
<li>修改系统hosts： 这个是最简单粗暴的，而且速度又快，谁用谁知道</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/1474698247-3b87ad3b8d5bcf7a2e3d4d1f299d62d9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Google makes you wiser&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Meta Skill" scheme="http://aisee.me/tags/Meta-Skill/"/>
    
      <category term="Google" scheme="http://aisee.me/tags/Google/"/>
    
      <category term="English" scheme="http://aisee.me/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Meta Skill——Innovation</title>
    <link href="http://aisee.me/2017/04/05/Meta%20Skill/meta-skill-innovation/"/>
    <id>http://aisee.me/2017/04/05/Meta Skill/meta-skill-innovation/</id>
    <published>2017-04-05T12:55:06.000Z</published>
    <updated>2017-04-10T22:16:13.956Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/innovation%20%281%29.jpg" alt=""></p>
<blockquote>
<p>Innovation brings unexpected pleasant surprise frequently.<br>A teacher should be good at drawing inferences about other cases from one instance.</p>
</blockquote>
<a id="more"></a>
<h2 id="Three-Steps"><a href="#Three-Steps" class="headerlink" title="Three Steps"></a>Three Steps</h2><h3 id="Set-Goal"><a href="#Set-Goal" class="headerlink" title="Set Goal"></a>Set Goal</h3><h3 id="Find-Ways-by-Innovative-Thinking"><a href="#Find-Ways-by-Innovative-Thinking" class="headerlink" title="Find Ways by Innovative Thinking"></a>Find Ways by Innovative Thinking</h3><p>Sharpen your brain  and open your mind</p>
<h3 id="Try-and-Correct"><a href="#Try-and-Correct" class="headerlink" title="Try and Correct"></a>Try and Correct</h3><p>Practice is the only truth.</p>
<h2 id="Six-Common-Innovative-Thinking"><a href="#Six-Common-Innovative-Thinking" class="headerlink" title="Six Common Innovative Thinking"></a>Six Common Innovative Thinking</h2><h3 id="Reversed-Thinking"><a href="#Reversed-Thinking" class="headerlink" title="Reversed Thinking"></a>Reversed Thinking</h3><p><strong>A–&gt;B</strong>  ==&gt; <strong>B–&gt;A</strong></p>
<h3 id="Exaggerated-Thinking"><a href="#Exaggerated-Thinking" class="headerlink" title="Exaggerated Thinking"></a>Exaggerated Thinking</h3><p><strong>A–&gt;B</strong>  ==&gt; <strong>10<em>A–&gt;20</em>B</strong></p>
<h3 id="Composit-Thinking"><a href="#Composit-Thinking" class="headerlink" title="Composit Thinking"></a>Composit Thinking</h3><p>put two together and get three.<br><strong>A–&gt;B</strong>  ==&gt; <strong>AC–&gt;BD</strong></p>
<h3 id="Lessened-Thinking"><a href="#Lessened-Thinking" class="headerlink" title="Lessened Thinking"></a>Lessened Thinking</h3><p><strong>A–&gt;B–&gt;C</strong>  ==&gt; <strong>A–&gt;C</strong></p>
<h3 id="Changing-Order-Thinking"><a href="#Changing-Order-Thinking" class="headerlink" title="Changing Order Thinking"></a>Changing Order Thinking</h3><p><strong>A–&gt;B–&gt;C</strong>  ==&gt; <strong>A–&gt;C–&gt;B</strong></p>
<h3 id="Revolution-Thinking"><a href="#Revolution-Thinking" class="headerlink" title="Revolution Thinking"></a>Revolution Thinking</h3><p><strong>A–&gt;B–&gt;C</strong>  ==&gt; <strong>D–&gt;E–&gt;C</strong></p>
<h2 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h2><h3 id="Patent-Portfolio"><a href="#Patent-Portfolio" class="headerlink" title="Patent Portfolio"></a>Patent Portfolio</h3><h3 id="Program-Trouble-Resolver"><a href="#Program-Trouble-Resolver" class="headerlink" title="Program Trouble Resolver"></a>Program Trouble Resolver</h3><h3 id="Google-Search"><a href="#Google-Search" class="headerlink" title="Google Search"></a>Google Search</h3><h3 id="English-Learning"><a href="#English-Learning" class="headerlink" title="English Learning"></a>English Learning</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/innovation%20%281%29.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Innovation brings unexpected pleasant surprise frequently.&lt;br&gt;A teacher should be good at drawing inferences about other cases from one instance.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Meta Skill" scheme="http://aisee.me/tags/Meta-Skill/"/>
    
      <category term="Innovation" scheme="http://aisee.me/tags/Innovation/"/>
    
  </entry>
  
  <entry>
    <title>A Milestone of My Growing Up</title>
    <link href="http://aisee.me/2017/04/05/MyView/Original/watch%20your%20attention/"/>
    <id>http://aisee.me/2017/04/05/MyView/Original/watch your attention/</id>
    <published>2017-04-05T12:12:06.000Z</published>
    <updated>2017-04-05T14:28:56.912Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://om8nmvpn9.bkt.clouddn.com/great-milestone-884872.jpg" alt=""></p>
<blockquote>
<p>Watch Your Attention<br>Focus on your goal<br>Keep your rhythm</p>
</blockquote>
<a id="more"></a>
<h2 id="Focus-on-your-ultimate-goal"><a href="#Focus-on-your-ultimate-goal" class="headerlink" title="Focus on your ultimate goal"></a>Focus on your ultimate goal</h2><p>SmartAI<br>SmartUI</p>
<h3 id="Any-useful-tools-are-just-tools"><a href="#Any-useful-tools-are-just-tools" class="headerlink" title="Any useful tools are just tools"></a>Any useful tools are just tools</h3><p>Such as linux, vim, androidstudio, gradle ,git etc</p>
<h3 id="Believe-in-Yourself"><a href="#Believe-in-Yourself" class="headerlink" title="Believe in Yourself"></a>Believe in Yourself</h3><p>To grasp the opportunity of AI, you must learn something and do something.<br>Choose means give up something.<br>Give up something means getting another things.<br>Balance is the great law of nature.<br>God is equal to everyone.<br>God help those who help themselves</p>
<h3 id="Treasure-your-attention"><a href="#Treasure-your-attention" class="headerlink" title="Treasure your attention"></a>Treasure your attention</h3><p>Don’t learn too much<br>Don’t talk too much<br>Don’t share too much</p>
<p>Just fine is OK<br>Don’t become a good man for everyone</p>
<h3 id="Perfect-is-weak"><a href="#Perfect-is-weak" class="headerlink" title="Perfect is weak"></a>Perfect is weak</h3><p>Persue better than past<br>Don’t be rushing<br>Don’t compare others but yourself</p>
<h3 id="Deliberate-Practice-needs-Time-and-Patience"><a href="#Deliberate-Practice-needs-Time-and-Patience" class="headerlink" title="Deliberate Practice needs Time and Patience"></a>Deliberate Practice needs Time and Patience</h3><p>Skill can’t be gained easily.<br>One percent hard work, one even smaller gain.<br>When conditions are ripe, success arrives.</p>
<h2 id="Keep-your-rhythm"><a href="#Keep-your-rhythm" class="headerlink" title="Keep your rhythm"></a>Keep your rhythm</h2><p>When you’re tired, take a break first.<br>Normal and healthy ways last longer.<br>Career and Life are long-distance running.</p>
<h2 id="There-is-another-way"><a href="#There-is-another-way" class="headerlink" title="There is another way"></a>There is another way</h2><p>When you’re in trouble, try some different ways by your innovative thinking.</p>
<h3 id="Frog-Jump-Strategy"><a href="#Frog-Jump-Strategy" class="headerlink" title="Frog Jump Strategy"></a>Frog Jump Strategy</h3><p>Forget it temperately, Go ahead</p>
<h2 id="Communication-sincerely"><a href="#Communication-sincerely" class="headerlink" title="Communication sincerely"></a>Communication sincerely</h2><p>Family is your strong shield</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://om8nmvpn9.bkt.clouddn.com/great-milestone-884872.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Watch Your Attention&lt;br&gt;Focus on your goal&lt;br&gt;Keep your rhythm&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Linux Trouble Resolver</title>
    <link href="http://aisee.me/2017/04/05/Program/Tools/Linux/linux-trouble-resolver/"/>
    <id>http://aisee.me/2017/04/05/Program/Tools/Linux/linux-trouble-resolver/</id>
    <published>2017-04-05T04:46:06.000Z</published>
    <updated>2017-04-05T14:02:01.599Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/positive%20attitude.jpg" alt=""></p>
<blockquote>
<p>Deliberate Practice makes Perfect!</p>
</blockquote>
<a id="more"></a>
<h2 id="linux中vi保存文件时的“Can’t-open-file-for-writing”"><a href="#linux中vi保存文件时的“Can’t-open-file-for-writing”" class="headerlink" title="linux中vi保存文件时的“Can’t open file for writing”"></a><a href="http://www.cnblogs.com/kongzhongqijing/p/3531506.html" target="_blank" rel="external">linux中vi保存文件时的“Can’t open file for writing”</a></h2><p>使用vi新建一个文件，编辑保存时提示“Can’t open file for writing”。</p>
<p>分析：</p>
<p>出现这个错误的原因可能有两个：<br>一是当前用户的权限不足；<br>二是此文件可能正被其他程序或用户使用。<br>第一项的解决方案是在使用vi命令打开文件时，前面加上sudo来临时提供管理员权限，即使用命令“sudo vi 文件名”打开编辑文件。</p>
<p>由此看来，sudo命令是很有用的，当我们执行某种操作系统提示诸如“operation not permitted”等权限不足信息时，我们很多时候都可以在命令前面加上sudo来解决权限不足问题。</p>
<p><a href="http://stackoverflow.com/questions/8253362/etc-apt-sources-list-e212-cant-open-file-for-writing" target="_blank" rel="external">/etc/apt/sources.list” E212: Can’t open file for writing
</a><br>Instead of losing all your changes and re-opening with sudo. See this demo of how to save those changes:</p>
<p>One time Setup demo to create a root owned read only file for a lower user:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo touch temp.txt</div><div class="line">sudo chown root:root temp.txt</div><div class="line">sudo chmod 775 temp.txt</div><div class="line">whoami</div><div class="line">el</div></pre></td></tr></table></figure>
<p>First open the file as normal user:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi temp.txt</div></pre></td></tr></table></figure></p>
<p>Then make some changes to the file, it warns you its read only. Use this command.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:w !chmod 777 %</div></pre></td></tr></table></figure></p>
<p>Then write the file:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:wq!</div></pre></td></tr></table></figure></p>
<p>The permissions are expanded, and the file is saved. You need the exclamation point because you are editing a root file as a lesser user.</p>
<p>Explanation of what that command does:</p>
<blockquote>
<p>The :w means write the file. The bang means start interpreting as shell. chmod means change permissions, 777 means full permissions everywhere. The percent means the current file name.</p>
</blockquote>
<p>It applies the change. And it ask if you want to re-load. Press “O” for “Ok”. <strong>Don’t reload or you’ll lose your changes.</strong></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href=""></a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/positive%20attitude.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Deliberate Practice makes Perfect!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Linux" scheme="http://aisee.me/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://aisee.me/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Shell</title>
    <link href="http://aisee.me/2017/04/05/Program/Tools/Linux/shell/"/>
    <id>http://aisee.me/2017/04/05/Program/Tools/Linux/shell/</id>
    <published>2017-04-05T04:25:06.000Z</published>
    <updated>2017-04-05T14:31:48.624Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img.sysgeek.cn/img/logo/linux/linux-2.jpg" alt=""></p>
<ol>
<li>What’s Shell?</li>
<li>Types of Linux Shell</li>
<li>What’s Shell script?</li>
<li>How to Write Shell Scipt?</li>
</ol>
<a id="more"></a>
<h2 id="1-什么是-Shell"><a href="#1-什么是-Shell" class="headerlink" title="1. 什么是 Shell"></a>1. 什么是 Shell</h2><p>Unix Shell 即大家俗称的 Shell 是源于 Unix/Linux 的命令行解释器，用户在 Shell 中执行的一系列命令都会被 Shell 命令行解释器直接执行。现代流行的命令行解释功能都已被内置到 Linux Shell 中进行支持，例如：通配符、 管道、 变量、条件操作、 命令及帮助文件等。简单来说，我们可以把 Linux 理解为用户与 Linux 操作系统进行交互的一个接口。</p>
<h2 id="2-有哪些-Linux-Shell-类型"><a href="#2-有哪些-Linux-Shell-类型" class="headerlink" title="2. 有哪些 Linux Shell 类型"></a>2. 有哪些 Linux Shell 类型</h2><p>常见Shell类型</p>
<p>Linux 中的各种 Shell 类型有很多，但 Bourne Shell 和 C shell 应用最为广泛，事实上 Bourne Shell 已经成为 Shell 附加功能及一些衍生功能的编码基础。</p>
<p>Bourne Shell：Bourne shell 又名 sh，在 Linux 中的标准路径为 /bin/sh，它由 Stephen Bourne 编写创建，其之所以如此出名是因为 sh 作为其它 Shell 的大量符号/硬链接而存在。（Bourne Shell 的 License 仍在讨论中。）</p>
<p>C Shell：C Shell 又名 csh，由 Billy Joy 编写创建并被 BSD Unix 广泛使用。C Shell 引入许多功能来完善交互，如：别名，历史操作，任务控制等。它完全由 C 语言写成，并使用 BSD license。</p>
<p>Fish：Fish 是友好人机交互的代表，它改变了用户与 Linux Shell 在通用变量、友好错误信息、Tab 补全、语法高亮、智能终端和剪贴板处理等方面的交互方式。（Fish 基于 GPL v2）<br>Bourne-Again Shell：作为 GNU 项目的一部分，Bourne-Again Shell 是目前大多数 Linux 发行版和 Mac OS X 默认使用的 Shell。（它主要由 C 语言写成并基于 GPLv3 发布）</p>
<p>其它不太常用的 Linux Shell 还包括：</p>
<p>Debian Almquist shell 别名 dash<br>Korn Shell 别名 ksh<br>Z shell 别名 zh<br>Busybox<br>……</p>
<h2 id="3-什么是-Shell-脚本"><a href="#3-什么是-Shell-脚本" class="headerlink" title="3. 什么是 Shell 脚本"></a>3. 什么是 Shell 脚本</h2><p>Shell 脚本主要由 Linux Shell 解释执行，可被用于自动化的程序执行、文件操作、环境配置等任务，Linux 管理员通常使用 Shell 脚本来执行一些重复性的体力劳动。</p>
<p>Shell 脚本可将多个要执行的命令和任务提交到 Linux Shell 自动执行，而无需用户手动触发。你还可以在单个脚本中将一个命令的输出定义为另一个命令的输入。</p>
<p>总的来说，Shell 脚本编写是 Linux 管理员节省时间和资源的必备技能。</p>
<h2 id="4-如何编开始写自己的-Shell-脚本"><a href="#4-如何编开始写自己的-Shell-脚本" class="headerlink" title="4. 如何编开始写自己的 Shell 脚本"></a>4. 如何编开始写自己的 Shell 脚本</h2><p>在新手阶段，我们比较建议大家使用 gedit、vi/vim、nano 或 Emacs 来编写 Shell 脚本，而不要使用其它 IDE 编辑器。Bash 脚本必需以如下代码作为首行：</p>
<blockquote>
<p>#!/bin/bash</p>
</blockquote>
<p>上述字符中的 #! 被称为 shebang，后面跟的 /bin/bash 表明要使用 /bin/bash 来执行。除首行（意义特殊）用于指定脚本类型外，其余以 # 打头的内容会被当作注释被 Shell 忽略执行。</p>
<p>脚本写成后，你可将该文件保存成任意扩展名甚至无扩展名，但业界公认惯例以 .sh 作为 Linux Shell 脚本的扩展名，建议大家也别搞特殊。而且要在赋予脚本执行权限之后才能被执行，建议大家采用 775 权限，千万不要 777：</p>
<blockquote>
<p>chmod 755 sysgeekdemo.sh</p>
</blockquote>
<p>编写首个Shell脚本<br>打开你使用的文本编辑器，粘贴如下内容：</p>
<blockquote>
<p>#!/bin/bash<br>echo “Hello World!”</p>
</blockquote>
<p>将其保存成 1st.sh 再执行看看效果：</p>
<blockquote>
<p>chmod 755 1st.sh<br>./1st.sh</p>
</blockquote>
<p><img src="https://img.sysgeek.cn/img/201604/Linux-Shell_136C9/linux-shell-scripting-starting-2.jpg" alt=""></p>
<p>执行成功了，是不是非常简单。<br>下面我们再建立一个 2nd.sh 并粘入如下内容：</p>
<blockquote>
<p>#!/bin/bash<br>echo “What is your name?”<br>read a;<br>echo “Hey $a! what is your Favorite Website?”<br>read b;<br>echo -e “That’s Nice to know @$a that $b is your favorite Website”</p>
</blockquote>
<p>大家看看执行之后发生了什么呢？</p>
<p>echo 后的「What is your name?」进行了正确输出，随后你输入的名字被存到了变量 a 当中，让命令可以从文件描述符中进行读取。<br>echo 后跟的 「Hey $a! what is your Favorite Website?」中的 $a 变量进行了赋值输出，并将输入的网址存入了变量 b，在第三行进行输出。<br>如此简单！开始上手的感觉非常良好？</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.sysgeek.cn/linux-shell-scripting-starting/" target="_blank" rel="external">Linux Shell脚本系列：开始上手(1)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://img.sysgeek.cn/img/logo/linux/linux-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What’s Shell?&lt;/li&gt;
&lt;li&gt;Types of Linux Shell&lt;/li&gt;
&lt;li&gt;What’s Shell script?&lt;/li&gt;
&lt;li&gt;How to Write Shell Scipt?&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Ubuntu" scheme="http://aisee.me/tags/Ubuntu/"/>
    
      <category term="Shell" scheme="http://aisee.me/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://aisee.me/2017/04/05/Program/Tools/Linux/linux/"/>
    <id>http://aisee.me/2017/04/05/Program/Tools/Linux/linux/</id>
    <published>2017-04-04T22:13:06.000Z</published>
    <updated>2017-04-05T04:25:18.136Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/Google-Android-and-Linux.png" alt=""></p>
<blockquote>
<p>In Brief, Android is a Java System running on Linux</p>
</blockquote>
<a id="more"></a>
<h2 id="Basic-Concept"><a href="#Basic-Concept" class="headerlink" title="Basic Concept"></a>Basic Concept</h2><h3 id="Install-Software"><a href="#Install-Software" class="headerlink" title="Install Software"></a>Install Software</h3><p>Linux（继承自Unix）的文件系统构架中，用户手动选择安装目录是不必要的。这套系统是很聪明滴，她更了解什么东西该放在什么位置，根本不用操心。若是非要操心，非要自己指定位置，指错了说不定会出故障欧！——因为提供软件的人也信任这套系统最佳，呵呵~这种规范已经实行几十年了，事实证明这就是最好的！所以就不需要我们操心安装位置了（事实上安装时也没提示你选择安装目录）</p>
<p>通常情况下，linux会这样放软件的组件：</p>
<blockquote>
<p>程序的文档-&gt;/usr/share/doc; /usr/local/share/doc<br>程序-&gt;/usr/share; /usr/local/share<br>程序的启动项-&gt;/usr/share/apps; /usr/local/share<br>程序的语言包-&gt;/usr/share/locale; /usr/local/share/locale<br>可执行文件-&gt;/usr/bin; /usr/local/bin</p>
</blockquote>
<p>而有的软件为了和系统组件分隔开，选择栖息于 /opt，但目录结构往往是一样的，把/usr或/usr/local 替换为了/opt/“软件名”</p>
<p><a href="https://www.sysgeek.cn/linux-package-management/" target="_blank" rel="external">Linux软件包管理基本操作入门</a><br>大多数现代类 Unix 操作系统都提供了一个集中的软件包管理机制，以帮助用户搜索、安装和管理软件。而软件通常以「包」的形式存储在仓库「repository」中，对软件包的使用和管理被称为包管理。而 Linux 包的基本组成部分通常有：共享库、应用程序、服务和文档。</p>
<p>包管理通常不仅限于软件的一次性安装，还包括了对已安装软件包进行升级的工具。「包仓库」有助于确保代码已经在你使用的系统上进行了审核，并由软件开发者或包维护者进行管理。</p>
<p>在配置 Linux 服务器或开发环境时，通常都不仅限于使用官方源。相较于现如今软件版本快速更新迭代而言，虽然官方源所使用的稳定版软件包很可能已过时，但对于系统管理员和开发人员来说，掌握常见 Linux 包管理基本操作还是一项必备的常用技能。</p>
<p>大多数包管理系统是建立在包文件上的集合，包文件通常包含编译好的二进制文件和其它资源组成的：软件、安装脚本、元数据及其所需的依赖列表。</p>
<p>Debian 及其衍生产品如：Ubuntu、Linux Mint 和 Raspbian 的包格式为.deb文件，APT 是最常见包操作命令，可：搜索库、安装包及其依赖和管理升级。而要直接安装现成.deb包时需要使用dpkg命令。</p>
<p>CentOS、Fedora 及 Red Hat 系列 Linux 使用RPM包文件，并使用yum命令管理包文件及与软件库交互。</p>
<p>在最新的 Fedora 版本中，yum命令已被dnf取代进行包管理。</p>
<blockquote>
<p>amd64的说法，可以google一下，大约就是amd最先推出64位机，于是乎后来者比如因特尔在推出64位CPU时也沿用了此叫法。</p>
</blockquote>
<h4 id="更新本地包数据库列表"><a href="#更新本地包数据库列表" class="headerlink" title="更新本地包数据库列表"></a>更新本地包数据库列表</h4><p>大多数 Linux 都使用本地数据库来存储远程可用的包仓库列表，所以在安装或升级包之前最好更新一下这个数据库。</p>
<p>系统    命令<br>Debian / Ubuntu    sudo apt-get update<br>CentOS    yum check-update<br>Fedora    dnf check-update</p>
<h4 id="升级已安装的包"><a href="#升级已安装的包" class="headerlink" title="升级已安装的包"></a>升级已安装的包</h4><p>在没有包管理方式时，要升级并保持 Linux 已装软件处在最新版本是一个巨大的工程，管理员和用户不得不手动跟踪上游软件版本变化及安全警告。在有了包管理系统之后，只需几条命令便可保持软件最新。</p>
<p>系统    命令    备注<br>Debian / Ubuntu    sudo apt-get upgrade    仅升级已安装的软件包<br>sudo apt-get dist-upgrade    可添加或删除程序包，以满足新的依赖。<br>CentOS    sudo yum update<br>Fedora    sudo dnf upgrade</p>
<h4 id="查找-搜索软件包"><a href="#查找-搜索软件包" class="headerlink" title="查找/搜索软件包"></a>查找/搜索软件包</h4><p>大多数 Linux 桌面版本都提供用户可搜索和安装软包的界面，这是找寻和安装软件的最佳方法。但对于追求效率和服务器管理员来说，使用命令行工具查找/搜索软件包才是正途。</p>
<p>系统    命令    备注<br>Debian / Ubuntu    apt-cache search 搜索内容<br>CentOS    yum search 搜索内容<br>yum search all 搜索内容    搜索所有内容，包括包描述。<br>Fedora    dnf search 搜索内容<br>dnf search all 搜索内容    搜索所有内容，包括包描述。</p>
<h4 id="查看某个软件包信息"><a href="#查看某个软件包信息" class="headerlink" title="查看某个软件包信息"></a>查看某个软件包信息</h4><p>在决定安装哪个包之前，我们往往都需要查看该软件包的详细说明。包的说明文件中通常包括：包名、版本号及依赖列表等元数据，可以使用如下命令来查看。</p>
<p>系统    命令    备注<br>Debian / Ubuntu    apt-cache show 包名    显示有关软件包的本地缓存信息<br>dpkg -s 包名    显示包的当前安装状态<br>CentOS    yum info 包名<br>yum deplist 包名    列出包的以来<br>Fedora    dnf info 包名<br>dnf repoquery –requires 包名    列出包的以来</p>
<h4 id="从软件仓库安装包"><a href="#从软件仓库安装包" class="headerlink" title="从软件仓库安装包"></a>从软件仓库安装包</h4><p>一旦我们知道某个软件包的名称之后，便可以使用如下命令从软件仓库安装包。</p>
<p>系统    命令    备注<br>Debian / Ubuntu    sudo apt-get install 包名<br>sudo apt-get install 包1 包2 …    安装所有列出的包<br>sudo apt-get install -y 包名    无需提示直接安装<br>CentOS    sudo yum install 包名<br>sudo yum install 包1 包2 …    安装所有列出的包<br>sudo yum install -y 包名    无需提示直接安装<br>Fedora    sudo dnf install 包名<br>sudo dnf install 包1 包2 …    安装所有列出的包<br>sudo dnf install -y 包名    无需提示直接安装</p>
<h4 id="从本地文件系统直接安装包"><a href="#从本地文件系统直接安装包" class="headerlink" title="从本地文件系统直接安装包"></a>从本地文件系统直接安装包</h4><p>很多时候，我们在进行测试或从某个地方直接拿到软件包之后需要从本地文件系统直接安装包。Debian 及衍生系统可以使用 dpkg 进行安装，CentOS 和 Fedora 系统使用 yum 和 dnf 命令进行安装。</p>
<p>系统    命令    备注<br>Debian / Ubuntu    sudo dpkg -i 包名.deb<br>sudo apt-get install -y gdebi&amp;&amp; sudo gdebi 包名.deb    使用gdebi检索缺少的依赖关系<br>CentOS    sudo yum install 包名.rpm<br>Fedora    sudo dnf install 包名.rpm</p>
<h4 id="移除已安装的包"><a href="#移除已安装的包" class="headerlink" title="移除已安装的包"></a>移除已安装的包</h4><p>由于包管理器知道哪些文件是由哪个包提供的，所以在卸载不需要的软件包之后通常可以获得一个干净的系统。</p>
<p>系统    命令    备注<br>Debian / Ubuntu    sudo apt-get remove 包名<br>sudo apt-get autoremove    自动移除已知不需要的包<br>CentOS    sudo yum remove 包名<br>Fedora    sudo dnf erase 包名</p>
<h3 id="Basic-Command"><a href="#Basic-Command" class="headerlink" title="Basic Command"></a>Basic Command</h3><h4 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h4><p>pwd 查看当前目录</p>
<p>回到上级目录<br>与 Windows 一样，使用 cd .. 即可。如果要在父目录的各文件夹之间进行切换，使用 ../文件夹名 即可。</p>
<p>回到上个目录<br>如果你操作到一半时，需要返回上个进入过的目录，可以使用 – 破折号：cd -</p>
<p>其它目录导航操作<br>cd 返回Home目录<br>cd / 回到Root目录（需要有权限）</p>
<h2 id="Bird-Brother’s-Linux-Experience"><a href="#Bird-Brother’s-Linux-Experience" class="headerlink" title="Bird Brother’s Linux Experience"></a>Bird Brother’s Linux Experience</h2><h2 id="Useful-Tools-of-Linux"><a href="#Useful-Tools-of-Linux" class="headerlink" title="Useful Tools of Linux"></a>Useful Tools of Linux</h2><h3 id="在Ubuntu-16-04如何安装Java"><a href="#在Ubuntu-16-04如何安装Java" class="headerlink" title="在Ubuntu 16.04如何安装Java"></a><a href="https://www.howtoing.com/how-to-install-java-with-apt-get-on-ubuntu-16-04/" target="_blank" rel="external">在Ubuntu 16.04如何安装Java</a></h3><h3 id="VIM"><a href="#VIM" class="headerlink" title="VIM"></a><a href="http://coolshell.cn/articles/5426.html" target="_blank" rel="external">VIM</a></h3><p><img src="http://www.vim.org/images/vim_header.gif" alt=""></p>
<blockquote>
<p>vi(vim)是上Linux 非常常用的编辑器，很多Linux发行版都默认安装了vi(vim)。vi(vim)命令繁多但是如果使用灵活之后将会大大提高效率。vi是 “visual interface”的缩写，vim是vi IMproved(增强版的vi)。在一般的系统管理维护中vi就够用，如果想使用代码加亮的话可以使用vim。</p>
</blockquote>
<p>Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as “vi” with most UNIX systems and with Apple OS X.</p>
<p>Vim is rock stable and is continuously being developed to become even better. Among its features are:</p>
<ol>
<li>persistent, multi-level undo tree</li>
<li>extensive plugin system</li>
<li>support for hundreds of programming languages and file formats</li>
<li>powerful search and replace</li>
<li>integrates with many tools</li>
</ol>
<p>安装 sudo apt-get install vim<br>启动Vim后，vim在 Normal 模式下。<br>让我们进入 Insert 模式，请按下键 i 。(vim左下角有一个–insert–字样)<br>想返回 Normal 模式，请按 ESC 键</p>
<p>在VIM的Normal模式下，所有的键就是功能键<br>x → 删当前光标所在的一个字符。<br>dd → 删除当前行，并把删除的行存到剪贴板里<br>p → 粘贴剪贴板<br>:wq → 存盘 + 退出 (:w 存盘, :q 退出)  :w 后可以跟文件名</p>
<p><img src="http://www.runoob.com/wp-content/uploads/2015/10/vi-vim-cheat-sheet-sch.gif" alt=""><br>Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。<br>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。<br>连 vim 的官方网站 (<a href="http://www.vim.org" target="_blank" rel="external">http://www.vim.org</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p>
<p>vi/vim 的使用<br>基本上 vi/vim 共分为三种模式，分别是命令模式（Command mode），插入模式（Insert mode）和底线命令模式（Last line mode）。 这三种模式的作用分别是：</p>
<h4 id="命令模式："><a href="#命令模式：" class="headerlink" title="命令模式："></a>命令模式：</h4><p>用户刚刚启动 vi/vim，便进入了命令模式。<br>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p>
<p>以下是常用的几个命令：<br>i 切换到插入模式，以输入字符。<br>x 删除当前光标所在处的字符。<br>: 切换到底线命令模式，以在最底一行输入命令。</p>
<p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。<br>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p>
<h4 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h4><p>在命令模式下按下i就进入了输入模式。<br>在输入模式中，可以使用以下按键：</p>
<p>字符按键以及Shift组合，输入字符<br>ENTER，回车键，换行<br>BACK SPACE，退格键，删除光标前一个字符<br>DEL，删除键，删除光标后一个字符<br>方向键，在文本中移动光标<br>HOME/END，移动光标到行首/行尾<br>Page Up/Page Down，上/下翻页<br>Insert，切换光标为输入/替换模式，光标将变成竖线/下划线<br>ESC，退出输入模式，切换到命令模式</p>
<h4 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h4><p><strong>在命令模式下按下:（英文冒号）就进入了底线命令模式。</strong><br>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。<br>在底线命令模式中，基本的命令有（已经省略了冒号）：<br>q 退出程序<br>w 保存文件<br>按ESC键可随时退出底线命令模式。</p>
<p>简单的说，我们可以将这三个模式想成底下的图标来表示：<br><img src="http://www.runoob.com/wp-content/uploads/2014/07/vim-vi-workmodel.png" alt=""></p>
<p><a href="http://www.cnblogs.com/next-open/p/3662899.html" target="_blank" rel="external">Linux上vi(vim)编辑器使用教程</a></p>
<p>一、打开文件、保存、关闭文件(vi命令模式下使用)<br>vi filename       //打开filename文件<br>:w       //保存文件<br>:w vpser.net //保存至vpser.net文件<br>:q          //退出编辑器，如果文件已修改请使用下面的命令<br>:q!        //退出编辑器，且不保存<br>:wq         //退出编辑器，且保存文件</p>
<p>二、插入文本或行(vi命令模式下使用，执行下面命令后将进入插入模式，按ESC键可退出插入模式)<br>a      //在当前光标位置的右边添加文本<br>i       //在当前光标位置的左边添加文本<br>A     //在当前行的末尾位置添加文本<br>I      //在当前行的开始处添加文本(非空字符的行首)<br>O     //在当前行的上面新建一行<br>o     //在当前行的下面新建一行<br>R    //替换(覆盖)当前光标位置及后面的若干文本<br>J    //合并光标所在行及下一行为一行(依然在命令模式)</p>
<p>三、移动光标(vi命令模式下使用)<br>1、使用上下左右方向键</p>
<p>2、命令模式下：h   向左、j   向下 、k   向上、l  向右。<br>空格键 向右、Backspace  向左、Enter  移动到下一行首、-  移动到上一行首。</p>
<p>四、删除、恢复字符或行(vi命令模式下使用)<br>x         //删除当前字符<br>nx         //删除从光标开始的n个字符<br>dd      //删除当前行<br>ndd   //向下删除当前行在内的n行<br>u       //撤销上一步操作<br>U      //撤销对当前行的所有操作</p>
<p>五、搜索(vi命令模式下使用)<br>/vpser     //向光标下搜索vpser字符串<br>?vpser     //向光标上搜索vpser字符串<br>n           //向下搜索前一个搜素动作<br>N         //向上搜索前一个搜索动作</p>
<p>六、跳至指定行(vi命令模式下使用)<br>n+        //向下跳n行<br>n-         //向上跳n行<br>nG        //跳到行号为n的行<br>G           //跳至文件的底部</p>
<p>七、设置行号(vi命令模式下使用)<br>:set  nu     //显示行号<br>:set nonu    //取消显示行号</p>
<p>八、复制、粘贴(vi命令模式下使用)<br>yy    //将当前行复制到缓存区，也可以用 “ayy 复制，”a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。<br>nyy   //将当前行向下n行复制到缓冲区，也可以用 “anyy 复制，”a 为缓冲区，a也可以替换为a到z的任意字母，可以完成多个复制任务。<br>yw    //复制从光标开始到词尾的字符。<br>nyw   //复制从光标开始的n个单词。<br>y^      //复制从光标到行首的内容。  VPS侦探<br>y$      //复制从光标到行尾的内容。<br>p        //粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用”ap 进行粘贴。<br>P        //粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用”aP 进行粘贴。</p>
<p>九、替换(vi命令模式下使用)<br>:s/old/new      //用new替换行中首次出现的old<br>:s/old/new/g         //用new替换行中所有的old<br>:n,m s/old/new/g     //用new替换从n到m行里所有的old<br>:%s/old/new/g      //用new替换当前文件里所有的old</p>
<p>十、编辑其他文件<br>:e otherfilename    //编辑文件名为otherfilename的文件。</p>
<p>十一、修改文件格式<br>:set fileformat=unix   //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M。</p>
<h3 id="Nmon-Nigel’s-Monitor"><a href="#Nmon-Nigel’s-Monitor" class="headerlink" title="Nmon (  Nigel’s Monitor) "></a><a href="https://www.sysgeek.cn/nmon-monitor-linux-system-performance/" target="_blank" rel="external">Nmon (  Nigel’s Monitor) </a></h3><p>非常常用的系统性能监视工具，由 IBM 工程师 Nigel Griffiths 开发，适用于 AIX 和 Linux 操作系统。该工具可以直接在屏幕上显示当前操作系统的资源利用率，以帮助大家找出系统瓶颈和协助系统调优。使用 Nmon 大家便可以轻松监控系统 CPU、内存、网络、磁盘、文件系统、NFS、Top 进程等信息。</p>
<blockquote>
<p>sudo apt-get install nmon</p>
</blockquote>
<p>一旦安装完成，则可以通过在终端执行 nmon 命令启动它。<br><img src="https://img.sysgeek.cn/img/201512/NmonLinux_86D/nmon-monitor-linux-system-performance-2.jpg" alt=""></p>
<p>从上图中大家可以看到，Nmon 命令行工具是一个用户交互的应用程序，大家可以非常方便地使用键盘快捷键来查看相关统计信息。</p>
<p>q : 停止并退出Nmon<br>h : 查看帮助信息<br>c : 查看 CPU 统计信息<br>m : 查看内存统计信息<br>d : 查看磁盘统计信息<br>k : 查看内核统计信息<br>n : 查看网络统计信息<br>N : 查看 NFS 统计信息<br>j : 查看文件系统统计信息<br>t : 查看 Top 进程统计信息<br>V : 查看虚拟内存统计信息<br>v : 详细输出模式</p>
<h3 id="w"><a href="#w" class="headerlink" title="w"></a>w</h3><p>使用该命令我们可以查看到当前登录系统的用户是谁，以及执行了哪些命令。<br><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-2.jpg" alt=""></p>
<h3 id="dstat"><a href="#dstat" class="headerlink" title="dstat"></a>dstat</h3><p>dstat 是一个可以非常灵活使用和进行组合使用的工具，它可用于监控内存、进行、网络及磁盘性能，可用于替代  ifstat、iostat、dmstat等工具。使用之前需先执行如下命令进行安装：</p>
<blockquote>
<p>apt-get install dstat</p>
</blockquote>
<p>执行如下命令可以看到所有监控数据：</p>
<blockquote>
<p>dstat</p>
</blockquote>
<p><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-10.jpg" alt=""><br>其可选参数非常多，常用的有：</p>
<p>dstat -c ： 监控CPU<br>dstat -cdl -D sda1 ：监控CPU详细信息<br>dstat -d ：监控磁盘</p>
<h3 id="saidar"><a href="#saidar" class="headerlink" title="saidar"></a>saidar</h3><p>saidar 是另一个 CLI 系统数据监控和统计工具，可提供有关磁盘、网络、存储和 SWAP 的监控信息。使用之前需先使用如下命令进行安装：</p>
<blockquote>
<p>sudo apt-get install saidar</p>
</blockquote>
<p>安装完成后可直接执行 saidar 进行输出，但我们通常使用带参数的命令生成带颜色输出：</p>
<blockquote>
<p>saidar -c</p>
</blockquote>
<p><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-11.jpg" alt=""></p>
<h3 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h3><p>ss 全称 socket statistics，是一个可以替代 netstat 的网络连接查看工具。<br>直接执行 ss 即可进行查看：<br><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-12.jpg" alt=""></p>
<p>常用参数有：<br>ss -A tcp ：指定查看协议<br>ss -ltp ：显示进程名称和 PID</p>
<h3 id="ccze"><a href="#ccze" class="headerlink" title="ccze"></a>ccze</h3><p>ccze 非常有用，它可以用不同颜色高亮日志，协助管理员进行区分和查看分析。使用之前需先使用如下命令进行安装：</p>
<blockquote>
<p>apt-get install ccze</p>
</blockquote>
<p>我们可以使用类似如下方式进行使用：</p>
<blockquote>
<p>tailf /var/log/syslog | ccze</p>
</blockquote>
<p><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-13.jpg" alt=""></p>
<p>而使用 ccze -l 参数可以查看其支持的日志类型。<br><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-14.jpg" alt=""></p>
<h3 id="sl"><a href="#sl" class="headerlink" title="sl"></a><a href="http://coolshell.cn/articles/7829.html" target="_blank" rel="external">sl</a></h3><p>sl是什么？ls？，呵呵，你会经常把ls 打成sl吗？如果是的话，这个东西可以让你娱乐一下，你会看到一辆火车呼啸而过~~，相当拉风。你可以使用sudo apt-get install sl 安装。<br><img src="http://coolshell.cn//wp-content/uploads/2012/07/sl.jpg" alt=""></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><img src="http://cn.linux.vbird.org/image/title/title_03.png" alt=""><br><a href="http://cn.linux.vbird.org/" target="_blank" rel="external">鸟哥的Linux私房菜</a><br><img src="https://img.sysgeek.cn/img/201510/a78b99451b2c_B15/10-useful-utilities-linux-1.jpg" alt=""><br><a href="http://coolshell.cn/articles/5426.html" target="_blank" rel="external">简明 VIM 练级攻略</a><br><a href="https://www.sysgeek.cn/10-useful-utilities-linux/" target="_blank" rel="external">10大好用的Linux实用工具推荐</a><br><a href="http://coolshell.cn/articles/7829.html" target="_blank" rel="external">28个UNIX/LINUX的命令行神器</a><br><a href="http://wiki.ubuntu.org.cn/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97" target="_blank" rel="external">软件安装指南</a><br><a href="https://github.com/Bakumon/blog/issues/4" target="_blank" rel="external">Ubuntu 安装 Android Studio 的步骤</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/Google-Android-and-Linux.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Brief, Android is a Java System running on Linux&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Ubuntu" scheme="http://aisee.me/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu</title>
    <link href="http://aisee.me/2017/04/04/Program/Tools/Linux/ubuntu/"/>
    <id>http://aisee.me/2017/04/04/Program/Tools/Linux/ubuntu/</id>
    <published>2017-04-04T09:01:06.000Z</published>
    <updated>2017-04-05T05:12:09.842Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://www.ubuntu-china.cn/static/img/homepage/cn-home-desktop.jpg" alt=""></p>
<p>Ubuntu is an open source software platform that runs from the cloud, to the smartphone, to all your things</p>
<p>Ubuntu is the number one platform for containers</p>
<p>From LXD to Kubernetes to Docker, learn how we can help you run containers at scale on public, private, hybrid or bare metal clouds.</p>
<a id="more"></a>
<h2 id="Download-Ubuntu-Desktop"><a href="#Download-Ubuntu-Desktop" class="headerlink" title="Download Ubuntu Desktop"></a><a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="external">Download Ubuntu Desktop</a></h2><p>Download the latest LTS version of Ubuntu, for desktop PCs and laptops. LTS stands for long-term support – which means five years of free security and maintenance updates, guaranteed.</p>
<h2 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">VirtualBox</a></h2><p><img src="https://www.virtualbox.org/graphics/vboxlogodown.png" alt=""></p>
<p>VirtualBox is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.</p>
<h2 id="Hoxx-VPN-Proxy"><a href="#Hoxx-VPN-Proxy" class="headerlink" title="Hoxx VPN Proxy"></a><a href="https://addons.mozilla.org/en-Us/firefox/addon/hoxx-vpn-proxy/" target="_blank" rel="external">Hoxx VPN Proxy</a></h2><p>Hoxx VPN Proxy service to unblock blocked websites, hide your location and encrypt your connection. Completely free.<br><img src="https://addons.cdn.mozilla.net/user-media/addon_icons/680/680403-64.png?modified=1490620821" alt=""><br><img src="https://addons.cdn.mozilla.net/user-media/previews/thumbs/172/172334.png?modified=1458671759" alt=""></p>
<h2 id="Ubuntu-16-04安装sogou-拼音输入法"><a href="#Ubuntu-16-04安装sogou-拼音输入法" class="headerlink" title="Ubuntu 16.04安装sogou 拼音输入法"></a><a href="http://blog.csdn.net/ljheee/article/details/52966456" target="_blank" rel="external">Ubuntu 16.04安装sogou 拼音输入法</a></h2><p><a href="http://www.linuxdiyf.com/linux/22075.html" target="_blank" rel="external">Ubuntu 16.04 LTS安装sogou输入法详解</a></p>
<p>一、安装sogou输入法步骤：<br>1、首先到搜狗输入法官网下载搜狗输入法，下载的是个deb文件。<br>      搜狗输入法Linux版下载地址：<a href="http://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="external">http://pinyin.sogou.com/linux/?r=pinyin</a><br>2、Ubuntu 16.04安装搜狗输入法命令如下：<br>      sudo apt-get install -f<br>      sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb<br>      deb文件名，要和自己下载的版本一致。<br>3、安装完毕，设置语言选项<br>      到系统设置-&gt;语言支持（System-&gt;Language Support），将键盘输入法系统由默认的iBus设置为fcitx。如下图<br><img src="http://img.blog.csdn.net/20161029203358409?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""><br>操作此步骤时，如果没有出现fcitx选项，说明你的机器还需要安装fcitx键盘输入法系统，直接看第二部分fcitx的安装。<br>4、注销，重新登陆。<br>      将键盘输入法系统改为fcitx后，一定要注销，而且操作顺序不能改。这时还不能马上使用，还要点击右上角的输入法图标，点击设置，进入设置界面，这个时候没有看到搜狗输入法，点击左下角的加号，然后注意先要去掉”只显示当前语言的输入法”前面那个勾，然后再搜索”sogo”，这个时候就看到sogo pinyin了，接着添加就可以了，然后就可以切换输入法了。<br><img src="http://img.blog.csdn.net/20161029203436760?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
<h2 id="Ubuntu-16-04-安装—-搜狗、Chrome、git、JDK、Eclipse"><a href="#Ubuntu-16-04-安装—-搜狗、Chrome、git、JDK、Eclipse" class="headerlink" title="Ubuntu 16.04 安装—-搜狗、Chrome、git、JDK、Eclipse"></a><a href="http://blog.csdn.net/ljheee/article/details/52967476" target="_blank" rel="external">Ubuntu 16.04 安装—-搜狗、Chrome、git、JDK、Eclipse</a></h2><p>在Ubuntu 16.04 安装软件时，最简单的方式就是在软件中心搜索，点击install自动安装，无其他操作。但很多软件在Ubuntu软件中心都没有，只能手动安装。<br>安装软件常用命令：<br>（1）sudo apt-get update<br>用于对当前系统的可用更新列表进行更新。这也是许多 Linux 发行版经常需要执行的操作，目的是随时获得最新的软件版本信息。<br>（2）sudo apt-get installsoftware          安装software软件<br>（3）sudo apt-get installxxxx                 用spt获取安装<br>（4）dpkg -i  &lt;.deb file name&gt;                手动下载并安装.deb软件包<br>（5）apt-get install -f                                 强制安装，自动补全依赖</p>
<p><a href="https://www.sysgeek.cn/chrome-45-beta-release-ubuntu-install/" target="_blank" rel="external">Chrome 45 Beta发布，Ubuntu如何进行安装</a><br><img src="https://img.sysgeek.cn/img/chrome-45-beta-release-ubuntu-install.jpg" alt=""></p>
<p>Ubuntu及Debian系列安装Chrome（Beta）</p>
<p>不论你使用的是 32 位还是 64 位 Ubuntu，都可以直接使用如下 4 条命令进行安装：</p>
<p>sudo sh -c ‘echo “deb <a href="http://dl.google.com/linux/chrome/deb/" target="_blank" rel="external">http://dl.google.com/linux/chrome/deb/</a> stable main” &gt;&gt; /etc/apt/sources.list.d/google.list’<br>wget -q -O - <a href="https://dl-ssl.google.com/linux/linux_signing_key.pub" target="_blank" rel="external">https://dl-ssl.google.com/linux/linux_signing_key.pub</a> | sudo apt-key add -<br>sudo apt-get update<br>sudo apt-get install google-chrome-beta<br>不使用时，可以使用如下命令进行卸载：</p>
<p>sudo apt-get remove google-chrome-beta</p>
<h2 id="VirtualBox中的Ubuntu没有权限访问共享文件夹sf-win7-to-ubuntu"><a href="#VirtualBox中的Ubuntu没有权限访问共享文件夹sf-win7-to-ubuntu" class="headerlink" title="VirtualBox中的Ubuntu没有权限访问共享文件夹sf_win7_to_ubuntu"></a><a href="http://www.crifan.com/can_not_access_share_folder_in_ubuntu_virtualbox/" target="_blank" rel="external">VirtualBox中的Ubuntu没有权限访问共享文件夹sf_win7_to_ubuntu</a></h2><blockquote>
<p>virtualbox的共享文件夹一般都挂载在/media下面，用ll查看会发现文件夹的所有者是root，所有组是vboxsf，所以文件管理去无法访问是正常的，解决方法是把你自己加入到vboxsf组里面。</p>
</blockquote>
<p>【解决过程】<br>1、把普通用户名加入到vboxsf之中。因为你的用户名不在vboxsf这个用户组。<br>下面添加boarmy到vboxsf这个用户组。<br>boarmy@boarmy-Ubuntu:~$ sudo adduser boarmy vboxsf<br>正在添加用户”boarmy”到”vboxsf”组…<br>正在将用户“boarmy”加入到“vboxsf”组中<br>完成。<br>crifan@crifan-Ubuntu:~$<br>2.再去用命令行操作：<br>boarmy@boarmy-Ubuntu:~$ ls /media/sf_bak<br>但是还是无法访问共享文件夹。<br>3、重启Ubuntu看看是否有用。<br>结果真正可以用上共享文件夹了：</p>
<h2 id="鸟哥的Linux私房菜"><a href="#鸟哥的Linux私房菜" class="headerlink" title="鸟哥的Linux私房菜"></a><a href="http://download.csdn.net/detail/wjx342529/9803037" target="_blank" rel="external">鸟哥的Linux私房菜</a></h2><p>《鸟哥的Linux私房菜:基础学习篇》是最具知名度的Linux入门书《鸟哥的Linux私房菜基础学习篇》的最新版，全面而详细地介绍了Linux操作系统。全书分为5个部分：第一部分着重说明Linux的起源及功能，如何规划和安装Linux主机；第二部分介绍Linux的文件系统、文件、目录与磁盘的管理；第三部分介绍文字模式接口shell和管理系统的好帮手shell脚本，另外还介绍了文字编辑器vi和vim的使用方法；第四部分介绍了对于系统安全非常重要的Linux账号的管理，以及主机系统与程序的管理，如查看进程、任务分配和作业管理；第五部分介绍了系统管理员(root)的管理事项，如了解系统运行状况、系统服务，针对登录文件进行解析，对系统进行备份以及核心的管理等。</p>
<h2 id="Ubuntu-安装-Android-Studio-的步骤"><a href="#Ubuntu-安装-Android-Studio-的步骤" class="headerlink" title="Ubuntu 安装 Android Studio 的步骤"></a><a href="https://github.com/Bakumon/blog/issues/4" target="_blank" rel="external">Ubuntu 安装 Android Studio 的步骤</a></h2><p>linux:环境变量设置.bashrc及相关<br>假定想添加的环境变量路径为：/opt/my-tools/Android-sdk/tools</p>
<p>1 进入用户的根目录<br>cd   $HOME  或 cd ~<br>2 然后打开.bashrc若不存在则新建.bashrc文件<br>vi   .bashrc<br>3 在.bashrc页面最后加上想要加的路径<br>export PATH=$PATH:/opt/my-tools/android-sdk/tools<br>4 最后执行<br>source ~/.bashrc<br>至此环境变量起作用了</p>
<h2 id="Ubuntu-x64安装Android-studio-全部步骤和问题解决"><a href="#Ubuntu-x64安装Android-studio-全部步骤和问题解决" class="headerlink" title="Ubuntu x64安装Android studio 全部步骤和问题解决"></a><a href="http://www.cnblogs.com/javacoding/p/5636512.html" target="_blank" rel="external">Ubuntu x64安装Android studio 全部步骤和问题解决</a></h2><p><a href="http://www.cnblogs.com/liunanjava/p/4810428.html" target="_blank" rel="external">设置SDK Manager国内源和国内代理</a><br>        打开SDK Managerl界面，可能会界面下文可能会一直卡在获取“dl-ssl.google.com”里面数据的状态  ，打开Tools–&gt;options，设置代理网址，网址可在之前的<a href="http://tools.android-studio.org/中找到。" target="_blank" rel="external">http://tools.android-studio.org/中找到。</a><br>        例如我选择的是ubuntu.buct.cn，那么在此填入服务器ubuntu.buct.cn，端口80，再勾选上下面的两项</p>
<p><img src="http://img0.ph.126.net/PxDLqA1WefLAWC7lMIvgkQ==/6619092984561493299.png?_=4810428" alt=""></p>
<p>安装时候，有时会提示可能还会出现在获取“dl-ssl.google.com”下来的 数据卡 住了很时间，可以这样修改，在Tools–&gt;Manage Add-on Sites–&gt;User Defined Sites里面，点击New添加国内的镜像XML文件，这里的XML文件我们可以从刚才的代理镜像源里面得到，</p>
<p><img src="http://img1.ph.126.net/ZupdYn02Hx-dWhjz3hknYg==/6608862028864914337.png?_=4810428" alt=""></p>
<p> 将源里面的所有目录下的xml文件添加到New里面，然后将Official Add-on Sites里面的Disable All，此时再更新就是我们添加的源里面的列表了</p>
<p> <img src="http://img0.ph.126.net/gBF7PKc11Wq5C8xKUXjCSQ==/6599272088448577647.png?_=4810428" alt=""></p>
<p><a href="http://www.cnblogs.com/yymn/p/5698623.html" target="_blank" rel="external">嵌入式 Linux下永久生效环境变量bashrc</a></p>
<h3 id="1）-bashrc文件"><a href="#1）-bashrc文件" class="headerlink" title="1） .bashrc文件"></a>1） .bashrc文件</h3><pre><code>在linux系统普通用户目录（cd /home/xxx）或root用户目录（cd /root）下，用指令ls -al可以看到4个隐藏文件，

.bash_history   记录之前输入的命令

.bash_logout    当你退出时执行的命令

.bash_profile    当你登入shell时执行

.bashrc             当你登入shell时执行

  请注意后两个的区别：&apos;.bash_profile&apos;只在会话开始时被读取一次，而&apos;.bashrc&apos;则每次打开新的终端时，都要被读取。

  这些文件是每一位用户对终端功能和属性设置，修改.bashrc可以改变环境变量PATH、别名alias和提示符。具体如何修改会在下面做介绍。

  除了可以修改用户目录下的.bashrc文件外，还可以修改如“/etc/profile”文件、“/etc/bashrc”文件及目录“/etc /profile.d”下的文件。但是修改/etc路径下的配置文件将会应用到整个系统，属于系统级的配置，而修改用户目录下的.bashrc则只是限制在用户应用上，属于用户级设置。两者在应用范围上有所区别，建议如需修改的话，修改用户目录下的.bashrc，即无需root权限，也不会影响其他用户。
</code></pre><p><a href="http://blog.csdn.net/chenchong08/article/details/7833242" target="_blank" rel="external">Linux中profile、bashrc、bash_profile之间的区别和联系</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.ubuntu.com/" target="_blank" rel="external">Ubuntu</a><br><a href="http://download.pchome.net/system/sysenhance/download-10841.html" target="_blank" rel="external">VirtualBox官方中文版5.1.18.114002</a><br><a href="http://download.csdn.net/detail/zl199307/9612475" target="_blank" rel="external">think in java4 中文版</a><br><a href="http://download.csdn.net/detail/tangzy09/4305467" target="_blank" rel="external">think in java 4 English</a><br><a href="http://download.csdn.net/detail/foxmails/309302" target="_blank" rel="external">张孝祥Java就业培训教程pdf版+源代码</a><br><a href="http://download.csdn.net/detail/wutianke/8388621" target="_blank" rel="external">Ubuntu官方图书（第七版）</a><br><a href="http://www.xxzs.tv/newsdetail/17" target="_blank" rel="external">【教程】如何开启VT（CPU虚拟化）</a><br><a href="https://www.sysgeek.cn/15-things-to-do-after-installing-ubuntu-16-04-lts/" target="_blank" rel="external">Ubuntu 16.04 LTS安装好之后需要做的15件事</a><br><a href="https://www.sysgeek.cn/install-numix-in-ubuntu/" target="_blank" rel="external">如何在Ubuntu中安装Numix主题和图标</a><br><a href="https://www.sysgeek.cn/additional-icon-packs-linux/" target="_blank" rel="external">[推荐]适用于Linux的5款最佳桌面图标集</a><br><a href="https://www.sysgeek.cn/simplescreenrecorder-screen-recording-ubuntu/" target="_blank" rel="external">如何使用SimpleScreenRecorder进行Ubuntu屏幕录制</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://www.ubuntu-china.cn/static/img/homepage/cn-home-desktop.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu is an open source software platform that runs from the cloud, to the smartphone, to all your things&lt;/p&gt;
&lt;p&gt;Ubuntu is the number one platform for containers&lt;/p&gt;
&lt;p&gt;From LXD to Kubernetes to Docker, learn how we can help you run containers at scale on public, private, hybrid or bare metal clouds.&lt;/p&gt;
    
    </summary>
    
      <category term="Tools" scheme="http://aisee.me/categories/Tools/"/>
    
    
      <category term="Ubuntu" scheme="http://aisee.me/tags/Ubuntu/"/>
    
      <category term="VmWare" scheme="http://aisee.me/tags/VmWare/"/>
    
      <category term="VirtualBox" scheme="http://aisee.me/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>Android Gradle</title>
    <link href="http://aisee.me/2017/04/04/Program/Tools/Gradle/gradle-and-android/"/>
    <id>http://aisee.me/2017/04/04/Program/Tools/Gradle/gradle-and-android/</id>
    <published>2017-04-04T08:29:06.000Z</published>
    <updated>2017-04-05T14:32:55.957Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gss0.baidu.com/7LsWdDW5_xN3otqbppnN2DJv/doc/pic/item/0bd162d9f2d3572c49ef6f258313632762d0c33e.jpg" alt=""></p>
<blockquote>
<p>Optimal Portfolio.</p>
</blockquote>
<a id="more"></a>
<p>当问题你能解决而别人不能的时候，就是你“鹤立鸡群”的开始！</p>
<p>在互联网这个时代，最重要的是懂得如何站在别人的肩膀上。</p>
<p>所有知识都是先介绍、讲解说明，然后才会讲使用，让大家知其然知其所以然。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://yuedu.baidu.com/ebook/14a722970740be1e640e9a3e###" target="_blank" rel="external">Android Gradle权威指南</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://gss0.baidu.com/7LsWdDW5_xN3otqbppnN2DJv/doc/pic/item/0bd162d9f2d3572c49ef6f258313632762d0c33e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Optimal Portfolio.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Gradle" scheme="http://aisee.me/tags/Gradle/"/>
    
      <category term="Tool" scheme="http://aisee.me/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Easy Permissions</title>
    <link href="http://aisee.me/2017/04/04/Program/Android/3rdLib/easy-permissions/"/>
    <id>http://aisee.me/2017/04/04/Program/Android/3rdLib/easy-permissions/</id>
    <published>2017-04-04T02:45:06.000Z</published>
    <updated>2017-04-04T02:45:15.951Z</updated>
    
    <content type="html"><![CDATA[<p>EasyPermissions is a wrapper library to simplify basic system permissions logic when targeting Android M or higher.</p>
<a id="more"></a>
<h1 id="Easy-Permissions"><a href="#Easy-Permissions" class="headerlink" title="Easy Permissions"></a><a href="https://github.com/googlesamples/easypermissions" target="_blank" rel="external">Easy Permissions</a></h1><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>EasyPermissions is installed by adding the following dependency to your <code>build.gradle</code> file:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile <span class="string">'pub.devrel:easypermissions:0.3.0'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h3><p>To begin using EasyPermissions, have your <code>Activity</code> (or <code>Fragment</code>) override the <code>onRequestPermissionsResult</code> method:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</div><div class="line"></div><div class="line">        <span class="comment">// Forward results to EasyPermissions</span></div><div class="line">        EasyPermissions.onRequestPermissionsResult(requestCode, permissions, grantResults, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Request-Permissions"><a href="#Request-Permissions" class="headerlink" title="Request Permissions"></a>Request Permissions</h3><p>The example below shows how to request permissions for a method that requires both<br><code>CAMERA</code> and <code>CHANGE_WIFI_STATE</code> permissions. There are a few things to note:</p>
<ul>
<li>Using <code>EasyPermissions#hasPermissions(...)</code> to check if the app already has the<br>required permissions. This method can take any number of permissions as its final<br>argument.</li>
<li>Requesting permissions with <code>EasyPermissions#requestPermissions</code>. This method<br>will request the system permissions and show the rationale string provided if<br>necessary. The request code provided should be unique to this request, and the method<br>can take any number of permissions as its final argument.</li>
<li>Use of the <code>AfterPermissionGranted</code> annotation. This is optional, but provided for<br>convenience. If all of the permissions in a given request are granted, any methods<br>annotated with the proper request code will be executed. This is to simplify the common<br>flow of needing to run the requesting method after all of its permissions have been granted.<br>This can also be achieved by adding logic on the <code>onPermissionsGranted</code> callback.</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@AfterPermissionGranted</span>(RC_CAMERA_AND_WIFI)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">methodRequiresTwoPermission</span><span class="params">()</span> </span>&#123;</div><div class="line">    String[] perms = &#123;Manifest.permission.CAMERA, Manifest.permission.CHANGE_WIFI_STATE&#125;;</div><div class="line">    <span class="keyword">if</span> (EasyPermissions.hasPermissions(<span class="keyword">this</span>, perms)) &#123;</div><div class="line">        <span class="comment">// Already have permission, do the thing</span></div><div class="line">        <span class="comment">// ...</span></div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">// Do not have permissions, request them now</span></div><div class="line">        EasyPermissions.requestPermissions(<span class="keyword">this</span>, getString(R.string.camera_and_wifi_rationale),</div><div class="line">                RC_CAMERA_AND_WIFI, perms);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Optionally, for a finer control, you can have your <code>Activity</code> / <code>Fragment</code> implement<br>the <code>PermissionCallbacks</code> interface.</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">EasyPermissions</span>.<span class="title">PermissionCallbacks</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</div><div class="line"></div><div class="line">        <span class="comment">// Forward results to EasyPermissions</span></div><div class="line">        EasyPermissions.onRequestPermissionsResult(requestCode, permissions, grantResults, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPermissionsGranted</span><span class="params">(<span class="keyword">int</span> requestCode, List&lt;String&gt; list)</span> </span>&#123;</div><div class="line">        <span class="comment">// Some permissions have been granted</span></div><div class="line">        <span class="comment">// ...</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPermissionsDenied</span><span class="params">(<span class="keyword">int</span> requestCode, List&lt;String&gt; list)</span> </span>&#123;</div><div class="line">        <span class="comment">// Some permissions have been denied</span></div><div class="line">        <span class="comment">// ...</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Required-Permissions"><a href="#Required-Permissions" class="headerlink" title="Required Permissions"></a>Required Permissions</h3><p>In some cases your app will not function properly without certain permissions. If the user<br>denies these permissions with the “Never Ask Again” option, you will be unable to request<br>these permissions from the user and they must be changed in app settings. You can use the<br>method <code>EasyPermissions.somePermissionPermanentlyDenied(...)</code> to display a dialog to the<br>user in this situation and direct them to the system setting screen for your app:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPermissionsDenied</span><span class="params">(<span class="keyword">int</span> requestCode, List&lt;String&gt; perms)</span> </span>&#123;</div><div class="line">    Log.d(TAG, <span class="string">"onPermissionsDenied:"</span> + requestCode + <span class="string">":"</span> + perms.size());</div><div class="line"></div><div class="line">    <span class="comment">// (Optional) Check whether the user denied any permissions and checked "NEVER ASK AGAIN."</span></div><div class="line">    <span class="comment">// This will display a dialog directing them to enable the permission in app settings.</span></div><div class="line">    <span class="keyword">if</span> (EasyPermissions.somePermissionPermanentlyDenied(<span class="keyword">this</span>, perms)) &#123;</div><div class="line">        <span class="keyword">new</span> AppSettingsDialog.Builder(<span class="keyword">this</span>).build().show();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (requestCode == AppSettingsDialog.DEFAULT_SETTINGS_REQ_CODE) &#123;</div><div class="line">        <span class="comment">// Do something after user returned from app settings screen, like showing a Toast.</span></div><div class="line">        Toast.makeText(<span class="keyword">this</span>, R.string.returned_from_app_settings_to_activity, Toast.LENGTH_SHORT)</div><div class="line">                .show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;EasyPermissions is a wrapper library to simplify basic system permissions logic when targeting Android M or higher.&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Easy Permissions" scheme="http://aisee.me/tags/Easy-Permissions/"/>
    
  </entry>
  
  <entry>
    <title>Permissions Dispatcher</title>
    <link href="http://aisee.me/2017/04/04/Program/Android/3rdLib/permissions-dispatcher/"/>
    <id>http://aisee.me/2017/04/04/Program/Android/3rdLib/permissions-dispatcher/</id>
    <published>2017-04-04T02:26:06.000Z</published>
    <updated>2017-04-04T02:27:00.739Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/hotchemi/PermissionsDispatcher/master/art/logo.png" alt=""></p>
<p>Permissions Dispatcher provides a simple annotation-based API to handle runtime permissions in Android Marshmallow, 100% reflection-free.</p>
<p>This library lifts the burden that comes with writing a bunch of check statements whether a permission has been granted or not from you, in order to keep your code clean and safe.</p>
 <a id="more"></a>
<h1 id="Permissions-Dispatcher"><a href="#Permissions-Dispatcher" class="headerlink" title="Permissions Dispatcher"></a>Permissions Dispatcher</h1><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p> Here’s a minimum example, in which we register a <code>MainActivity</code> which requires <code>Manifest.permission.CAMERA</code>.</p>
<h3 id="0-Prepare-AndroidManifest"><a href="#0-Prepare-AndroidManifest" class="headerlink" title="0. Prepare AndroidManifest"></a>0. Prepare AndroidManifest</h3><p> Add the following line to <code>AndroidManifest.xml</code>:</p>
<p> <code>&lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;</code></p>
<h3 id="1-Attach-annotations"><a href="#1-Attach-annotations" class="headerlink" title="1. Attach annotations"></a>1. Attach annotations</h3><p> PermissionsDispatcher introduces only a few annotations, keeping its general API concise:</p>
<blockquote>
<p>NOTE: Annotated methods must not be <code>private</code>.</p>
</blockquote>
<table>
<thead>
<tr>
<th>Annotation</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>@RuntimePermissions</code></td>
<td><strong>✓</strong></td>
<td>Register an <code>Activity</code> or <code>Fragment</code> to handle permissions</td>
</tr>
<tr>
<td><code>@NeedsPermission</code></td>
<td><strong>✓</strong></td>
<td>Annotate a method which performs the action that requires one or more permissions</td>
</tr>
<tr>
<td><code>@OnShowRationale</code></td>
<td></td>
<td>Annotate a method which explains why the permission/s is/are needed. It passes in a <code>PermissionRequest</code> object which can be used to continue or abort the current permission request upon user input</td>
</tr>
<tr>
<td><code>@OnPermissionDenied</code></td>
<td></td>
<td>Annotate a method which is invoked if the user doesn’t grant the permissions</td>
</tr>
<tr>
<td><code>@OnNeverAskAgain</code></td>
<td></td>
<td>Annotate a method which is invoked if the user chose to have the device “never ask again” about a permission</td>
</tr>
</tbody>
</table>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RuntimePermissions</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@NeedsPermission</span>(Manifest.permission.CAMERA)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showCamera</span><span class="params">()</span> </span>&#123;</div><div class="line">        getSupportFragmentManager().beginTransaction()</div><div class="line">                .replace(R.id.sample_content_fragment, CameraPreviewFragment.newInstance())</div><div class="line">                .addToBackStack(<span class="string">"camera"</span>)</div><div class="line">                .commitAllowingStateLoss();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@OnShowRationale</span>(Manifest.permission.CAMERA)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showRationaleForCamera</span><span class="params">(<span class="keyword">final</span> PermissionRequest request)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>)</div><div class="line">            .setMessage(R.string.permission_camera_rationale)</div><div class="line">            .setPositiveButton(R.string.button_allow, (dialog, button) -&gt; request.proceed())</div><div class="line">            .setNegativeButton(R.string.button_deny, (dialog, button) -&gt; request.cancel())</div><div class="line">            .show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@OnPermissionDenied</span>(Manifest.permission.CAMERA)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showDeniedForCamera</span><span class="params">()</span> </span>&#123;</div><div class="line">        Toast.makeText(<span class="keyword">this</span>, R.string.permission_camera_denied, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@OnNeverAskAgain</span>(Manifest.permission.CAMERA)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showNeverAskForCamera</span><span class="params">()</span> </span>&#123;</div><div class="line">        Toast.makeText(<span class="keyword">this</span>, R.string.permission_camera_neverask, Toast.LENGTH_SHORT).show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-Delegate-to-generated-class"><a href="#2-Delegate-to-generated-class" class="headerlink" title="2. Delegate to generated class"></a>2. Delegate to generated class</h3><p> Upon compilation, PermissionsDispatcher generates a class for <code>MainActivityPermissionsDispatcher</code>([Activity Name] + PermissionsDispatcher), which you can use to safely access these permission-protected methods.</p>
<p> The only step you have to do is delegating the work to this helper class:</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    setContentView(R.layout.activity_main);</div><div class="line">    findViewById(R.id.button_camera).setOnClickListener(v -&gt; &#123;</div><div class="line">      <span class="comment">// <span class="doctag">NOTE:</span> delegate the permission handling to generated method</span></div><div class="line">      MainActivityPermissionsDispatcher.showCameraWithCheck(<span class="keyword">this</span>);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</div><div class="line">    <span class="comment">// <span class="doctag">NOTE:</span> delegate the permission handling to generated method</span></div><div class="line">    MainActivityPermissionsDispatcher.onRequestPermissionsResult(<span class="keyword">this</span>, requestCode, grantResults);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> Check out the <a href="https://github.com/hotchemi/PermissionsDispatcher/tree/master/sample" target="_blank" rel="external">sample</a> and <a href="https://github.com/hotchemi/PermissionsDispatcher/blob/master/art/MainActivityPermissionsDispatcher.java" target="_blank" rel="external">generated class</a> for more details.</p>
<h2 id="Getting-Special-Permissions"><a href="#Getting-Special-Permissions" class="headerlink" title="Getting Special Permissions"></a>Getting Special Permissions</h2><p> PermissionsDispatcher takes care of special permissions <code>Manifest.permission.SYSTEM_ALERT_WINDOW</code> and <code>Manifest.permission.WRITE_SETTINGS</code>.</p>
<p> The following sample is to grant <code>SYSTEM_ALERT_WINDOW</code>.</p>
<h3 id="0-Prepare-AndroidManifest-1"><a href="#0-Prepare-AndroidManifest-1" class="headerlink" title="0. Prepare AndroidManifest"></a>0. Prepare AndroidManifest</h3><p> Add the following line to <code>AndroidManifest.xml</code>:</p>
<p> <code>&lt;uses-permission android:name=&quot;android.permission.SYSTEM_ALERT_WINDOW&quot; /&gt;</code></p>
<h3 id="1-Attach-annotations-1"><a href="#1-Attach-annotations-1" class="headerlink" title="1. Attach annotations"></a>1. Attach annotations</h3><p> It’s the same as other permissions:</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RuntimePermissions</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@NeedsPermission</span>(Manifest.permission.SYSTEM_ALERT_WINDOW)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">systemAlertWindow</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@OnShowRationale</span>(Manifest.permission.SYSTEM_ALERT_WINDOW)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">systemAlertWindowOnShowRationale</span><span class="params">(<span class="keyword">final</span> PermissionRequest request)</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@OnPermissionDenied</span>(Manifest.permission.SYSTEM_ALERT_WINDOW)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">systemAlertWindowOnPermissionDenied</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@OnNeverAskAgain</span>(Manifest.permission.SYSTEM_ALERT_WINDOW)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">systemAlertWindowOnNeverAskAgain</span><span class="params">()</span> </span>&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-Delegate-to-generated-class-1"><a href="#2-Delegate-to-generated-class-1" class="headerlink" title="2. Delegate to generated class"></a>2. Delegate to generated class</h3><p> Unlike other permissions, special permissions require to call the delegation method at <code>onActivityResult</code>:</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    setContentView(R.layout.activity_main);</div><div class="line">    findViewById(R.id.button_system_alert_window).setOnClickListener(v -&gt; &#123;</div><div class="line">      <span class="comment">// <span class="doctag">NOTE:</span> delegate the permission handling to generated method</span></div><div class="line">      MainActivityPermissionsDispatcher.systemAlertWindowWithCheck(<span class="keyword">this</span>);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">    MainActivityPermissionsDispatcher.onActivityResult(<span class="keyword">this</span>, requestCode);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="maxSdkVersion"><a href="#maxSdkVersion" class="headerlink" title="maxSdkVersion"></a>maxSdkVersion</h2><p> <a href="https://developer.android.com/guide/topics/manifest/uses-permission-element.html" target="_blank" rel="external">\<uses-permission\></uses-permission\></a> has an attribute call <code>maxSdkVersion</code>. PermissionsDispatcher support the feature as well.</p>
<p> The following sample is for declaring <code>Manifest.permisison.WRITE_EXTERNAL_STORAGE</code> up to API level 18.</p>
<h3 id="0-AndroidManifest"><a href="#0-AndroidManifest" class="headerlink" title="0. AndroidManifest"></a>0. AndroidManifest</h3><p> Declare the permission with <code>maxSdkVersion</code> attribute</p>
 <figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span></span></div><div class="line">     <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span></div><div class="line">     <span class="attr">android:maxSdkVersion</span>=<span class="string">"18"</span> /&gt;</div></pre></td></tr></table></figure>
<h3 id="1-Attach-annotations-with-maxSdkVersion"><a href="#1-Attach-annotations-with-maxSdkVersion" class="headerlink" title="1. Attach annotations with maxSdkVersion"></a>1. Attach annotations with <code>maxSdkVersion</code></h3> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RuntimePermissions</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@NeedsPermission</span>(value = Manifest.permission.WRITE_EXTERNAL_STORAGE, maxSdkVersion = <span class="number">18</span>)</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getStorage</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// ...</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><ul>
<li>PermissionsDispatcher depends on the <code>support-v4</code> library by default, in order to be able to use some permission compat classes.</li>
<li>You can use this library with JDK 1.6 or up, but we test library’s behaviour on the JDK 1.8 because it has been becoming the default of Android development.</li>
<li><p>PermissionsDispatcher bundles ProGuard rules in its aar. No extra settings are required.</p>
<h3 id="Fragment-Support"><a href="#Fragment-Support" class="headerlink" title="Fragment Support"></a>Fragment Support</h3><p>PermissionsDispatcher is supported on <strong>API levels 4 and up</strong>, with which you get support for annotating <code>android.app.Activity</code> and <code>android.support.v4.app.Fragment</code> sub-classes out of the box.</p>
<p>In case you rely on <code>android.app.Fragment</code> in your app, you can use these with PermissionsDispatcher as well!</p>
<p>Simply add a dependency on the <code>support-v13</code> library alongside PermissionsDispatcher in your project, and it will enable support for native fragments.</p>
<h3 id="For-AndroidAnnotations-users"><a href="#For-AndroidAnnotations-users" class="headerlink" title="For AndroidAnnotations users"></a>For AndroidAnnotations users</h3><p>If you use <a href="http://androidannotations.org/" target="_blank" rel="external">AndroidAnnotations</a>, you need to add <a href="https://github.com/AleksanderMielczarek/AndroidAnnotationsPermissionsDispatcherPlugin" target="_blank" rel="external">AndroidAnnotationsPermissionsDispatcherPlugin</a> to your dependencies so PermissionsDispatcher’s looks for AA’s subclasses (your project won’t compile otherwise).</p>
<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>To add it to your project, include the following in your <strong>app module</strong> <code>build.gradle</code> file:</p>
<p><code>${latest.version}</code> is <a href="https://bintray.com/hotchemi/maven/permissionsdispatcher/_latestVersion" target="_blank" rel="external"><img src="https://api.bintray.com/packages/hotchemi/maven/permissionsdispatcher/images/download.svg" alt="Download"></a></p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">  compile <span class="string">'com.github.hotchemi:permissionsdispatcher:$&#123;latest.version&#125;'</span></div><div class="line">  annotationProcessor <span class="string">'com.github.hotchemi:permissionsdispatcher-processor:$&#123;latest.version&#125;'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Snapshots of the development version are available in <a href="https://oss.jfrog.org/oss-snapshot-local/" target="_blank" rel="external">JFrog’s snapshots repository</a>.<br>Add the repo below to download <code>SNAPSHOT</code> releases.</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">repositories &#123;</div><div class="line">  jcenter()</div><div class="line">  maven &#123; url <span class="string">'http://oss.jfrog.org/artifactory/oss-snapshot-local/'</span> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/hotchemi/PermissionsDispatcher/master/art/logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Permissions Dispatcher provides a simple annotation-based API to handle runtime permissions in Android Marshmallow, 100% reflection-free.&lt;/p&gt;
&lt;p&gt;This library lifts the burden that comes with writing a bunch of check statements whether a permission has been granted or not from you, in order to keep your code clean and safe.&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Permissions Dispatcher" scheme="http://aisee.me/tags/Permissions-Dispatcher/"/>
    
  </entry>
  
  <entry>
    <title>Persuing Your Personal Value</title>
    <link href="http://aisee.me/2017/04/04/MyView/Share/persuing-personal-value/"/>
    <id>http://aisee.me/2017/04/04/MyView/Share/persuing-personal-value/</id>
    <published>2017-04-04T01:02:06.000Z</published>
    <updated>2017-04-04T01:02:59.577Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20170403060918030" alt=""></p>
<p>公司主要以什么样的技术来生产产品？技术在最终产品中占比多大？你又在技术中占有什么样的位置？对于技术的要求是密集性的还是创造性的？产品在当前市场中的地位如何？主要的竞争力来自规模效应？智力效应？还是技术效应？这个市场是在变大还是变小？资源在更多的投入还是撤离这个市场？与这个市场有关的行业在做什么？……这是为了从高、中、低的多个维度来验证自己对于当前价值网的理解，从而选定方向，投入精力。</p>
 <a id="more"></a>
<h1 id="12年技术老兵和你谈谈如何追求个人价值"><a href="#12年技术老兵和你谈谈如何追求个人价值" class="headerlink" title="12年技术老兵和你谈谈如何追求个人价值"></a><a href="http://geek.csdn.net/news/detail/190488" target="_blank" rel="external">12年技术老兵和你谈谈如何追求个人价值</a></h1><p> 刘立兼，云贝网络首席架构师，在3年时间内，主导开发了“服务治理平台”与“综合数据基盘“两大底层设施，并在此基础上孵化了公司的5个产品线，12款产品。同时也是其中3款产品的创始人。</p>
<p>人的时间和精力是有限的，我们做出选择的时候也意味着放弃了另一部分选项。所以我们必须足够清楚，这样的选择有多大的价值，才行心无旁骛地全身心投入去中。</p>
<p><img src="http://img.blog.csdn.net/20170403060147925" alt=""><br>图1：我做外包时对价值的理解</p>
<p><img src="http://img.blog.csdn.net/20170403060715546" alt=""><br>图2：做了设计后对于需求分析产生了想法</p>
<p><img src="http://img.blog.csdn.net/20170403060748513" alt=""><br>图3：如愿以偿地做了需求分析的工作</p>
<p><img src="http://img.blog.csdn.net/20170403060819154" alt=""><br>图4：小项目让我经历了软件工程的各个阶段</p>
<p><img src="http://img.blog.csdn.net/20170403060848734" alt=""><br>图5：仅有软件工程能力真的能解决问题吗</p>
<p><img src="http://img.blog.csdn.net/20170403060946781" alt=""><br>图6：我希望自己的价值不仅限于产业的某一环中</p>
<p><img src="http://img.blog.csdn.net/20170403062047724" alt=""><br>图7：我参与了多个技术环节但最终产品未能获得足够的市场价值</p>
<p><img src="http://img.blog.csdn.net/20170403061023829" alt=""><br>图8：我希望进入一个技术的价值空间足够的环境</p>
<h2 id="凭感觉造成的问题：依赖关联性"><a href="#凭感觉造成的问题：依赖关联性" class="headerlink" title="凭感觉造成的问题：依赖关联性"></a>凭感觉造成的问题：依赖关联性</h2><p>仅仅凭感觉发展个人价值话，就会自然而然地依赖技能的关联性，比如：</p>
<h3 id="软件工程的关联性"><a href="#软件工程的关联性" class="headerlink" title="软件工程的关联性"></a>软件工程的关联性</h3><p>从编码到设计<br>从设计到架构<br>从架构到方案<br>从方案到需求</p>
<h3 id="生产环节的关联性"><a href="#生产环节的关联性" class="headerlink" title="生产环节的关联性"></a>生产环节的关联性</h3><p>从技术到售前<br>从技术到售后<br>从技术到管理<br>从技术到质监</p>
<h3 id="产业链条的关联性"><a href="#产业链条的关联性" class="headerlink" title="产业链条的关联性"></a>产业链条的关联性</h3><p>从视频采集系统到图像传输系统<br>从图像传输系统到显示播放系统<br>从显示播放系统到录像控制系统<br>从录像控制系统到存储回播系统</p>
<h3 id="技术领域的关联性"><a href="#技术领域的关联性" class="headerlink" title="技术领域的关联性"></a>技术领域的关联性</h3><p>从关系型数据库到NoSQL<br>从磁盘数据库到内存数据库<br>从一般数据库到图形数据库<br>从数据单库到分布式数据系统</p>
<p>这其实是一种“直觉式”的发展方式。踩了第一级台阶看到第二级台阶，踩了第二级台阶看到第三级台阶，每踩一次确实肯定上升了一些，但是楼梯尽头究竟是什么，很难确定。同时这也是一种“机缘式”的发展方式。因为每一次向相关方向拓展自己的技能，都需要外部环境的支持。假设：</p>
<p>如果是外包公司，设计来自于发包方，那就很难去做设计的工作<br>如果公司销售的是标准线上产品，那就没有什么售前的需求。<br>如果公司仅生产视频采集设备，集成部署由其他公司来做，那就接触不到图像传输。</p>
<p>如果关系型数据库已经能满足业务和性能需求，那就不会有使用NoSQL的动力。</p>
<p>“直觉式”+“机缘式”=“随波逐流式”，凭着能看到的东西加感觉走，外部环境允许就走下去，不允许就继续找感觉。这样的行为很难说是在“追求”个人价值的发展，追求可是一个主动的词汇。</p>
<h2 id="那要如何主动地追求个人价值发展呢？"><a href="#那要如何主动地追求个人价值发展呢？" class="headerlink" title="那要如何主动地追求个人价值发展呢？"></a>那要如何主动地追求个人价值发展呢？</h2><h3 id="看清价值网是第一步"><a href="#看清价值网是第一步" class="headerlink" title="看清价值网是第一步"></a>看清价值网是第一步</h3><p><img src="http://img.blog.csdn.net/20170403161910060" alt=""><br>图9：价值大约会在4个层次中流动</p>
<p><img src="http://img.blog.csdn.net/20170403061402503" alt=""><br>图10：在价值网中我是如此的渺小</p>
<p><img src="http://img.blog.csdn.net/20170403061436269" alt=""><br>图11：总算提升了一些个人价值的占比</p>
<p><img src="http://img.blog.csdn.net/20170403061503675" alt=""><br>图12：我的个人价值总算超出了我个人的直接产值</p>
<p><img src="http://img.blog.csdn.net/20170403061531556" alt=""><br>图13：合同单价不再束缚我但市场竞争也非儿戏</p>
<p><img src="http://img.blog.csdn.net/20170403061613488" alt=""><br>图14：产值巨大的行业前景应该不错</p>
<p><img src="http://img.blog.csdn.net/20170403061649058" alt=""><br>图15：我给公司提供了通用的应用开发的底层支持</p>
<p><img src="http://img.blog.csdn.net/20170403061719855" alt=""><br>图16：数据的基础能力对于一家数据公司是非常重要的</p>
<p><img src="http://img.blog.csdn.net/20170403061754247" alt=""><br>图17：这两种基础能力支撑起公司几百个数据服务</p>
<p><img src="http://img.blog.csdn.net/20170403061834364" alt=""><br>图18：基础能力也支持了对外暴露接口的需要</p>
<p><img src="http://img.blog.csdn.net/20170403061906639" alt=""><br>图19：零售大数据的成本结构与之前的行业不同</p>
<p><img src="http://img.blog.csdn.net/20170403061953312" alt=""><br>图20：我的价值占比较大但获取市场回报方面仍然有很多路要走</p>
<p><img src="http://img.blog.csdn.net/20170403062047724" alt=""><br>图21：仅有一方面的能力会使你离价值来源太远</p>
<p><img src="http://img.blog.csdn.net/20170403062117756" alt=""><br>图22：利用规模化手段把自己的价值扩散出去</p>
<h2 id="用大牛来验证个人价值发展的推演"><a href="#用大牛来验证个人价值发展的推演" class="headerlink" title="用大牛来验证个人价值发展的推演"></a>用大牛来验证个人价值发展的推演</h2><p>网上常有“如何成为XX大牛”的问题。如果这个XX是“屠龙之术”的话，那没有人会觉得那是大牛，只会是笑话。大牛之所以是大牛，因为他解决的问题具有很大的市场价值，且他对于问题的解决有举足轻重的作用。</p>
<p>从价值网的角度来看，大牛需要潜力巨大的价值网的上游环境，这样才有足够的表现空间。想象一下：“某大牛凭一己之力完成了一个价值1万的合同”。嗯，好惨。同时他也需要有可以扩散个人价值的下游环境，这样才能成倍体现出他的能力价值。想象一下：“某大牛作为技术组中的一员，和其他100位同事一起，完成了市值100万的产品”。嗯，好像也不怎么牛。当然他自己的能力储备是不可或缺的。</p>
<p>我们还可以看看一般描述大牛的标准句式，大概是这样的：面对（巨大的市场价值或问题），（大牛某某某）带领（各类组织成员-凸显影响力），耗时（具有竞争力的时长-凸显能力），完成了（具有极高难度/价值的产品），获得了（巨大的上游回报）。这个句式已经充分表达了当价值网上游的潜力，与价值网下游的关键位置，以及个人的能力储备这三者恰到好处地结合在一起之后，体现出的巨大个人价值。</p>
<p>用现实的例子举例的话，可以说说大名鼎鼎的张小龙和微信。对于价值网上游，微信服务于一个8亿用户的市场，且几乎实现了垄断，获取到了整个市场的价值。对于下游，张小龙在腾讯内部的影响力横跨运营，销售，管理，技术等多个部门。并在微信的所有生产环节都具有最终决策权。当然这一切的成果和他在Foxmail/QQMail的能力积累有直接的关系。按照价值网的模型，张小龙几乎在每一个要点都达到了最大化。</p>
<h3 id="价值网上游"><a href="#价值网上游" class="headerlink" title="价值网上游"></a>价值网上游</h3><p>直接从市场获得价值<br>市场非常非常巨大<br>几乎占领整个市场</p>
<h3 id="价值网下游"><a href="#价值网下游" class="headerlink" title="价值网下游"></a>价值网下游</h3><p>最终产品拥有个人标签<br>拥有整个产生过程的决策权<br>在组织内部是绝对的权威，影响力横跨多个部门<br>在组织外部也是众多产品技术人员学习的对象</p>
<h3 id="能力储备"><a href="#能力储备" class="headerlink" title="能力储备"></a>能力储备</h3><p>具备ToC产品的完整经验<br>具备带领腾讯团队的完整经验</p>
<p><img src="http://img.blog.csdn.net/20170403062244488" alt=""><br>图23：梦幻般的个人价值</p>
<h2 id="推演不同行业的个人价值的发展"><a href="#推演不同行业的个人价值的发展" class="headerlink" title="推演不同行业的个人价值的发展"></a>推演不同行业的个人价值的发展</h2><p>如果大牛的例子让你更加认可价值网模型的话，我们现在就来更进一步，基于具体的行业来推演看看个人价值的突破方向：</p>
<h3 id="1-如果你是处于项目外包行业"><a href="#1-如果你是处于项目外包行业" class="headerlink" title="1. 如果你是处于项目外包行业"></a>1. 如果你是处于项目外包行业</h3><p>a) 对于价值上游，你可以尝试突破单份合同的价值。如果你拥有良好的商务、需求分析以及方案设计能力，那么你可以给多个项目提供上游价值。这样的话你的个人价值就可以突破单个合同的上限。</p>
<p>b) 对于价值下游，你可以想办法提升内部组织的开发效率。因为价值上游受限，外包公司为了生存强烈地需要生产效率。如果你能掌握更具效率的开发方式，并且成功推广，那么你的个人价值就可以规模化地成倍增长。</p>
<p>c) 对于价值网本身，你可以离开这个行业。因为你的价值在签订项目合同的那一刻已经被划定了红线，在这个价值网内你永远无法逾越这个规则。</p>
<h3 id="2-如果你处于长产业链的行业"><a href="#2-如果你处于长产业链的行业" class="headerlink" title="2. 如果你处于长产业链的行业"></a>2. 如果你处于长产业链的行业</h3><p>a) 对于价值上游，你可能需要寻找一家探索性业务仍占有相当比例的企业。一般产业链较长的行业，意味着行业的格局相对确定，那么市场和运维的价值会多于技术研发。探索性业务的不确定性才能给技术更大的价值空间。</p>
<p>b) 对于价值下游，你需要尽量参与链条上不同环节的技术工作。因为长产业链不太可能在不同环节采用通用的底层技术或通用架构，参与多个上下关联的技术环节是在此类行业中提高技术影响力的少数手段。技术的影响力的扩大就是个人价值的扩大。</p>
<h3 id="3-如果你处在短产业链的行业"><a href="#3-如果你处在短产业链的行业" class="headerlink" title="3. 如果你处在短产业链的行业"></a>3. 如果你处在短产业链的行业</h3><p>a) 对于价值上游，你需要注意这个行业的生长阶段。野蛮生长阶段说明市场价值空间很大，运营与销售发挥的价值未必比技术弱。精细化运作阶段说明市场格局已经确定，技术很容易受到价值上游的限制。在这两者之间，技术才有最大的价值空间。</p>
<p>b) 对于价值下游，你需要想办法进入最具有规模效应的内部组织。这类内部组织一般会是架构组或技术委员会。短产业链的企业完全有能力做到采用统一的架构方案或底层能力，这将给企业带来更高的生产力，同时也让你的价值存在于各类技术过程中。</p>
<p>c) 对于价值下游，你还可以让你的技术能力的价值影响到非技术的生产环节。你可能听说过康威定律——组织沟通方式会通过系统设计表达出来。技术其实和组织与管理有着天然的关系。如果你对于技术有着非常高的眼界和格局，完全应该把HR和管理的部分工作一并纳入考虑，从而让你的个人价值蔓延到更多的环节。</p>
<h2 id="价值网的变化与机遇"><a href="#价值网的变化与机遇" class="headerlink" title="价值网的变化与机遇"></a>价值网的变化与机遇</h2><p>我已经举了一些基于既有价值网的推演的例子。但是价值网是会变化的，它会受到外部形势的影响。这种变化会带来新的机遇。我说三个我能看到的：</p>
<h3 id="1-云计算带来的技术价值分化"><a href="#1-云计算带来的技术价值分化" class="headerlink" title="1. 云计算带来的技术价值分化"></a>1. 云计算带来的技术价值分化</h3><p>云计算是我目前看到的，唯一可以缓解信息系统的核心难题的希望。这个难题就是——“复杂度”。我是站在一个软件从业者的角度来看这个问题的。很久以前《人月神话》就说过：没有银弹。是的，站在软件是人类思维产物的角度上来说，确实如此。但是我们可以从人类的社会协作上寻求另一扇窗。把所有的信息系统涉及到的通用部分，以某种抽象维度组合成产品，最终将产品以服务的形式提供给其他技术人员，这就是现在的云计算。</p>
<p>云计算将基础设施进行黑盒包装，使得开发人员不会受到盒子内的复杂度的干扰，从而降低了整体系统的复杂度。而复杂度就是“质量问题”、“进度延期”和“潜在风险”的幕后元凶。</p>
<p>这会给技术的价值网带来什么样的变化呢？</p>
<blockquote>
<ol>
<li>对于应用开发者，技术的含金量会降低。</li>
<li>对于基础能力开发者，技术的含金量会上升。</li>
</ol>
</blockquote>
<p>如果你偏向应用开发者，实现业务逻辑居多，千万不要以为这是一个没饭吃的问题。恰恰相反，这是技术人员横向扩大个人价值的绝佳机会。云计算大大解放了技术人员的脑力，我们终于有可能向前一步，同时基于业务与技术来考虑整体的架构。这种架构不只是技术架构，而是结合了业务、运营、服务等多个生产环节的整体架构。按照价值网模型，技术人员的个人价值可以在价值网下游向多个生产环节蔓延。我自己目前利用了云的基础能力，帮公司搭建了一套“大中台+小前台”的架构。大中台确保了公司的核心竞争力的高质量，小前台跟随着销售运营在市场上不断攻城略地，铺平了客户采购的最后一公里。</p>
<p>如果你是基础能力的开发者，平时都在搞DB、调度器、虚拟化之类的基础设施，那你需要想办法进入云服务供应商这个价值网的下游环境。那里对于基础设施的功能、质量和性能有非常高的要求，这就形成了你的价值空间，努力投入你的精力和时间一定会有很大的回报。而且云服务上有成千上万的客户来验证你的技术成果，只要你足够努力来磨练你的技术能力，绝对能成为新趋势下的香饽饽。</p>
<p>不要觉得这个趋势不会来，市场永远都是逐利的，能用1分钱办成的事不会用1块钱去办。看看亚马逊云和阿里云这2年来的营收增长吧。</p>
<h3 id="2-大数据带来的前期数据工作缺口"><a href="#2-大数据带来的前期数据工作缺口" class="headerlink" title="2. 大数据带来的前期数据工作缺口"></a>2. 大数据带来的前期数据工作缺口</h3><p>说到大数据，脑袋里出现的可能都是各种华丽的报表、双11的奇葩统计和实时跳动的数据屏幕等等。但事实上，目前能真正能收集到足够多数据的企业很少，能将数据应用到企业经营行为，并最终创造收益的企业更是少之又少，基本都是一些平台型的企业。所以这个趋势带来的价值空间，并不在于想象中的高大上的数据分析和应用，而在于大数据的目标与现实之间的距离。</p>
<p>今天，市场已经充分相信大数据可以带来的价值，但是从最原始的数据到最终的给企业经营带来价值，中间至少有4个过程：</p>
<blockquote>
<p>数据积累——数据聚合——数据理解——数据应用。</p>
</blockquote>
<p>数据积累意味着有很多的行为目前还没有数据化，我们需要将其变成数据积累起来。</p>
<p>数据聚合意味着数据的孤岛仍然存在，打通这些孤岛才能让数据足以被使用。</p>
<p>数据理解意味着有很多的数据还无法直观的为人类所理解，我们需要依赖不同的可视化手段与算法让数据说话。</p>
<p>数据应用意味着即使数据可以告诉你很多情况，你也未必能用他提升相关能力，我们需要足够的格局才能使用好数据。</p>
<p>数据这4个过程是存在前后的依赖关系的，任何企业组织想要获得大数据带来的相关好处都必须经过这4个过程。目前市场认可大数据价值的是大多数，但完整实践的只是少数，大部分企业都卡在前面这两步脏活累活上，也就是数据积累和数据聚合。而这两步需要巨大的技术人力的投入，这就创造了一个与技术直接相关的巨大的价值空间。如果你能用具有竞争力的方式来达成这2步，那你可以在这个价值空间里获得极大的份额。我自己目前正在设计一款“数据基盘“产品，也是正在争取这个趋势下的价值。</p>
<p>按照价值网模型来说，对于大数据前期工作的需求，会形成一个很有潜力的价值网的上游环境，低成本的通用的数据积累与聚合技术，则会让你在价值网的下游获得足够的影响力。所以如果你找不到在当前价值网提升个人价值的方向，不妨考虑一下大数据的方向，它值得投入。</p>
<p>如果你不太相信这个大数据带来的这个价值网，可以百度一下salesforce看看它近3年的发展。另外我国“十三五”的中心任务——供给侧改革，也和大数据的价值也有非常紧密的关系。</p>
<h3 id="3-算法与机器学习带来的降维攻击"><a href="#3-算法与机器学习带来的降维攻击" class="headerlink" title="3. 算法与机器学习带来的降维攻击"></a>3. 算法与机器学习带来的降维攻击</h3><p>机器学习、AI、算法，这些词现在非常的热门，我都不好意思提，深怕说不出什么高大上的东西。我在这里是要说这个趋势对于个人价值带来的机会。</p>
<p>目前这类技术的使用领域已经出现一些明显的划分。比如：</p>
<p>分类：可以找出不同种类信息之间的特征，了解不同类别的分布。可用于人群风控、客户分层、销售挖掘、信息归档……</p>
<p>聚类：度量对象间的相似性，聚合具有较高的相似度的同一类的对象。可用于异常检测、行为收集、集合优化……</p>
<p>预测：通过对历史事件的学习来积累经验，得出事物间的相似性和关联性，从而对事物的未来状况做出预测。可用于气象、环境、交通、金融……</p>
<p>关联：分析各个对象之间同时出现的机率。最典型是用于购物车分析，商品推荐，营销活动……</p>
<p>换维：不同类型信息间的转换。比如语音-&gt;文字、人脸-&gt;特性数据、OCR……</p>
<p>这些技术可能<strong>本身含金量较高，但是对它们的应用却不是那么难</strong>的一件事，因为这些都已经是产品化的技术了。<strong>在面对技术目标的时候，如果你可以同时基于“程序思维”与“算法思维”来考虑达到目标的办法，那你的解题思路会宽广得多，你提出的解决方案将和其他人能提出的形成维度上的差异，最终你对外展现的个人价值一定是令人印象深刻的，这可以成为你在组织中脱颖而出的有力武器。</strong></p>
<p>如果你觉得这很玄乎，那我举一个我的例子。我想很多人肯定用过Sonarqube来检查代码质量。Sonarqube对于代码的可靠性、安全性、可维护性、重复率、单体测试覆盖度等指标都会产生数字化的结果。那么问题来了，你确定这些指标OK就意味着线上程序OK？如何更靠谱地知道指标和最终质量间的关系呢？我们公司的质量行为主要存在于bug登记、监控异常、代码提交说明等过程中。我通过对这些质量行为自动增加打标数据，实现了无侵入的机器学习训练，<strong>不断地让机器学习静态指标与现实质量行为之间的关系，从而实现了一个更加靠谱的代码质量监测系统。</strong></p>
<p>简而言之，机器学习算法会给你所处的价值网下游环境带来改变。如果你苦于无法扩大自己的技术影响力，无法规模化自己的技术价值，那么 “算法思维”会给你带来另一个维度的竞争力，从而提高你在价值网下游的价值占比。</p>
<h2 id="最后，请为了价值而选择"><a href="#最后，请为了价值而选择" class="headerlink" title="最后，请为了价值而选择"></a>最后，请为了价值而选择</h2><p>人的时间和精力是有限的，我们做出选择的时候也意味着放弃了另一部分选项。所以我们必须足够清楚，这样的选择有多大的价值，才行心无旁骛地全身心投入去中。</p>
<p>我们都需要问问自己：公司主要以什么样的技术来生产产品？技术在最终产品中占比多大？你又在技术中占有什么样的位置？对于技术的要求是密集性的还是创造性的？产品在当前市场中的地位如何？主要的竞争力来自规模效应？智力效应？还是技术效应？这个市场是在变大还是变小？资源在更多的投入还是撤离这个市场？与这个市场有关的行业在做什么？……这是为了从高、中、低的多个维度来验证自己对于当前价值网的理解，从而选定方向，投入精力。</p>
<p>如果你对于当前的职业发展、技术选择或行业环境心存疑虑，那你是否也思考过其背后的价值运作，从而选定更有价值的方向呢？我们个人的价值是整个大价值网中的一部分，无论是对职业上的价值还是生活上的价值，但这并不意味着我们被困在某一个环节上。人类的思维拥有无限的维度，既能仰望星空，也能注视脚下，我们完全有能力，<strong>基于自己的判断，选择自己的道路，获取自己的价值，这是作为人类最大的自由</strong>，不是吗？</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20170403060918030&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;公司主要以什么样的技术来生产产品？技术在最终产品中占比多大？你又在技术中占有什么样的位置？对于技术的要求是密集性的还是创造性的？产品在当前市场中的地位如何？主要的竞争力来自规模效应？智力效应？还是技术效应？这个市场是在变大还是变小？资源在更多的投入还是撤离这个市场？与这个市场有关的行业在做什么？……这是为了从高、中、低的多个维度来验证自己对于当前价值网的理解，从而选定方向，投入精力。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Career" scheme="http://aisee.me/tags/Career/"/>
    
  </entry>
  
  <entry>
    <title>10 Breakthrough Technologies 2017</title>
    <link href="http://aisee.me/2017/04/04/AI/Business/10-breakthrough-technologies-2017/"/>
    <id>http://aisee.me/2017/04/04/AI/Business/10-breakthrough-technologies-2017/</id>
    <published>2017-04-04T00:15:06.000Z</published>
    <updated>2017-04-04T00:37:26.636Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/coverart.tr10.ma17.opener_1.jpg?sw=580" alt=""></p>
<ol>
<li><a href="#Reversing-Paralysis">Reversing Paralysis</a></li>
<li><a href="#Self-Driving-Trucks">Self-Driving Trucks</a></li>
<li><a href="#Paying-with-Your-Face">Paying with Your Face</a></li>
<li><a href="#Practical-Quantum-Computers">Practical Quantum Computers</a></li>
<li><a href="#The-360-Degree-Selfie">The 360-Degree Selfie</a></li>
<li><a href="#Hot-Solar-Cells">Hot Solar Cells</a></li>
<li><a href="#Gene-Therapy-2.0">Gene Therapy 2.0</a></li>
<li><a href="#The-Cell-Atlas">The Cell Atlas</a></li>
<li><a href="#Botnets-of-Things">Botnets of Things</a></li>
<li><a href="#Reinforcement-Learning">Reinforcement Learning</a></li>
</ol>
<a id="more"></a>
<p><a href="https://www.technologyreview.com/lists/technologies/2017/" target="_blank" rel="external">10 Breakthrough Technologies 2017</a></p>
<p>These technologies all have staying power. They will affect the economy and our politics, improve medicine, or influence our culture. Some are unfolding now; others will take a decade or more to develop. But you should know about all of them right now.</p>
<h2 id="Reversing-Paralysis"><a href="#Reversing-Paralysis" class="headerlink" title="Reversing Paralysis"></a><a href="https://www.technologyreview.com/s/603492/10-breakthrough-technologies-2017-reversing-paralysis/" target="_blank" rel="external">Reversing Paralysis</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/paralysistopper.jpg?sw=390&amp;cx=0&amp;cy=1237&amp;cw=3000&amp;ch=1687" alt=""></p>
<p>Scientists are making remarkable progress at using brain implants to restore the freedom of movement that spinal cord injuries take away.</p>
<h2 id="Self-Driving-Trucks"><a href="#Self-Driving-Trucks" class="headerlink" title="Self-Driving Trucks"></a><a href="https://www.technologyreview.com/s/603493/10-breakthrough-technologies-2017-self-driving-trucks/" target="_blank" rel="external">Self-Driving Trucks</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/trucksotto5.jpg?sw=390&amp;cx=68&amp;cy=118&amp;cw=2236&amp;ch=1257" alt=""></p>
<p>Tractor-trailers without a human at the wheel will soon barrel onto highways near you. What will this mean for the nation’s 1.7 million truck drivers?</p>
<h2 id="Paying-with-Your-Face"><a href="#Paying-with-Your-Face" class="headerlink" title="Paying with Your Face"></a><a href="https://www.technologyreview.com/s/603494/10-breakthrough-technologies-2017-paying-with-your-face/" target="_blank" rel="external">Paying with Your Face</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/paymainillustration_0.jpg?sw=390&amp;cx=0&amp;cy=586&amp;cw=2510&amp;ch=1411" alt=""></p>
<p>Face-detecting systems in China now authorize payments, provide access to facilities, and track down criminals. Will other countries follow?</p>
<h2 id="Practical-Quantum-Computers"><a href="#Practical-Quantum-Computers" class="headerlink" title="Practical Quantum Computers"></a><a href="https://www.technologyreview.com/s/603495/10-breakthrough-technologies-2017-practical-quantum-computers/" target="_blank" rel="external">Practical Quantum Computers</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/quantum5.jpg?sw=390&amp;cx=3&amp;cy=775&amp;cw=1277&amp;ch=718" alt=""></p>
<p>Advances at Google, Intel, and several research groups indicate that computers with previously unimaginable power are finally within reach.</p>
<h2 id="The-360-Degree-Selfie"><a href="#The-360-Degree-Selfie" class="headerlink" title="The 360-Degree Selfie"></a><a href="https://www.technologyreview.com/s/603496/10-breakthrough-technologies-2017-the-360-degree-selfie/" target="_blank" rel="external">The 360-Degree Selfie</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/360camerasgroupshot.web.jpg?sw=390&amp;cx=0&amp;cy=636&amp;cw=1428&amp;ch=803" alt=""></p>
<p>Inexpensive cameras that make spherical images are opening a new era in photography and changing the way people share stories.</p>
<h2 id="Hot-Solar-Cells"><a href="#Hot-Solar-Cells" class="headerlink" title="Hot Solar Cells"></a><a href="https://www.technologyreview.com/s/603497/10-breakthrough-technologies-2017-hot-solar-cells/" target="_blank" rel="external">Hot Solar Cells</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/hotsolar1.jpg?sw=390&amp;cx=195&amp;cy=1071&amp;cw=2135&amp;ch=1200" alt=""></p>
<p>By converting heat to focused beams of light, a new solar device could create cheap and continuous power.</p>
<h2 id="Gene-Therapy-2-0"><a href="#Gene-Therapy-2-0" class="headerlink" title="Gene Therapy 2.0"></a><a href="https://www.technologyreview.com/s/603498/10-breakthrough-technologies-2017-gene-therapy-20/" target="_blank" rel="external">Gene Therapy 2.0</a></h2><p>Scientists have solved fundamental problems that were holding back cures for rare hereditary disorders. Next we’ll see if the same approach can take on cancer, heart disease, and other common illnesses.</p>
<p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/genetherapyopener.jpg?sw=390&amp;cx=190&amp;cy=167&amp;cw=2383&amp;ch=1340" alt=""></p>
<h2 id="The-Cell-Atlas"><a href="#The-Cell-Atlas" class="headerlink" title="The Cell Atlas"></a><a href="https://www.technologyreview.com/s/603499/10-breakthrough-technologies-2017-the-cell-atlas/" target="_blank" rel="external">The Cell Atlas</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/cellatlas1openerweb.jpg?sw=390&amp;cx=0&amp;cy=522&amp;cw=1282&amp;ch=721" alt=""></p>
<p>Biology’s next mega-project will find out what we’re really made of.</p>
<h2 id="Botnets-of-Things"><a href="#Botnets-of-Things" class="headerlink" title="Botnets of Things"></a><a href="https://www.technologyreview.com/s/603500/10-breakthrough-technologies-2017-botnets-of-things/" target="_blank" rel="external">Botnets of Things</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/botnets1opener.jpg?sw=390&amp;cx=0&amp;cy=1914&amp;cw=2760&amp;ch=1552" alt=""></p>
<p>The relentless push to add connectivity to home gadgets is creating dangerous side effects that figure to get even worse.</p>
<h2 id="Reinforcement-Learning"><a href="#Reinforcement-Learning" class="headerlink" title="Reinforcement Learning"></a><a href="https://www.technologyreview.com/s/603501/10-breakthrough-technologies-2017-reinforcement-learning/" target="_blank" rel="external">Reinforcement Learning</a></h2><p><img src="https://d267cvn3rvuq91.cloudfront.net/i/images/reinforcementleesedol.jpg?sw=390&amp;cx=0&amp;cy=121&amp;cw=1529&amp;ch=860" alt=""></p>
<p>By experimenting, computers are figuring out how to do things that no programmer could teach them.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://d267cvn3rvuq91.cloudfront.net/i/images/coverart.tr10.ma17.opener_1.jpg?sw=580&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#Reversing-Paralysis&quot;&gt;Reversing Paralysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Self-Driving-Trucks&quot;&gt;Self-Driving Trucks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Paying-with-Your-Face&quot;&gt;Paying with Your Face&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Practical-Quantum-Computers&quot;&gt;Practical Quantum Computers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#The-360-Degree-Selfie&quot;&gt;The 360-Degree Selfie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Hot-Solar-Cells&quot;&gt;Hot Solar Cells&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Gene-Therapy-2.0&quot;&gt;Gene Therapy 2.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#The-Cell-Atlas&quot;&gt;The Cell Atlas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Botnets-of-Things&quot;&gt;Botnets of Things&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Reinforcement-Learning&quot;&gt;Reinforcement Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="AI" scheme="http://aisee.me/categories/AI/"/>
    
    
      <category term="Big Trend" scheme="http://aisee.me/tags/Big-Trend/"/>
    
  </entry>
  
  <entry>
    <title>Trouble Obeys Eternal Law</title>
    <link href="http://aisee.me/2017/04/04/MyView/Original/trouble-obeys-forever-rule/"/>
    <id>http://aisee.me/2017/04/04/MyView/Original/trouble-obeys-forever-rule/</id>
    <published>2017-04-04T00:00:06.000Z</published>
    <updated>2017-04-04T00:37:41.044Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/BT-blog-thumb.jpg" alt=""></p>
<p>When you meet a trouble , solve it right now , otherwise , you will meet it in other occasions.</p>
<a id="more"></a>
<h2 id="Basic-Concept"><a href="#Basic-Concept" class="headerlink" title="Basic Concept"></a>Basic Concept</h2><h3 id="Brain-OS"><a href="#Brain-OS" class="headerlink" title="Brain OS"></a>Brain OS</h3><h3 id="Wikipedia"><a href="#Wikipedia" class="headerlink" title="Wikipedia"></a>Wikipedia</h3><h2 id="Program-Skill"><a href="#Program-Skill" class="headerlink" title="Program Skill"></a>Program Skill</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><h3 id="Tensorflow"><a href="#Tensorflow" class="headerlink" title="Tensorflow"></a>Tensorflow</h3><h2 id="Useful-Tool"><a href="#Useful-Tool" class="headerlink" title="Useful Tool"></a>Useful Tool</h2><h3 id="English"><a href="#English" class="headerlink" title="English"></a>English</h3><h3 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h3><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><h3 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h3><h3 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h3><h3 id="AndroidStudio"><a href="#AndroidStudio" class="headerlink" title="AndroidStudio"></a>AndroidStudio</h3><h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><h3 id="Beyond-Compare"><a href="#Beyond-Compare" class="headerlink" title="Beyond Compare"></a>Beyond Compare</h3><h3 id="Source-Insight"><a href="#Source-Insight" class="headerlink" title="Source Insight"></a>Source Insight</h3><h3 id="Notepad"><a href="#Notepad" class="headerlink" title="Notepad++"></a>Notepad++</h3><h2 id="English-Words"><a href="#English-Words" class="headerlink" title="English Words"></a>English Words</h2><h3 id="Ordinary"><a href="#Ordinary" class="headerlink" title="Ordinary"></a>Ordinary</h3><h3 id="Professional"><a href="#Professional" class="headerlink" title="Professional"></a>Professional</h3><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><h3 id="Stackflow"><a href="#Stackflow" class="headerlink" title="Stackflow"></a>Stackflow</h3><h3 id="CSDN"><a href="#CSDN" class="headerlink" title="CSDN"></a>CSDN</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/BT-blog-thumb.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;When you meet a trouble , solve it right now , otherwise , you will meet it in other occasions.&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Great Spirits on Github</title>
    <link href="http://aisee.me/2017/04/03/Program/Android/3rdLib/great-spirit-on-github/"/>
    <id>http://aisee.me/2017/04/03/Program/Android/3rdLib/great-spirit-on-github/</id>
    <published>2017-04-03T09:36:06.000Z</published>
    <updated>2017-04-03T16:12:47.094Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Less is More!<br>Codes speak louder than Lectures</p>
</blockquote>
<p><img src="http://okkntqe2h.bkt.clouddn.com/Art_Mata_Nui_Space_Travel.jpg" alt=""></p>
<p>Great Spirits show How Powerful and Wonderful codes are!</p>
<a id="more"></a>  
<h2 id="Jake-Wharton"><a href="#Jake-Wharton" class="headerlink" title="Jake Wharton"></a>Jake Wharton</h2><p><img src="http://ong8f1obl.bkt.clouddn.com/jake%20wharton.jpg" alt=""></p>
<p>##greenrobot<br><img src="https://avatars0.githubusercontent.com/u/242242?v=3&amp;s=460" alt=""></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/JakeWharton" target="_blank" rel="external">Jake Wharton</a><br><a href="https://github.com/greenrobot" target="_blank" rel="external">greenrobot</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Less is More!&lt;br&gt;Codes speak louder than Lectures&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/Art_Mata_Nui_Space_Travel.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Great Spirits show How Powerful and Wonderful codes are!&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Jake Wharton" scheme="http://aisee.me/tags/Jake-Wharton/"/>
    
  </entry>
  
  <entry>
    <title>Improve Code Inspection with Annotations</title>
    <link href="http://aisee.me/2017/04/03/Program/Java/improve-code-inspection-with-annotations/"/>
    <id>http://aisee.me/2017/04/03/Program/Java/improve-code-inspection-with-annotations/</id>
    <published>2017-04-03T03:44:06.000Z</published>
    <updated>2017-04-11T04:03:35.720Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://developer.android.com/studio/images/write/indirect-permissions-warning_2-2_2x.png?hl=zh-cn" alt=""></p>
<ol>
<li><a href="#What&#39;s-Annotation?">What’s Annotation?</a></li>
<li><a href="#Why-use-Annotation?">Why use Annotation?</a></li>
<li><a href="#How-to-Use-Annotation?">How to Use Annotation?</a></li>
<li><a href="#Pitfall">Pitfall</a></li>
<li><a href="#Best-Practice">Best Practice</a></li>
</ol>
<a id="more"></a>
<h2 id="What’s-Annotation"><a href="#What’s-Annotation" class="headerlink" title="What’s Annotation?"></a>What’s Annotation?</h2><h3 id="Annotation"><a href="#Annotation" class="headerlink" title="Annotation"></a>Annotation</h3><h4 id="interface"><a href="#interface" class="headerlink" title="@interface"></a>@interface</h4><p>@interface是java中用于声明注解类的关键字.使用该注解表示将自动继承java.lang.annotation.Annotation类,该过程交给编译器完成.需要注意:在定义注解时,不能继承其他注解或接口.</p>
<p>元注解：<br>元注解的作用就是负责注解其他注解。Java5.0定义了4个标准的meta-annotation类型，它们被用来提供对其它 annotation类型作说明。Java5.0定义的元注解：<br>@Target,<br>@Retention,<br>@Documented,<br>@Inherited</p>
<h4 id="Target："><a href="#Target：" class="headerlink" title="@Target："></a>@Target：</h4><p>该注解用于定义注解的作用目标,即注解可以用在什么地方,比如是用于方法上还是用于字段上,该注解接受以下参数:</p>
<p>作用目标    含义<br>@Target(ElementType.TYPE)    用于接口(注解本质上也是接口),类,枚举<br>@Target(ElementType.FIELD)    用于字段,枚举常量<br>@Target(ElementType.METHOD)    用于方法<br>@Target(ElementType.PARAMETER)    用于方法参数<br>@Target(ElementType.CONSTRUCTOR)    用于构造参数<br>@Target(ElementType.LOCAL_VARIABLE)    用于局部变量<br>@Target(ElementType.ANNOTATION_TYPE)    用于注解<br>@Target(ElementType.PACKAGE)    用于包</p>
<p>,通过@interface,@Retention,@Target已经可以完整的定义一个注解</p>
<h4 id="Retention："><a href="#Retention：" class="headerlink" title="@Retention："></a>@Retention：</h4><p>对Annotation的“生命周期”限制：某些Annotation仅出现在源代码中，而被编译器丢弃；而另一些却被编译在class文件中；编译在class文件中的Annotation可能会被虚拟机忽略，而另一些在class被装载时将被读取。<br>作用：表示需要在什么级别保存该注释信息，用于描述注解的生命周期（即：被描述的注解在什么范围内有效）<br>RetentionPolicy.SOURCE:在源文件中有效<br>RetentionPolicy.CLASS:在class文件中有效<br>RetentionPolicy.RUNTIME:在运行时有效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Target(ElementType.FIELD)</div><div class="line">@Retention(RetentionPolicy.RUNTIME)</div><div class="line">public @interface Column &#123;</div><div class="line">    public String name() default &quot;fieldName&quot;;</div><div class="line">    public boolean defaultDBValue() default false;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Column注解的的RetentionPolicy的属性值是RUTIME,这样注解处理器可以通过反射，获取到该注解的属性值，从而去做一些运行时的逻辑处理。</p>
<h4 id="Documented"><a href="#Documented" class="headerlink" title="@Documented:"></a>@Documented:</h4><p>该注解用于描述其它类型的annotation应该被javadoc文档化,出现在api doc中.<br>比如使用该注解的@Target会出出现在api说明中.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Documented</div><div class="line">@Retention(RetentionPolicy.RUNTIME)</div><div class="line">@Target(ElementType.ANNOTATION_TYPE)</div><div class="line">public @interface Target &#123;</div><div class="line">    ElementType[] value();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://img.blog.csdn.net/20161222232726578?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGQ4NjQxNDAxMzA=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>
<h4 id="Inherited："><a href="#Inherited：" class="headerlink" title="@Inherited："></a>@Inherited：</h4><p>是一个标记注解，@Inherited阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类。</p>
<p>注意：当@Inherited的Retention是RetentionPolicy.RUNTIME，则反射API增强了这种继承性。如果我们使用java.lang.reflect去查询一个@Inherited annotation类型的annotation时，反射代码检查将展开工作：检查class和其父类，直到发现指定的annotation类型被发现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Inherited</div><div class="line">public @interface Greeting &#123;</div><div class="line">    public enum FontColor&#123; BULE,RED,GREEN&#125;;</div><div class="line">    String name();</div><div class="line">    FontColor fontColor() default FontColor.GREEN;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="注解参数"><a href="#注解参数" class="headerlink" title="注解参数"></a>注解参数</h4><p>参数成员只能用基本类型byte,short,char,int,long,float,double,boolean八种基本数据类型和 String,Enum,Class,annotations等数据类型,以及这一些类型的数组。</p>
<h4 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h4><p>注解元素必须有确定的值，要么在定义注解的默认值中指定，要么在使用注解时指定，非基本类型的注解元素的值不可为null。因此, 使用空字符串或0作为默认值是一种常用的做法。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">@Target(ElementType.FIELD)</div><div class="line">@Retention(RetentionPolicy.RUNTIME)</div><div class="line">@Documented</div><div class="line">public @interface FruitProvider &#123;</div><div class="line">    public int id() default -1;</div><div class="line">    public String name() default &quot;&quot;;</div><div class="line">    public String address() default &quot;&quot;;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Target(ElementType.FIELD)</div><div class="line">@Retention(RetentionPolicy.RUNTIME)</div><div class="line">@Documented</div><div class="line">public @interface FruitProvider &#123;</div><div class="line">    public int value() default -1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="系统注解"><a href="#系统注解" class="headerlink" title="系统注解"></a>系统注解</h4><p>java设计者已经为我们自定义了几个常用的注解,我们称之为系统注解,主要是这三个:</p>
<p>系统注解    含义<br>@Override    用于修饰方法,表示此方法重写了父类方法<br>像@Override这样,没有成员定义的注解称之为标记注解.</p>
<p>@Deprecated    用于修饰方法,表示此方法已经过时<br>需要注意@Deprecated和@deprecated这两者的区别,前者被javac识别和处理,而后者则是被javadoc工具识别和处理.因此当我们需要在源码标记某个方法已经过时应该使用@Deprecated,如果需要在文档中说明则使用@deprecated</p>
<p>@SuppressWarnnings    该注解用于告诉编译器忽视某类编译警告<br>该注解被用于有选择的关闭编译器对类,方法,成员变量即变量初始化的警告.该注解可接受以下参数:</p>
<p>参数    含义<br>deprecated    使用已过时类,方法,变量<br>unchecked    执行了未检查的转告时的警告,如使用集合是为使用泛型来制定集合保存时的类型<br>fallthrough    使用switch,但是没有break时<br>path    类路径,源文件路径等有不存在的路径<br>serial    可序列化的类上缺少serialVersionUID定义时的警告<br>finally    任何finally字句不能正常完成时的警告<br>all    以上所有情况的警告</p>
<h4 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h4><p>了解完系统注解之后,现在我们就可以自己来定义注解了,通过上面@Override的实例,不难看出定义注解的格式如下:</p>
<p>public @interface 注解名 {定义体}</p>
<p>定义体就是方法的集合,每个方法实则是声明了一个配置参数.方法的名称作为配置参数的名称,方法的返回值类型就是配置参数的类型.和普通的方法不一样,可以通过default关键字来声明配置参数的默认值.</p>
<p>需要注意:</p>
<ol>
<li>此处只能使用public或者默认的default两个权限修饰符</li>
<li>配置参数的类型只能使用基本类型(byte,boolean,char,short,int,long,float,double)和String,Enum,Class,annotation</li>
<li>对于只含有一个配置参数的注解,参数名建议设置中value,即方法名为value</li>
<li>配置参数一旦设置,其参数值必须有确定的值,要不在使用注解的时候指定,要不在定义注解的时候使用default为其设置默认值,对于非基本类型的参数值来说,其不能为null.<br>像@Override这样,没有成员定义的注解称之为标记注解.</li>
</ol>
<h3 id="注解处理器"><a href="#注解处理器" class="headerlink" title="注解处理器"></a>注解处理器</h3><p>根据注解的特性,注解处理器可以分为<strong>运行时注解处理</strong>和<strong>编译时注解处理器</strong>.运行时处理器需要借助反射机制实现,而编译时处理器则需要借助APT来实现.</p>
<h2 id="Why-use-Annotation"><a href="#Why-use-Annotation" class="headerlink" title="Why use Annotation?"></a>Why use Annotation?</h2><p>Annotations allow you to provide hints to code inspections tools like Lint, to help detect these more subtle code problems. They are added as metadata tags that you attach to variables, parameters, and return values to inspect method return values, passed parameters, local variables, and fields. When used with code inspections tools, annotations can help you detect problems, such as null pointer exceptions and resource type conflicts.</p>
<h2 id="How-to-Use-Annotation"><a href="#How-to-Use-Annotation" class="headerlink" title="How to Use Annotation?"></a>How to Use Annotation?</h2><p>Android supports a variety of annotations through the <a href="https://developer.android.com/topic/libraries/support-library/features.html?hl=zh-cn#annotations" target="_blank" rel="external">Annotations Support Library</a>. You can access the library through the <a href="https://developer.android.com/reference/android/support/annotation/package-summary.html?hl=zh-cn" target="_blank" rel="external">android.support.annotation</a> package.</p>
<h3 id="Nullness-Annotations"><a href="#Nullness-Annotations" class="headerlink" title="Nullness Annotations"></a>Nullness Annotations</h3><h3 id="线程注解-UiThread-WorkerThread-…"><a href="#线程注解-UiThread-WorkerThread-…" class="headerlink" title="线程注解: @UiThread, @WorkerThread, …"></a>线程注解: @UiThread, @WorkerThread, …</h3><p>(Support library 22.2及其之后版本支持.)</p>
<p>如果你的方法只能在指定的线程类型中被调用，那么你就可以使用以下4个注解来标注它：<br>@UiThread<br>@MainThread<br>@WorkerThread<br>@BinderThread<br>如果一个类中的所有方法都有相同的线程需求，那么你可以注解类本身。比如android.view.View，就被用@UiThread标注。</p>
<p>关于线程注解使用的一个很好的例子就是AsyncTask：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@WorkerThread</div><div class="line">protected abstract Result doInBackground(Params... params);</div><div class="line"></div><div class="line">@MainThread</div><div class="line">protected void onProgressUpdate(Progress... values) &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>@UiThread还是@MainThread?</p>
<p>在进程里只有一个主线程。这个就是@MainThread。同时这个线程也是一个@UiThread。比如activity的主要窗口就运行在这个线程上。然而它也有能力为应用创建其他线程。这很少见，一般具备这样功能的都是系统进程。通常是把和生命周期有关的用@MainThread标注，和View层级结构相关的用@UiThread标注。但是由于@MainThread本质上是一个@UiThread，而大部分情况下@UiThread又是一个@MainThread，所以工具(lint ,Android Studio,等等)可以把他们互换，所以你能在一个可以调用@MainThread方法的地方也能调用@UiThread方法，反之亦然。</p>
<p>值约束: @Size, @IntRange, @FloatRange</p>
<h2 id="Pitfall"><a href="#Pitfall" class="headerlink" title="Pitfall"></a>Pitfall</h2><h2 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="https://developer.android.com/studio/write/annotations.html?hl=zh-cn#adding-annotations" target="_blank" rel="external">Improve Code Inspection with Annotations</a><br>[2]<a href="http://www.flysnow.org/2015/08/13/android-tech-docs-support-annotations.html" target="_blank" rel="external">Android注解支持(Support Annotations)</a><br>[3]<a href="https://juejin.im/entry/58df5e5c2f301e006208b307" target="_blank" rel="external">性能最佳实践: 在开发中避免使用枚举</a><br>[4]<a href="https://joyrun.github.io/2016/07/18/java-annotation/" target="_blank" rel="external">Java Annotation最佳入门实践</a><br>[5]<a href="https://joyrun.github.io/2016/07/19/AptHelloWorld/" target="_blank" rel="external">Android APT（编译时代码生成）最佳实践</a><br>[6]<a href="https://joyrun.github.io/2016/08/01/ActivityRouter/" target="_blank" rel="external">ActivityRouter路由框架：通过注解实现URL打开Activity</a><br>[7]<a href="http://blog.csdn.net/dd864140130/article/details/53875814" target="_blank" rel="external">基础篇：带你从头到尾玩转注解</a><br>[8]<a href="http://blog.csdn.net/dd864140130/article/details/53957691" target="_blank" rel="external">拓展篇：注解处理器最佳实践</a><br>[9]<a href="http://www.infoq.com/cn/articles/cf-java-annotation?utm_source=articles_about_java-depth-adventure&amp;utm_medium=link&amp;utm_campaign=java-depth-adventure" target="_blank" rel="external">Java深度历险（六）——Java注解</a><br>[10]<a href="http://www.trinea.cn/android/java-annotation-android-open-source-analysis/" target="_blank" rel="external">Java Annotation 及几个常用开源项目注解原理简析</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://developer.android.com/studio/images/write/indirect-permissions-warning_2-2_2x.png?hl=zh-cn&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#What&amp;#39;s-Annotation?&quot;&gt;What’s Annotation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Why-use-Annotation?&quot;&gt;Why use Annotation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#How-to-Use-Annotation?&quot;&gt;How to Use Annotation?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Pitfall&quot;&gt;Pitfall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Best-Practice&quot;&gt;Best Practice&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Annotation" scheme="http://aisee.me/tags/Annotation/"/>
    
      <category term="Java" scheme="http://aisee.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Compile Process of Android Application</title>
    <link href="http://aisee.me/2017/04/03/Program/Android/Design/compile-process-of-apk/"/>
    <id>http://aisee.me/2017/04/03/Program/Android/Design/compile-process-of-apk/</id>
    <published>2017-04-03T03:44:06.000Z</published>
    <updated>2017-04-03T04:52:52.001Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ong8f1obl.bkt.clouddn.com/android_build_detail.png" alt=""></p>
<blockquote>
<p>编译–&gt;DEX–&gt;打包–&gt;签名和对齐</p>
</blockquote>
<a id="more"></a>
<h2 id="Package-Process"><a href="#Package-Process" class="headerlink" title="Package Process"></a>Package Process</h2><p><img src="http://upload-images.jianshu.io/upload_images/2839011-28f3fb0ca3af7d9a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>上面这张图对上面的步骤以及每步用到的工具进行了细分，概括如下：</p>
<p>Java编译器对工程本身的java代码进行编译，这些java代码有三个来源：app的源代码，由资源文件生成的R文件(aapt工具)，以及有aidl文件生成的java接口文件(aidl工具)。产出为.class文件。</p>
<p>.class文件和依赖的三方库文件通过dex工具生成Delvik虚拟机可执行的.dex文件，可能有一个或多个，包含了所有的class信息，包括项目自身的class和依赖的class。产出为.dex文件。</p>
<p>apkbuilder工具将.dex文件和编译后的资源文件生成未经签名对齐的apk文件。这里编译后的资源文件包括两部分，一是由aapt编译产生的编译后的资源文件，二是依赖的三方库里的资源文件。产出为未经签名的.apk文件。</p>
<p>分别由Jarsigner和zipalign对apk文件进行签名和对齐，生成最终的apk文件。</p>
<p>可以将整个打包过程概括为以下几步：</p>
<ol>
<li>通过aapt打包res资源文件，生成R.java、resources.arsc和res文件（二进制 &amp; 非二进制如res/raw和pic保持原样）</li>
<li>处理.aidl文件，生成对应的Java接口文件</li>
<li>通过Java Compiler编译R.java、Java接口文件、Java源文件，生成.class文件</li>
<li>通过dex命令，将.class文件和第三方库中的.class文件处理生成classes.dex</li>
<li>通过apkbuilder工具，将aapt生成的resources.arsc和res文件、assets文件和classes.dex一起打包生成apk</li>
<li>通过Jarsigner工具，对上面的apk进行debug或release签名<br>通过zipalign工具，将签名后的apk进行对齐处理。</li>
</ol>
<p>关于zipalign工具，根据名字就知道是个zip文件对齐的工具。使得apk中的资源文件偏离文件起始位置4个字节，从而可以通过mmap()直接访问，从而减少RAM占用。</p>
<p>下图是谷歌官网给出的一个典型的apk构建的过程，比较概括。主要包括两个过程，首先是编译过程，编译的内容包括本工程的文件以及依赖的各种库文件，编译的输出包括dex文件和编译后的资源文件。然后是打包过程。配合Keystore对第一步的输出进行签名对齐，生成最终的apk文件。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2839011-58310b412bae9a01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="APK-Content"><a href="#APK-Content" class="headerlink" title="APK Content"></a>APK Content</h2><p>apk包内容包括：</p>
<ol>
<li>classes.dex…</li>
<li>resources.arsc</li>
<li>assets</li>
<li>res</li>
<li>AndroidManifest.xml</li>
<li>META-INF<br>7.<br>其中：<br>res中图片和raw文件下内容保持原样，res中其他xml文件内容均转化为二进制形式；assets文件内容保持原样<br>res中的文件会被映射到R.java文件中，访问的时候直接使用资源ID即R.id.filename；assets文件夹下的文件不会被映射到R.java中，访问的时候需要<strong>AssetManager</strong>类</li>
</ol>
<h2 id="Gradle-Process"><a href="#Gradle-Process" class="headerlink" title="Gradle Process"></a>Gradle Process</h2><p>Android工程通过gradle文件管理各项配置，gradle文件利用DSL（Domain Specific Language）语言描述配置，并使用Groovy语言处理编译逻辑。一个典型的Android工程结构如下：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2839011-0ba953a3e93d0d19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://img.blog.csdn.net/20151027092414376" alt=""></p>
<p>在这里gradle文件分布在几个不同的层级，Project层级以及Module层级。</p>
<ol>
<li>Project层级的settings.gradle描述的是该Project包含哪些Module<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">include &apos;:presentation&apos;, &apos;:qamodel&apos;, &apos;:chatcommonmodule&apos;, &apos;:qa&apos;, &apos;:unlimit&apos;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>Project层级的build.gradle描述的是作用于所有Module的配置，包括gradle版本等。</p>
<ol>
<li>Module层级的build.gradle。每个Module下都有一个作用于该Module的build.gradle文件，描述了该Module相关的配置。这些配置主要包括：BuildTypes，ProductFlavors，Dependency，SigningSettings等。</li>
</ol>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><img src="https://gss0.baidu.com/7LsWdDW5_xN3otqbppnN2DJv/doc/pic/item/0bd162d9f2d3572c49ef6f258313632762d0c33e.jpg" alt=""><br>[1]<a href="http://blog.csdn.net/yanbober/article/details/49408489" target="_blank" rel="external">Android应用开发编译框架流程与IDE及Gradle概要</a><br>[2]<a href="https://yuedu.baidu.com/ebook/14a722970740be1e640e9a3e?pn=1&amp;isFromWenku=1" target="_blank" rel="external">Android Gradle权威指南</a><br>[3]<a href="http://www.jianshu.com/p/9df3c3b6067a" target="_blank" rel="external">Gradle 完整指南（Android）</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ong8f1obl.bkt.clouddn.com/android_build_detail.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编译–&amp;gt;DEX–&amp;gt;打包–&amp;gt;签名和对齐&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Compile" scheme="http://aisee.me/tags/Compile/"/>
    
      <category term="Gradle" scheme="http://aisee.me/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Deep Analysis and Learning of Android</title>
    <link href="http://aisee.me/2017/04/02/Program/Android/deep-learning-of-android-by-luoshengyang/"/>
    <id>http://aisee.me/2017/04/02/Program/Android/deep-learning-of-android-by-luoshengyang/</id>
    <published>2017-04-02T14:53:06.000Z</published>
    <updated>2017-04-02T14:57:49.059Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20130528234751506" alt=""><br>Android系统研究之“三横三纵”</p>
<p><a href="http://blog.csdn.net/luoshengyang/article/details/8923485" target="_blank" rel="external">作者：罗升阳</a></p>
<p>以下是本文的提纲：</p>
<ol>
<li>理念</li>
<li>里程碑</li>
<li>看过的书</li>
<li>研究过的内容</li>
<li>将来要做的事情</li>
</ol>
<a id="more"></a>
<p><img src="http://img.blog.csdn.net/20130529004204159" alt=""><br>Android 4.2的UI渲染流程</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://blog.csdn.net/luoshengyang/article/details/8923485" target="_blank" rel="external">那两年炼就的Android内功修养</a><br><a href="http://blog.csdn.net/luoshengyang/article/details/12957169" target="_blank" rel="external">《老罗的Android之旅》导读PPT</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20130528234751506&quot; alt=&quot;&quot;&gt;&lt;br&gt;Android系统研究之“三横三纵”&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/luoshengyang/article/details/8923485&quot;&gt;作者：罗升阳&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下是本文的提纲：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;理念&lt;/li&gt;
&lt;li&gt;里程碑&lt;/li&gt;
&lt;li&gt;看过的书&lt;/li&gt;
&lt;li&gt;研究过的内容&lt;/li&gt;
&lt;li&gt;将来要做的事情&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Luo Shengyang" scheme="http://aisee.me/tags/Luo-Shengyang/"/>
    
  </entry>
  
  <entry>
    <title>How to Use Gradle</title>
    <link href="http://aisee.me/2017/04/02/Program/Tools/Gradle/gradle/"/>
    <id>http://aisee.me/2017/04/02/Program/Tools/Gradle/gradle/</id>
    <published>2017-04-02T10:39:06.000Z</published>
    <updated>2017-04-10T04:00:40.921Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://gradle.org/images/homepage/gradle-org-hero.png" alt=""></p>
<blockquote>
<p>Gradle is a powerful tool than you can image!<br>Accelerate developer productivity</p>
</blockquote>
<ol>
<li><a href="#What&#39;s-the-Gradle?">What’s the Gradle?</a></li>
<li><a href="#Why-use-Gradle?">Why use Gradle?</a></li>
<li><a href="#How-to-use-Gradle?">How to use Gradle?</a></li>
<li><a href="#Pitfalls-when-use-Gradle">Pitfalls when use Gradle</a></li>
<li><a href="#Best-pratice-of-Gradle">Best pratice of Gradle</a></li>
</ol>
<a id="more"></a>
<h2 id="What’s-the-Gradle"><a href="#What’s-the-Gradle" class="headerlink" title="What’s the Gradle?"></a>What’s the Gradle?</h2><blockquote>
<p>Gradle 是以Groovy为基础，面向java应用，基于DSL语法的自动化构建工具。是google引入，替换ant和maven的新工具，其依赖兼容maven和ivy。</p>
</blockquote>
<p>Gradle（英[g’reɪdl]）是一个任务驱动型的构建工具，是一个依赖管理工具，更是一个编程框架。<br>它抛弃了基于XML的各种繁琐配置，取而代之的是一种基于Groovy的内部领域特定（DSL）语言。<br>在android studio中，我们使用这个工具可以完成app的编译打包等工作。</p>
<h3 id="Basic-Gradle-Component"><a href="#Basic-Gradle-Component" class="headerlink" title="Basic Gradle Component"></a>Basic Gradle Component</h3><p>每一个build.gradle文件代表着一个Project。Tasks在build.gradle中定义。当初始化构建进程时，gradle会基于build文件，集合所有的Project和Tasks,一个Tasks包含了一系列动作，然后它们将会按照顺序执行，一个动作就是一段被执行的代码，很像Java中的方法。</p>
<blockquote>
<p>Gradle实际上是一个容器，实现真正的功能的都是Gradle的插件Plugin，而Plugin中又定义了各式各样的Task，这一个个的Task是执行任务的基本单元。</p>
</blockquote>
<h4 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h4><p>每一个待编译的工程（可以是一个jar包，一个web应用，或者一个android app等）都称为一个Project。</p>
<h4 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h4><p>每一个Project在构建的时候都包含一系列的Task。一个Task其实就是构建过程中一个原子性的操作。比如一个Android APK的编译可能包含：</p>
<ul>
<li>Java源码编译Task、</li>
<li>资源编译Task、</li>
<li>JNI编译Task、</li>
<li>lint检查Task、</li>
<li>打包生成APK的Task、</li>
<li>签名Task等。</li>
</ul>
<h3 id="Plugin"><a href="#Plugin" class="headerlink" title="Plugin"></a>Plugin</h3><p>Gradle是一个框架，作为框架，它负责定义流程和规则。而具体的编译工作则是通过插件的方式来完成的。比如编译Java有Java插件，编译Groovy有Groovy插件，编译Android APP有Android APP插件，编译Android Library有Android Library插件。<br>简单来说，插件就是一系列任务的集合，主要作用是把一些重复利用的逻辑打包，这样就可以在不同的项目中可以重复的使用。<br>要使用插件，可以通过引入依赖的方式添加。</p>
<h2 id="Why-use-Gradle"><a href="#Why-use-Gradle" class="headerlink" title="Why use Gradle?"></a>Why use Gradle?</h2><p>From mobile apps to microservices, from small startups to big enterprises, Gradle helps teams build, automate and deliver better software, faster.</p>
<h3 id="Build-Anything"><a href="#Build-Anything" class="headerlink" title="Build Anything"></a>Build Anything</h3><p><img src="https://gradle.org/images/homepage/build-anything.png" alt=""><br>Write in Java, C++, Python or your language of choice. Package for deployment on any platform. Go monorepo or multi-repo. And rely on Gradle’s unparalleled versatility to build it all.</p>
<h3 id="Automate-Everything"><a href="#Automate-Everything" class="headerlink" title="Automate Everything"></a>Automate Everything</h3><p><img src="https://gradle.org/images/homepage/automate-everything.png" alt=""><br>Use Gradle’s rich API and mature ecosystem of plugins and integrations to get ambitious about automation. Model, integrate and systematize the delivery of your software from end to end.</p>
<h3 id="Deliver-Faster"><a href="#Deliver-Faster" class="headerlink" title="Deliver Faster"></a>Deliver Faster</h3><p><img src="https://gradle.org/images/homepage/deliver-faster.png" alt=""><br>Scale out development with elegant, blazing-fast builds. From compile avoidance to advanced caching and beyond, we pursue performance relentlessly so your team can deliver continuously.</p>
<h3 id="Goals-of-the-new-Build-System（使用gradle的目的）"><a href="#Goals-of-the-new-Build-System（使用gradle的目的）" class="headerlink" title="Goals of the new Build System（使用gradle的目的）"></a>Goals of the new Build System（使用gradle的目的）</h3><ol>
<li>Make it easy to reuse code and resources</li>
<li>Make it easy to create several variants of an 3. application, either for multi-apk distribution or for different flavors of an application</li>
<li>Make it easy to configure, extend and customize the build process</li>
<li>Good IDE integration</li>
</ol>
<p>使用gradle的目的:<br>更容易重用资源和代码;<br>可以更容易创建不同的版本的程序，多个类型的apk包；<br>更容易配置，扩展;<br>更好的IDE集成；</p>
<h2 id="How-to-use-Gradle"><a href="#How-to-use-Gradle" class="headerlink" title="How to use Gradle?"></a>How to use Gradle?</h2><p>首先明确gradle跟maven一样，也有一个配置文件，maven里面是叫pom.xml，而在gradle中是叫build.gradle。Android Studio中的android项目通常至少包含两个build.gradle文件，一个是project范围的，另一个是module范围的，由于一个project可以有多个module，所以每个module下都会对应一个build.gradle。这么说有点抽象，看下面这个图：<br><img src="http://upload-images.jianshu.io/upload_images/1540618-748838a135f668f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="Gradle-Android插件用户指南翻译"><a href="#Gradle-Android插件用户指南翻译" class="headerlink" title="Gradle Android插件用户指南翻译"></a>Gradle Android插件用户指南翻译</h3><p>Gradle Plugin User Guide 官方原文地址<br><a href="http://tools.android.com/tech-docs/new-build-system/user-guide" target="_blank" rel="external">http://tools.android.com/tech-docs/new-build-system/user-guide</a></p>
<p>中文版在线阅读地址<br><a href="http://avatarqing.github.io/Gradle-Plugin-User-Guide-Chinese-Verision" target="_blank" rel="external">http://avatarqing.github.io/Gradle-Plugin-User-Guide-Chinese-Verision</a></p>
<blockquote>
<p>简单来说有以下几点：</p>
<ol>
<li>独立项目，和Google无关</li>
<li>Gradle基于Groovy。（Maven、Ant基于xml）</li>
<li>Groovy是拓展了Java语言的一种动态语言，语法更简洁，可以作为Java平台的脚本语言使用 ，拥有类似Python、Ruby和Smalltalk中的一些特性。</li>
<li>Gradle是基于Groovy定义了一套DSL，所谓DSL(领域专用语言)，就是专门针对某一特定问题的计算机语言。而Gradle我们可以认为是经过“定制”的Groovy，专门用于项目构建的语言。</li>
<li>Gradle兼容Maven、Ant</li>
<li>Gradle 的推出主要以 Java 应用为主，当然还支持 Android、C、C++等。</li>
</ol>
</blockquote>
<h3 id="As如何依赖Gradle让Gradle作为自身的构建工具呢？"><a href="#As如何依赖Gradle让Gradle作为自身的构建工具呢？" class="headerlink" title="As如何依赖Gradle让Gradle作为自身的构建工具呢？"></a>As如何依赖Gradle让Gradle作为自身的构建工具呢？</h3><blockquote>
<p>答：Google开发了一个Gradle插件，让As项目依赖这个插件，就相当于让Gradle作为自身的的构建工具。</p>
</blockquote>
<p>现在比如我们新建一个As项目，打开项目的根目录的gradle.build文件。有如下代码：</p>
<p>project下的build.gradle是基于整个project的配置，主要配置gradle 版本及 全局依赖仓库、库或者其他全部参数。<br>android studio 现在重要仓库采用jcenter(),之前版本放在mavenCentral。<br>另外有时还没有加入jcenter()仓库的第三方库，也需要在这里配置他们的库地址。<br>需要在这里配置，才能将第三方库拉下来</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter() <span class="comment">//表示编译过程中依赖的仓库</span></div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">      <span class="comment">//依赖android开发使用的gradle插件</span></div><div class="line">      classpath <span class="string">'com.android.tools.build:gradle:2.2.0'</span>    </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>而要引入Android APP插件，就需要在build.gradle引用Android APP插件：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//申明使用插件，表明要编译的内容和产物</span></div><div class="line">apply plugin: <span class="string">'com.android.application'</span></div><div class="line"></div><div class="line"><span class="comment">//配置插件属性</span></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion <span class="number">24</span></div><div class="line">    buildToolsVersion <span class="string">"24.0.1"</span></div><div class="line">    defaultConfig &#123;</div><div class="line">        applicationId <span class="string">"zhj.gradledemo"</span></div><div class="line">        minSdkVersion <span class="number">15</span></div><div class="line">        targetSdkVersion <span class="number">24</span></div><div class="line">        versionCode <span class="number">1</span></div><div class="line">        versionName <span class="string">"1.0"</span></div><div class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></div><div class="line">     &#125;</div><div class="line">    buildTypes &#123;</div><div class="line">         release &#123;</div><div class="line">            <span class="function">minifyEnabled <span class="keyword">false</span></span></div><div class="line">            proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Android其实就是写了两个插件：<br>com.android.application和com.android.library。<br>应用这两个插件就可以实现Android APP和Android Library的构建。</p>
<h3 id="As项目中的Gradle"><a href="#As项目中的Gradle" class="headerlink" title="As项目中的Gradle"></a>As项目中的Gradle</h3><h4 id="gradle文件夹"><a href="#gradle文件夹" class="headerlink" title=".gradle文件夹"></a>.gradle文件夹</h4><p>.gradle文件夹 是gradle 运行以后生成的缓存文件夹。</p>
<h4 id="Project中的build-gradle文件"><a href="#Project中的build-gradle文件" class="headerlink" title="Project中的build.gradle文件"></a>Project中的build.gradle文件</h4><p>project下的build.gradle是基于整个project的配置，主要配置gradle 版本及 全局依赖仓库、库或者其他全部参数。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></div><div class="line"></div><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        <span class="comment">//这里依赖的jcenter仓库是gradle脚本自身需要的资源</span></div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.2.0'</span></div><div class="line"></div><div class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></div><div class="line">        <span class="comment">// in the individual module build.gradle files</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        <span class="comment">//这里依赖的jcenter仓库是项目所有模块需要的资源</span></div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">task <span class="title">clean</span><span class="params">(type: Delete)</span> </span>&#123;</div><div class="line">    delete rootProject.buildDir</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="module中build-gradle文件"><a href="#module中build-gradle文件" class="headerlink" title="module中build.gradle文件"></a>module中build.gradle文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//申明使用插件，表明要编译的内容和产物</span></div><div class="line">apply plugin: <span class="string">'com.android.application'</span></div><div class="line"></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion <span class="number">24</span></div><div class="line">    buildToolsVersion <span class="string">"24.0.1"</span></div><div class="line">     <span class="comment">//默认配置，会同时应用到debug和release版本上</span></div><div class="line">    defaultConfig &#123;</div><div class="line">        applicationId <span class="string">"zhj.gradledemo"</span></div><div class="line">        minSdkVersion <span class="number">15</span></div><div class="line">        targetSdkVersion <span class="number">24</span></div><div class="line">        versionCode <span class="number">1</span></div><div class="line">        versionName <span class="string">"1.0"</span></div><div class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></div><div class="line">    &#125;</div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            minifyEnabled <span class="keyword">true</span>  <span class="comment">//是否混淆</span></div><div class="line">            <span class="function">proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro' <span class="comment">//混淆文件的位置</span></span></div><div class="line">        &#125;</div><div class="line">        debug &#123;</div><div class="line">            minifyEnabled <span class="keyword">false</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 多渠道</span></div><div class="line">    productFlavors &#123;</div><div class="line">        <span class="comment">//可以设置不同渠道渠道号，应用名称</span></div><div class="line">        pro &#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        fre &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//依赖第三方库</span></div><div class="line">dependencies &#123;</div><div class="line">    <span class="comment">//编译libs目录下所以jar包</span></div><div class="line">    <span class="function">compile <span class="title">fileTree</span><span class="params">(include: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span>  <span class="comment">//导入所有的jar包</span></span></div><div class="line">    <span class="title">androidTestCompile</span><span class="params">(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span></div><div class="line">        exclude group: <span class="string">'com.android.support'</span>, <span class="keyword">module</span>: <span class="string">'support-annotations'</span></div><div class="line">    &#125;)</div><div class="line">    compile 'com.android.support:appcompat-v7:24.2.0'</div><div class="line">    compile 'com.android.support:design:24.2.0'</div><div class="line">    testCompile 'junit:junit:4.12'</div><div class="line">    proCompile 'com.android.support:recyclerview-v7:24.2.0'</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Project中setting-gradle"><a href="#Project中setting-gradle" class="headerlink" title="Project中setting.gradle"></a>Project中setting.gradle</h4><p>这个文件是全局的项目配置文件，里面主要声明Project中所包括的所有module</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//一个Project中所包括的所有module</span></div><div class="line">include <span class="string">':Gotobus'</span>, <span class="string">':android-support-v7-appcompat'</span></div><div class="line">include <span class="string">':google-play-services_lib'</span></div><div class="line">include <span class="string">':TakeTours'</span></div><div class="line">include <span class="string">':Common'</span></div><div class="line">include <span class="string">':CompanyCommon'</span></div></pre></td></tr></table></figure>
<h4 id="Project中gradle-properties"><a href="#Project中gradle-properties" class="headerlink" title="Project中gradle.properties"></a>Project中gradle.properties</h4><p>gradle.properties为gradle的配置文件，里面可以定义一些常量供build.gradle使用，比如可以配置签名相关信息如keystore位置，密码，keyalias等,build.gradle就可以直接引用<br>gradle 中的一些配置参数建议写到gradle.properties</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//编译版本信息</span></div><div class="line">APPLICATION_ID = com.jin.myAPP</div><div class="line">COMPILE_SDK_VERSION = <span class="number">23</span></div><div class="line">BUILD_TOOLS_VERSION = <span class="number">23.0</span>.1</div><div class="line">MIN_SDK_VERSION = <span class="number">15</span></div><div class="line">TARGET_SDK_VERSION = <span class="number">1</span></div><div class="line">VERSION_CODE = <span class="number">1</span></div><div class="line">VERSION_NAME = <span class="number">1.0</span>.0.0</div><div class="line"></div><div class="line"><span class="comment">//keystore信息</span></div><div class="line">STORE_FILE = ../app/mykey.keystore</div><div class="line">STORE_PASSWORD = your password</div><div class="line">KEY_ALIAS = your alias</div><div class="line">KEY_PASSWORD = your password</div></pre></td></tr></table></figure>
<h4 id="配置应用的签名信息"><a href="#配置应用的签名信息" class="headerlink" title="配置应用的签名信息"></a>配置应用的签名信息</h4><p>在android.signingConfigs{}下定义一个或者多个签名信息，然后在buildTypes{}配置使用即可。比如这里</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line"></div><div class="line">    signingConfigs &#123;</div><div class="line">        release &#123;</div><div class="line">            <span class="function">storeFile <span class="title">file</span><span class="params">(<span class="string">"release.keystore"</span>)</span></span></div><div class="line">            keyAlias "release"</div><div class="line">            keyPassword "123456"</div><div class="line">            storePassword "123456"</div><div class="line">        &#125;</div><div class="line">        debug &#123;</div><div class="line">            ...</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            signingConfig signingConfigs.release</div><div class="line">        &#125;</div><div class="line">        debug &#123;</div><div class="line">            signingConfig signingConfigs.debug</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>storeFile是签名证书文件，keyAlias是别名，keyPassword是key的密码，storePassword是证书的密码。配置好相关信息即可在buildTypes配置使用。</p>
<p>一般重要的信息，例如签名信息，可以直接将信息写到gradle.properties，然后在build.gradle中引用即可。</p>
<p>buildTypes是指建构的类型，一般只用两种默认类型 debug 和 release ，顾名思义 debug 用来配置开发过程中的一些内容；release 用来配置正式发布版本的内容。有时我们需要发布介于debug与release之间的preview 版本。</p>
<h3 id="Build-Variant-差异管理"><a href="#Build-Variant-差异管理" class="headerlink" title="Build Variant 差异管理"></a>Build Variant 差异管理</h3><p>比如app生成不同版本（免费，收费），适配特殊机型，多渠道等需要发多个包，最终能编译出的apk的数量是由Product Flavor（产品种类）与Build Type（构建类型）决定的，<br>公式：Build Variant = Build Type x Product Flavor</p>
<h4 id="BuildType（构建类型）"><a href="#BuildType（构建类型）" class="headerlink" title="BuildType（构建类型）"></a>BuildType（构建类型）</h4><p>默认有debug和release两种，标示编译的类型，通常在混淆代码、可调式、资源压缩上做一些区分。</p>
<h4 id="Product-Flavor（产品种类）"><a href="#Product-Flavor（产品种类）" class="headerlink" title="Product Flavor（产品种类）"></a>Product Flavor（产品种类）</h4><p>为了满足“同一个project，根据一个很小的区分，来打不同的包”这个需求。实现多渠道打包。注意:这里的Flavor名如果是数字开头，必须用引号引起来。</p>
<h3 id="调整module的目录结构sourceSets"><a href="#调整module的目录结构sourceSets" class="headerlink" title="调整module的目录结构sourceSets"></a>调整module的目录结构sourceSets</h3><p>默认情况下，java文件和resource文件分别在src/main/java和src/main/res目录下，在build.gradle文件的andorid{}里面添加下面的代码，便可以将java文件和resource文件放到src/java和src/resources目录下。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">sourceSets &#123;</div><div class="line">        main &#123;</div><div class="line">            manifest.srcFile <span class="string">'AndroidManifest.xml'</span></div><div class="line">            <span class="comment">//设置java文件的位置</span></div><div class="line">            java.srcDirs = [<span class="string">'src'</span>]</div><div class="line">            resources.srcDirs = [<span class="string">'src'</span>]</div><div class="line">            aidl.srcDirs = [<span class="string">'src'</span>]</div><div class="line">            renderscript.srcDirs = [<span class="string">'src'</span>]</div><div class="line">            res.srcDirs = [<span class="string">'res'</span>]</div><div class="line">            assets.srcDirs = [<span class="string">'assets'</span>]</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="全局变量定义及引用"><a href="#全局变量定义及引用" class="headerlink" title="全局变量定义及引用"></a>全局变量定义及引用</h3><p>可以在顶层build.gradle脚本中定义一些全局变量，提供给子脚本引用<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> ext &#123;</div><div class="line">    <span class="comment">// global variables definition</span></div><div class="line">    compileSdkVersion = <span class="string">'Google Inc.:Google APIs:23'</span></div><div class="line">    buildToolsVersion = <span class="string">"23.0.3"</span></div><div class="line">    minSdkVersion = <span class="number">14</span></div><div class="line">    targetSdkVersion = <span class="number">23</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 子脚本引用</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"> android &#123;</div><div class="line">    compileSdkVersion rootProject.ext.compileSdkVersion</div><div class="line">    buildToolsVersion rootProject.ext.buildToolsVersion</div><div class="line"></div><div class="line">    defaultConfig &#123;</div><div class="line">        minSdkVersion rootProject.ext.minSdkVersion</div><div class="line">        targetSdkVersion rootProject.ext.targetSdkVersion</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Gradle常用命令介绍"><a href="#Gradle常用命令介绍" class="headerlink" title="Gradle常用命令介绍"></a>Gradle常用命令介绍</h3><p>打开Android Studio内置的Terminal终端，输入如下命令</p>
<blockquote>
<p>gradlew -v</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1877523-1d659e89e94e09ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>指令代码    指令功能<br>gradlew    下载更新gradle<br>gradlew -v    查询版本号<br>gradlew clean    清理项目的output文件<br>gradlew check    运行检测和测试任务<br>gradlew build    运行check和assemble,检查依赖并编译打包（debug、release环境的包）<br>gradlew clean build    运行 clean 和 build 两个 gradle task<br>gradlew assemble    编译并打Debug和Release包<br>gradlew assembleDebug    编译并把本项目下所有模块所有渠道的Debug版本打包<br>gradlew assembleRelease    编译并把本项目下所有模块所有渠道的Release版本打包<br>gradlew assembleWandoujia    生成wandoujia渠道的Release和Debug版本<br>gradlew assembleWandoujiaRelease    打包wandoujia渠道的Release版本<br>gradlew assembleWandoujiaRelease -p app    打包app工程下wandoujia渠道的Release版本（使用-p选项，决定执行哪个工程）<br>gradlew installRelease    Release模式打包并安装<br>gradlew uninstallRelease    卸载Release模式包</p>
<p><strong>gradlew代表 gradle wrapper</strong>，意思是gradle的一层包装，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper。<br>在./gradle/wrapper/gralde-wrapper.properties文件中声明了它指向的目录和版本。只要下载成功即可用grdlew wrapper的命令代替全局的gradle命令。</p>
<p>assemble 命令创建task有如下语法：</p>
<p>允许直接构建一个Variant版本，例如assembleFlavor1Debug。<br>允许构建指定Build Type的所有APK，例如assembleDebug将会构建Flavor1Debug和Flavor2Debug两个Variant版本。<br>允许构建指定flavor的所有APK，例如assembleFlavor1将会构建Flavor1Debug和Flavor1Release两个Variant版本。</p>
<h3 id="批量修改生成的apk文件名"><a href="#批量修改生成的apk文件名" class="headerlink" title="批量修改生成的apk文件名"></a>批量修改生成的apk文件名</h3><p>在我们打包发版的时候，一次性打几十个包，这时候我们就想让生成的apk文件名有区分，比如一眼就能看出这个apk是哪个版本的，哪个渠道的，是哪天打的包等等，这就需要我们在生成apk文件的时候动态修改生成的apk文件名达到这一目的。代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">def buildTime() &#123;</div><div class="line">    def date = new Date()</div><div class="line">    def formattedDate = date.format(&apos;yyyyMMdd&apos;)</div><div class="line">    return formattedDate</div><div class="line">&#125;</div><div class="line"></div><div class="line">android &#123;</div><div class="line">    buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            applicationVariants.all &#123; variant -&gt;</div><div class="line">                variant.outputs.each &#123; output -&gt;</div><div class="line">                    if (output.outputFile != null &amp;&amp; output.outputFile.name.endsWith(&apos;.apk&apos;)</div><div class="line">                        &amp;&amp;&apos;release&apos;.equals(variant.buildType.name)) &#123;</div><div class="line">                        def apkFile = new File(</div><div class="line">                                output.outputFile.getParent(),</div><div class="line">                                &quot;Gtobus_$&#123;variant.flavorName&#125;_v$&#123;variant.versionName&#125;_$&#123;buildTime()&#125;.apk&quot;)</div><div class="line">                        output.outputFile = apkFile</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以baidu渠道为例，以上的代码会生成一个名字为Gtobus__gotobus_v5.1.2_20161115.apk安装包。</p>
<p>这里是循环处理每个applicationVariant，当他们的输出文件名以apk结尾并且buildType是release时，重新设置新的输出文件名，这样就达到了我们批量修改生成的文件名的目的。</p>
<h2 id="Pitfalls-when-use-Gradle"><a href="#Pitfalls-when-use-Gradle" class="headerlink" title="Pitfalls when use Gradle"></a>Pitfalls when use Gradle</h2><h3 id="项目中的问题"><a href="#项目中的问题" class="headerlink" title="项目中的问题"></a>项目中的问题</h3><p>android studio的编译时屏蔽掉lint检查，可以避免由于编译条件太过严格而编译不过的问题：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">lintOptions &#123;</div><div class="line">    abortOnError false</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果遇到多个jar包中的某个文件冲突，可以在对应module下的build.gradle文件的android标签下加上如下属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">packagingOptions &#123;</div><div class="line">      exclude &apos;META-INF/NOTICE.txt&apos;// 这里是具体的冲突文件全路径</div><div class="line">      exclude &apos;META-INF/LICENSE.txt&apos;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<h3 id="资源文件和manifest的合并"><a href="#资源文件和manifest的合并" class="headerlink" title="资源文件和manifest的合并"></a>资源文件和manifest的合并</h3><p>资源和mainfests的优先级是这样的：<br><img src="http://upload-images.jianshu.io/upload_images/1877523-2d02903a027a69f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>如果一个资源在main中和在flavor中定义了，那么那个在flavor中的资源有更高的优先级。这样那个在flavor文件夹中的资源将会被打包到apk。而在依赖项目申明的资源总是拥有最低优先级。</p>
<h2 id="Best-pratice-of-Gradle"><a href="#Best-pratice-of-Gradle" class="headerlink" title="Best pratice of Gradle"></a>Best pratice of Gradle</h2><h3 id="Gradle编译优化"><a href="#Gradle编译优化" class="headerlink" title="Gradle编译优化"></a>Gradle编译优化</h3><p>在添加依赖的时候尽量明确版本号，省去gradle查找最新版的时间<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">不要使用</div><div class="line">compile ‘com.facebook.fresco:fresco:latest’</div><div class="line">compile ‘com.facebook.fresco:fresco:<span class="number">1</span>.+’，</div></pre></td></tr></table></figure></p>
<h3 id="使用daemon"><a href="#使用daemon" class="headerlink" title="使用daemon"></a>使用daemon</h3><p>构建初始化的很多工作是关于java虚拟机的启动，加载虚拟机环境，加载class文件等，如果这些动作交给一个单独的后台进程去做，那么，第一次初始化之后的修改代码再构建是不是可以节省很多时间呢？答案是肯定的，通过在gradle.properties加入这样一句来开启，如果想让修改全局所有项目都生效，那么修改这个文件~/.gradle/gradle.properties<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">org.gradle.daemon=true</div></pre></td></tr></table></figure></p>
<h3 id="并行构建模块化项目"><a href="#并行构建模块化项目" class="headerlink" title="并行构建模块化项目"></a>并行构建模块化项目</h3><p>将你的项目拆分成多个子项目并开启并行构建也是一个不错的主意，比如将相对独立的模块拆分成独立的库工程(Library projects)，主工程(Application project)依赖这些库工程，这样的话，开启并行构建才会发挥作用。并行构建开启方式是修改文件gradle.properties，加入如下行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">org.gradle.parallel=true</div></pre></td></tr></table></figure></p>
<h3 id="ext配置全局参数"><a href="#ext配置全局参数" class="headerlink" title="ext配置全局参数"></a>ext配置全局参数</h3><p>project的build.gradle中的ext可以为各位module进行全局配置参数，防止各个module之间的不统一，不可控。而且当我们升级sdk、build tool、target sdk等，几个module都要更改，非常的麻烦。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ext &#123;</div><div class="line">    compileSdkVersion = 22</div><div class="line">    buildToolsVersion = &quot;23.0.1&quot;</div><div class="line">    minSdkVersion = 10</div><div class="line">    targetSdkVersion = 22</div><div class="line">    versionCode = 34</div><div class="line">    versionName = &quot;v2.6.1&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后在各自module的build.gradle中引用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line"></div><div class="line">    compileSdkVersion rootProject.ext.compileSdkVersion</div><div class="line"></div><div class="line">    buildToolsVersion rootProject.ext.buildToolsVersion</div><div class="line"></div><div class="line">   defaultConfig &#123;</div><div class="line"></div><div class="line">      applicationId &quot;com.xxx.xxx&quot;</div><div class="line"></div><div class="line">      minSdkVersion rootProject.ext.minSdkVersion</div><div class="line"></div><div class="line">      targetSdkVersion rootProject.ext.targetSdkVersion</div><div class="line"></div><div class="line">      versionCode rootProject.ext.versionCode</div><div class="line"></div><div class="line">      versionName rootProject.ext.versionName</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="resValue-定义资源"><a href="#resValue-定义资源" class="headerlink" title="resValue 定义资源"></a>resValue 定义资源</h3><p>例如resValue “string” 就是字符串资源，可以用R.String 来引用对应的字符串资源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">     defaultConfig &#123;</div><div class="line">         resValue &quot;string&quot;, &quot;build_time&quot;, buildTime()</div><div class="line">         resValue &quot;string&quot;, &quot;build_host&quot;, hostName()</div><div class="line">         resValue &quot;string&quot;, &quot;build_revision&quot;, revision()</div><div class="line">      &#125;</div><div class="line"> &#125;</div><div class="line"></div><div class="line">  def buildTime() &#123;</div><div class="line">     return new Date().format(&quot;yyyy-MM-dd HH:mm:ss&quot;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  def hostName() &#123;</div><div class="line">     return System.getProperty(&quot;user.name&quot;) + &quot;@&quot; +InetAddress.localHost.hostName</div><div class="line">   &#125;</div><div class="line"></div><div class="line">  def revision() &#123;</div><div class="line">    def code = new ByteArrayOutputStream()</div><div class="line">       exec &#123;</div><div class="line">          commandLine &apos;git&apos;, &apos;rev-parse&apos;, &apos;--short&apos;, &apos;HEAD&apos;</div><div class="line">          standardOutput = code</div><div class="line">        &#125;</div><div class="line">    return code.toString()</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="属性默认值"><a href="#属性默认值" class="headerlink" title="属性默认值"></a>属性默认值</h3><p>如果某个属性的值没有使用DSL设置，这个属性将会使用某些默认值，下表展示了默认值的处理过程。</p>
<p>属性名    DSL对象中的默认值   默认值</p>
<p>Property Name     Default value in DSL object     Default value<br>versionCode     -1     value from manifest if present<br>versionName     null     value from manifest if present<br>minSdkVersion     -1     value from manifest if present<br>targetSdkVersion     -1     value from manifest if present<br>applicationId     null     value from manifest if present<br>testApplicationId     null     applicationId + “.test”<br>testInstrumentationRunner     null     android.test.InstrumentationTestRunner<br>signingConfig     null     null<br>proguardFile     N/A (set only)     N/A (set only)<br>proguardFiles     N/A (set only)     N/A (set only)</p>
<p>如果你想在build脚本中使用自定义的逻辑来查询这些属性，第二列中的值就很重要。比如，你可以编写如下的代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (android.defaultConfig.testInstrumentationRunner == <span class="keyword">null</span>) &#123;  </div><div class="line">   <span class="comment">// assign a better default...  </span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>如果属性的值仍然是null，那么在构建的时候，就会使用第三列的默认值，但是DSL元素中并不包含这些默认值，因此你不能在程序中查询这些值。这样做的目的是仅在必要的时候（构建时）才会去解析manifest内容。</p>
<h3 id="Android-Studio编译慢、卡死和狂占内存怎么破？"><a href="#Android-Studio编译慢、卡死和狂占内存怎么破？" class="headerlink" title="[Android Studio编译慢、卡死和狂占内存怎么破？"></a>[Android Studio编译慢、卡死和狂占内存怎么破？</h3><p>](<a href="https://www.zhihu.com/question/27953288" target="_blank" rel="external">https://www.zhihu.com/question/27953288</a>)</p>
<p>gradle 构建一个工程主要分为三部分（完全掌握了下面这张图，整个 gradle 的构建过程能了解个十之七八了）：<br><img src="https://pic2.zhimg.com/f084c5f0953eb2792d929dd6738822b5_b.png" alt=""></p>
<ol>
<li><p>初始化阶段：主要是解析 setting.gradle 文件（因此有人提到减少 setting.gradle 的 module 数量，是很有道理的，但是实际操作过程限制颇多，原因最后会大致说一下）；</p>
</li>
<li><p>读取配置阶段：主要是解析所有的 projects 下的 build.gradle 文件，包括 rootProject 和其他的 subprojects（子项目），检查语法，确定 tasks 依赖以建立 task 的有向无循环图，检查 task 里引用的文件目录是否存在等（这一步也进一步验证了减少 setting.gradle 里的 module 数量可以加快编译速度，因为减少一个 module ，需要解析的 build.gradle 文件就减少一个，第 3 步里就不会执行本属于这个 module 的任务了，但是还是 1 里面说的问题，限制颇多）；</p>
</li>
<li><p>执行阶段：按照 2 中建立的有向无循环图来执行每一个 task ，整个编译过程中，这一步基本会占去 9 成以上的时间，尤其是对于 Android 项目来讲，将 java 转为 class compileDebugJavaWithJavac/compileReleaseJavaWithJavac<br>和 将 class 合并成 dex transformClassesWithDexForDebug/transformClassesWithDexForRelease<br>这两步很耗时，第一步还好，第二步会耗时非常久。首先在 gradle.properties 里设置 org.gradle.jvmargs=-Xmx4096m //越大越好<br>，然后在工程的 build.gradle 里的 android 结点下增加 dexOptions 配置，如下：dexOptions {<br> dexInProcess true<br> preDexLibraries true<br> javaMaxHeapSize “4g”//越大越好<br> incremental true<br>}</p>
</li>
</ol>
<p>明确了 gradle 的生命周期，那么就可以看到加快编译速度的关键就是从第三步入手，当然，减少 setting.gradle 里的 modules 数量这一步也是必须的。下面说说我们公司的实践吧。项目插件化改造，每位业务上的同学只需要编译一个模块即可，这一点基本上从根本上解决了编译慢的问题（对于大多数没有插件化需求的朋友们可以看下面的一些实践），首先 setting.gradle 里的 module 只有自己开发的模块了，而对应的执行阶段的任务也只有这一个 module 的任务了。执行一次 gradle build ，我们就会发现，在这个过程中，其实是执行了多次打包任务的，在 buildTypes 里配置了多个编译打包类型，默认有 debug 和 release ，我们还可以手动配置其他的类型，而且还有 productFlavor 里的多渠道，这样就会执行多次编译打包，而正常开发过程中，只需要打  debug 包去调试，因此使用 gradle assembleDebug 即可，等发版的时候使用其他方式去打多渠道的包（如美团的方案<a href="http://tech.meituan.com/mt-apk-packaging.html）；" target="_blank" rel="external">http://tech.meituan.com/mt-apk-packaging.html）；</a></p>
<p>既然编译主要时间都集中在 gradle 生命周期的第三步执行 task 任务里，那么我们就可以把一些无关紧要的任务给禁用掉，比如各种 Test ，各种 lint 等，刚好在 gradle 里有这样的指令 -x lint 可以临时禁掉 lint 任务，-x test 可以禁掉 test 任务，事实上对于一个稍微大一点的项目，lint 也是很耗时的，当然也可以通过 gradle 脚本彻底禁用 lint 和 test 任务，我也在一些微信群里分享过相关代码，但是不太建议这么做，因为有时候 lint 和 test 也是挺有用的；gradle 本身提供了一些指令参数可以加快编译，比如 –daemon ，开启守护进程，–parallel ，开启并行编译等，这个也可以在 gradle.propertites 里配置（编译使用的 jvm 内存也可以在这里配置）。定制 gradle 编译流程，利用官方提供的 API 完全可以定制一个适合自己的编译流程，可以参考一下携程的 DynamicAPK/sub-project-build.gradle at master · CtripMobile/DynamicAPK · GitHub，里面有携程他们自己整个完整的编译流程，脚本本身很简单，一共只有两三百行代码。</p>
<p>上面讲到的几点，现有环境就可以做到的大概是这样（有一点要特别注意，如果工程里有交叉依赖，一定不要使用 –parallel 参数）：gradle assembleDebug –daemon –parallel -x lint -x test<br> ，如果是要直接安装到设备上的话，就把  assembleDebug 换成 installDebug ，assembleDebug 可以简写为 asD ，installDebug 可以简写为 iD 。最后讲一下，为什么减少 setting.gradle 里的 module 数量，确实可以加快编译，但是却限制颇多呢？首先，我们想一下整个编译过程，先去解析 gradle 配置，建立 tasks 依赖有向图，然后再去执行每一个 module 的 task ，如果我们通过 maven 依赖，使用 aar 替掉了 module（单指 android library），如果我们要改这个 module 里的文件，岂不是每次都要修改上传再下载，这其实还好，但是有一个致命的问题：不修改版本号的话，SNAPSHOT 在 IDEA 里经常会不好使。这样就导致修改的东西会不生效，去解决这个问题是非常耗费时间的。不过有一种方式，可以一定程度上解决问题，增加下面的脚本：project.configurations.all(new Action<configuration>() {<br>@Override<br>    void execute(Configuration files) {<br>        files.resolutionStrategy.cacheDynamicVersionsFor(5, TimeUnit.MINUTES)<br>        files.resolutionStrategy.cacheChangingModulesFor(0, TimeUnit.SECONDS)<br>    }<br>})</configuration></p>
<p>那有人会问，插件化里，每个人开发一个模块，对于每个模块的维护不也是要打包上传到 maven ，每次一有修改，哪怕是非常微小的修改，也要做一次上传，同样会遇到 SNAPSHOT 不好使的问题。嘿嘿，这个问题嘛，我司自己维护了一个 gradle 插件，已经解决了，至于解决方案，是公司机密，我是不会讲的。然后，还有一点，我相信大部分开发者平常开发都是单 module 的，多 module 的情况并不多，因此大多数依赖基本也都是 aar 或者 jar ，根本就不存在所谓的将 library 转成 aar 上传的情况，因此一些答主说的根本毫无意义，这也是为什么我会说影响编译速度的情况主要集中在 gradle 生命周期的第三个阶段，至于第三个阶段的优化，看我上面的答案就好了。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1]<a href="http://www.lcode.org/%E4%BC%98%E9%9B%85%E7%9A%84android-studio%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE-%E5%B8%B8%E7%94%A8%E5%BA%93%E5%92%8C%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/" target="_blank" rel="external">优雅的Android Studio项目配置–常用库和版本管理</a><br>[2]<a href="http://www.ratdream.com/2016/09/09/%E4%BC%98%E9%9B%85%E7%9A%84%E7%AE%A1%E7%90%86%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/" target="_blank" rel="external">优雅的管理第三方库</a><br>[3]<a href="http://www.jianshu.com/p/88fb3876d92d" target="_blank" rel="external">Gradle从入门到了解</a><br>[4]<a href="http://www.jianshu.com/p/9dcec4a14c52" target="_blank" rel="external">Gradle for Android 问题总结</a><br>[5]<a href="https://www.gitbook.com/book/dongchuan/gradle-user-guide-/details" target="_blank" rel="external">Gradle User Guide 中文版</a><br>[6]<a href="http://unclechen.github.io/2015/10/22/Android-Studio-Gradle%E5%AE%9E%E8%B7%B5%E4%B9%8B%E5%A4%9A%E6%B8%A0%E9%81%93%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%93%E5%8C%85+%E7%89%88%E6%9C%AC%E5%8F%B7%E7%AE%A1%E7%90%86/" target="_blank" rel="external">Android Studio Gradle实践之多渠道自动化打包+版本号管理</a><br>[7]<a href="http://blog.csdn.net/lzyzsd/article/category/2795779" target="_blank" rel="external">深入浅出Android Gradle构建系统</a><br>[8]<a href="http://www.jianshu.com/p/b2c3192c2c1d" target="_blank" rel="external">在Android Studio中建立和维护团队通用库</a><br>[9]<a href="http://www.jianshu.com/p/9df3c3b6067a" target="_blank" rel="external">Gradle 完整指南（Android）</a><br>[10]<a href="https://www.gitbook.com/book/dongchuan/gradle-user-guide-/details" target="_blank" rel="external">Gradle User Guide 中文版</a><br>[11]<a href="https://www.zhihu.com/question/27953288" target="_blank" rel="external">Android Studio编译慢、卡死和狂占内存怎么破？
</a>[12]<a href="http://blog.csdn.net/fuchaosz/article/details/51146091" target="_blank" rel="external"> [Android Studio系列(三)]Android Studio 编译、同步慢的解决方法</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://gradle.org/images/homepage/gradle-org-hero.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Gradle is a powerful tool than you can image!&lt;br&gt;Accelerate developer productivity&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#What&amp;#39;s-the-Gradle?&quot;&gt;What’s the Gradle?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Why-use-Gradle?&quot;&gt;Why use Gradle?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#How-to-use-Gradle?&quot;&gt;How to use Gradle?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Pitfalls-when-use-Gradle&quot;&gt;Pitfalls when use Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Best-pratice-of-Gradle&quot;&gt;Best pratice of Gradle&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Gradle" scheme="http://aisee.me/tags/Gradle/"/>
    
      <category term="Tool" scheme="http://aisee.me/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Permissions on Android</title>
    <link href="http://aisee.me/2017/04/02/Program/Android/Design/permission-checker/"/>
    <id>http://aisee.me/2017/04/02/Program/Android/Design/permission-checker/</id>
    <published>2017-04-02T06:55:06.000Z</published>
    <updated>2017-04-03T16:30:33.856Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/app-permission_746x545.png" alt=""></p>
<p>Those pitfalls I fall into…</p>
<a id="more"></a>
<h2 id="Conditon"><a href="#Conditon" class="headerlink" title="Conditon"></a>Conditon</h2><ol>
<li>危险权限</li>
<li>Android 版本 &gt;= 6.0</li>
<li>targetSdkVersion &gt;= 23<br>如果项目的targetSdkVersion &lt; 23, 在Android 6.0＋的手机上，会默认给予所有在AndroidManifest.xml中申请的权限。</li>
</ol>
<p>是不是觉得这样就完事大吉了？<br><img src="https://user-gold-cdn.xitu.io/2016/11/29/4e3297fc74ee8cd6e1ef6e5a3254bdea" alt=""></p>
<p>如果用户在应用的权限页面手动收回权限，将会导致应用Crash.💔<br><img src="https://user-gold-cdn.xitu.io/2016/11/29/339bbb1c81518c1bb63fb983b74e50f4" alt=""></p>
<p>稳妥的处理当然是遵循Google的权限申请机制。</p>
<h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>为方便开发者实现权限管理，Google提供了4个API:</p>
<ol>
<li>checkSelfPermission( )    判断权限是否具有某项权限</li>
<li>requestPermissions( )    申请权限</li>
<li>onRequestPermissionsResult( )    申请权限回调方法</li>
<li>shouldShowRequestPermissionRationale( )    是否要提示用户申请该权限的缘由</li>
</ol>
<h2 id="Pitfall"><a href="#Pitfall" class="headerlink" title="Pitfall"></a>Pitfall</h2><p>如果用户任性的勾选了“不再询问”，那么在执行requestPermissions( )后，onRequestPermissionsResult( )会永远返回PERMISSION_DENIED，这样应用原本的操作将永远无法执行。</p>
<p><img src="https://user-gold-cdn.xitu.io/2016/11/29/27ce2cc22ce916c83ff8a6a2909a44e9" alt=""></p>
<h2 id="Right-way"><a href="#Right-way" class="headerlink" title="Right way"></a>Right way</h2><h3 id="shouldShowRequestPermissionRationale"><a href="#shouldShowRequestPermissionRationale" class="headerlink" title="shouldShowRequestPermissionRationale( )"></a>shouldShowRequestPermissionRationale( )</h3><p>如果返回为true，一般情况下，应用应该弹出Dialog说明申请该权限的缘由</p>
<p>shouldShowRequestPermissionRationale( )只会在一种情况下返回true</p>
<blockquote>
<p><strong>用户上一次拒绝申请权限，但是并未勾选“不再询问”</strong></p>
</blockquote>
<p>如何判断用户勾选了“不再询问”？<br><img src="" alt=""></p>
<p>从上面的表格可以看出，<u><strong>如果上次shouldShowRequestPermissionRationale( )返回了true，而这次调用该方法返回了false，则说明用户在上次勾选了“不再询问”。此时，我们需要引导用户进入设置界面进行权限授予。</strong></u></p>
<p>由于涉及到上一次调用shouldShowRequestPermissionRationale( )的结果，所以需要将其持久化保存，SharedPreferences或者数据库均可。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">requestPermission</span><span class="params">(Activity activity, <span class="keyword">final</span> String permission)</span> </span>&#123;</div><div class="line">    <span class="keyword">boolean</span> flag = ActivityCompat.shouldShowRequestPermissionRationale(activity, permission);</div><div class="line">    <span class="keyword">if</span> (getLastRequestState() &amp;&amp; !flag) &#123;</div><div class="line">        <span class="comment">//当用户勾选`不再询问`时, 进入设置界面</span></div><div class="line">        Uri uri = Uri.fromParts(<span class="string">"package"</span>, <span class="keyword">this</span>.getPackageName(), <span class="keyword">null</span>);</div><div class="line">        Intent intent = <span class="keyword">new</span> Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, uri);</div><div class="line">        startActivityForResult(intent, COME_CODE);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag) &#123;</div><div class="line">        <span class="comment">//之前有过`拒绝`授权时，提醒用户需要某权限</span></div><div class="line">        showRationaleDialog();</div><div class="line"></div><div class="line">        <span class="comment">//同时保存返回值</span></div><div class="line">        SharedPrefsUtils.setBooleanPreference(getApplicationContext(), KEY_RESUEST_SOME_PERMISSION, flag);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">//第一次申请权限时，直接申请权限</span></div><div class="line">        ActivityCompat.requestPermissions(activity, <span class="keyword">new</span> String[]&#123;permission&#125;, REQUEST_PERMISSION_CODE);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>流程图<br><img src="https://user-gold-cdn.xitu.io/2016/11/30/f8a7e90eeeacb4be86e71bd707cb4a01.png" alt=""></p>
<h2 id="Best-Practice"><a href="#Best-Practice" class="headerlink" title="Best Practice"></a>Best Practice</h2><h2 id="Process-Step"><a href="#Process-Step" class="headerlink" title="Process Step"></a>Process Step</h2><p><img src="https://user-gold-cdn.xitu.io/2016/11/29/4d928133e9f88b8dce54b645f38a78fd.png" alt=""></p>
<p>上面的解决方案是可行的，但是每次申请权限需要依赖于上一次调用shouldShowRequestPermissionRationale( )方法的返回值，如果SharedPreferences被修改或者被删除，会影响正常的申请流程。</p>
<p>Google提供了一个非常好的思路，详见<a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fgooglesamples%2Feasypermissions" target="_blank" rel="external">EasyPermissions</a> .</p>
<p><img src="" alt=""></p>
<p>EasyPermissions并没有存储上一次shouldShowRequestPermissionRationale( )的返回值，而是<u><strong>在申请权限被拒后调用shouldShowRequestPermissionRationale( )方法，如果此时返回false则说明用户勾选了“不再询问”。</strong></u></p>
<p>简化判断“不再询问”的条件</p>
<blockquote>
<p>1.未获得授权<br>2.shouldShowRequestPermissionRationale( )返回false</p>
</blockquote>
<p><img src="https://user-gold-cdn.xitu.io/2016/11/29/963a5e7a0014edfffb3f5e4b6fd97436.png" alt=""></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[]<a href="https://juejin.im/entry/58253dfaa22b9d00670c8210" target="_blank" rel="external">Android M 权限最佳实践</a><br>[2]<a href="http://blog.csdn.net/self_study/article/details/50074781" target="_blank" rel="external">android permission权限与安全机制解析（上）</a><br>[3]<a href="http://blog.csdn.net/self_study/article/details/50186435" target="_blank" rel="external">android permission权限与安全机制解析（下）</a><br>[4]<a href="https://github.com/hotchemi/PermissionsDispatcher" target="_blank" rel="external">第三方库PermissionsDispatcher</a><br>[5]<a href="https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fgooglesamples%2Feasypermissions" target="_blank" rel="external">EasyPermissions </a><br>[6]<a href="http://www.jianshu.com/p/3e16bda04852" target="_blank" rel="external">Android权限最佳实践</a><br>[7]<a href="http://blog.csdn.net/mzm489321926/article/details/50542065" target="_blank" rel="external">Android如何获取判断是否有悬浮窗权限</a><br><a href="http://www.cnblogs.com/mengdd/p/3824782.html" target="_blank" rel="external">Android悬浮窗实现 使用WindowManager</a><br><a href="https://juejin.im/entry/577f474fa633bd005b0277bb" target="_blank" rel="external">突破小米悬浮窗权限控制 – 不需要权限的悬浮窗</a><br><a href="http://www.jianshu.com/p/167fd5f47d5c" target="_blank" rel="external">Android无需权限显示悬浮窗, 兼谈逆向分析app</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/app-permission_746x545.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Those pitfalls I fall into…&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Best Practice" scheme="http://aisee.me/tags/Best-Practice/"/>
    
      <category term="Permission" scheme="http://aisee.me/tags/Permission/"/>
    
  </entry>
  
  <entry>
    <title>Keep your Independency</title>
    <link href="http://aisee.me/2017/03/31/MyView/Original/keep-your-independency/"/>
    <id>http://aisee.me/2017/03/31/MyView/Original/keep-your-independency/</id>
    <published>2017-03-31T12:51:06.000Z</published>
    <updated>2017-03-31T13:13:17.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://okkntqe2h.bkt.clouddn.com/Be-Real-Be-Yourself.jpg" alt=""></p>
<ol>
<li>Realize your Economic Independency</li>
<li>Keep your Personality Independency</li>
<li>Achieve your Life Goal</li>
<li>Live and Enjoy your Life</li>
</ol>
<a id="more"></a>
<h2 id="Person-vs-Computer"><a href="#Person-vs-Computer" class="headerlink" title="Person vs Computer"></a>Person vs Computer</h2><h3 id="Learning-vs-Charging"><a href="#Learning-vs-Charging" class="headerlink" title="Learning vs Charging"></a>Learning vs Charging</h3><h2 id="Brain-vs-OS"><a href="#Brain-vs-OS" class="headerlink" title="Brain vs OS"></a>Brain vs OS</h2><h3 id="Basic-Concept-vs-Base-Data-Type"><a href="#Basic-Concept-vs-Base-Data-Type" class="headerlink" title="Basic Concept vs Base Data Type"></a>Basic Concept vs Base Data Type</h3><h3 id="Growing-Up-vs-Update-Version"><a href="#Growing-Up-vs-Update-Version" class="headerlink" title="Growing Up vs Update Version"></a>Growing Up vs Update Version</h3><h2 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h2><ol>
<li>Do not become a man of lacking safety</li>
<li>Keep far away from the person who lacks safety</li>
<li>Make Happiness basing on your Growing up , not  Comparation of others</li>
<li>Should and Only to be Resposible for your Choose and Behaviour</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://okkntqe2h.bkt.clouddn.com/Be-Real-Be-Yourself.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Realize your Economic Independency&lt;/li&gt;
&lt;li&gt;Keep your Personality Independency&lt;/li&gt;
&lt;li&gt;Achieve your Life Goal&lt;/li&gt;
&lt;li&gt;Live and Enjoy your Life&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Personal" scheme="http://aisee.me/categories/Personal/"/>
    
    
      <category term="Share" scheme="http://aisee.me/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Android Architecture Blueprints</title>
    <link href="http://aisee.me/2017/03/31/Program/Android/Design/architecture-of-android-app/"/>
    <id>http://aisee.me/2017/03/31/Program/Android/Design/architecture-of-android-app/</id>
    <published>2017-03-31T08:41:06.000Z</published>
    <updated>2017-03-31T13:13:57.678Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/googlesamples/android-architecture/wiki/images/aab-logo.png" alt=""></p>
<p>The Android framework provides a lot of flexibility in deciding how to organize and architect an Android app. While this freedom is very valuable, it can also lead to apps with large classes, inconsistent naming schemes, as well as mismatching or missing architectures. These types of issues can make testing, maintaining and extending your apps difficult.</p>
<p>The Android Architecture Blueprints project demonstrates strategies to help solve or avoid these common problems. This project implements the same app using different architectural concepts and tools.</p>
<a id="more"></a>
<p>You can use the samples in this project as a learning reference, or as a starting point for creating your own apps. The focus of this project is on demonstrating how to structure your code, design your architecture, and the eventual impact of adopting these patterns on testing and maintaining your app. You can use the techniques demonstrated here in many different ways to build apps. Your own particular priorities will impact how you implement the concepts in these projects, so you should not consider these samples to be canonical examples. To ensure the focus in kept on the aims described above, the app uses a simple UI.</p>
<h2 id="Explore-the-samples"><a href="#Explore-the-samples" class="headerlink" title="Explore the samples"></a>Explore the samples</h2><p>This project hosts each sample app in separate repository branches. For more information, see the <code>README.md</code> file in each branch.</p>
<h3 id="Stable-samples"><a href="#Stable-samples" class="headerlink" title="Stable samples"></a>Stable samples</h3><table>
<thead>
<tr>
<th>Sample</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp/" target="_blank" rel="external">todo‑mvp</a></td>
<td>Demonstrates a basic <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter" target="_blank" rel="external">Model‑View‑Presenter</a> (MVP) architecture and provides a foundation on which the other samples are built. This sample also acts as a reference point for comparing and contrasting the other samples in this project.</td>
</tr>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-loaders/" target="_blank" rel="external">todo‑mvp‑loaders</a></td>
<td>Fetches data using the <a href="https://developer.android.com/guide/components/loaders.html" target="_blank" rel="external">Loaders API</a>.</td>
</tr>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/todo-databinding/" target="_blank" rel="external">todo‑databinding</a></td>
<td>Uses the <a href="https://developer.android.com/topic/libraries/data-binding/index.html" target="_blank" rel="external">Data Binding Library</a>.</td>
</tr>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-clean/" target="_blank" rel="external">todo‑mvp‑clean</a></td>
<td>Uses concepts from <a href="https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html" target="_blank" rel="external">Clean Architecture</a>.</td>
</tr>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-dagger/" target="_blank" rel="external">todo‑mvp‑dagger</a></td>
<td>Uses <a href="https://google.github.io/dagger/" target="_blank" rel="external">Dagger2</a> to add support for <a href="https://en.wikipedia.org/wiki/Dependency_injection" target="_blank" rel="external">dependency injection</a>.</td>
</tr>
</tbody>
</table>
<p><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-contentproviders/" target="_blank" rel="external">todo‑mvp‑contentproviders</a> | Based on the todo-mvp-loaders sample, this version fetches data using the Loaders API, and also makes use of <a href="https://developer.android.com/guide/topics/providers/content-providers.html" target="_blank" rel="external">content providers</a>. |<br>| <a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-rxjava/" target="_blank" rel="external">todo‑mvp‑rxjava</a> | Uses <a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava</a> to implement concurrency, and abstract the data layer. |<br>| <a href="https://github.com/googlesamples/android-architecture/tree/todo-mvvm-databinding/" target="_blank" rel="external">todo‑mvvm‑databinding</a> | Based on the todo-databinding sample, this version incorporates the <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel" target="_blank" rel="external">Model‑View‑ViewModel</a> pattern.|</p>
<h3 id="Samples-in-progress"><a href="#Samples-in-progress" class="headerlink" title="Samples in progress"></a>Samples in progress</h3><table>
<thead>
<tr>
<th>Sample</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/dev-todo-mvp-tablet/" target="_blank" rel="external">dev‑todo‑mvp‑tablet</a></td>
<td>Adds a master and detail view for tablets.</td>
</tr>
<tr>
<td><a href="https://github.com/googlesamples/android-architecture/tree/dev-todo-mvvm-rxjava/" target="_blank" rel="external">dev‑todo‑mvvm‑rxjava</a></td>
<td>Based on the todo-rxjava sample, this version incorporates the <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel" target="_blank" rel="external">Model‑View‑ViewModel</a> pattern.</td>
</tr>
</tbody>
</table>
<p>For information about planned samples, see <a href="https://github.com/googlesamples/android-architecture/issues?q=is%3Aissue+is%3Aopen+label%3A%22New+sample%22" target="_blank" rel="external">“New sample” issues</a>.</p>
<h3 id="External-samples"><a href="#External-samples" class="headerlink" title="External samples"></a>External samples</h3><p><a href="https://github.com/googlesamples/android-architecture/wiki/External-samples" target="_blank" rel="external">External samples</a> are variants that may not be in sync with the rest of the branches in this repository.</p>
<table>
<thead>
<tr>
<th>Sample</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/Syhids/android-architecture/tree/todo-mvp-fragmentless" target="_blank" rel="external">todo‑mvp‑fragmentless</a></td>
<td>Uses <a href="https://developer.android.com/reference/android/view/View.html" target="_blank" rel="external">View</a> objects instead of <a href="https://developer.android.com/reference/android/app/Fragment.html" target="_blank" rel="external">Fragment</a> objects.</td>
</tr>
<tr>
<td><a href="https://github.com/grepx/android-architecture/tree/todo-mvp-conductor" target="_blank" rel="external">todo‑mvp‑conductor</a></td>
<td>Uses the <a href="https://github.com/bluelinelabs/Conductor" target="_blank" rel="external">Conductor</a> framework to refactor the app to use a single Activity architecture.</td>
</tr>
<tr>
<td><a href="https://github.com/SerjSmor/android-architecture" target="_blank" rel="external">todo‑mvp‑kotlin</a></td>
<td>A translation of todo-mvp to <a href="https://kotlinlang.org/" target="_blank" rel="external">Kotlin</a></td>
</tr>
</tbody>
</table>
<h2 id="Why-a-to-do-app"><a href="#Why-a-to-do-app" class="headerlink" title="Why a to-do app?"></a>Why a to-do app?</h2><p>The app in this project aims to be simple enough that you can understand it quickly, but complex enough to showcase difficult design decisions and testing scenarios. For more information, see the <a href="https://github.com/googlesamples/android-architecture/wiki/To-do-app-specification" target="_blank" rel="external">app’s specification</a>.</p>
<p>The following screenshot illustrates the UI of the app:</p>
<p><img src="https://github.com/googlesamples/android-architecture/wiki/images/tasks2.png" alt="A screenshot illustratrating the UI of the app" width="160" style="display: inline; float: right"></p>
<h2 id="Choose-a-sample-for-your-app"><a href="#Choose-a-sample-for-your-app" class="headerlink" title="Choose a sample for your app"></a>Choose a sample for your app</h2><p>Each sample includes a dedicated <code>README.md</code> file where you can find related metrics, as well as subjective assessments and observations by contributors. The following factors are worth considering when selecting a particular sample for your app:</p>
<ul>
<li>The size of the app you are developing</li>
<li>The size and experience of your team</li>
<li>The amount of maintenance that you are expecting to have to do</li>
<li>Whether you need a tablet layout</li>
<li>Whether you need to support multiple platforms</li>
<li>Your preference for the compactness of your codebase</li>
</ul>
<p>For more information on choosing and comparing samples, see the following pages:</p>
<ul>
<li><a href="https://github.com/googlesamples/android-architecture/wiki/Samples-at-a-glance" target="_blank" rel="external">Samples at a glance</a></li>
<li><a href="https://github.com/googlesamples/android-architecture/wiki/How-to-compare-samples" target="_blank" rel="external">How to compare samples</a></li>
</ul>
<h2 id="Open-a-sample-in-Android-Studio"><a href="#Open-a-sample-in-Android-Studio" class="headerlink" title="Open a sample in Android Studio"></a>Open a sample in Android Studio</h2><p>To open one of the samples in Android Studio, begin by checking out one of the sample branches, and then open the <code>todoapp/</code> directory in Android Studio. The following series of steps illustrate how to open the <a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp" target="_blank" rel="external">todo‑mvp</a> sample.</p>
<p><strong>Note:</strong> The master branch does not compile.</p>
<p>Clone the repository:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone git@github.com:googlesamples/android-architecture.git</div></pre></td></tr></table></figure>
<p>Checkout the todo-mvp sample:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout todo-mvp</div></pre></td></tr></table></figure></p>
<p><strong>Note:</strong> To review a different sample, replace <code>todo-mvp</code> with the name of sample you want to check out.</p>
<p>Finally open the <code>todoapp/</code> directory in Android Studio.</p>
<h2 id="Contributors"><a href="#Contributors" class="headerlink" title="Contributors"></a>Contributors</h2><p>This project is <strong>built by the community</strong>, and curated by Google as well as other core maintainers.</p>
<h3 id="External-contributors"><a href="#External-contributors" class="headerlink" title="External contributors"></a>External contributors</h3><p><a href="http://github.com/malmstein" target="_blank" rel="external">David González</a> - Core developer (MVP Content Providers sample)</p>
<p><a href="http://github.com/Karumi" target="_blank" rel="external">Karumi</a> - Developers (MVP Clean Architecture sample)</p>
<p><a href="http://github.com/freewheelnat" target="_blank" rel="external">Natalie Masse</a> - Core developer</p>
<p><a href="https://github.com/ErikHellman" target="_blank" rel="external">Erik Hellman</a> - Developer (MVP RxJava sample)</p>
<p><a href="https://github.com/saulmm" target="_blank" rel="external">Saúl Molinero</a> - Developer (MVP Dagger sample)</p>
<p><a href="https://github.com/florina-muntenescu" target="_blank" rel="external">Florina Muntenescu</a> - Developer (MVP RxJava sample)</p>
<h3 id="Googlers"><a href="#Googlers" class="headerlink" title="Googlers"></a>Googlers</h3><p><a href="http://github.com/JoseAlcerreca" target="_blank" rel="external">Jose Alcérreca</a> - Lead/Core developer</p>
<p><a href="http://github.com/slinzner" target="_blank" rel="external">Stephan Linzner</a> - Core developer</p>
<p><a href="https://github.com/mustafa-x" target="_blank" rel="external">Mustafa Kurtuldu</a> - UX/design</p>
<p><a href="https://github.com/sharifsalah" target="_blank" rel="external">Sharif Salah</a> - Technical Writer</p>
<p>For more information on joining the project, see <a href="https://github.com/googlesamples/android-architecture/blob/master/CONTRIBUTING.md" target="_blank" rel="external">how to become a contributor</a> and the <a href="https://github.com/googlesamples/android-architecture/wiki/Contributions" target="_blank" rel="external">contributor’s guide</a></p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external">Android Architecture Blueprints</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://github.com/googlesamples/android-architecture/wiki/images/aab-logo.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Android framework provides a lot of flexibility in deciding how to organize and architect an Android app. While this freedom is very valuable, it can also lead to apps with large classes, inconsistent naming schemes, as well as mismatching or missing architectures. These types of issues can make testing, maintaining and extending your apps difficult.&lt;/p&gt;
&lt;p&gt;The Android Architecture Blueprints project demonstrates strategies to help solve or avoid these common problems. This project implements the same app using different architectural concepts and tools.&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://aisee.me/categories/Android/"/>
    
    
      <category term="Basic Concept" scheme="http://aisee.me/tags/Basic-Concept/"/>
    
      <category term="Architecture" scheme="http://aisee.me/tags/Architecture/"/>
    
  </entry>
  
</feed>
